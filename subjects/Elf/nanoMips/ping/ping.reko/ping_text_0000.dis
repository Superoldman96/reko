void acknowledge(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
acknowledge_entry:
l004000F0:
	r7_5 = Mem0[0x004544E4<p32>:word32]
	r5_7 = r7_5 - r4
	branch !__bit<word32,word32>(r5_7, 0xF<32>) l00400136
l004000FE:
	branch (r5_7 & 0xFFFF<32>) < Mem0[0x00430078<p32>:word32] l00400110
l00400108:
	Mem11[0x00430078<p32>:word32] = (r5_7 & 0xFFFF<32>) + 1<32>
l00400110:
	r8_14 = CONVERT(Mem13[0x00454518<p32>:uint16], uint16, word32)
	branch SLICE(r4 - r8_14, word16, 0) > 0<16> l00400132
l00400124:
	branch (r7_5 & 0xFFFF<32>) - r8_14 <= 0x7FFF<32> l00400136
l00400132:
	Mem25[0x00454518<p32>:word16] = SLICE(r4, word16, 0)
l00400136:
	return
acknowledge_exit:


word32 set_socket_option.isra.0.part.1(word32 & r4Out, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
// MayUse: 
// LiveOut: r3:[0..31]-main r4:[0..31]-main r6:[0..31]-main r7:[0..31]-main
// Trashed: r17 r25 r3 r4 r5 r6 r7
// Preserved: sp
set_socket_option.isra.0.part.1_entry:
l00400138:
	__errno_location(out r4_9)
	r3_12 = strerror(Mem5[r4_9:word32], out r4_34)
	r6_21 = fprintf(out r7_22)
	exit()
l00400156_thunk_exit:
	exit()
	r4Out = 2<32>
	r6Out = r6_21
	r7Out = r7_22
	return r3_12
set_socket_option.isra.0.part.1_exit:


word32 exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      set_socket_option.isra.0.part.1
//      main
//      fn00400B66
//      fn00401E7E
//      finish
//      fn004030A0
//      ping6_usage
//      ping6_run
//      __libc_start_main
// MayUse: 
// LiveOut: r17:[0..31]-ping6_usage sp:[0..31]-main
// Trashed: r17 r25 sp
// Preserved:
exit_entry:
l0040015A:
	__funcs_on_exit()
	__libc_exit_fini()
	__stdio_exit_needed()
	_Exit()
l0040016C_thunk_main:
	main(r0, r4, r5)
	return r4
exit_exit:


void main(word32 r0, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7E
//      __libc_start_main
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 r18 r19 r20 r21 ra sp
main_entry:
l00400170:
	memset(&tLoc40, 0<32>, 0x20<32>, out r6_837, out r7_838, out r8_839, out r10_840)
	Mem45[&tLoc40:word32] = 2<32>
	r8_299 = limit_capabilities(r0)
	r17_54 = Mem45[r5:word32]
	sp_18 = fp - 96<i32>
	r16_121 = r4
	r18_126 = r5
	r7_62 = CONVERT(Mem45[r17_54 + strlen(r17_54, out r5_841, out r6_842, out r7_843) - 1<i32>:byte], byte, word32)
	branch r7_62 != 0x34<32> l004001D0
l004001AE:
	dwLoc3C = 2<32>
l004001B0:
	r4_72 = __posix_getopt(r0, r16_121, r18_126, 0x00410C0C<p32>, r8_299, out r8_299)
	branch r4_72 == 0xFFFFFFFF<32> l0040071A
l004001C0:
	branch r4_72 >=u 0x38<32> l00400728
l004001C8:
	r7_97 = Mem90[0x00412060<p32> + (r4_72 + 0xFFFFFFCC<32>) * 4<32>:word32]
	switch (r4_72 + 0xFFFFFFCC<32>) { l004001D8 l00400728 l0040027A l00400728 }
l004001D0:
	branch r7_62 != 0x36<32> l004001B0
l004001D4:
	r7_100 = 0xA<32>
	goto l004001F2
l004001D8:
	branch r7_97 == 0<32> l004001F0
l004001DC:
	fputs_unlocked(0x004108C4<p32>, Mem90[0x00412EF0<p32>:word32], out r3_849, out r4_850, out r5_851, out r6_852, out r8_299, out r11_853, out r12_854)
l004001EA:
	exit()
	sp_18 = <invalid>
l004001F0:
	r7_100 = 2<32>
l004001F2:
	Mem460[sp_18 + 36<i32>:word32] = r7_100
	goto l004001B0
l0040027A:
	branch r7_97 == 0<32> l004001D4
l00400280:
	goto l004001DC
l004002B0:
	fprintf(out r7_884)
	goto l004001EA
l0040071A:
	r7_91 = Mem90[0x00430254<p32>:word32]
	r16_121 = r16_121 - r7_91
	r18_126 = r18_126 + (r7_91 << 2<8>)
	branch r16_121 != 0<32> l0040072C
l00400728:
	usage(out r3_844, out r7_845, out r11_846, out r12_847, out r17_848)
l0040072C:
	r20_130 = Mem90[r18_126 + (r16_121 + 0x3FFFFFFF<32>) * 4<32>:word32]
	modify_capability(r0, 1<32>, out r3_856, out r4_857, out r6_148, out r7_149, out r8_150, out r11_858, out r12_859, out r17_860)
	r18_153 = dwLoc3C
	branch r8_150 == 0xA<32> l00400754
l00400744:
	create_socket(fp - 0x58<32>, r6_148, CONVERT(r8_150 == 2<32>, bool, word32), out r3_855, out r6_148, out r7_149, out r8_150)
l00400754:
	branch r7_149 == 2<32> l0040076E
l0040075A:
	create_socket(fp - 0x4C<32>, r6_148, CONVERT(r8_150 <u 0<32>, bool, word32), out r3_864, out r6_865, out r7_866, out r8_867)
	r18_153 = 0xFFFFFFFF<32>
l0040076E:
	r2_204 = modify_capability(r0, 0<32>, out r3_207, out r4_208, out r6_210, out r7_211, out r8_861, out r11_862, out r12_199, out r17_863)
	r17_216 = dwLoc3C
	branch r7_211 != 0<32> l00400784
l00400778:
	r7_218 = 0xFFFFFFFF<32>
	branch r6_210 != 0xFFFFFFFF<32> l004007AA
l00400780:
	r7_219 = 0xA<32>
l00400782:
	r17_216 = 0xFFFFFFFF<32>
	dwLoc3C = r7_219
l00400784:
	r18_126 = r18_153 (alias)
	branch Mem223[0x00454530<p32>:word32] == 0<32> l004007B4
l0040078C:
	r17_216 = 0xFFFFFFFF<32>
	branch r4_208 == 0xFFFFFFFF<32> l004007B4
l00400794:
	r2_204 = setsockopt(out r3_207, out r4_208, out r5_868, out r7_869)
	branch r4_208 != 0xFFFFFFFF<32> l004007B4
l004007A6:
	r3_207 = set_socket_option.isra.0.part.1(out r4_208, out r6_210, out r7_218)
l004007AA:
	r17_216 = 0xFFFFFFFF<32>
	branch r7_218 != r6_210 l00400784
l004007B0:
	r7_219 = 2<32>
	goto l00400782
l004007B4:
	branch Mem223[0x00454504<p32>:word32] == 0<32> l004007D6
l004007BC:
	r17_216 = 0xFFFFFFFF<32>
	branch r4_208 == 0xFFFFFFFF<32> l004007D6
l004007C2:
	r2_204 = setsockopt(out r3_207, out r4_257, out r5_872, out r7_873)
	branch r4_257 == 0xFFFFFFFF<32> l004007A6
l004007D6:
	getaddrinfo(r0, r2_204, r3_207, r20_130, 0<32>, fp - 0x40<32>, r12_199, r20_130, out r4_870, out r8_299, out r11_286, out r12_871)
	r4_302 = dwLoc5C
	branch dwLoc5C == 0<32> l0040081E
l004007E6:
	gai_strerror(dwLoc5C)
	fprintf(out r7_874)
	goto l004001EA
l004007FE:
	ping4_run(r0, r2, r3, r16_121, r18_153, r17_216, fp - 0x58<32>, r11, r12, r22)
l00400806:
	r4_302 = ping6_run(r0, r2, r3, r16_121, r18_153, r17_216, fp - 0x4C<32>, r12, r20_130, r21, r22, r23, r28, ra, out r8_299, out r11_286)
	branch r4_302 != 0<32> l0040081C
l00400812:
	freeaddrinfo(r0, r4_302, r11_286, out r3_875, out r11_876)
	return
l0040081C:
	r17_216 = Mem223[r17_216 + 28<i32>:word32]
l0040081E:
	branch r17_216 == 0<32> l00400812
l00400820:
	r6_306 = Mem223[r17_216 + 4<i32>:word32]
	branch r6_306 == 2<32> l004007FE
l00400826:
	branch r6_306 == 0xA<32> l00400806
l0040082A:
	goto l004002B0
main_exit:


void fn00400832(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
fn00400832_entry:
l00400832:
l00400832_thunk_atoi:
	atoi(r4)
	return
fn00400832_exit:


void _start(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_start_entry:
l00400840:
	_start_c(r0, fp)
_start_exit:


void _start_c(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      _start
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_start_c_entry:
l00400860:
	__libc_start_main(r0, Mem5[r4:word32], r4 + 4<32>)
_start_c_exit:


void deregister_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __do_global_dtors_aux
// MayUse: 
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
deregister_tm_clones_entry:
l00400880:
	branch 0x004303B3<p32> - 0x004303B0<p32> <u 7<32> l0040089A
l00400890:
	branch 0x00000000<p32> == 0<32> l0040089A
l00400898:
	call 0x00000000<p32> (retsize: 0;)
		uses: Mem:Mem0
	return
l0040089A:
	return
deregister_tm_clones_exit:


void register_tm_clones(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      frame_dummy
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: hi lo r25 r4 r5 r6 r7
// Preserved: sp
register_tm_clones_entry:
l0040089C:
	branch r5 == 0<32> l004008BC
l004008B2:
	branch 0x00000000<p32> == 0<32> l004008BC
l004008BA:
	call 0x00000000<p32> (retsize: 0;)
		uses: Mem:Mem0,r5:r5
	return
l004008BC:
	return
register_tm_clones_exit:


void __do_global_dtors_aux()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: r16 ra sp
__do_global_dtors_aux_entry:
l004008BE:
	branch Mem7[0x004303C0<p32>:byte] != 0<8> l004008E4
l004008CC:
	deregister_tm_clones()
	branch 0x00000000<p32> == 0<32> l004008DE
l004008D8:
	fn00000000(0x00413590<p32>)
l004008DE:
	Mem23[0x004303C0<p32>:byte] = 1<8>
l004008E4:
	return
__do_global_dtors_aux_exit:


void frame_dummy(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: hi lo r25 r4 r5 r6 r7
// Preserved: ra sp
frame_dummy_entry:
l004008E6:
	branch 0x00000000<p32> == 0<32> l004008FA
l004008F0:
	fn00000000(0x00413590<p32>, 0x004303C4<p32>)
l004008FA:
	branch Mem5[0x0042FFFC<p32>:word32] != 0<32> l0040090A
l00400902:
l00400906_thunk_register_tm_clones:
	register_tm_clones(r5)
	return
l0040090A:
	branch 0x00000000<p32> == 0<32> l00400902
l00400912:
	fn00000000()
	goto l00400902
frame_dummy_exit:


word32 in_cksum(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      ping4_parse_reply
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-ping4_parse_reply
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
in_cksum_entry:
l00400920:
	goto l0040092C
l00400922:
	r4 = r4 + 2<32>
	r5 = r5 + 0xFFFFFFFE<32>
	r6 = r6 + CONVERT(Mem0[r4 - 2<i32>:uint16], uint16, word32)
l0040092C:
	branch r5 >= 2<32> l00400922
l00400930:
	branch r5 != 1<32> l00400938
l00400934:
	r6 = r6 + CONVERT(Mem0[r4:byte], byte, word32)
l00400938:
	r6_17 = (r6 >> 0x10<32>) + (r6 & 0xFFFF<32>)
	return ~(r6_17 + (r6_17 >> 0x10<32>)) & 0xFFFF<32>
in_cksum_exit:


word32 usage(word32 & r3Out, word32 & r7Out, word32 & r11Out, word32 & r12Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      ping4_run
// MayUse: 
// LiveOut: r11:[0..31]-ping4_run r12:[0..31]-ping4_run r17:[0..31]-ping4_run r2:[0..31]-ping4_run r3:[0..31]-ping4_run r7:[0..31]-ping4_run sp:[0..31]-ping4_run
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
usage_entry:
l0040094E:
	r8_25 = fn00400B5A(0x00410358<p32>, Mem5[0x00412EF0<p32>:word32], out r11_12, out r12_13)
	r6_32 = ping6_usage(1<32>, out r17_53)
	r17_35 = fn00400B66()
l00400964_thunk_create_socket:
	r2_38 = create_socket(2<32>, r6_32, r8_25, out r3_40, out r6_54, out r7_44, out r8_55)
	r3Out = r3_40
	r7Out = r7_44
	r11Out = r11_12
	r12Out = r12_13
	r17Out = r17_35
	return r2_38
usage_exit:


word32 create_socket(word32 r4, word32 r6, word32 r8, word32 & r3Out, word32 & r6Out, word32 & r7Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      usage
// MayUse:  r4:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r2:[0..31]-usage r3:[0..31]-usage r6:[0..31]-main r7:[0..31]-usage r8:[0..31]-main
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
create_socket_entry:
l00400966:
	r16_110 = r6
l0040096E:
	fn00400B56(out r4_215)
	socket(r16_110, out r3_185, out r4_42, out r6_216, out r8_46, out r9_217)
	branch r4_42 != 0xFFFFFFFF<32> l004009B0
l00400980:
	r3_185 = fn00400B56(out r4_52)
	branch Mem49[r4_52:word32] == 0x21<32> l004009B0
l00400988:
	branch r16_110 != 1<32> l004009B0
l0040098C:
	r16_110 = 3<32>
	branch __bit<word32,word32>(Mem49[0x004544EC<p32>:word32], 8<32>) l0040096E
l00400998:
	fn00400B56(out r4_113)
	strerror(Mem49[r4_113:word32], out r4_218)
	fn00400B5E(out r7_219)
	goto l0040096E
l004009B0:
	r6_195 = Mem49[r4:word32]
	r7_198 = 0xFFFFFFFF<32>
	branch r6_195 != 0xFFFFFFFF<32> l004009EA
l004009B8:
	branch r8 == 0<32> l004009D6
l004009BA:
	fn00400B56(out r4_65)
	r3_185 = strerror(Mem49[r4_65:word32], out r4_220)
	r6_195 = fn00400B5E(out r7_198)
	branch r8 == 0<32> l004009EC
l004009D2:
	fn00400B66()
l004009D6:
	Mem98 = Mem49 (alias)
	r3_96 = fn00400B56(out r4_97)
	branch Mem98[r4_97:word32] != 0x21<32> l004009BA
l004009DE:
	r7_100 = Mem98[0x004544EC<p32>:word32]
	branch !__bit<word32,word32>(r7_100, 8<32>) l004009BA
l004009E8:
	r3Out = r3_96
	r6Out = r6_195
	r7Out = r7_100
	r8Out = <invalid>
	return <invalid>
l004009EA:
	Mem60[r4 + 1<i32>:word32] = r16_110
l004009EC:
	r3Out = r3_185
	r6Out = r6_195
	r7Out = r7_198
	r8Out = <invalid>
	return <invalid>
create_socket_exit:


void pr_echo_reply(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
pr_echo_reply_entry:
l004009EE:
	ntohs(CONVERT(Mem5[r4 + 6<i32>:uint16], uint16, word32))
l00400A00_thunk_printf:
	printf(0x004104BC<p32>, out r4_34, out r7_35, out r11_36, out r14_37)
	return
pr_echo_reply_exit:


void write_stdout(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401BA0
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
write_stdout_entry:
l00400A04:
	r16_13 = 0<32>
l00400A0A:
	r4_28 = write()
	r16_13 = r16_13 + r4_28
	branch r16_13 <u r5 l00400A0A
l00400A1A:
	branch r4_28 < 0<32> l00400A0A
l00400A1E:
	return
write_stdout_exit:


void ping4_send_probe(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r11 r12 r13 r14 r15 r16 r17 r18 r24 ra sp
ping4_send_probe_entry:
l00400A20:
	Mem18[r5:byte] = 8<8>
	Mem19[r5 + 1<i32>:byte] = 0<8>
	r4_20 = Mem19[0x004544E4<p32>:word32]
	Mem21[r5 + 2<i32>:word16] = 0<16>
	r4_25 = CONVERT(fn00400B62(SLICE(r4_20, word16, 0) + 1<16>), uint16, uint32)
	Mem27[r5 + 4<i32>:word16] = Mem21[0x004544C4<p32>:word16]
	Mem30[r5 + 6<i32>:word16] = SLICE(r4_25, word16, 0)
	branch Mem40[0x00454508<p32>:word32] == 0<32> l00400A8C
l00400A6E:
	branch __bit<word32,word32>(Mem40[0x004544EC<p32>:word32], 0xC<32>) l00400AEA
l00400A7A:
	gettimeofday(fp - 0x18<32>, out r4_235, out r6_236, out r17_60)
	memcpy(r17_60, fp - 0x18<32>, 8<32>, out r3_237, out r5_238, out r6_239, out r7_240, out r8_241, out r9_242, out r11_243, out r12_244, out r13_245, out r14_246)
l00400A8C:
	r17_87 = Mem40[0x00430074<p32>:word32]
	r4_94 = in_cksum(r5, r17_87 + 8<32>, 0<32>)
	r7_98 = Mem40[0x00454508<p32>:word32]
	Mem99[r5 + 2<i32>:word16] = SLICE(r4_94, word16, 0)
	r17_108 = r17_87 + 8<32>
	branch r7_98 == 0<32> l00400AD2
l00400AA4:
	branch !__bit<word32,word32>(Mem99[0x004544EC<p32>:word32], 0xC<32>) l00400AD2
l00400AAE:
	gettimeofday(fp - 0x18<32>, out r4_249, out r6_250, out r17_108)
	fn00400B52(r5 + 8<32>, fp - 0x18<32>, 8<32>, out r3_251, out r11_252, out r12_253)
	Mem144[r5 + 2<i32>:word16] = SLICE(in_cksum(fp - 0x18<32>, 8<32>, ~CONVERT(Mem99[r5 + 2<i32>:uint16], uint16, word32) & 0xFFFF<32>), word16, 0)
l00400AD2:
	branch (r17_108 ^ sendto(out r7_247, out r10_248)) != 0<32> l00400AE8
l00400AE4_1:
l00400AE8:
	return
l00400AEA:
	fn00400B4E(r5 + 8<32>, 0<32>, 8<32>)
	goto l00400A8C
ping4_send_probe_exit:


void ping4_install_filter()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
ping4_install_filter_entry:
l00400AF2:
	branch Mem9[0x0045451C<p32>:word32] != 0<32> l00400B48
l00400AFE:
	wLoc14_76 = Mem9[0x004544C4<p32>:uint16] (alias)
	Mem17[0x0045451C<p32>:word32] = 1<32>
	fn00400B62(wLoc14_76)
	Mem22[0x0043001A<p32>:byte] = 0<8>
	Mem24[0x0043001B<p32>:byte] = 1<8>
	Mem29[0x00430018<p32>:word16] = 0x15<16>
	branch fn00400B4A() == 0<32> l00400B48
l00400B3C:
l00400B44_thunk_perror:
	perror(0x004104E4<p32>, out r3_136, out r5_137, out r6_138, out r7_139, out r8_140, out r11_141, out r12_142, out r17_143)
	return
l00400B48:
	return
ping4_install_filter_exit:


word32 fn00400B4A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_install_filter
//      ping4_run
// MayUse: 
// LiveOut: r4:[0..31]-ping4_run
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B4A_entry:
l00400B4A:
l00400B4A_thunk_setsockopt:
	setsockopt(out r3_14, out r4_8, out r5_15, out r7_16)
	return r4_8
fn00400B4A_exit:


void fn00400B4E(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      ping4_run
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B4E_entry:
l00400B4E:
l00400B4E_thunk_memset:
	memset(r4, r5, r6, out r6_14, out r7_15, out r8_16, out r10_17)
	return
fn00400B4E_exit:


word32 fn00400B52(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      ping4_run
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-ping4_run r12:[0..31]-ping4_run r2:[0..31]-ping4_run r3:[0..31]-ping4_run
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B52_entry:
l00400B52:
l00400B52_thunk_memcpy:
	r2_19 = memcpy(r4, r5, r6, out r3_21, out r5_25, out r6_26, out r7_27, out r8_28, out r9_29, out r11_15, out r12_16, out r13_30, out r14_31)
	r3Out = r3_21
	r11Out = r11_15
	r12Out = r12_16
	return r2_19
fn00400B52_exit:


word32 fn00400B56(word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      create_socket
//      ping4_run
// MayUse: 
// LiveOut: r3:[0..31]-create_socket r4:[0..31]-create_socket
// Trashed: r25 r3 r4
// Preserved: sp
fn00400B56_entry:
l00400B56:
l00400B56_thunk___errno_location:
	r3_5 = __errno_location(out r4_6)
	r4Out = r4_6
	return r3_5
fn00400B56_exit:


word32 fn00400B5A(word32 r4, word32 r5, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      usage
//      ping4_run
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-usage r12:[0..31]-usage r8:[0..31]-usage
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B5A_entry:
l00400B5A:
l00400B5A_thunk_fputs_unlocked:
	fputs_unlocked(r4, r5, out r3_26, out r4_27, out r5_28, out r6_29, out r8_22, out r11_9, out r12_10)
	r11Out = r11_9
	r12Out = r12_10
	return r8_22
fn00400B5A_exit:


word32 fn00400B5E(word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      create_socket
//      ping4_run
// MayUse: 
// LiveOut: r6:[0..31]-create_socket r7:[0..31]-create_socket
// Trashed: r25 r6 r7
// Preserved: sp
fn00400B5E_entry:
l00400B5E:
l00400B5E_thunk_fprintf:
	r6_5 = fprintf(out r7_6)
	r7Out = r7_6
	return r6_5
fn00400B5E_exit:


word16 fn00400B62(word16 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      ping4_install_filter
//      ping4_run
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..15]-ping4_run
// Trashed: r25 r4
// Preserved: sp
fn00400B62_entry:
l00400B62:
l00400B62_thunk_htons:
	return SLICE(htons(r4), word16, 0)
fn00400B62_exit:


word32 fn00400B66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      usage
//      create_socket
//      ping4_run
// MayUse: 
// LiveOut: r17:[0..31]-usage
// Trashed: r17 r25
// Preserved: sp
fn00400B66_entry:
l00400B66:
l00400B66_thunk_exit:
	return exit()
fn00400B66_exit:


void ping4_run(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 r22)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
// MayUse:  r0:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r22:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
ping4_run_entry:
l00400B6A:
	sp_1655 = fp - 384<i32>
	r17_1641 = r4
	r21_1650 = r5
	branch r4 < 2<32> l00400C24
l00400B76:
	r7_29 = Mem19[0x004544EC<p32>:word32]
	branch __bit<word32,word32>(r7_29, 5<32>) l00400B82
l00400B80:
	r2 = usage(out r3, out r7_29, out r11, out r12, out r17_1641)
	sp_1655 = <invalid>
l00400B82:
	r21_1650 = r5 (alias)
	Mem54 = Mem19 (alias)
	branch __bit<word32,word32>(r7_29, 9<32>) l00400B96
l00400B86:
	branch Mem54[0x0045453C<p32>:word32] != 3<32> l00400B80
l00400B90:
	branch r17_1641 < 6<32> l00400C24
l00400B94:
	goto l00400B80
l00400B96:
	branch r17_1641 >= 0xB<32> l00400B80
l00400B9A:
	Mem53[0x004544EC<p32>:word32] = r7_29 | 0x400<32>
	goto l00400C24
l00400BA6:
	Mem125[sp_1655 + 56<i32>:word32] = 0<32>
	branch r17_1641 != 1<32> l00400BAE
l00400BAC:
	branch r6 != 0<32> l00400BD2
l00400BAE:
	getaddrinfo(r0, r2, r3, r20_96, 0<32>, 0x004121FC<p32>, r12, r20_96, out r4_150, out r8_1867, out r11, out r12_1868)
	branch r4_150 == 0<32> l00400BD0
l00400BBC:
	gai_strerror(r4_150)
l00400BC6:
	fn00400B5E(out r7_1882)
	goto l00400C96
l00400BD0:
l00400BD2:
	r20_165 = sp_1655 + 0x60<32>
	r2 = fn00400B52(0x00431488<p32>, Mem125[r6 + 20<i32>:word32], 0x10<32>, out r3, out r11, out r12)
	fn00400B4E(r20_165, 0<32>, 0xFF<32>)
	r5_191 = Mem125[r6 + 24<i32>:word32]
	branch r5_191 == 0<32> l00400BF4
l00400BEC:
	strncpy(r20_165, r5_191, 0xFE<32>)
l00400BF4:
	r17_1641 = Mem125[sp_1655 + 56<i32>:word32]
	Mem205[0x004544C0<p32>:word32] = r20_165
	branch r20_165 == 0<32> l00400C02
l00400BFE:
	r2 = freeaddrinfo(r0, r20_165, r11, out r3, out r11)
l00400C02:
	branch r17_1641 == 1<32> l00400C20
l00400C06:
	r7_1627 = Mem1625[0x00454538<p32>:word32]
	r5_1633 = Mem1625[0x0043148C<p32>:word32]
	Mem1635[0x00454538<p32>:word32] = r7_1627 + 1<32>
	Mem1637[0x00431498<p32> + r7_1627 * 4<32>:word32] = r5_1633
l00400C20:
	r17_1641 = r17_1641 + 0xFFFFFFFF<32>
	r21_1650 = r21_1650 + 4<32>
l00400C24:
	r22_1512 = r22
	r18_126 = r6
	branch r17_1641 <= 0<32> l00400C6A
l00400C28:
	r20_96 = Mem59[r21_1650:word32]
	Mem100[0x00431488<p32>:word32] = 0<32>
	Mem102[sp_1655 + 68<i32>:word32] = 0<32>
	Mem103[sp_1655 + 72<i32>:word32] = 0<32>
	Mem104[sp_1655 + 76<i32>:word32] = 0<32>
	Mem105[0x00431488<p32>:word16] = 2<16>
	r2 = __inet_aton(r2, r3, r20_96, 0x0043148C<p32>, r12, out r3, out r4_119, out r6_1806, out r8_1807, out r9_1808, out r11, out r12)
	branch r4_119 != 1<32> l00400BA6
l00400C4E:
	Mem1624[0x004544C0<p32>:word32] = r20_96
	branch r17_1641 != 1<32> l00400C06
l00400C58:
	Mem1640[0x004544EC<p32>:word32] = Mem1624[0x004544EC<p32>:word32] | 4<32>
	goto l00400C20
l00400C6A:
	r18_126 = 0x0043004C<p32>
	branch Mem59[0x00430050<p32>:word32] != 0<32> l00400E36
l00400C74:
	fn00400B52(sp_1655 + 0x28<32>, 0x00431488<p32>, 0x10<32>, out r3_1809, out r11, out r12_1810)
	socket(1<32>, out r3_1811, out r4_87, out r6_1812, out r8_1813, out r9_1814)
	branch r4_87 >= 0<32> l00400C9A
l00400C8E:
	r4_1563 = 0x00410520<p32>
l00400C92:
	perror(r4_1563, out r3_1844, out r5_1845, out r6_1846, out r7_1847, out r8_1848, out r11, out r12_1849, out r17_1850)
l00400C96:
	fn00400B66()
l00400C9A:
	r19_241 = Mem239[0x00454528<p32>:word32]
	branch r19_241 == 0<32> l00400D38
l00400CA4:
	fn00400B4E(sp_1655 + 0x38<32>, 0<32>, 0x20<32>)
	strncpy(sp_1655 + 0x38<32>, r19_241, 0xF<32>)
	modify_capability(r0, 1<32>, out r3_1815, out r4_1816, out r6_1817, out r7_1818, out r8_1819, out r11_1820, out r12_1821, out r17_1822)
	strlen(Mem239[0x00454528<p32>:word32], out r5_1823, out r6_1824, out r7_1825)
	setsockopt(out r3_1826, out r4_302, out r5_1827, out r7_1828)
	modify_capability(r0, 0<32>, out r3_1829, out r4_323, out r6_1830, out r7_1831, out r8_1832, out r11, out r12_1833, out r17_1834)
	branch r4_302 != 0xFFFFFFFF<32> l00400D38
l00400CE2:
	branch __ins<word32,word32>(ntohl(r4_323), 0<32>, 0<32>, 1<32>) != 0<32> l00400D32
l00400CF4:
	ioctl(out r4_342, out r7_345)
	branch r4_342 >= 0<32> l00400D16
l00400D02:
	fn00400B5E(out r7_1835)
	goto l00400C96
l00400D16:
	Mem351[sp_1655 + 28<i32>:word32] = 0<32>
	Mem352[sp_1655 + 36<i32>:word32] = r7_345
	Mem356[sp_1655 + 32<i32>:word32] = 0<32>
	branch r4_302 != fn00400B4A() l00400D38
l00400D2C:
	r4_1563 = 0x00410540<p32>
	goto l00400C92
l00400D32:
	r4_1563 = 0x00410558<p32>
	goto l00400C92
l00400D38:
	branch Mem367[0x00454530<p32>:word32] == 0<32> l00400D5A
l00400D40:
	branch fn00400B4A() >= 0<32> l00400D5A
l00400D52:
	perror(0x00410570<p32>, out r3_1837, out r5_1838, out r6_1839, out r7_1840, out r8_1841, out r11, out r12_1842, out r17_1843)
l00400D5A:
	r4_408 = CONVERT(fn00400B62(0x401<16>), uint16, uint32)
	r7_410 = Mem367[0x00454538<p32>:word32]
	Mem413[sp_1655 + 42<i32>:word16] = SLICE(r4_408, word16, 0)
	branch r7_410 == 0<32> l00400D76
l00400D6C:
	Mem416[sp_1655 + 44<i32>:word32] = Mem413[0x00431498<p32>:word32]
l00400D76:
	r4_427 = connect(out r5_1560)
	branch r4_427 != 0xFFFFFFFF<32> l00400DD6
l00400D86:
	fn00400B56(out r4_437)
	branch Mem438[r4_437:word32] != 0xD<32> l00400DD0
l00400D8E:
	Mem441[sp_1655 + 12<i32>:word32] = Mem438[0x00412EF0<p32>:word32]
	r4_1561 = 0x00410594<p32>
	branch Mem441[0x0045452C<p32>:word32] == 0<32> l00400E0A
l00400DA4:
	fn00400B5A(0x004105BC<p32>, r5_1560, out r11, out r12_1859)
	setsockopt(out r3_1860, out r4_473, out r5_1861, out r7_1862)
	branch r4_473 >= 0<32> l00400DC6
l00400DC0:
	r4_1563 = 0x004105E0<p32>
	goto l00400C92
l00400DC6:
	branch r4_427 != connect(out r5_1863) l00400DD6
l00400DD0:
	r4_1563 = 0x004105F8<p32>
	goto l00400C92
l00400DD6:
	Mem496[sp_1655 + 28<i32>:word32] = 0x10<32>
	branch getsockname() != 0xFFFFFFFF<32> l00400DEE
l00400DE8:
	r4_1563 = 0x00410600<p32>
	goto l00400C92
l00400DEE:
	r7_510 = Mem496[0x00454528<p32>:word32]
	Mem517[r18_126 + 2<i32>:word16] = 0<16>
	branch r7_510 == 0<32> l00400E32
l00400DF8:
	branch getifaddrs(r0, r11, out r11_532) == 0<32> l00400E0E
l00400E00:
	r5_1560 = Mem517[0x00412EF0<p32>:word32]
	r4_1561 = 0x0041060C<p32>
l00400E0A:
	fn00400B5A(r4_1561, r5_1560, out r11, out r12_1851)
	goto l00400C96
l00400E0E:
	r22_1512 = Mem517[0x00454528<p32>:word32]
	r19_555 = r21_1650
l00400E18:
	branch r19_555 != 0<32> l00400E96
l00400E1A:
	r11 = freeifaddrs(r0, r21_1650, r11_532)
	branch r19_555 != 0<32> l00400E32
l00400E20:
	fn00400B5E(out r7_1872)
l00400E32:
	close(out r4_1869, out r6_1870, out r8_1871)
l00400E36:
	r17_1280 = 0x00431488<p32>
	branch Mem628[0x0043148C<p32>:word32] != 0<32> l00400E42
l00400E3E:
	Mem642[sp_1655 + 68<i32>:word32] = Mem628[r18_126 + 4<i32>:word32]
l00400E42:
	r19_644 = Mem643[0x00454528<p32>:word32]
	branch r19_644 == 0<32> l00400E72
l00400E4A:
	fn00400B4E(sp_1655 + 0x38<32>, 0<32>, 0x20<32>)
	strncpy(sp_1655 + 0x38<32>, r19_644, 0xF<32>)
	ioctl(out r4_685, out r7_1836)
	branch r4_685 < 0<32> l00400D02
l00400E6A:
	Mem692[0x004544AC<p32>:word32] = 0x18<32>
l00400E72:
	branch Mem693[0x0045452C<p32>:word32] == 0<32> l00400EC4
l00400E7A:
	branch Mem693[0x00454514<p32>:word32] != 0<32> l00400EFC
l00400E82:
	branch Mem693[0x00430048<p32>:word32] >= 0<32> l00400EE0
l00400E8C:
	Mem714[0x00430048<p32>:word32] = 2<32>
	goto l00400ED6
l00400E96:
	r20_558 = Mem517[r19_555 + 3<i32>:word32]
	branch r20_558 == 0<32> l00400EC0
l00400E9C:
	branch Mem517[r20_558:uint16] != 2<u16> l00400EC0
l00400EA4:
	branch strncmp(Mem517[r19_555 + 4<i32>:word32], r22_1512, 3<32>, out r6_1873) != 0<32> l00400EC0
l00400EAE:
	branch memcmp(r20_558 + 4<32>, 0x00430050<p32>, 4<32>, out r7_1874, out r8_1875, out r9_1876) == 0<32> l00400E1A
l00400EC0:
	r19_555 = Mem517[r19_555:word32]
	goto l00400E18
l00400EC4:
	branch __ins<word32,word32>(ntohl(Mem693[0x0043148C<p32>:word32]), 0<32>, 0<32>, 1<32>) == 0<32> l00400E7A
l00400ED6:
	branch Mem715[0x00430048<p32>:word32] < 0<32> l00400F30
l00400EE0:
	branch fn00400B4A() != 0xFFFFFFFF<32> l00400F30
l00400EF6:
	r4_1563 = 0x004106CC<p32>
	goto l00400C92
l00400EFC:
	branch Mem693[0x0043008C<p32>:word32] > 0x3E7<32> l00400F16
l00400F0A:
	r5_1560 = Mem693[0x00412EF0<p32>:word32]
	r4_1561 = 0x00410670<p32>
	goto l00400E0A
l00400F16:
	r7_706 = Mem693[0x00430048<p32>:word32]
	branch r7_706 < 0<32> l00400E82
l00400F20:
	branch r7_706 == 2<32> l00400E82
l00400F24:
	r5_1560 = Mem693[0x00412EF0<p32>:word32]
	r4_1561 = 0x004106A0<p32>
	goto l00400E0A
l00400F30:
	branch __bit<word32,word32>(Mem739[0x004544EC<p32>:word32], 0xF<32>) l00400F50
l00400F3A:
	branch bind() != 0xFFFFFFFF<32> l00400F50
l00400F4A:
	r4_1563 = 0x004106E4<p32>
	goto l00400C92
l00400F50:
	branch Mem739[r7 + 4<i32>:word32] != 3<32> l00400F78
l00400F56:
	Mem768[sp_1655 + 56<i32>:word32] = 0xFFFFE7C6<32>
	branch fn00401280(out r5_1852) != 0xFFFFFFFF<32> l00400F78
l00400F72:
	fn00401284(0x004106EC<p32>, out r17_1280)
l00400F78:
	Mem809[sp_1655 + 28<i32>:word32] = 1<32>
	branch fn00401280(out r5_1018) == 0<32> l00400F9A
l00400F8C:
	fputs_unlocked(0x00410710<p32>, Mem809[0x00412EF0<p32>:word32], out r3_1853, out r4_1854, out r5_1018, out r6_1855, out r8_1856, out r11_1857, out r12_1858)
l00400F9A:
	branch Mem809[r7 + 4<i32>:word32] != 1<32> l00400FCC
l00400FA0:
	branch fn00401280(out r5_1864) == 0<32> l00400FB6
l00400FB0:
	fn00401284(0x00410744<p32>, out r17_1280)
l00400FB6:
	branch fn00401280(out r5_1018) == 0<32> l00400FCC
l00400FC6:
	r5_1018 = fn00401284(0x00410764<p32>, out r17_1280)
l00400FCC:
	branch __bit<word32,word32>(Mem809[0x004544EC<p32>:word32], 5<32>) l00401012
l00400FD6:
	fn00401366(sp_1655 + 0x38<32>, 0<32>, 0x28<32>, out r6_1865)
	Mem936[sp_1655 + 56<i32>:byte] = 1<8>
	Mem938[sp_1655 + 57<i32>:byte] = 7<8>
	Mem940[sp_1655 + 58<i32>:byte] = 0x27<8>
	Mem945[sp_1655 + 59<i32>:byte] = 4<8>
	Mem949[0x00454534<p32>:word32] = 0x28<32>
	branch fn00401280(out r5_1018) >= 0<32> l00401012
l0040100C:
	r4_1563 = 0x00410784<p32>
	goto l00400C92
l00401012:
	branch __bit<word32,word32>(Mem960[0x004544EC<p32>:word32], 9<32>) l004010A8
l0040101C:
	fn00401366(sp_1655 + 0x38<32>, 0<32>, 0x28<32>, out r6_1866)
	Mem976[sp_1655 + 56<i32>:byte] = 0x44<8>
	r6_975 = 0x24<32>
	r7_977 = Mem976[0x0045453C<p32>:word32]
	branch r7_977 != 0<32> l00401038
l00401034_1:
	r6_975 = 0x28<32>
l00401038:
	Mem981[sp_1655 + 59<i32>:byte] = SLICE(r7_977, byte, 0)
	Mem983[sp_1655 + 57<i32>:byte] = SLICE(r6_975, byte, 0)
	Mem985[sp_1655 + 58<i32>:byte] = 5<8>
	branch r7_977 == 3<32> l0040107A
l0040104A:
	branch fn00401280(out r5_1018) >= 0<32> l004010A0
l0040105C:
	Mem1027[sp_1655 + 59<i32>:byte] = 2<8>
	branch fn00401280(out r5_1018) >= 0<32> l004010A0
l00401074:
	r4_1563 = 0x00410798<p32>
	goto l00400C92
l0040107A:
	r5_986 = Mem985[0x00454538<p32>:word32]
	Mem990[sp_1655 + 57<i32>:byte] = (SLICE(r5_986, byte, 0) << 3<8>) + 4<8>
	r6_987 = sp_1655 + 0x38<32>
	r7_991 = 0<32>
l0040108C:
	r6_987 = r6_987 + 8<32>
	branch r7_991 >= r5_986 l0040104A
l00401092:
	Mem1000[r6_987 - 4<i32>:word32] = Mem997[0x00431498<p32> + r7_991 * 4<32>:word32]
	r7_991 = r7_991 + 1<32>
	goto l0040108C
l004010A0:
	Mem1041[0x00454534<p32>:word32] = 0x28<32>
l004010A8:
	r19_1043 = Mem1042[0x004544EC<p32>:word32]
	branch __bit<word32,word32>(r19_1043, 0xA<32>) l00401114
l004010B2:
	r20_1046 = sp_1655 + 0x38<32>
	fn00401366(r20_1046, 0<32>, 0x28<32>, out r6_1877)
	Mem1060[sp_1655 + 56<i32>:byte] = 1<8>
	r7_1061 = 0x89<32>
	branch (r19_1043 & 0x80<32>) != 0<32> l004010D2
l004010CE_1:
	r7_1061 = 0x83<32>
l004010D2:
	r8_1064 = Mem1060[0x00454538<p32>:word32]
	Mem1071[sp_1655 + 58<i32>:byte] = (SLICE(r8_1064, byte, 0) << 2<8>) + 3<8>
	Mem1073[sp_1655 + 59<i32>:byte] = 4<8>
	Mem1075[sp_1655 + 57<i32>:byte] = SLICE(r7_1061, byte, 0)
	r6_1069 = 0<32>
	r7_1074 = 0x00431498<p32>
l004010F4:
	branch r6_1069 < r8_1064 l00401162
l004010F8:
	branch fn00401280(out r5_1018) < 0<32> l0040100C
l0040110C:
	Mem1106[0x00454534<p32>:word32] = 0x28<32>
l00401114:
	r5_1122 = r5_1018 *s (Mem1107[0x00454534<p32>:word32] + 0x104<32>) + (Mem1107[0x00430074<p32>:word32] + 8<32>)
	Mem1125[sp_1655 + 28<i32>:word32] = r5_1122
	r11 = sock_setbufs(r5_1122)
	branch Mem1125[0x0045452C<p32>:word32] == 0<32> l0040116E
l00401144:
	branch fn00401280(out r5_1878) >= 0<32> l0040116E
l0040115A:
	r4_1563 = 0x004107A8<p32>
	goto l00400C92
l00401162:
	r6_1069 = r6_1069 + 1<32>
	Mem1084[r20_1046 + r6_1069 * 4<32>:word32] = Mem1079[r7_1074:word32]
	r7_1074 = r7_1074 + 4<32>
	goto l004010F4
l0040116E:
	branch __bit<word32,word32>(Mem1125[0x004544EC<p32>:word32], 0x10<32>) l00401194
l00401178:
	Mem1171[sp_1655 + 40<i32>:word32] = 0<32>
	branch fn00401280(out r5_1879) != 0xFFFFFFFF<32> l00401194
l0040118C:
	r4_1563 = 0x004107C8<p32>
	goto l00400C92
l00401194:
	branch __bit<word32,word32>(Mem1183[0x004544EC<p32>:word32], 0x11<32>) l004011DA
l0040119E:
	Mem1189[sp_1655 + 40<i32>:word32] = Mem1183[0x00454510<p32>:word32]
	branch fn00401280(out r5_1880) != 0xFFFFFFFF<32> l004011C2
l004011BA:
	r4_1563 = 0x004107F0<p32>
	goto l00400C92
l004011C2:
	branch fn00401280(out r5_1881) != 0xFFFFFFFF<32> l004011DA
l004011D2:
	r4_1563 = 0x00410818<p32>
	goto l00400C92
l004011DA:
	r6_1224 = Mem1220[0x00430074<p32>:word32]
	branch 0xFFE3<32> - Mem1220[0x00454534<p32>:word32] >= r6_1224 l004011F8
l004011F0:
	goto l00400BC6
l004011F8:
	branch r6_1224 <u 8<32> l00401204
l004011FC:
	Mem1226[0x00454508<p32>:word32] = 1<32>
l00401204:
	malloc(r0, r6_1224 + 0x88<32>, r11, out r3_1883, out r4_1266, out r6_1884, out r8_1885, out r11_1886)
	branch r4_1266 != 0<32> l0040121E
l00401210:
	r5_1560 = Mem1296[0x00412EF0<p32>:word32]
	r4_1561 = 0x00410874<p32>
	goto l00400E0A
l0040121E:
	r21_1298 = Mem1296[0x004544C0<p32>:word32]
	fn00401590(Mem1296[r17_1280 + 4<i32>:word32])
	fn00401594(0x0041088C<p32>)
	branch Mem1296[0x00454528<p32>:word32] != 0<32> l00401242
l00401238:
	branch __bit<word32,word32>(Mem1296[0x004544EC<p32>:word32], 0xF<32>) l0040125C
l00401242:
	fn00401590(Mem1296[r18_126 + 4<i32>:word32])
	branch Mem1296[0x00454528<p32>:word32] != 0<32> l00401256
l00401252_1:
l00401256:
	fn00401594(0x0041089C<p32>)
l0040125C:
	fn00401594(0x004108AC<p32>)
	main_loop(r0, setup(r0, r7), 0x0043005C<p32>, r7, r6_1224 + 0x88<32>, r21_1298, r22_1512)
ping4_run_exit:


word32 fn00401280(word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
// MayUse: 
// LiveOut: r4:[0..31]-ping4_run r5:[0..31]-ping4_run
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401280_entry:
l00401280:
l00401280_thunk_setsockopt:
	setsockopt(out r3_15, out r4_8, out r5_9, out r7_16)
	r5Out = r5_9
	return r4_8
fn00401280_exit:


word32 fn00401284(word32 r4, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-ping4_run r5:[0..31]-ping4_run
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401284_entry:
l00401284:
l00401284_thunk_perror:
	perror(r4, out r3_25, out r5_18, out r6_26, out r7_27, out r8_28, out r11_29, out r12_30, out r17_23)
	r17Out = r17_23
	return r5_18
fn00401284_exit:


word32 pr_addr(word32 r0, word32 r4, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_options
//      pr_icmph
//      ping4_receive_error_msg
//      ping4_parse_reply
//      ping6_receive_error_msg
//      ping6_parse_reply
//      ping6_run
// MayUse:  r0:[0..31] r18:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] ra:[0..31]
// LiveOut: r17:[0..31]-ping6_parse_reply
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
pr_addr_entry:
l00401288:
	fn00401366(fp - 0x20C<32>, 0<32>, 0xFB<32>, out r6_271)
	r5_31 = fn00401366(&tLoc010C, 0<32>, 0xFB<32>, out r6_32)
	r7_37 = Mem28[0x00454520<p32>:word32]
	branch r6_32 != r7_37 l004012C2
l004012B4:
	r5_31 = 0x004313E0<p32>
	branch memcmp(&tLoc010C, 0x004313E0<p32>, r6_32, out r7_37, out r8_273, out r9_274) == 0<32> l0040135E
l004012C2:
	Mem52[0x00454520<p32>:word32] = r7_37
	r5_64 = fn00401608(0x004313E0<p32>, r5_31, r7_37, out r7_272)
	r4_91 = CONVERT(_setjmp(0x00454340<p32>, 0xFB<32>, r4, r18, r19, r20, r21, r22, r23, r28, r30, ra) <u 1<32>, bool, word32)
	Mem93[0x004314C0<p32>:word32] = r4_91
	r4_100 = getnameinfo(r4_91, r5_64, fp - 0x110<32>, 0xFF<32>, 1<32>, r21, out r5_112)
	branch Mem93[0x004544B8<p32>:word32] == 0<32> l00401322
l00401306:
	branch false l00401342
l0040130C:
	snprintf(0x004303E0<p32>, 0x1000<32>, 0x00410C70<p32>)
	goto l00401358
l00401322:
	branch !__bit<word32,word32>(Mem93[0x004544EC<p32>:word32], 2<32>) l00401306
l0040132C:
	getnameinfo(r4_100, r5_112, fp - 0x210<32>, 0xFF<32>, 0<32>, r21, out r5_275)
	goto l00401306
l00401342:
	snprintf(0x004303E0<p32>, 0x1000<32>, 0x00410C68<p32>)
l00401358:
	Mem196[0x004314C0<p32>:word32] = r0
l0040135E:
	return r4
pr_addr_exit:


word32 fn00401366(word32 r4, word32 r5, word32 r6, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      pr_addr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r5:[0..31]-pr_addr r6:[0..31]-pr_addr
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
fn00401366_entry:
l00401366:
l00401366_thunk_memset:
	r5_11 = memset(r4, r5, r6, out r6_12, out r7_15, out r8_16, out r10_17)
	r6Out = r6_12
	return r5_11
fn00401366_exit:


void pr_options(word32 r0, word32 r4, word32 r5, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_iph
//      ping4_parse_reply
// MayUse:  r0:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
pr_options_entry:
l0040136A:
	r16_26 = r4
	r20_28 = r5 + 0xFFFFFFEC<32>
l00401372:
	branch r20_28 > 0<32> l00401378
l00401376:
	return
l00401378:
	r5_32 = CONVERT(Mem31[r16_26:byte], byte, word32)
	branch r5_32 == 0<32> l00401376
l0040137C:
	branch r5_32 != 1<32> l0040138C
l00401380:
	fn00401594(0x00410C74<p32>)
	r20_28 = r20_28 + 0xFFFFFFFF<32>
	r16_26 = r16_26 + 1<32>
	goto l00401372
l0040138C:
	r19_33 = CONVERT(Mem31[r16_26 + 1<i32>:byte], byte, word32)
	branch r19_33 < 2<32> l00401376
l00401392:
	branch r20_28 < r19_33 l00401376
l00401396:
	branch r5_32 == 4<32> l004014BC
l0040139A:
	branch r5_32 >=u 5<32> l004013A8
l0040139E:
	branch r5_32 == 7<32> l00401422
l004013A2:
	r4_260 = 0x00410D18<p32>
	goto l0040158C
l004013A8:
	branch r5_32 == 0x83<32> l004013B6
l004013B2:
	branch r5_32 != 0x89<32> l004013A2
l004013B6:
	branch (r5_32 ^ 0x89<32>) == 0<32> l004013C6
l004013C2_1:
l004013C6:
	printf(0x00410C7C<p32>, out r4_1250, out r7_1251, out r11_1252, out r14_1253)
	r21_294 = CONVERT(Mem31[r16_26 + 1<i32>:byte], byte, word32)
	branch r21_294 < 5<32> l004013FA
l004013D2:
	r18_295 = r16_26 + 3<32>
	r17_296 = r18_295
l004013D8:
	fn00401608(fp - 0x44<32>, r17_296, 4<32>, out r7_315)
	branch r7_315 != 0<32> l00401402
l004013E6:
	fn00401594(0x00410C88<p32>)
l004013EC:
	r17_296 = fn00401766(0xA<32>)
	branch r18_295 + (r21_294 - r17_296) >= 5<32> l004013D8
l004013FA:
	r20_28 = r20_28 - r19_33
	r16_26 = r16_26 + r19_33
	goto l00401372
l00401402:
	pr_addr(r0, fp - 0x40<32>, r18_295, r19_33, r20_28, r21_294, r22, r23, r28, r30, ra)
	fn00401594(0x00410C94<p32>)
	goto l004013EC
l00401422:
	r7_411 = CONVERT(Mem31[r16_26 + 2<i32>:byte], byte, word32)
	branch r7_411 < r19_33 l0040142C
l00401428_1:
	r7_411 = r19_33
l0040142C:
	r17_416 = r7_411 + 0xFFFFFFFC<32>
	branch r17_416 <= 0<32> l004013FA
l00401436:
	r18_421 = r16_26 + 2<32>
	branch Mem31[0x00454524<p32>:word32] != r17_416 l00401462
l00401444:
	branch memcmp(r18_421, 0x00431460<p32>, r17_416, out r7_1255, out r8_1256, out r9_1257) != 0<32> l00401462
l00401450:
	branch !__bit<word32,word32>(Mem31[0x004544EC<p32>:word32], 0<32>) l00401462
l0040145A:
	fn00401594(0x00410C98<p32>)
	goto l004013FA
l00401462:
	Mem436[0x00454524<p32>:word32] = r17_416
	fn00401608(0x00431460<p32>, r18_421, r17_416, out r7_1254)
	fn00401594(0x00410CA8<p32>)
	r18_454 = r16_26 + 3<32>
	r17_474 = r17_416
l0040147A:
	fn00401608(fp - 0x44<32>, r18_454 + (r17_416 - r17_474), 4<32>, out r7_493)
	branch r7_493 != 0<32> l0040149C
l0040148A:
	fn00401594(0x00410C88<p32>)
l00401490:
	r17_474 = fn00401766(0xA<32>)
	branch r17_474 > 0<32> l0040147A
l0040149A:
	goto l004013FA
l0040149C:
	pr_addr(r0, fp - 0x40<32>, r18_454, r19_33, r20_28, r17_416, r22, r23, r28, r30, ra)
	fn00401594(0x00410C94<p32>)
	goto l00401490
l004014BC:
	r7_34 = CONVERT(Mem31[r16_26 + 2<i32>:byte], byte, word32)
	branch r7_34 < r19_33 l004014C6
l004014C2_1:
	r7_34 = r19_33
l004014C6:
	r18_100 = r7_34 + 0xFFFFFFFB<32>
	branch r18_100 <= 0<32> l004013FA
l004014CE:
	r21_43 = CONVERT(Mem31[r16_26 + 3<i32>:byte], byte, word32)
	fn00401594(0x00410CB0<p32>)
	r30 = r16_26 + 4<32>
	r23 = 0<32>
	r22 = 0<32>
	goto l00401524
l004014E2:
	r17_115 = pr_addr(r0, fp - 0x40<32>, r18_100, r19_33, r20_28, r21_43, r22, r23, r28, r30, ra)
	fn00401594(0x00410C94<p32>)
	goto l00401540
l00401502:
	r4_213 = 0x00410CD4<p32>
	goto l00401570
l0040150C:
	branch r22 != 0<32> l00401576
l00401510:
	r4_185 = 0x00410CE8<p32>
l00401516:
	fn00401594(r4_185)
	r22 = r17_181
l0040151A:
	fn00401766(0xA<32>)
	r18_100 = r18_100 + 0xFFFFFFFC<32>
	branch r18_100 <= 0<32> l00401580
l00401524:
	r17_115 = r30
	branch (r21_43 & 0xF<32>) == 0<32> l00401546
l0040152C:
	fn00401608(fp - 0x44<32>, r30, 4<32>, out r7_86)
	r17_115 = dwLoc44
	branch r7_86 != 0<32> l004014E2
l0040153A:
	fn00401594(0x00410C88<p32>)
l00401540:
	r18_100 = r18_100 + 0xFFFFFFFC<32>
	branch r18_100 <= 0<32> l00401580
l00401546:
	r30 = r17_115 + 4<32>
	r17_181 = CONVERT(Mem169[r17_115 + 3<i32>:byte], byte, word32) + (CONVERT(Mem169[r17_115 + 2<i32>:byte], byte, word32) + (CONVERT(Mem169[r17_115 + 1<i32>:byte], byte, word32) + (CONVERT(Mem169[r17_115:byte], byte, word32) << 8<32>) << 8<32>) << 8<32>)
	branch r17_181 >= 0<32> l0040150C
l00401562:
	r17_209 = __ext<word32,word32>(r17_181, 0<32>, 0x1F<32>)
	branch r23 != 0<32> l00401502
l0040156A:
	r4_213 = 0x00410CB8<p32>
l00401570:
	fn00401594(r4_213)
	r23 = r17_209
	goto l0040151A
l00401576:
	r4_185 = 0x00410CF8<p32>
	goto l00401516
l00401580:
	r4_260 = 0x00410D00<p32>
	branch r21_43 >>u 4<32> == 0<32> l004013FA
l0040158C:
	fn00401594(r4_260)
	goto l004013FA
pr_options_exit:


void fn00401590(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      pr_iph
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401590_entry:
l00401590:
l00401590_thunk_inet_ntoa:
	inet_ntoa(r4)
	return
fn00401590_exit:


void fn00401594(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      pr_options
//      pr_iph
//      pr_icmph
//      ping4_receive_error_msg
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401594_entry:
l00401594:
l00401594_thunk_printf:
	printf(r4, out r4_23, out r7_24, out r11_25, out r14_26)
	return
fn00401594_exit:


void pr_iph(word32 r0, word32 r4, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_icmph
// MayUse:  r0:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
pr_iph_entry:
l00401598:
	fn00401762(0x00410D2C<p32>)
	__ext<word32,word32>(Mem11[r4:word32], 4<32>, 4<32>)
	fn00401594(0x00410D70<p32>)
	__ext<word32,word32>(CONVERT(Mem11[r4 + 6<i32>:uint16], uint16, word32), 0<32>, 0xD<32>)
	fn00401594(0x00410D8C<p32>)
	fn00401594(0x00410D98<p32>)
	fn00401590(Mem11[r4 + 12<i32>:word32])
	printf(0x00410DAC<p32>, out r4_230, out r7_231, out r11_232, out r14_233)
	fn00401590(Mem11[r4 + 16<i32>:word32])
	printf(0x00410DAC<p32>, out r4_234, out r7_235, out r11_236, out r14_237)
	r17_186 = fn00401766(0xA<32>)
l00401606_thunk_pr_options:
	pr_options(r0, r4 + 0x14<32>, r17_186, r22, r23, r28, r30, ra)
	return
pr_iph_exit:


word32 fn00401608(word32 r4, word32 r5, word32 r6, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_addr
//      pr_options
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r5:[0..31]-pr_addr r7:[0..31]-pr_options
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn00401608_entry:
l00401608:
l00401608_thunk_memcpy:
	memcpy(r4, r5, r6, out r3_23, out r5_14, out r6_24, out r7_11, out r8_25, out r9_26, out r11_27, out r12_28, out r13_29, out r14_30)
	r7Out = r7_11
	return r5_14
fn00401608_exit:


void pr_icmph(word32 r0, word32 r4, word32 r5, word32 r7, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r0:[0..31] r18:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
pr_icmph_entry:
l0040160C:
	branch r4 >=u 0x13<32> l00401758
l00401614:
	switch (r4) { l0040161C l00401758 l00401758 l00401624 l004016AE l004016B4 l00401758 l00401758 l00401704 l00401758 l00401758 l0040170A l00401722 l00401734 l0040173A l00401740 l00401746 l0040174C l00401752 }
l0040161C:
	r4_19 = 0x00410DB4<p32>
l00401620:
	fn00401762(r4_19)
	return
l00401624:
	branch r5 >=u 0x10<32> l004016A8
l00401628:
	switch (r5) { l00401630 l00401638 l0040163E l00401644 l0040164A l00401666 l0040166C l00401672 l00401678 l0040167E l00401684 l0040168A l00401690 l00401696 l0040169C l004016A2 }
l00401630:
	r4_156 = 0x00410DC0<p32>
l00401634:
	fn00401762(r4_156)
	goto l00401652
l00401638:
	r4_156 = 0x00410DDC<p32>
	goto l00401634
l0040163E:
	r4_156 = 0x00410DFC<p32>
	goto l00401634
l00401644:
	r4_156 = 0x00410E20<p32>
	goto l00401634
l0040164A:
	r4_155 = 0x00410E40<p32>
l00401650:
	fn00401594(r4_155)
l00401652:
	branch r7 == 0<32> l00401760
l00401656:
	branch __bit<word32,word32>(Mem221[0x004544EC<p32>:word32], 8<32>) l00401760
l00401660:
	pr_iph(r0, r7 + 8<32>, r22, r23, r28, r30, ra)
	return
l00401666:
	r4_156 = 0x00410E64<p32>
	goto l00401634
l0040166C:
	r4_156 = 0x00410E78<p32>
	goto l00401634
l00401672:
	r4_156 = 0x00410E90<p32>
	goto l00401634
l00401678:
	r4_156 = 0x00410EAC<p32>
	goto l00401634
l0040167E:
	r4_156 = 0x00410EC4<p32>
	goto l00401634
l00401684:
	r4_156 = 0x00410EE0<p32>
	goto l00401634
l0040168A:
	r4_156 = 0x00410EFC<p32>
	goto l00401634
l00401690:
	r4_156 = 0x00410F2C<p32>
	goto l00401634
l00401696:
	r4_156 = 0x00410F60<p32>
	goto l00401634
l0040169C:
	r4_156 = 0x00410F70<p32>
	goto l00401634
l004016A2:
	r4_156 = 0x00410F88<p32>
	goto l00401634
l004016A8:
	r4_155 = 0x00410F9C<p32>
	goto l00401650
l004016AE:
	r4_156 = 0x00410FBC<p32>
	goto l00401634
l004016B4:
	branch r5 == 1<32> l004016F2
l004016B8:
	branch r5 == 0<32> l004016CA
l004016BA:
	branch r5 == 2<32> l004016F8
l004016BE:
	branch r5 == 3<32> l004016FE
l004016C2:
	fn00401594(0x0041103C<p32>)
	goto l004016D0
l004016CA:
	r4_37 = 0x00410FCC<p32>
l004016CE:
	fn00401594(r4_37)
l004016D0:
	branch r7 == 0<32> l004016E0
l004016DE:
l004016E0:
	pr_addr(r0, fp - 32<i32>, r18, r19, r20, r21, r22, r23, r28, r30, ra)
	r4_155 = 0x00411054<p32>
	goto l00401650
l004016F2:
	r4_37 = 0x00410FE0<p32>
	goto l004016CE
l004016F8:
	r4_37 = 0x00410FF0<p32>
	goto l004016CE
l004016FE:
	r4_37 = 0x00411018<p32>
	goto l004016CE
l00401704:
	r4_19 = 0x00411068<p32>
	goto l00401620
l0040170A:
	branch r5 == 0<32> l00401716
l0040170C:
	branch r5 == 1<32> l0040171C
l00401710:
	r4_155 = 0x004110B0<p32>
	goto l00401650
l00401716:
	r4_156 = 0x00411078<p32>
	goto l00401634
l0040171C:
	r4_156 = 0x00411090<p32>
	goto l00401634
l00401722:
	branch r7 == 0<32> l0040172C
l00401724:
	fn0040193C(Mem9[r7 + 4<i32>:word32])
l0040172C:
	r4_155 = 0x004110D0<p32>
	goto l00401650
l00401734:
	r4_19 = 0x004110F4<p32>
	goto l00401620
l0040173A:
	r4_19 = 0x00411100<p32>
	goto l00401620
l00401740:
	r4_19 = 0x00411110<p32>
	goto l00401620
l00401746:
	r4_19 = 0x00411124<p32>
	goto l00401620
l0040174C:
	r4_19 = 0x00411138<p32>
	goto l00401620
l00401752:
	r4_19 = 0x00411150<p32>
	goto l00401620
l00401758:
	fn00401594(0x00411164<p32>)
l00401760:
	return
pr_icmph_exit:


void fn00401762(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_iph
//      pr_icmph
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401762_entry:
l00401762:
l00401762_thunk_puts:
	puts(r4)
	return
fn00401762_exit:


word32 fn00401766(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_options
//      pr_iph
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-pr_options
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401766_entry:
l00401766:
l00401766_thunk_putchar:
	putchar(r4, out r17_5)
	return r17_5
fn00401766_exit:


void ping4_receive_error_msg(word32 r0, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r11 r12 r13 r14 r15 r16 r17 r18 r19 r24 ra sp
ping4_receive_error_msg_entry:
l0040176A:
	__errno_location(out r4_19)
	r19_23 = Mem13[r4_19:word32]
	r4_47 = recvmsg(out r5_48, out r6_695)
	branch r4_47 < 0<32> l0040187A
l004017C2:
	r6_346 = 0x200<32>
	r7_353 = 0<32>
	branch false l004017D0
l004017CC:
	r7_353 = fp - 0x220<32>
l004017D0:
	r18_343 = 0<32>
l004017D6:
	branch r7_711 == 0<32> l00401800
l004017D8:
	branch Mem42[r7_711 + 4<i32>:word32] != 0<32> l004017E4
l004017DC:
	branch Mem42[r7_711 + 8<i32>:word32] != 0xB<32> l004017E4
l004017E2:
	r18_343 = r7_711 + 0xC<32>
l004017E4:
	r6_346 = Mem42[r7_711:word32]
	branch r6_346 <u 0xC<32> l004017FC
l004017EA:
	r6_346 = __ins<word32,word32>(r6_346 + 3<32>, 0<32>, 0<32>, 1<32>)
	r7_353 = r7_711 + r6_346
	r7_711 = r7_353
	branch r6_346 + 0xC<32> <u (r5_48 + 0x200<32>) - r7_711 l004017D6
l004017FC:
	r7_353 = 0<32>
	goto l004017D6
l00401800:
	branch r18_343 != 0<32> l00401806
l00401802:
	abort(r0)
l00401806:
	r5_67 = CONVERT(Mem42[r18_343 + 4<i32>:byte], byte, word32)
	branch r5_67 != 1<32> l00401870
l0040180E:
	r7_270 = Mem42[0x004544EC<p32>:word32]
	r16_135 = r7_270 & 0x10<32>
	branch (r7_270 & 0x10<32>) != 0<32> l00401936
l0040181C:
	branch __bit<word32,word32>(r7_270, 0<32>) l00401848
l00401820:
	fn00401BA0(r5_67)
l00401826:
	Mem308[0x004544D0<p32>:word32] = Mem304[0x004544D0<p32>:word32] + 1<32>
l00401836:
	__errno_location(out r4_696)
	branch r16_135 != 0<32> l00401842
l0040183E:
l00401842:
	return
l00401848:
	r4_274 = Mem42[r18_343:word32]
	branch r4_274 == 0x1A<32> l00401868
l00401856:
	strerror(r4_274, out r4_697)
l00401860:
	fprintf(out r7_709)
	goto l00401826
l00401868:
	goto l00401860
l00401870:
	branch r5_67 != 2<32> l0040187A
l00401874:
	branch r4_47 >= 8<32> l0040187E
l00401878:
l0040187A:
	goto l00401938
l0040187E:
	branch Mem42[0x0043148C<p32>:word32] != r6_346 l00401878
l0040188A:
	branch bLoc0254 != 8<8> l00401878
l00401892:
	branch is_ours(dwLoc0248, CONVERT(wLoc0250, uint16, word32)) == 0<32> l00401878
l0040189C:
	acknowledge(fn00401B9C(CONVERT(wLoc024E, uint16, word32)))
	branch Mem42[dwLoc0248 + 4<i32>:word32] != 3<32> l004018D6
l004018AC:
	branch Mem42[dwLoc0248 + 8<i32>:word32] != 0<32> l004018D6
l004018B0:
	setsockopt(out r3_698, out r4_102, out r5_699, out r7_700)
	branch r4_102 != 0xFFFFFFFF<32> l004018D6
l004018CE:
	perror(0x004111C4<p32>, out r3_701, out r5_702, out r6_703, out r7_704, out r8_705, out r11_706, out r12_707, out r17_708)
l004018D6:
	r16_131 = Mem129[0x004544EC<p32>:word32]
	Mem134[0x004544D0<p32>:word32] = Mem129[0x004544D0<p32>:word32] + 1<32>
	branch (r16_131 & 0x10<32>) != 0<32> l00401930
l004018F0:
	r16_135 = r16_131 & 1<32>
	branch (r16_131 & 1<32>) == 0<32> l004018FE
l004018F4:
	fn00401BA0(2<32>)
	goto l00401836
l004018FE:
	print_timestamp(out r11_710)
	pr_addr(r0, r18_343 + 0x10<32>, r18_343, r19_23, r20, r21, r22, r23, r28, r30, ra)
	fn00401B9C(CONVERT(wLoc024E, uint16, word32))
	fn00401594(0x004111EC<p32>)
	pr_icmph(r0, CONVERT(Mem134[r18_343 + 5<i32>:byte], byte, word32), CONVERT(Mem134[r18_343 + 6<i32>:byte], byte, word32), 0<32>, r18_343, r19_23, r20, r21, r22, r23, r28, r30, ra)
	fn00401B98(Mem134[0x00412EF4<p32>:word32])
l00401930:
	r16_135 = 1<32>
	goto l00401836
l00401936:
l00401938:
	r16_135 = 0<32>
	goto l00401836
ping4_receive_error_msg_exit:


void fn0040193C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_icmph
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4
// Preserved: sp
fn0040193C_entry:
l0040193C:
l0040193C_thunk_ntohl:
	ntohl(r4)
	return
fn0040193C_exit:


void ping4_parse_reply(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r19, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 ra sp
ping4_parse_reply_entry:
l00401940:
	r16_33 = Mem21[Mem21[r5 + 8<i32>:word32]:word32]
	branch Mem21[r4 + 4<i32>:word32] != 3<32> l004019E8
l00401952:
	r5_66 = Mem21[r16_33:word32]
	r7_39 = (r5_66 & 0xF<32>) << 2<32>
	branch r7_39 + 7<32> >= r6 l00401964
l00401960:
	branch (r5_66 & 0xF<32>) >= 5<32> l0040198C
l00401964:
	branch !__bit<word32,word32>(Mem21[0x004544EC<p32>:word32], 8<32>) l00401974
l0040196E:
l00401970:
	return
l00401974:
	pr_addr(r0, r7, r7, r19, r6, r21, r22, r23, r28, r30, ra)
	fprintf(out r7_990)
	goto l0040196E
l0040198C:
	r23_162 = CONVERT(Mem21[r16_33 + 8<i32>:byte], byte, word32)
	r21_154 = r16_33 + 0x14<32>
	r22_158 = r7_39 + 0xFFFFFFEC<32>
l00401998:
	r20_78 = r6 - r7_39
	r16_83 = r16_33 + r7_39
	r4_88 = in_cksum(r16_83, r20_78, 0<32>)
	r7_93 = CONVERT(Mem21[r16_83:byte], byte, word32)
	branch r7_93 != 0<32> l00401A40
l004019AC:
	branch is_ours(r4, CONVERT(Mem21[r16_83 + 4<i32>:uint16], uint16, word32)) == 0<32> l0040196E
l004019B4:
	r4_475 = fn00401B9C(CONVERT(Mem21[r16_83 + 6<i32>:uint16], uint16, word32))
	branch gather_statistics(r16_83, 8<32>, r20_78, r4_475, r23_162, 0<32>, pr_addr(r0, r7, r7, r4_475, r20_78, r21_154, r22_158, r23_162, r28, r30, ra), 0x004009EE<p32>) == 0<32> l00401B52
l004019DC:
	fn00401B98(Mem501[0x00412EF4<p32>:word32])
l004019E4:
	goto l00401970
l004019E8:
	r19_35 = Mem21[r5 + 20<i32>:word32]
	branch r19_35 <u 0xC<32> l00401A36
l004019EE:
	r5_40 = Mem21[r5 + 16<i32>:word32]
	r21_154 = r16_33
	r22_158 = 0<32>
	r23_162 = 0<32>
	r7_39 = r5_40
l004019F8:
	branch r7_996 == 0<32> l00401998
l004019FA:
	r4_48 = Mem21[r7_996:word32]
	branch Mem21[r7_996 + 4<i32>:word32] != 0<32> l00401A0E
l00401A00:
	r6_49 = Mem21[r7_996 + 8<i32>:word32]
	branch r6_49 != 2<32> l00401A2A
l00401A06:
	branch r4_48 <u 4<32> l00401A26
l00401A0A:
	r23_162 = CONVERT(Mem21[r7_996 + 12<i32>:byte], byte, word32)
l00401A0E:
	branch r4_48 <u 0xC<32> l00401A26
l00401A12:
	r4_60 = __ins<word32,word32>(r4_48 + 3<32>, 0<32>, 0<32>, 1<32>)
	r7_39 = r7_996 + r4_60
	r7_996 = r7_39
	branch r4_60 + 0xC<32> <u (r5_40 + r19_35) - r7_996 l004019F8
l00401A26:
	r7_39 = 0<32>
	goto l004019F8
l00401A2A:
	branch r6_49 != 7<32> l00401A0E
l00401A2E:
	r21_154 = r7_996 + 0xC<32>
	r22_158 = r4_48
	goto l00401A0E
l00401A36:
	r21_154 = r16_33
	r22_158 = 0<32>
	r23_162 = 0<32>
	r7_39 = 0<32>
	goto l00401998
l00401A40:
	r7_97 = r7_93 + 0xFFFFFFFD<32> & 0xFF<32>
	branch r7_97 >=u 0xA<32> l00401A5A
l00401A4A:
	r7_99 = 1<32> << r7_97
	branch (r7_99 & 0x307<32>) != 0<32> l00401A76
l00401A56:
	branch !__bit<word32,word32>(r7_99, 5<32>) l0040196E
l00401A5A:
	r7_291 = Mem21[0x004544EC<p32>:word32]
	branch (r7_291 & 0x111<32>) != 1<32> l00401B04
l00401A68:
	branch r4_88 != 0<32> l00401AFA
l00401A6C:
	fn00401BA0(2<32>)
	goto l00401970
l00401A76:
	branch r20_78 <u 0x24<32> l0040196E
l00401A7A:
	r17_103 = (Mem21[r16_83 + 8<i32>:word32] & 0xF<32>) + 4<32>
	branch r20_78 < r17_103 << 2<32> l0040196E
l00401A86:
	r17_106 = r16_83 + ((r17_103 << 2<32>) + 0xFFFFFFF8<32>)
	branch Mem21[r17_106:byte] != 8<8> l0040196E
l00401A90:
	branch Mem21[0x0043148C<p32>:word32] != Mem21[r16_83 + 24<i32>:word32] l0040196E
l00401A9C:
	branch is_ours(r4, CONVERT(Mem21[r17_106 + 4<i32>:uint16], uint16, word32)) == 0<32> l0040196E
l00401AA6:
	branch (CONVERT(Mem21[r16_83:byte], byte, word32) + 0xFFFFFFFC<32> & 0xFF<32>) <u 2<32> l00401ABA
l00401AB0:
	acknowledge(fn00401B9C(CONVERT(Mem21[r17_106 + 6<i32>:uint16], uint16, word32)))
	goto l004019E4
l00401ABA:
	branch (Mem21[0x004544EC<p32>:word32] & 0x11<32>) != 0<32> l0040196E
l00401AC8:
	print_timestamp(out r11_995)
	fn00401B9C(CONVERT(Mem21[pr_addr(r0, r7, r7, r4_88, r20_78, r21_154, r22_158, r23_162, r28, r30, ra) + 6<i32>:uint16], uint16, word32))
	fn00401B94(0x00411230<p32>)
	branch r4_88 == 0<32> l00401AE8
l00401AE2:
	fn00401B94(0x00411248<p32>)
l00401AE8:
	r17_247 = CONVERT(Mem21[r16_83:byte], byte, word32)
	r18_248 = CONVERT(Mem21[r16_83 + 1<i32>:byte], byte, word32)
	fn0040193C(Mem21[r16_83 + 4<i32>:word32])
	pr_icmph(r0, r17_247, r18_248, r16_83, r18_248, r4_88, r20_78, r21_154, r22_158, r23_162, r28, r30, ra)
	goto l0040196E
l00401AFA:
	fn00401BA0(3<32>)
	goto l004019E4
l00401B04:
	branch __bit<word32,word32>(r7_291, 8<32>) l004019E4
l00401B08:
	branch Mem21[0x00454514<p32>:word32] != 0<32> l004019E4
l00401B12:
	branch __bit<word32,word32>(r7_291, 0x13<32>) l00401B28
l00401B16:
	gettimeofday(fp - 0x38<32>, out r4_992, out r6_993, out r17_994)
	fn00401B94(0x00411260<p32>)
l00401B28:
	pr_addr(r0, r7, r7, r4_88, r20_78, r21_154, r22_158, r23_162, r28, r30, ra)
	fn00401B94(0x0041126C<p32>)
	branch r4_88 == 0<32> l00401B40
l00401B38:
	fn00401762(0x00411248<p32>)
	goto l004019E4
l00401B40:
	r18_399 = CONVERT(Mem21[r16_83:byte], byte, word32)
	r19_400 = CONVERT(Mem21[r16_83 + 1<i32>:byte], byte, word32)
	fn0040193C(Mem21[r16_83 + 4<i32>:word32])
	pr_icmph(r0, r18_399, r19_400, r16_83, r18_399, r19_400, r20_78, r21_154, r22_158, r23_162, r28, r30, ra)
	goto l00401970
l00401B52:
	branch __bit<word32,word32>(Mem501[0x004544EC<p32>:word32], 0xD<32>) l00401B72
l00401B5C:
	fn00401766(7<32>)
	branch __bit<word32,word32>(Mem501[0x004544EC<p32>:word32], 0<32>) l00401B7C
l00401B6A:
	fn00401B98(Mem501[0x00412EF4<p32>:word32])
l00401B72:
	branch !__bit<word32,word32>(Mem501[0x004544EC<p32>:word32], 0<32>) l004019E4
l00401B7C:
	pr_options(r0, r21_154, r22_158 + 0x14<32>, r22_158, r23_162, r28, r30, ra)
	putchar(0xA<32>, out r17_991)
	fn00401B98(Mem501[0x00412EF4<p32>:word32])
	goto l00401970
ping4_parse_reply_exit:


void fn00401B94(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401B94_entry:
l00401B94:
l00401B94_thunk_printf:
	printf(r4, out r4_23, out r7_24, out r11_25, out r14_26)
	return
fn00401B94_exit:


void fn00401B98(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r16 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401B98_entry:
l00401B98:
l00401B98_thunk_fflush_unlocked:
	fflush_unlocked(r4, out r16_16, out r17_17)
	return
fn00401B98_exit:


word32 fn00401B9C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-ping4_parse_reply
// Trashed: r25 r4
// Preserved: sp
fn00401B9C_entry:
l00401B9C:
l00401B9C_thunk_ntohs:
	return ntohs(r4)
fn00401B9C_exit:


void fn00401BA0(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401BA0_entry:
l00401BA0:
l00401BA0_thunk_write_stdout:
	write_stdout(r5)
	return
fn00401BA0_exit:


word32 in_flight(word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pinger
//      main_loop
// MayUse: 
// LiveOut: r4:[0..31]-pinger r7:[0..31]-pinger
// Trashed: r25 r4 r6 r7
// Preserved: sp
in_flight_entry:
l00401BB0:
	r7_11 = Mem0[0x004544E4<p32>:word32]
	r6_8 = r7_11 - CONVERT(Mem0[0x00454518<p32>:uint16], uint16, word32)
	r4_13 = r6_8 & 0xFFFF<32>
	branch __bit<word32,word32>(r6_8, 0xF<32>) l00401BD6
l00401BC6:
	r7_11 = r7_11 - Mem0[0x004544DC<p32>:word32]
	r4_13 = r7_11 - Mem0[0x004544D0<p32>:word32]
l00401BD6:
	r7Out = r7_11
	return r4_13
in_flight_exit:


void advance_ntransmitted()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pinger
// MayUse: 
// LiveOut:
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
advance_ntransmitted_entry:
l00401BD8:
	r6_5 = Mem0[0x004544E4<p32>:word32]
	r4_8 = CONVERT(Mem0[0x00454518<p32>:uint16], uint16, word32)
	Mem9[0x004544E4<p32>:word32] = r6_5 + 1<32>
	branch (r6_5 + 1<32> & 0xFFFF<32>) - r4_8 <= 0x7FFF<32> l00401C02
l00401BFC:
	Mem14[0x00454518<p32>:word16] = SLICE(r6_5, word16, 0) + 2<16>
l00401C02:
	return
advance_ntransmitted_exit:


void sigstatus()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25 r7
// Preserved: sp
sigstatus_entry:
l00401C04:
	Mem5[0x00454500<p32>:word32] = 1<32>
	return
sigstatus_exit:


void update_interval()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pinger
//      gather_statistics
// MayUse: 
// LiveOut:
// Trashed: hi lo r25 r5 r6 r7
// Preserved: sp
update_interval_entry:
l00401C0E:
	branch Mem0[0x004544F4<p32>:word32] == 0<32> l00401C52
l00401C16:
l00401C1C:
	r6_14 = Mem0[0x004544F8<p32>:word32]
	r7_21 = Mem0[0x00454514<p32>:word32]
	Mem22[0x0043008C<p32>:word32] = r6_14
	branch r7_21 == 0<32> l00401C50
l00401C3E:
	branch r6_14 > 0xC7<32> l00401C50
l00401C46:
	Mem25[0x0043008C<p32>:word32] = 0xC8<32>
l00401C50:
	return
l00401C52:
	goto l00401C1C
update_interval_exit:


void write_stdout(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pinger
//      gather_statistics
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
write_stdout_entry:
l00401C60:
	r16_13 = 0<32>
l00401C66:
	r4_28 = write()
	r16_13 = r16_13 + r4_28
	branch r16_13 <u r5 l00401C66
l00401C76:
	branch r4_28 < 0<32> l00401C66
l00401C7A:
	return
write_stdout_exit:


void set_signal(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0040271C
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
set_signal_entry:
l00401C7C:
	memset(&tLoc9C, 0<32>, 0x8C<32>, out r6_53, out r7_54, out r8_55, out r10_56)
	Mem27[&tLoc9C:word32] = r5
	__sigaction(r4, &tLoc9C, 0<32>)
	return
set_signal_exit:


void sigexit(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r28 r3 r30 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
sigexit_entry:
l00401C98:
	Mem8[0x004544B8<p32>:word32] = 1<32>
	branch Mem8[0x004314C0<p32>:word32] != 0<32> l00401CAC
l00401CAA:
	return
l00401CAC:
	_longjmp(0<32>)
l00401CB2_thunk_limit_capabilities:
	limit_capabilities(r0)
	return
sigexit_exit:


word32 limit_capabilities(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      sigexit
// MayUse:  r0:[0..31]
// LiveOut: r8:[0..31]-main
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
limit_capabilities_entry:
l00401CB6:
	Mem15[0x00454514<p32>:word32] = fn00401E82()
	Mem24[0x004544B4<p32>:word32] = geteuid()
	seteuid(r0, out r3_126, out r4_32, out r6_127, out r7_128, out r8_36, out r17_129)
	branch r4_32 != 0<32> l00401CD8
l00401CD6:
	return r8_36
l00401CD8:
	fn00401E7A(0x00411278<p32>, out r3_130, out r6_131, out r7_132, out r8_133, out r11_134, out r12_135, out r17_136)
	r4_59 = fn00401E7E(out r5_137, out r6_138, out r7_139)
l00401CE0_thunk_modify_capability:
	modify_capability(r0, r4_59, out r3_140, out r4_141, out r6_142, out r7_143, out r8_92, out r11_144, out r12_145, out r17_146)
	return r8_92
limit_capabilities_exit:


word32 modify_capability(word32 r0, word32 r4, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      ping4_run
//      limit_capabilities
//      setup
//      ping6_run
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-ping4_run r12:[0..31]-main r17:[0..31]-setup r2:[0..31]-main r3:[0..31]-main r4:[0..31]-main r6:[0..31]-main r7:[0..31]-main r8:[0..31]-limit_capabilities
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
modify_capability_entry:
l00401CE2:
	branch r4 != 0<32> l00401CF0
l00401CEC:
	fn00401E82()
l00401CF0:
	r2_24 = seteuid(r0, out r3_26, out r4_27, out r6_29, out r7_30, out r8_31, out r17_23)
	branch r4_27 != 0<32> l00401CF8
l00401CF6:
	r3Out = r3_26
	r4Out = r4_27
	r6Out = r6_29
	r7Out = r7_30
	r8Out = r8_31
	r11Out = r11
	r12Out = r12
	r17Out = r17_23
	return r2_24
l00401CF8:
	r2_24 = fn00401E7A(0x00411288<p32>, out r3_26, out r6_29, out r7_30, out r8_31, out r11, out r12, out r17_23)
	r4_27 = 0xFFFFFFFF<32>
	goto l00401CF6
modify_capability_exit:


word32 drop_capabilities(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_run
// MayUse:  r0:[0..31]
// LiveOut: r3:[0..31]-ping6_run
// Trashed: hi lo r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: r11 r12 r13 r14 r15 r24 ra
drop_capabilities_entry:
l00401D02:
	fn00401E82()
	r3_20 = setuid(r0, out r4_21)
	branch r4_21 != 0<32> l00401D0E
l00401D0C:
	return r3_20
l00401D0E:
	fn00401E7A(0x00411278<p32>, out r3_112, out r6_113, out r7_114, out r8_115, out r11_116, out r12_117, out r17_118)
	fn00401E7E(out r5_119, out r6_120, out r7_121)
l00401D16_thunk_fill:
	return fill(r0, r4, r5, r6)
drop_capabilities_exit:


word32 fill(word32 r0, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      drop_capabilities
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r3:[0..31]-drop_capabilities
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
fill_entry:
l00401D18:
	r16_23 = r4
l00401D20:
	r4_26 = CONVERT(Mem15[r16_23:byte], byte, word32)
	branch r4_26 != 0<32> l00401D92
l00401D24:
	r3_119 = __isoc99_sscanf(r0, r4, 0x004112C4<p32>, r6, r4, out r4_120)
	r6_126 = 0<32>
	branch r4_120 > 0<32> l00401DC0
l00401D72:
	branch !__bit<word32,word32>(Mem146[0x004544EC<p32>:word32], 4<32>) l00401D90
l00401D7C:
	fn0040212A(0x004112F8<p32>, out r11_363)
	r17_152 = r5
l00401D84:
	branch r17_152 - r5 < r4_120 l00401DCC
l00401D8A:
	r3_119 = putchar(0xA<32>, out r17_365)
l00401D90:
	return r3_119
l00401D92:
	branch isxdigit(r4_26) != 0<32> l00401DA8
l00401D98:
	fn00402126(0x00411290<p32>, Mem15[0x00412EF0<p32>:word32])
	fn00401E7E(out r5_366, out r6_367, out r7_368)
l00401DA8:
	r16_23 = r16_23 + 1<32>
	goto l00401D20
l00401DAC:
	r7_133 = 0<32>
l00401DAE:
	Mem143[r5 + (r7_133 + r6_126) + 8<i32>:byte] = Mem138[fp - 0x60<32> + r7_133 * 4<32>:byte]
	r7_133 = r7_133 + 1<32>
	branch r7_133 != r4_120 l00401DAE
l00401DBE:
	r6_126 = r6_126 + r4_120
l00401DC0:
	branch r6 + 0xFFFFFFF8<32> - r4_120 >=u r6_126 l00401DAC
l00401DCA:
	goto l00401D72
l00401DCC:
	fn0040212A(0x00411304<p32>, out r11_364)
	r17_152 = r17_152 + 1<32>
	goto l00401D84
fill_exit:


word32 __schedule_exit(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-main_loop
// Trashed: hi lo r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__schedule_exit_entry:
l00401DDA:
	r16_11 = r4
	branch Mem7[0x00454548<p32>:word32] != 0<32> l00401E4A
l00401DE6:
	branch Mem7[0x004544DC<p32>:word32] == 0<32> l00401E4E
l00401DEE:
	r7_17 = Mem7[0x0043008C<p32>:word32]
	r6_19 = Mem7[0x0045450C<p32>:word32]
	Mem21[0x00454548<p32>:word32] = r6_19 << 1<32>
	r7_15 = r7_17 *s 0x3E8<32>
	r6_13 = r6_19 << 1<32>
	branch r6_19 << 1<32> >=u r7_17 *s 0x3E8<32> l00401E12
l00401E0C:
	Mem23[0x00454548<p32>:word32] = r7_15
l00401E12:
	branch r4 < 0<32> l00401E28
l00401E24:
	branch r4 >=u r6_13 l00401E2A
l00401E28:
	r16_11 = r6_13
l00401E2A:
	setitimer()
l00401E4A:
	return r16_11
l00401E4E:
	r6_13 = 0x3E8<32>
	r7_15 = Mem7[0x00430084<p32>:word32] *s 0x3E8<32>
	goto l00401E0C
__schedule_exit_exit:


word32 print_timestamp(word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
//      pinger
//      gather_statistics
//      if_name2index
//      fn004033EA
// MayUse: 
// LiveOut: r11:[0..31]-if_name2index r4:[0..31]-if_name2index
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
print_timestamp_entry:
l00401E5C:
	branch __bit<word32,word32>(Mem5[0x004544EC<p32>:word32], 0x13<32>) l00401E78
l00401E68:
	fn004021B0(fp - 0x18<32>, out r4_88, out r6_89, out r17_90)
	r4 = fn0040212A(0x0041130C<p32>, out r11)
l00401E78:
	r11Out = r11
	return r4
print_timestamp_exit:


word32 fn00401E7A(word32 r4, word32 & r3Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      limit_capabilities
//      modify_capability
//      drop_capabilities
//      pinger
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-modify_capability r12:[0..31]-modify_capability r17:[0..31]-modify_capability r2:[0..31]-modify_capability r3:[0..31]-modify_capability r6:[0..31]-modify_capability r7:[0..31]-modify_capability r8:[0..31]-modify_capability
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401E7A_entry:
l00401E7A:
l00401E7A_thunk_perror:
	r2_13 = perror(r4, out r3_16, out r5_31, out r6_19, out r7_20, out r8_21, out r11_8, out r12_9, out r17_23)
	r3Out = r3_16
	r6Out = r6_19
	r7Out = r7_20
	r8Out = r8_21
	r11Out = r11_8
	r12Out = r12_9
	r17Out = r17_23
	return r2_13
fn00401E7A_exit:


word32 fn00401E7E(word32 & r5Out, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      limit_capabilities
//      drop_capabilities
//      fill
//      setup
// MayUse: 
// LiveOut: r4:[0..31]-limit_capabilities r5:[0..31]-setup r6:[0..31]-setup r7:[0..31]-setup
// Trashed: r17 r25
// Preserved: sp
fn00401E7E_entry:
l00401E7E:
l00401E7E_thunk_exit:
	exit()
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	return <invalid>
fn00401E7E_exit:


word32 fn00401E82()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      limit_capabilities
//      modify_capability
//      drop_capabilities
// MayUse: 
// LiveOut: r4:[0..31]-limit_capabilities
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401E82_entry:
l00401E82:
l00401E82_thunk_getuid:
	return getuid()
fn00401E82_exit:


word32 pinger(word32 r0, word32 r4, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r12:[0..31]-main_loop r4:[0..31]-main_loop
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
pinger_entry:
l00401E86:
	r16_17 = r4
	r4_20 = 0x3E8<32>
	branch Mem13[0x004544B8<p32>:word32] != 0<32> l004020FC
l00401E98:
	r7_21 = Mem13[0x004544D8<p32>:word32]
	branch r7_21 == 0<32> l00401EB4
l00401EA0:
	branch Mem13[0x004544E4<p32>:word32] < r7_21 l00401EB4
l00401EAA:
	branch Mem13[0x004314C8<p32>:word32] == 0<32> l004020FC
l00401EB4:
	branch Mem13[0x00454490<p32>:word32] != 0<32> l00401F8C
l00401EC4:
	fn004021B0(0x00454490<p32>, out r4_817, out r6_818, out r17_106)
	Mem120[0x00454544<p32>:word32] = (Mem13[0x00430088<p32>:word32] + 0xFFFFFFFF<32>) *s Mem13[0x0043008C<p32>:word32]
l00401EE0:
	branch __bit<word32,word32>(Mem121[0x004544EC<p32>:word32], 0x14<32>) l00401F2A
l00401EEA:
	r6_123 = Mem121[0x004544E4<p32>:word32]
	branch r6_123 <= 0<32> l00401F2A
l00401EF4:
	branch (1<32> << r6_123 & Mem121[0x00452340<p32> + __ext<word32,word32>(r6_123, 5<32>, 0xB<32>) * 4<32>:word32]) != 0<32> l00401F2A
l00401F08:
	print_timestamp(out r11_819)
	printf(0x0041131C<p32>, out r4_820, out r7_821, out r11_822, out r14_823)
	fflush_unlocked(Mem121[0x00412EF4<p32>:word32], out r16_17, out r17_106)
l00401F2A:
	call Mem185[r16_17:word32] (retsize: 0;)
		uses: Mem:Mem185,r10:r10_201,r11:r11_205,r12:r12_206,r13:r13_207,r14:r14_208,r15:r15_209,r2:r2_203,r24:r24_210,r3:r3_204,r4:r17_189,r5:0x00432F40<p32>,r6:0x1F400<32>,r8:r8_199,r9:r9_200,Stack +0008:dwLoc28,Stack +000C:dwLoc24
		defs: r10:r10_201,r11:r11_205,r12:r12_206,r13:r13_207,r14:r14_208,r15:r15_209,r2:r2_203,r24:r24_210,r3:r3_204,r4:r4_196,r5:r5_197,r8:r8_199,r9:r9_200
	branch r4_196 == 0<32> l00402002
l00401F40:
	branch r4_196 > 0<32> l00402054
l00401F44:
	branch Mem185[fn004021AC():word32] == 0x29<32> l00402058
l00401F4C:
	branch Mem185[fn004021AC():word32] == 0xC<32> l00402058
l00401F54:
	branch Mem185[fn004021AC():word32] == 0xB<32> l00402106
l00401F5C:
	call Mem185[r16_17 + 4<i32>:word32] (retsize: 0;)
		uses: Mem:Mem185,r10:r10_321,r11:r11_325,r12:r12_326,r13:r13_327,r14:r14_328,r15:r15_329,r2:r2_323,r24:r24_330,r3:r3_324,r4:r17_189,r5:r5_197,r6:r6_318,r8:r8_319,r9:r9_320,Stack +0008:dwLoc28,Stack +000C:dwLoc24
		defs: r10:r10_321,r11:r11_325,r12:r12_326,r13:r13_327,r14:r14_328,r15:r15_329,r2:r2_323,r24:r24_330,r3:r3_324,r4:r4_316,r6:r6_318,r8:r8_319,r9:r9_320
	r18_331 = r4_316
	branch r4_316 > 0<32> l004020C4
l00401F68:
	branch r4_316 != 0<32> l00401F84
l00401F6A:
	branch Mem185[0x00430080<p32>:word32] == 0<32> l00401F84
l00401F72:
	branch Mem185[fn004021AC():word32] != 0x16<32> l00401F84
l00401F7A:
	Mem338[0x00430080<p32>:word32] = r0
	fn004021AC()
l00401F84:
	branch Mem346[fn004021AC():word32] == 0<32> l00401F2A
l00401F8A:
	goto l004020C6
l00401F8C:
	fn004021B0(fp - 0x28<32>, out r4_37, out r6_815, out r17_816)
	r8_43 = Mem13[0x00454490<p32>:word32]
	r7_46 = 0x00454490<p32>
	r9_51 = Mem13[0x00430088<p32>:word32]
	r5_55 = Mem13[0x0043008C<p32>:word32]
	r8_57 = r8_43 + (r4_37 - r8_43) *s 0x3E8<32>
	branch r5_55 != 0<32> l00401FD4
l00401FC0:
	branch r8_57 >= 0xA<32> l00401FD4
l00401FC4:
	branch in_flight(out r7_46) < r9_51 l00401FD4
l00401FCC:
	r12Out = r12
	return 0xA<32> - r8_57
l00401FD4:
	r9_64 = r9_51 *s r5_55
	r4_68 = Mem13[0x00454544<p32>:word32] + r8_57
	branch r4_68 < r9_64 l00401FE6
l00401FE2_1:
	r4_68 = r9_64
l00401FE6:
	branch r4_68 >= r5_55 l00401FEE
l00401FEA:
	r12Out = r12
	return r5_55 - r4_68
l00401FEE:
	Mem78[0x00454544<p32>:word32] = r4_68 - r5_55
	Mem83[0x00454490<p32>:word32] = r7_46
	Mem87[0x00454491<p32>:word32] = r7_46
	r17_106 = dwLoc24
	goto l00401EE0
l00402002:
	Mem212[0x00454540<p32>:word32] = r0
	advance_ntransmitted()
	branch (Mem212[0x004544EC<p32>:word32] & 0x11<32>) != 1<32> l00402044
l0040201A:
	r5_220 = Mem212[0x00430070<p32>:word32]
	branch Mem212[0x00430088<p32>:word32] >= r5_220 l00402034
l0040202A:
	branch Mem212[0x00430078<p32>:word32] < r5_220 l0040203C
l00402034:
	branch in_flight(out r7_824) >= r5_220 l00402044
l0040203C:
	write_stdout(1<32>)
l00402044:
	r4_245 = Mem212[0x0043008C<p32>:word32] - Mem212[0x00454544<p32>:word32]
	r12Out = r12
	return r4_245
l00402054:
	abort(r0)
l00402058:
	r7_264 = Mem185[0x004544F4<p32>:word32]
	Mem267[0x00454544<p32>:word32] = r0
	r6_265 = 0x61A7F<32>
	branch r7_264 <= 0x61A7F<32> l004020FE
l0040206E:
	r6_265 = 0xC350<32>
l00402072:
	Mem276[0x004544F8<p32>:word32] = Mem267[0x004544F8<p32>:word32] + r6_265
	branch __bit<word32,word32>(Mem276[0x004544EC<p32>:word32], 0xE<32>) l0040208E
l0040208A:
	update_interval()
l0040208E:
	r7_285 = Mem276[0x0043008C<p32>:word32]
	r4_20 = 0xA<32>
	branch r7_285 < 0x16<32> l004020AA
l0040209A:
	r4_20 = r7_285 >> 1<32>
	branch r7_285 >> 1<32> < 0x1F5<32> l004020AA
l004020A6_1:
	r4_20 = 0x1F4<32>
l004020AA:
	r7_292 = Mem276[0x00454540<p32>:word32]
	r6_294 = Mem276[0x00430084<p32>:word32]
	Mem295[0x00454540<p32>:word32] = r7_292 + 1<32>
	branch (r7_292 + 1<32>) *s r4_20 < r6_294 l004020FC
l004020C4:
	r18_331 = 0<32>
l004020C6:
	advance_ntransmitted()
	branch r18_331 != 0<32> l004020E4
l004020CC:
	r7_357 = Mem355[0x004544EC<p32>:word32]
	branch !__bit<word32,word32>(r7_357, 4<32>) l004020E4
l004020D6:
	branch __bit<word32,word32>(r7_357, 0<32>) l0040211E
l004020DA:
	write_stdout(1<32>)
l004020E4:
	r7_391 = Mem355[0x0043008C<p32>:word32]
	Mem401[0x00454544<p32>:word32] = r0
	r6_392 = 0xA<32>
	branch r7_391 < 0xA<32> l004020FA
l004020F6_1:
	r6_392 = r7_391
l004020FA:
	r4_20 = r6_392
l004020FC:
	r12Out = r12
	return r4_20
l004020FE:
	goto l00402072
l00402106:
	Mem306[0x00454544<p32>:word32] = Mem185[0x00454544<p32>:word32] + Mem185[0x0043008C<p32>:word32]
	r12Out = r12
	return 0xA<32>
l0040211E:
	fn00401E7A(0x00411340<p32>, out r3_825, out r6_826, out r7_827, out r8_828, out r11_829, out r12, out r17_830)
	goto l004020E4
pinger_exit:


word32 fn00402126(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fill
//      sock_setbufs
//      setup
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-sock_setbufs
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402126_entry:
l00402126:
l00402126_thunk_fputs_unlocked:
	fputs_unlocked(r4, r5, out r3_24, out r4_25, out r5_26, out r6_27, out r8_28, out r11_9, out r12_29)
	return r11_9
fn00402126_exit:


word32 fn0040212A(word32 r4, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fill
//      print_timestamp
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-print_timestamp r4:[0..31]-print_timestamp
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040212A_entry:
l0040212A:
l0040212A_thunk_printf:
	printf(r4, out r4_17, out r7_24, out r11_8, out r14_25)
	r11Out = r11_8
	return r4_17
fn0040212A_exit:


word32 sock_setbufs(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r5:[0..31]
// LiveOut: r11:[0..31]-ping4_run
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
sock_setbufs_entry:
l0040212E:
	branch Mem12[0x004544FC<p32>:word32] != 0<32> l00402144
l0040213E:
	Mem18[0x004544FC<p32>:word32] = r5
l00402144:
	fn004023EE()
	r16_38 = r5 *s Mem20[0x00430088<p32>:word32]
	branch r16_38 <= 0xFFFF<32> l004021A6
l00402168:
l0040216A:
	fn004023EE()
	branch getsockopt(out r7_74) != 0<32> l004021A4
l00402192:
	branch r7_74 >= r16_38 l004021A4
l00402198:
	r11 = fn00402126(0x00411350<p32>, Mem45[0x00412EF0<p32>:word32])
l004021A4:
	return r11
l004021A6:
	goto l0040216A
sock_setbufs_exit:


word32 fn004021AC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pinger
// MayUse: 
// LiveOut: r4:[0..31]-pinger
// Trashed: r25 r3 r4
// Preserved: sp
fn004021AC_entry:
l004021AC:
l004021AC_thunk___errno_location:
	__errno_location(out r4_6)
	return r4_6
fn004021AC_exit:


word32 fn004021B0(word32 r4, word32 & r4Out, word32 & r6Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      print_timestamp
//      pinger
//      setup
//      gather_statistics
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-pinger r3:[0..31]-setup r4:[0..31]-pinger r6:[0..31]-pinger
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004021B0_entry:
l004021B0:
l004021B0_thunk_gettimeofday:
	r3_11 = gettimeofday(r4, out r4_6, out r6_13, out r17_9)
	r4Out = r4_6
	r6Out = r6_13
	r17Out = r17_9
	return r3_11
fn004021B0_exit:


word32 setup(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r3:[0..31]-ping4_run
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 ra sp
setup_entry:
l004021B4:
	r7_11 = Mem9[0x004544EC<p32>:word32]
	branch (r7_11 & 3<32>) != 1<32> l004021CA
l004021C4:
	Mem16[0x0043008C<p32>:word32] = r0
l004021CA:
	r5_18 = Mem17[0x00454514<p32>:word32]
	r6_19 = Mem17[0x0043008C<p32>:word32]
	branch r5_18 == 0<32> l004021F4
l004021D8:
	r5_18 = 0xC7<32>
	branch r6_19 > 0xC7<32> l004021F4
l004021E0:
	fn004023F2()
l004021F0:
	fn00401E7E(out r5_18, out r6_19, out r7_11)
l004021F4:
	wLoc9E_484 = wLoc9E (alias)
	Mem40 = Mem17 (alias)
	branch r6_19 < r5_18 l00402216
l00402208:
	fn00402126(0x004113CC<p32>, Mem40[0x00412EF0<p32>:word32])
	goto l004021F0
l00402216:
	branch __bit<word32,word32>(r7_11, 6<32>) l0040222E
l0040221E:
	fn004023EE()
l0040222E:
	branch __bit<word32,word32>(Mem50[0x004544EC<p32>:word32], 7<32>) l0040224A
l00402238:
	fn004023EE()
l0040224A:
	branch !__bit<word32,word32>(Mem50[0x004544EC<p32>:word32], 0xC<32>) l00402276
l00402254:
	branch fn004023EE() == 0<32> l00402276
l0040226A:
	fn00402126(0x004113F4<p32>, Mem94[0x00412EF0<p32>:word32])
l00402276:
	branch __bit<word32,word32>(Mem129[0x004544EC<p32>:word32], 0x12<32>) l004022B6
l00402280:
	modify_capability(r0, 1<32>, out r3_587, out r4_588, out r6_589, out r7_590, out r8_591, out r11_592, out r12_593, out r17_594)
	fn004023EE()
	modify_capability(r0, 0<32>, out r3_595, out r4_596, out r6_597, out r7_598, out r8_599, out r11_600, out r12_601, out r17_182)
	branch r17_182 != 0xFFFFFFFF<32> l004022B6
l004022A4:
	fn004023F2()
l004022B6:
	r6_202 = Mem129[0x0043008C<p32>:word32]
	branch r6_202 > 0x3E7<32> l004022E0
l004022CA:
	branch r6_202 < 0xA<32> l004022D4
l004022D0_1:
l004022D4:
l004022E0:
	fn004023EE()
	branch Mem221[0x0043008C<p32>:word32] < 0xA<32> l00402304
l00402300_1:
l00402304:
	branch fn004023EE() == 0<32> l00402340
l00402330:
	Mem270[0x004544EC<p32>:word32] = Mem256[0x004544EC<p32>:word32] | 0x800<32>
l00402340:
	r7_272 = Mem271[0x004544EC<p32>:word32]
	r7_273 = r7_272 & 8<32>
	r5_274 = Mem271[0x00430074<p32>:word32]
	branch (r7_272 & 8<32>) == 0<32> l004023E8
l00402352:
	branch Mem284[r4 + 4<i32>:word32] != 3<32> l00402368
l00402358:
	getpid(out r4_289)
	Mem298[0x004544C4<p32>:word32] = htons(r4_289 & 0xFFFF<32>)
l00402368:
	fn0040271C(2<32>, 0x00401C98<p32>)
	fn0040271C(0xE<32>, 0x00401C98<p32>)
	fn0040271C(3<32>, 0x00401C04<p32>)
	sigemptyset()
	sigprocmask(2<32>, 0<32>)
	r3_379 = fn004021B0(0x00454498<p32>, out r4_602, out r6_603, out r17_604)
	branch Mem386[0x004314C8<p32>:word32] == 0<32> l004023B2
l004023A0:
	wLoc9E_484 = 0<u16> (alias)
	r3_379 = setitimer()
l004023B2:
	branch isatty() == 0<32> l004023D8
l004023BA:
	r3_379 = ioctl(out r4_420, out r7_605)
	branch r4_420 == 0xFFFFFFFF<32> l004023D8
l004023CC:
	r7_428 = CONVERT(wLoc9E_484, uint16, word32)
	branch r7_428 == 0<32> l004023D8
l004023D2:
	Mem429[0x00430070<p32>:word32] = r7_428
l004023D8:
	return r3_379
l004023DA:
	Mem279[r7_273 + 0x00432F40<p32> + 8<i32>:byte] = SLICE(r7_273, byte, 0)
	r7_273 = r7_273 + 1<32>
l004023E8:
	branch r7_273 < r5_274 l004023DA
l004023EC:
	goto l00402352
setup_exit:


word32 fn004023EE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sock_setbufs
//      setup
// MayUse: 
// LiveOut: r4:[0..31]-setup
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004023EE_entry:
l004023EE:
l004023EE_thunk_setsockopt:
	setsockopt(out r3_14, out r4_8, out r5_15, out r7_16)
	return r4_8
fn004023EE_exit:


void fn004023F2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setup
//      gather_statistics
// MayUse: 
// LiveOut:
// Trashed: r25 r6 r7
// Preserved: sp
fn004023F2_entry:
l004023F2:
l004023F2_thunk_fprintf:
	fprintf(out r7_7)
	return
fn004023F2_exit:


word32 gather_statistics(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_parse_reply
//      ping6_parse_reply
// MayUse:  r10:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31]
// LiveOut: r4:[0..31]-ping6_parse_reply
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
gather_statistics_entry:
l004023F6:
	Mem43[0x004544DC<p32>:word32] = Mem23[0x004544DC<p32>:word32] + 1<32>
	r17_38 = r10
	r20_42 = r4 + r5
	branch r9 != 0<32> l0040245C
l0040241A:
	r7_44 = Mem43[0x004544E4<p32>:word32]
	r5_45 = r7_44 - r7
	branch !__bit<word32,word32>(r5_45, 0xF<32>) l0040245C
l00402428:
	branch (r5_45 & 0xFFFF<32>) < Mem43[0x00430078<p32>:word32] l0040243A
l00402432:
	Mem49[0x00430078<p32>:word32] = (r5_45 & 0xFFFF<32>) + 1<32>
l0040243A:
	r4_52 = CONVERT(Mem51[0x00454518<p32>:uint16], uint16, word32)
	branch SLICE(r7 - r4_52, word16, 0) > 0<16> l00402458
l0040244C:
	branch (r7_44 & 0xFFFF<32>) - r4_52 <= 0x7FFF<32> l0040245C
l00402458:
	Mem63[0x00454518<p32>:word16] = SLICE(r7, word16, 0)
l0040245C:
	r22_122 = 0<32>
	branch Mem64[0x00454508<p32>:word32] == 0<32> l004025DC
l00402468:
	branch r6 <u 0x10<32> l004025DC
l0040246C:
	memcpy(fp - 0x38<32>, r20_42, 8<32>, out r3_1336, out r5_1337, out r6_103, out r7_1338, out r8_1339, out r9_1340, out r11_1341, out r12_1342, out r13_1343, out r14_1344)
	goto l004024C2
l00402478:
	r8_117 = Mem112[dwLoc34:word32] - r7_104
	Mem119[dwLoc38:word32] = r8_117
	r22_122 = r8_117 *s 0xF4240<32> + Mem119[dwLoc38 + 4<i32>:word32]
	branch r22_122 >= 0<32> l004024E0
l00402494:
	fn004023F2()
	branch !__bit<word32,word32>(Mem119[0x004544EC<p32>:word32], 0xC<32>) l004024DE
l004024AC:
	fn004021B0(dwLoc38, out r4_1345, out r6_1346, out r17_38)
	Mem673[0x004544EC<p32>:word32] = Mem119[0x004544EC<p32>:word32] | 0x1000<32>
	r6_103 = 0x1000<32>
l004024C2:
	r7_104 = Mem99[r17_38 + 4<i32>:word32] - r6_103
	branch r7_104 >= 0<32> l00402478
l004024CE:
	Mem109[dwLoc34:word32] = Mem105[dwLoc34:word32] + 0xFFFFFFFF<32>
	Mem110[dwLoc34 + 4<i32>:word32] = r7_104 + 0xF4240<32>
	r7_104 = r7_104 + 0xF4240<32>
	goto l00402478
l004024DE:
	r22_122 = 0<32>
l004024E0:
	branch r9 != 0<32> l004025DE
l004024E4:
	r7_146 = Mem119[0x00454480<p32>:word32]
	r17_148 = r7_146 + r22_122
	r7_151 = CONVERT(r17_148 <u r7_146, bool, word32) + (Mem119[0x00454484<p32>:word32] + (r22_122 >> 0x1F<32>))
	Mem152[0x00454480<p32>:word32] = r17_148
	Mem153[0x00454484<p32>:word32] = r7_151
	r7_157 = Mem153[0x00454488<p32>:word32]
	r6_159 = r7_157 + r22_122 *s r22_122
	r7_162 = CONVERT(r6_159 <u r7_157, bool, word32) + (Mem153[0x0045448C<p32>:word32] + SLICE(r22_122 *s64 r22_122, word32, 32))
	Mem163[0x00454488<p32>:word32] = r6_159
	Mem164[0x0045448C<p32>:word32] = r7_162
	branch r22_122 >= Mem164[0x0043007C<p32>:word32] l0040253E
l00402538:
	Mem166[0x0043007C<p32>:word32] = r22_122
l0040253E:
	branch Mem167[0x0045450C<p32>:word32] >= r22_122 l0040254E
l00402548:
	Mem170[0x0045450C<p32>:word32] = r22_122
l0040254E:
	r6_172 = Mem171[0x004544F4<p32>:word32]
	r7_174 = r22_122 << 3<32>
	branch r6_172 == 0<32> l00402566
l0040255A:
	r7_174 = r22_122 - r7_174 + r6_172
l00402566:
	Mem181[0x004544F4<p32>:word32] = r7_174
	branch __bit<word32,word32>(Mem181[0x004544EC<p32>:word32], 0xE<32>) l0040257A
l00402576:
	update_interval()
l0040257A:
	r7_200 = 0x00452340<p32> + ((r7 >>u 5<32>) << 2<8>)
	r16_202 = 1<32> << r7
	r6_204 = Mem203[r7_200:word32]
	branch (r6_204 & r16_202) == 0<32> l004025FE
l00402592:
	Mem211[0x004544E0<p32>:word32] = Mem203[0x004544E0<p32>:word32] + 1<32>
	Mem214[0x004544DC<p32>:word32] = Mem211[0x004544DC<p32>:word32] + 0xFFFFFFFF<32>
l004025AE:
	Mem219[0x004314C4<p32>:word32] = Mem215[0x00430080<p32>:word32]
	r16_218 = 1<32>
	r7_220 = Mem219[0x004544EC<p32>:word32]
	branch !__bit<word32,word32>(r7_220, 4<32>) l004025D8
l004025C6:
	r16_218 = r7_220 & 1<32>
	branch (r7_220 & 1<32>) == 0<32> l0040260C
l004025CA:
	branch r9 != 0<32> l00402604
l004025CC:
	r5_605 = 3<32>
l004025D2:
	write_stdout(r5_605)
	r16_218 = 0<32>
l004025D8:
	return r16_218
l004025DC:
	branch r9 == 0<32> l0040257A
l004025DE:
	Mem139[0x004544CC<p32>:word32] = Mem134[0x004544CC<p32>:word32] + 1<32>
	Mem142[0x004544DC<p32>:word32] = Mem139[0x004544DC<p32>:word32] + 0xFFFFFFFF<32>
l004025FA:
	goto l004025AE
l004025FE:
	Mem207[r7_200:word32] = r16_202 | r6_204
	goto l004025FA
l00402604:
	r5_605 = 2<32>
	goto l004025D2
l0040260C:
	print_timestamp(out r11_1347)
	printf(0x004114A0<p32>, out r4_1348, out r7_284, out r11_1349, out r14_1350)
	branch r7_284 == 0<32> l00402622
l0040261E:
	call r7_284 (retsize: 0;)
		uses: r4:r4
l00402622:
	branch r8 < 0<32> l0040262E
l00402626:
	printf(0x004114B4<p32>, out r4_1351, out r7_1352, out r11_1353, out r14_1354)
l0040262E:
	branch Mem219[0x00430074<p32>:word32] + 7<32> < r6 l00402646
l0040263A:
	puts(0x004114BC<p32>)
	r16_218 = 1<32>
	goto l004025D8
l00402646:
	branch Mem219[0x00454508<p32>:word32] == 0<32> l00402668
l0040264E:
	branch r22_122 <= 0x1869F<32> l004026CA
l00402658:
	printf(0x004114CC<p32>, out r4_1355, out r7_1356, out r11_1357, out r14_1358)
l00402668:
	branch dwArg00 == 0<32> l00402670
l0040266A:
	fn004029C6(0x00411518<p32>, out r11_1359, out r14_1360)
l00402670:
	branch r9 == 0<32> l00402678
l00402672:
	fn004029C6(0x00411520<p32>, out r11_1363, out r14_1364)
l00402678:
	r4_504 = Mem219[0x00430074<p32>:word32]
	r5_505 = 8<32>
l00402680:
	branch r5_505 >= r4_504 l004025D8
l00402684:
	branch CONVERT(Mem219[r5_505 + 0x00432F40<p32> + 8<i32>:byte], byte, word32) == CONVERT(Mem219[r20_42 + r5_505:byte], byte, word32) l00402718
l00402698:
	fn004029C6(0x00411534<p32>, out r11_1365, out r14_1366)
	r17_516 = 8<32>
l004026A0:
	branch r17_516 >= Mem219[0x00430074<p32>:word32] l004025D8
l004026AA:
	branch r17_516 %s 0x20<32> != 8<32> l004026BC
l004026B4:
	printf(0x00411568<p32>, out r4_1369, out r7_1370, out r11_1371, out r14_1372)
l004026BC:
	fn004029C6(0x00411570<p32>, out r11_1367, out r14_1368)
	r17_516 = r17_516 + 1<32>
	goto l004026A0
l004026CA:
	branch r22_122 <= 0x270F<32> l004026EE
l004026D2:
	r4_386 = 0x004114DC<p32>
l004026EA:
	fn004029C6(r4_386, out r11_1361, out r14_1362)
	goto l00402668
l004026EE:
	branch r22_122 <= 0x3E7<32> l00402710
l004026F6:
	r4_386 = 0x004114F0<p32>
	goto l004026EA
l00402710:
	r4_386 = 0x00411504<p32>
	goto l004026EA
l00402718:
	r5_505 = r5_505 + 1<32>
	goto l00402680
gather_statistics_exit:


void fn0040271C(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setup
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040271C_entry:
l0040271C:
l0040271C_thunk_set_signal:
	set_signal(r4, r5)
	return
fn0040271C_exit:


void finish(word64 r22_r19, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse:  r21:[0..31] Sequence r22:r19:[0..63]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
finish_entry:
l00402720:
	sp_24 = fp - 80<i32>
	r20_31 = Mem23[0x00454491<p32>:word32] - Mem23[0x0045449C<p32>:word32]
	branch r20_31 >= 0<32> l00402746
l0040273E:
	r20_33 = r20_31 + 0xF4240<32>
l00402746:
	fn00402A96(0xA<32>)
	fflush_unlocked(Mem23[0x00412EF4<p32>:word32], out r16_51, out r17_727)
	fn004029C6(0x00411578<p32>, out r11_728, out r14_729)
	fn004029C6(0x00411594<p32>, out r11_730, out r14_731)
	r3_115 = fn004029C6(0x004115B0<p32>, out r11_107, out r14_110)
	branch Mem23[0x004544E0<p32>:word32] == 0<32> l00402790
l0040278A:
	r3_135 = fn004029C6(0x004115C0<p32>, out r11_127, out r14_130)
l00402790:
	branch Mem23[0x004544CC<p32>:word32] == 0<32> l0040279E
l00402798:
	r3_156 = fn004029C6(0x004115D4<p32>, out r11_148, out r14_151)
l0040279E:
	branch Mem23[0x004544D0<p32>:word32] == 0<32> l004027AC
l004027A6:
	r3_177 = fn004029C6(0x004115E8<p32>, out r11_169, out r14_172)
l004027AC:
	r6_185 = Mem23[0x004544E4<p32>:word32]
	branch r6_185 == 0<32> l004027E6
l004027B4:
	r4_188 = r6_185 - Mem23[0x004544DC<p32>:word32]
	fn00402A9A(r4_188 *s64 0x64<32>, r3_193, r6_185, r6_185 >> 0x1F<32>, out r4_732, out r5_733, out r11_734)
	fn004029C6(0x004115F8<p32>, out r11_735, out r14_736)
	fn004029C6(0x0041160C<p32>, out r11_247, out r14_250)
l004027E6:
	r3_267 = fn00402A96(0xA<32>)
	r17_275 = Mem23[0x004544DC<p32>:word32]
	r22_r19_723 = r22_r19 (alias)
	branch r17_275 == 0<32> l00402908
l004027F8:
	r22_r19_724 = r22_r19 (alias)
	branch Mem23[0x00454508<p32>:word32] == 0<32> l00402908
l00402802:
	r17_279 = r17_275 + Mem23[0x004544E0<p32>:word32]
	r3_294 = fn00402A9A(Mem23[0x00454480<p32>:ui64], r3_267, r17_279, r17_279 >> 0x1F<32>, out r4_295, out r5_296, out r11_737)
	Mem303[0x00454480<p32>:word32] = r4_295
	Mem304[0x00454484<p32>:word32] = r5_296
	r3_319 = fn00402A9A(Mem304[0x00454488<p32>:ui64], r3_294, r17_279, r17_279 >> 0x1F<32>, out r4_320, out r5_321, out r11_314)
	Mem329[0x00454488<p32>:word32] = r4_320
	Mem330[0x0045448C<p32>:word32] = r5_321
	r21_331 = r4_320 - r4_295 *s r4_295
	r19_301 = r4_295
	r22_302 = r5_296
	r17_335 = r5_321 - (SLICE(r4_295 *u64 r4_295, word32, 32) + (r5_296 *s r4_295 << 1<8>)) - CONVERT(r4_320 <u r21_331, bool, word32)
	branch r17_335 > 0<32> l00402868
l00402860:
	r22_r19_719 = SEQ(r5_296, r4_295) (alias)
	branch r17_335 != 0<32> l004029C2
l00402864:
	r22_r19_720 = SEQ(r5_296, r4_295) (alias)
	branch r21_331 == 0<32> l004029C2
l00402868:
	r23_r18_709 = SEQ(r17_335, r21_331) (alias)
	r7_r4_712 = 0x7FFFFFFFFFFFFFFF<64> (alias)
	goto l004028A4
l00402876:
	r6_374 = r4_368 + r18_344
	r5_377 = CONVERT(r6_374 <u r4_368, bool, word32) + (r5_369 + r23_342)
	r6_380 = (r5_377 >>u 0x1F<32>) + r6_374
	r5_383 = CONVERT(r6_380 <u r5_377 >>u 0x1F<32>, bool, word32) + r5_377
	r3_367 = fn00402A9A(SEQ(r17_335, r21_331), r3_358, r18_344, r23_342, out r4_368, out r5_369, out r11_362)
	r23_r18_710 = SEQ(r5_383 >> 1<32>, r5_383 << 0x1F<32> | r6_380 >>u 1<32>) (alias)
	r7_r4_713 = r23_r18_711 (alias)
l004028A4:
	r18_344 = SLICE(r23_r18_711, word32, 0) (alias)
	r23_342 = SLICE(r23_r18_711, word32, 32) (alias)
	branch r23_r18_711 <u r7_r4_714 l00402876
l004028B0:
	Mem403[sp_402 + 24<i32>:word32] = Mem389[0x0045450C<p32>:word32] %s 0x3E8<32>
	Mem404[sp_402 + 28<i32>:word32] = r11_398
	__moddi3(r22_r19_718, 0x3E8<32>, 0<32>, r14_406)
	r21_419 = Mem404[0x0043007C<p32>:word32]
	fn00402A9A(r22_r19_718, r3_423, 0x3E8<32>, 0<32>, out r4_740, out r5_741, out r11_742)
	Mem442[sp_402:word32] = r18_399 %s 0x3E8<32>
	r3_463 = fn004029C6(0x0041161C<p32>, out r11_455, out r14_458)
l00402908:
	branch Mem470[0x00430078<p32>:word32] < 2<32> l0040291E
l00402912:
	r3_486 = printf(0x00411660<p32>, out r4_738, out r7_739, out r11_478, out r14_481)
l0040291E:
	branch Mem470[0x004544DC<p32>:word32] == 0<32> l0040299E
l00402926:
	branch Mem470[0x0043008C<p32>:word32] == 0<32> l0040293C
l0040292E:
	branch (Mem470[0x004544EC<p32>:word32] & 0x4001<32>) == 0<32> l0040299E
l0040293C:
	r6_501 = Mem470[0x004544E4<p32>:word32]
	branch r6_501 < 2<32> l0040299E
l00402946:
	r5_509 = r16_506 *s 0xF4240<32>
	r4_517 = r5_509 + r20_239
	r16_519 = SLICE(r16_506 *s64 0xF4240<32>, word32, 32) + (r20_239 >> 0x1F<32>)
	fn00402A9A(SEQ(CONVERT(r4_517 <u r5_509, bool, word32) + r16_519, r4_517), r3_524, r6_501 + 0xFFFFFFFF<32>, r6_501 + 0xFFFFFFFF<32> >> 0x1F<32>, out r4_743, out r5_744, out r11_745)
	printf(0x0041166C<p32>, out r4_746, out r7_747, out r11_557, out r14_560)
l0040299E:
	r3_576 = fn00402A96(0xA<32>)
	branch Mem470[0x004544DC<p32>:word32] == 0<32> l004029BE
l004029AC:
	branch Mem470[0x004314C8<p32>:word32] == 0<32> l004029BE
l004029B4:
l004029BE:
	exit()
	sp_591 = <invalid>
	r22_r19_721 = r22_r19_725 (alias)
l004029C2:
	r18_603 = r21_592
	r22_r19_717 = r22_r19_722 (alias)
	goto l004028B0
finish_exit:


word32 fn004029C6(word32 r4, word32 & r11Out, word32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      gather_statistics
//      finish
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-finish r14:[0..31]-finish r3:[0..31]-finish
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004029C6_entry:
l004029C6:
l004029C6_thunk_printf:
	r3_16 = printf(r4, out r4_25, out r7_26, out r11_8, out r14_11)
	r11Out = r11_8
	r14Out = r14_11
	return r3_16
fn004029C6_exit:


word32 status(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse:  r0:[0..31] r3:[0..31]
// LiveOut: r17:[0..31]-main_loop
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r10 r11 r12 r13 r16 ra sp
status_entry:
l004029CA:
	r16_11 = Mem9[0x004544E4<p32>:word32]
	Mem14[0x00454500<p32>:word32] = r0
	r17_15 = Mem14[0x004544DC<p32>:word32]
	branch r16_11 == 0<32> l004029F6
l004029E2:
	r8_16 = r16_11 - r17_15
	r3 = fn00402A9A(r8_16 *s64 0x64<32>, r3, r16_11, r16_11 >> 0x1F<32>, out r4_150, out r5_151, out r11_152)
l004029F6:
	fprintf(out r7_149)
	r5_107 = 0x0041168C<p32>
	r6_54 = Mem44[0x004544DC<p32>:word32]
	branch r6_54 == 0<32> l00402A8A
l00402A14:
	branch Mem44[0x00454508<p32>:word32] == 0<32> l00402A8A
l00402A1C:
	r6_58 = r6_54 + Mem44[0x004544E0<p32>:word32]
	fn00402A9A(Mem44[0x00454480<p32>:ui64], r3, r6_58, r6_58 >> 0x1F<32>, out r4_153, out r5_154, out r11_155)
	fprintf(out r7_156)
	r5_107 = 0x004116A8<p32>
l00402A8A:
l00402A92_thunk_fputc:
	fputc(0xA<32>, r5_107, out r3_157, out r5_158, out r6_159, out r7_160, out r8_161, out r17_117)
	return r17_117
status_exit:


word32 fn00402A96(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      finish
// MayUse:  r4:[0..31]
// LiveOut: r3:[0..31]-finish
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402A96_entry:
l00402A96:
l00402A96_thunk_putchar:
	return putchar(r4, out r17_15)
fn00402A96_exit:


word32 fn00402A9A(ui64 r5_r4, word32 r3, word32 r6, word32 r7, word32 & r4Out, word32 & r5Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      finish
//      status
// MayUse:  r3:[0..31] r6:[0..31] r7:[0..31] Sequence r5:r4:[0..63]
// LiveOut: r11:[0..31]-finish r3:[0..31]-status r4:[0..63]-finish r5:[0..31]-finish
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402A9A_entry:
l00402A9A:
l00402A9A_thunk___divdi3:
	r3_23 = __divdi3(r5_r4, r3, r6, r7, out r4_15, out r5_16, out r11_11)
	r4Out = r4_15
	r5Out = r5_16
	r11Out = r11_11
	return r3_23
fn00402A9A_exit:


void main_loop(word32 r0, word32 r3, word32 r4, word32 r5, word32 r19, word32 r21, word32 r22)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
main_loop_entry:
l00402A9E:
	r17_148 = r4
l00402AAC:
	branch Mem28[0x004544B8<p32>:word32] != 0<32> l00402C92
l00402AB6:
	r6_30 = Mem28[0x004544D8<p32>:word32]
	branch r6_30 == 0<32> l00402AD0
l00402ABE:
	branch Mem28[0x004544DC<p32>:word32] + Mem28[0x004544D0<p32>:word32] >= r6_30 l00402C92
l00402AD0:
	branch Mem28[0x004314C8<p32>:word32] == 0<32> l00402AE2
l00402AD8:
	branch Mem28[0x004544D0<p32>:word32] != 0<32> l00402C92
l00402AE2:
	branch Mem28[0x00454500<p32>:word32] == 0<32> l00402AEC
l00402AEA:
	r17_148 = status(r0, r3)
l00402AEC:
	r4_71 = pinger(r0, r17_148, out r12_77)
	r7_89 = Mem28[0x004544D8<p32>:word32]
	r20_104 = r4_71
	branch r7_89 == 0<32> l00402B14
l00402AFC:
	branch Mem28[0x004544E4<p32>:word32] < r7_89 l00402B14
l00402B06:
	branch Mem28[0x004314C8<p32>:word32] != 0<32> l00402B14
l00402B0E:
	r20_104 = __schedule_exit(r4_71)
l00402B14:
	branch r20_104 <= 0<32> l00402AEC
l00402B18:
	branch (Mem28[0x004544EC<p32>:word32] & 0x4800<32>) != 0<32> l00402BA4
l00402B26:
	r6_110 = Mem28[0x0043008C<p32>:word32]
	r5_111 = 0xA<32>
	branch r6_110 < 0xA<32> l00402B36
l00402B32_1:
	r5_111 = r6_110
l00402B36:
	branch r20_104 < r5_111 l00402BA4
l00402B3A:
l00402B3C:
	r4_291 = recvmsg(out r5_292, out r6_293)
	r19 = r4_291
	branch r4_291 >= 0<32> l00402C06
l00402B76:
	r3 = fn00402CEA(out r4_421)
	branch Mem286[r4_421:word32] == 0xB<32> l00402AAC
l00402B7E:
	r3 = fn00402CEA(out r4_425)
	branch Mem286[r4_425:word32] == 4<32> l00402AAC
l00402B86:
	r7_428 = Mem286[r17_148 + 4<i32>:word32]
	call r7_428 (retsize: 0;)
		uses: Mem:Mem286,r3:r3_436,r4:r5,r5:r5_292,r6:r6_293,r7:r7_428
		defs: r3:r3_436,r4:r4_430,r5:r5_431,r6:r6_433
	r3 = r3_436
	branch r4_430 != 0<32> l00402C74
l00402B90:
	r3 = fn00402CEA(out r4_448)
	branch Mem286[r4_448:word32] != 0<32> l00402BFC
l00402B96:
	branch Mem286[r5 + 4<i32>:word32] != 3<32> l00402C74
l00402B9C:
	r7_474 = Mem286[r17_148 + 12<i32>:word32]
	call r7_474 (retsize: 0;)
		uses: Mem:Mem286,r3:r3_490,r4:r5,r5:r5_481,r6:r6_482,r7:r7_474
		defs: r3:r3_490
	r3 = r3_490
	goto l00402C74
l00402BA4:
	r4_117 = in_flight(out r7_670)
	r21 = 0x3E8<32>
	r19 = r4_117
	branch 0x3E8<32> %s fn00402CEE(2<32>, r12_77, out r7_671, out r17_672) != 0<32> l00402BDC
l00402BB8:
	fn00402CEE(2<32>, r12_77, out r7_194, out r17_148)
	r4_161 = CONVERT(r7_194 < r20_104, bool, word32) ^ 1<32>
l00402BC8:
	branch r4_161 == 0<32> l00402C96
l00402BCC:
	r20_104 = 0xA<32>
	branch r4_117 != 0<32> l00402C96
l00402BD4:
	sched_yield()
l00402BD8:
	goto l00402B3C
l00402BDC:
	fn00402CEE(2<32>, r12_77, out r7_155, out r17_148)
	r4_161 = 0<32>
	branch r20_104 >= r7_155 l00402BC8
l00402BF0:
	r4_161 = CONVERT(fn00402CEE(2<32>, r12_77, out r7_673, out r17_148) *s r20_104 < 0x3E9<32>, bool, word32)
	goto l00402BC8
l00402BFC:
	perror(0x004116E8<p32>, out r3, out r5_664, out r6_665, out r7_666, out r8_667, out r11_668, out r12_669, out r17_148)
	goto l00402AAC
l00402C06:
	r17_148 = 0x1000<32>
	r8_299 = 0<32>
	branch r4_291 <u 0xC<32> l00402C4E
l00402C0E:
	r7_302 = r20_104
l00402C12:
	branch r7_677 == 0<32> l00402C4E
l00402C14:
	r21 = Mem286[r7_677 + 1<i32>:word32]
	r6_399 = Mem286[r7_677:word32]
	branch r21 != 0xFFFF<32> l00402C46
l00402C20:
	branch Mem286[r7_677 + 8<i32>:word32] != 0x1D<32> l00402C46
l00402C26:
	branch r6_399 <u 0x14<32> l00402C46
l00402C2A:
	r8_299 = r7_677 + 0xC<32>
l00402C2E:
	r6_412 = __ins<word32,word32>(r6_399 + 3<32>, 0<32>, 0<32>, 1<32>)
	r21 = r6_412 + 0xC<32>
	r7_302 = r7_677 + r6_412
	r7_677 = r7_302
	branch r6_412 + 0xC<32> <u (r20_104 + r4_291) - r7_677 l00402C12
l00402C44:
	goto l00402C4A
l00402C46:
	branch r6_399 >=u 0xC<32> l00402C2E
l00402C4A:
	r7_302 = 0<32>
	goto l00402C12
l00402C4E:
	branch __bit<word32,word32>(Mem286[0x004544EC<p32>:word32], 0xC<32>) l00402C7E
l00402C58:
	gettimeofday(fp + 0xFFFFEF3C<32>, out r4_674, out r6_675, out r17_148)
l00402C60:
l00402C64:
	r20_104 = Mem286[r17_148 + 2<i32>:word32]
	call r20_104 (retsize: 0;)
		uses: Mem:Mem286,r3:r3_387,r4:r5,r5:fp + 0xFFFFEF44<32>,r6:r4_291,r7:fp + 0xFFFFEF60<32>
		defs: r3:r3_387,r4:r4_381,r5:r5_382,r6:r6_384
	r3 = r3_387
	r3 = r3_387
	branch r4_381 != 0<32> l00402B96
l00402C74:
	branch in_flight(out r7_663) != 0<32> l00402BD8
l00402C7C:
	goto l00402AAC
l00402C7E:
	branch r8_299 != 0<32> l00402C64
l00402C82:
	ioctl(out r4_319, out r7_676)
	branch r4_319 != 0<32> l00402C58
l00402C90:
	goto l00402C60
l00402C92:
	finish(SEQ(r22, r19), r21)
l00402C96:
	branch (Mem28[0x004544EC<p32>:word32] & 0x4800<32>) != 0<32> l00402CAE
l00402CA4:
	branch Mem28[0x0043008C<p32>:word32] == 0<32> l00402B3A
l00402CAE:
	r3 = poll(r20_104, out r4_244, out r7_662)
	branch r4_244 <= 0<32> l00402AAC
l00402CCA:
	branch (CONVERT(0<16>, uint16, word32) & 9<32>) == 0<32> l00402AAC
l00402CD4:
	goto l00402BD8
main_loop_exit:


word32 is_ours(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-ping6_parse_reply
// Trashed: r25 r4 r7
// Preserved: sp
is_ours_entry:
l00402CD6:
	r4_11 = 1<32>
	branch Mem0[r4 + 4<i32>:word32] == 1<32> l00402CE8
l00402CDC:
	r4_11 = CONVERT((Mem0[0x004544C4<p32>:word32] ^ r5) <u 1<32>, bool, word32)
l00402CE8:
	return r4_11
is_ours_exit:


word32 fn00402CEA(word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse: 
// LiveOut: r3:[0..31]-main_loop r4:[0..31]-main_loop
// Trashed: r25 r3 r4
// Preserved: sp
fn00402CEA_entry:
l00402CEA:
l00402CEA_thunk___errno_location:
	r3_5 = __errno_location(out r4_6)
	r4Out = r4_6
	return r3_5
fn00402CEA_exit:


word32 fn00402CEE(word32 r4, word32 r12, word32 & r7Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse:  r12:[0..31] r4:[0..31]
// LiveOut: r17:[0..31]-main_loop r4:[0..31]-main_loop r7:[0..31]-main_loop
// Trashed: hi lo r10 r11 r13 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402CEE_entry:
l00402CEE:
l00402CEE_thunk_sysconf:
	r4_8 = sysconf(r4, r12, out r7_9, out r17_16)
	r7Out = r7_9
	r17Out = r17_16
	return r4_8
fn00402CEE_exit:


void niquery_option_help_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      niquery_option_handler
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
niquery_option_help_handler_entry:
l00402D00:
	fn00403098(0x004116F8<p32>, Mem5[0x00412EF0<p32>:word32], out r5_51, out r6_52)
	fn004030A0()
l00402D10_thunk_niquery_option_subject_name_handler:
	niquery_option_subject_name_handler()
	return
niquery_option_help_handler_exit:


void niquery_option_subject_name_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      niquery_option_help_handler
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
niquery_option_subject_name_handler_entry:
l00402D12:
	fn00403098(0x004117DC<p32>, Mem5[0x00412EF0<p32>:word32], out r5_49, out r6_50)
	fn004030A0()
l00402D22_thunk_niquery_set_qtype:
	niquery_set_qtype(3<32>)
	return
niquery_option_subject_name_handler_exit:


word32 niquery_set_qtype(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      niquery_option_subject_name_handler
//      niquery_option_ipv4_flag_handler
//      niquery_option_ipv4_handler
//      niquery_option_ipv6_flag_handler
//      niquery_option_ipv6_handler
//      niquery_option_name_handler
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-niquery_option_ipv6_flag_handler
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_set_qtype_entry:
l00402D24:
	r7_7 = Mem5[0x00430214<p32>:word32]
	branch r7_7 < 0<32> l00402D3E
l00402D30:
	branch r4 == r7_7 l00402D3E
l00402D32:
	puts(0x0041180C<p32>)
	return 0xFFFFFFFF<32>
l00402D3E:
	Mem10[0x00430214<p32>:word32] = r4
	return 0<32>
niquery_set_qtype_exit:


void niquery_option_ipv4_flag_handler(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
niquery_option_ipv4_flag_handler_entry:
l00402D48:
	branch niquery_set_qtype(4<32>) < 0<32> l00402D72
l00402D56:
	Mem38[0x004314D8<p32>:word32] = Mem7[0x004314D8<p32>:word32] | Mem7[(0x004300D0<p32> + r4 *s 0x14<32>) + 12<i32>:word32]
l00402D72:
	return
niquery_option_ipv4_flag_handler_exit:


void niquery_option_ipv4_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_option_ipv4_handler_entry:
l00402D76:
	niquery_set_qtype(4<32>)
	return
niquery_option_ipv4_handler_exit:


void niquery_option_ipv6_flag_handler(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
niquery_option_ipv6_flag_handler_entry:
l00402D82:
	branch niquery_set_qtype(3<32>) < 0<32> l00402DAC
l00402D90:
	Mem38[0x004314D8<p32>:word32] = Mem7[0x004314D8<p32>:word32] | Mem7[(0x004300D0<p32> + r4 *s 0x14<32>) + 12<i32>:word32]
l00402DAC:
	return
niquery_option_ipv6_flag_handler_exit:


void niquery_option_ipv6_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_option_ipv6_handler_entry:
l00402DB0:
	niquery_set_qtype(3<32>)
	return
niquery_option_ipv6_handler_exit:


void niquery_option_name_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_option_name_handler_entry:
l00402DBC:
	niquery_set_qtype(2<32>)
	return
niquery_option_name_handler_exit:


void pr_icmph(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
pr_icmph_entry:
l00402DC8:
	branch r4 == 0x80<32> l00402EB4
l00402DD4:
	branch r4 >u 0x80<32> l00402E12
l00402DD8:
	branch r4 == 2<32> l00402E72
l00402DDC:
	branch r4 >=u 3<32> l00402DEC
l00402DE0:
	branch r4 == 1<32> l00402E34
l00402DE4:
	r4_134 = 0x004119B8<p32>
	goto l00402E6E
l00402DEC:
	branch r4 == 3<32> l00402E84
l00402DF0:
	branch r4 != 4<32> l00402DE4
l00402DF4:
	fn0040309C(0x00411918<p32>)
	r4_111 = 0x0041192C<p32>
	branch r5 == 0<32> l00402E08
l00402E00:
	branch r5 != 1<32> l00402EA2
l00402E04:
	r4_111 = 0x00411940<p32>
l00402E08:
	fn0040309C(r4_111)
l00402E0A:
	r4_134 = 0x0041196C<p32>
	goto l00402E6E
l00402E12:
	branch r4 == 0x82<32> l00402EC0
l00402E1A:
	branch r4 <u 0x82<32> l00402EBA
l00402E1E:
	branch r4 == 0x83<32> l00402EC6
l00402E26:
	branch r4 != 0x84<32> l00402DE4
l00402E2E:
	r4_159 = 0x004119A8<p32>
	goto l00402E4A
l00402E34:
	fn0040309C(0x0041181C<p32>)
	branch r5 >=u 5<32> l00402E68
l00402E3E:
	switch (r5) { l00402E46 l00402E50 l00402E56 l00402E5C l00402E62 }
l00402E46:
	r4_159 = 0x00411838<p32>
l00402E4A:
	fn0040309C(r4_159)
l00402E4C:
	return
l00402E50:
	r4_159 = 0x00411844<p32>
	goto l00402E4A
l00402E56:
	r4_159 = 0x00411860<p32>
	goto l00402E4A
l00402E5C:
	r4_159 = 0x00411880<p32>
	goto l00402E4A
l00402E62:
	r4_159 = 0x00411894<p32>
	goto l00402E4A
l00402E68:
	r4_134 = 0x004118A8<p32>
l00402E6E:
	fn0040309C(r4_134)
	goto l00402E4C
l00402E72:
	printf(0x004118B8<p32>, out r4_260, out r7_261, out r11_262, out r14_263)
	branch r5 == 0<32> l00402E4C
l00402E7C:
	r4_134 = 0x004118D0<p32>
	goto l00402E6E
l00402E84:
	fn0040309C(0x004118DC<p32>)
	branch r5 != 0<32> l00402E92
l00402E8C:
	r4_159 = 0x004118EC<p32>
	goto l00402E4A
l00402E92:
	r4_159 = 0x004118F8<p32>
	branch r5 == 1<32> l00402E4A
l00402E9A:
	r4_134 = 0x00411910<p32>
	goto l00402E6E
l00402EA2:
	r4_111 = 0x00411950<p32>
	branch r5 == 2<32> l00402E08
l00402EAA:
	printf(0x00411960<p32>, out r4_264, out r7_265, out r11_266, out r14_267)
	goto l00402E0A
l00402EB4:
	r4_159 = 0x00411974<p32>
	goto l00402E4A
l00402EBA:
	r4_159 = 0x00411984<p32>
	goto l00402E4A
l00402EC0:
	r4_159 = 0x00411990<p32>
	goto l00402E4A
l00402EC6:
	r4_159 = 0x0041199C<p32>
	goto l00402E4A
pr_icmph_exit:


void pr_echo_reply(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
pr_echo_reply_entry:
l00402ECC:
	fn004030A4(CONVERT(Mem5[r4 + 6<i32>:uint16], uint16, word32))
l00402EDC_thunk_printf:
	printf(0x004104BC<p32>, out r4_34, out r7_35, out r11_36, out r14_37)
	return
pr_echo_reply_exit:


void write_stdout(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
write_stdout_entry:
l00402EE0:
	r16_13 = 0<32>
l00402EE6:
	r4_28 = write()
	r16_13 = r16_13 + r4_28
	branch r16_13 <u r5 l00402EE6
l00402EF6:
	branch r4_28 < 0<32> l00402EE6
l00402EFA:
	return
write_stdout_exit:


void ping6_receive_error_msg(word32 r0, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r11 r12 r13 r14 r15 r16 r17 r18 r19 r24 ra sp
ping6_receive_error_msg_entry:
l00402EFC:
	fn004032A0(out r4_19)
	r19_23 = Mem13[r4_19:word32]
	r4_47 = recvmsg(out r5_48, out r6_605)
	branch r4_47 < 0<32> l00402FF6
l00402F40:
	r7_306 = 0<32>
	branch false l00402F4E
l00402F4A:
	r7_306 = fp - 0x220<32>
l00402F4E:
	r18_296 = 0<32>
l00402F54:
	branch r7_611 == 0<32> l00402F80
l00402F56:
	branch Mem42[r7_611 + 4<i32>:word32] != 0x29<32> l00402F64
l00402F5C:
	branch Mem42[r7_611 + 8<i32>:word32] != 0x19<32> l00402F64
l00402F62:
	r18_296 = r7_611 + 0xC<32>
l00402F64:
	r6_299 = Mem42[r7_611:word32]
	branch r6_299 <u 0xC<32> l00402F7C
l00402F6A:
	r6_304 = __ins<word32,word32>(r6_299 + 3<32>, 0<32>, 0<32>, 1<32>)
	r7_306 = r7_611 + r6_304
	r7_611 = r7_306
	branch r6_304 + 0xC<32> <u (r5_48 + 0x200<32>) - r7_611 l00402F54
l00402F7C:
	r7_306 = 0<32>
	goto l00402F54
l00402F80:
	branch r18_296 != 0<32> l00402F86
l00402F82:
	abort(r0)
l00402F86:
	r5_67 = CONVERT(Mem42[r18_296 + 4<i32>:byte], byte, word32)
	branch r5_67 != 1<32> l00402FEC
l00402F8E:
	r7_226 = Mem42[0x004544EC<p32>:word32]
	r17_202 = r7_226 & 0x10<32>
	branch (r7_226 & 0x10<32>) != 0<32> l00403080
l00402F9C:
	branch __bit<word32,word32>(r7_226, 0<32>) l00402FC6
l00402FA0:
	write_stdout(r5_67)
l00402FA6:
	Mem264[0x004544D0<p32>:word32] = Mem260[0x004544D0<p32>:word32] + 1<32>
l00402FB6:
	fn004032A0(out r4_606)
	branch r17_202 != 0<32> l00402FC0
l00402FBC:
l00402FC0:
	return
l00402FC6:
	r4_230 = Mem42[r18_296:word32]
	r7_231 = Mem42[0x00412EF0<p32>:word32]
	branch r4_230 == 0x1A<32> l00402FE4
l00402FD4:
	strerror(r4_230, out r4_610)
l00402FDE:
	fn004032FE()
	r17_202 = r7_231
	goto l00402FA6
l00402FE4:
	goto l00402FDE
l00402FEC:
	branch r5_67 != 3<32> l00402FF6
l00402FF0:
	branch r4_47 >= 8<32> l00402FFA
l00402FF4:
l00402FF6:
	goto l00403082
l00402FFA:
	branch memcmp(&tLoc0234, 0x00432500<p32>, 0x10<32>, out r7_607, out r8_608, out r9_609) != 0<32> l00402FF4
l0040300A:
	branch bLoc0260 != 0x80<8> l00402FF4
l00403016:
	branch is_ours(fp - 0x220<32>, CONVERT(wLoc025C, uint16, word32)) == 0<32> l00402FF4
l00403020:
	Mem90[0x004544D0<p32>:word32] = Mem42[0x004544D0<p32>:word32] + 1<32>
	r17_202 = 1<32>
	r7_91 = Mem90[0x004544EC<p32>:word32]
	branch !__bit<word32,word32>(r7_91, 4<32>) l00402FB6
l0040303A:
	r17_202 = r7_91 & 1<32>
	branch (r7_91 & 1<32>) == 0<32> l00403048
l0040303E:
	write_stdout(2<32>)
	goto l00402FB6
l00403048:
	fn004033EA()
	pr_addr(r0, r18_296 + 0x10<32>, r18_296, r19_23, r20, r21, r22, r23, r28, r30, ra)
	fn004030A4(CONVERT(wLoc025A, uint16, word32))
	fn0040309C(0x004111EC<p32>)
	pr_icmph(CONVERT(Mem90[r18_296 + 5<i32>:byte], byte, word32), CONVERT(Mem90[r18_296 + 6<i32>:byte], byte, word32))
	fn004033EE(0xA<32>)
	fn004033F2(Mem90[0x00412EF4<p32>:word32], out r17_202)
	goto l00402FB6
l00403080:
l00403082:
	r17_202 = 0<32>
	goto l00402FB6
ping6_receive_error_msg_exit:


word32 niquery_nonce.isra.0(word32 & r5Out, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_parse_reply
//      build_niquery
// MayUse: 
// LiveOut: r4:[0..31]-build_niquery r5:[0..31]-build_niquery r6:[0..31]-build_niquery
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
niquery_nonce.isra.0_entry:
l00403086:
	fn00403098(0x004117DC<p32>, Mem5[0x00412EF0<p32>:word32], out r5_22, out r6_51)
	fn004030A0()
l00403096_thunk_fn00403098:
	r4_42 = fn00403098(3<32>, r5_22, out r5_43, out r6_44)
	r5Out = r5_43
	r6Out = r6_44
	return r4_42
niquery_nonce.isra.0_exit:


word32 fn00403098(word32 r4, word32 r5, word32 & r5Out, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      niquery_option_help_handler
//      niquery_option_subject_name_handler
//      niquery_nonce.isra.0
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-niquery_nonce.isra.0 r5:[0..31]-niquery_nonce.isra.0 r6:[0..31]-niquery_nonce.isra.0
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00403098_entry:
l00403098:
l00403098_thunk_fputs_unlocked:
	fputs_unlocked(r4, r5, out r3_26, out r4_18, out r5_19, out r6_20, out r8_27, out r11_28, out r12_29)
	r5Out = r5_19
	r6Out = r6_20
	return r4_18
fn00403098_exit:


void fn0040309C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_icmph
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040309C_entry:
l0040309C:
l0040309C_thunk_printf:
	printf(r4, out r4_23, out r7_24, out r11_25, out r14_26)
	return
fn0040309C_exit:


void fn004030A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      niquery_option_help_handler
//      niquery_option_subject_name_handler
//      niquery_nonce.isra.0
//      if_name2index
// MayUse: 
// LiveOut:
// Trashed: r17 r25
// Preserved: sp
fn004030A0_entry:
l004030A0:
l004030A0_thunk_exit:
	exit()
	return
fn004030A0_exit:


word32 fn004030A4(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_echo_reply
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-ping6_parse_reply
// Trashed: r25 r4
// Preserved: sp
fn004030A4_entry:
l004030A4:
l004030A4_thunk_ntohs:
	return ntohs(r4)
fn004030A4_exit:


void ping6_parse_reply(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r18, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r18:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
ping6_parse_reply_entry:
l004030A8:
	r23_33 = Mem23[r5 + 20<i32>:word32]
	r16_36 = Mem23[Mem23[r5 + 8<i32>:word32]:word32]
	branch r23_33 >=u 0xC<32> l0040310A
l004030C0:
	branch r6 < 8<32> l0040314E
l004030C4:
	r7_107 = CONVERT(Mem38[r16_36:byte], byte, word32)
	branch r7_107 != 0x81<32> l0040316E
l004030CE:
	branch is_ours(r4, CONVERT(Mem38[r16_36 + 4<i32>:uint16], uint16, word32)) == 0<32> l00403158
l004030D8:
	fn004030A4(CONVERT(Mem38[r16_36 + 6<i32>:uint16], uint16, word32))
	branch gather_statistics(r16_36, 8<32>, r6, pr_addr(r0, r7, r18, r7, r4, r6, r8, r23_33, r28, r30, ra), r18, 0<32>, r8, 0x00402ECC<p32>) == 0<32> l0040324A
l00403100:
	fn004033F2(Mem545[0x00412EF4<p32>:word32], out r17_1094)
	goto l004031FE
l0040310A:
	r30 = Mem38[r5 + 16<i32>:word32]
	r17_40 = r30
l00403110:
	branch r17_1101 == 0<32> l004030C0
l00403112:
	r18 = Mem38[r17_1101:word32]
	branch Mem38[r17_1101 + 4<i32>:word32] != 0x29<32> l00403146
l0040311A:
	r7_45 = Mem38[r17_1101 + 8<i32>:word32]
	branch r7_45 == 8<32> l00403124
l00403120:
	branch r7_45 != 0x34<32> l00403146
l00403124:
	branch r18 <u 0x10<32> l00403146
l00403128:
	fn004034E2(fp - 0x34<32>, r17_1101 + 0xC<32>, 4<32>)
l00403130:
	r18 = __ins<word32,word32>(r18 + 3<32>, 0<32>, 0<32>, 1<32>)
	r17_40 = r17_1101 + r18
	r17_1101 = r17_40
	branch r18 + 0xC<32> <u (r30 + r23_33) - r17_1101 l00403110
l00403144:
	goto l0040314A
l00403146:
	branch r18 >=u 0xC<32> l00403130
l0040314A:
	r17_40 = 0<32>
	goto l00403110
l0040314E:
	branch !__bit<word32,word32>(Mem38[0x004544EC<p32>:word32], 8<32>) l0040315E
l00403158:
l0040315A:
	return
l0040315E:
	fn004032FE()
	goto l00403158
l0040316E:
	branch r7_107 != 0x8C<32> l00403176
l00403174:
	niquery_nonce.isra.0(out r5_1096, out r6_1097)
l00403176:
	branch r6 < 0x38<32> l00403158
l0040317A:
	branch memcmp(r16_36 + 0x20<32>, 0x00432500<p32>, 0x10<32>, out r7_1098, out r8_1099, out r9_1100) != 0<32> l00403158
l0040318A:
	r7_141 = CONVERT(Mem38[r16_36 + 14<i32>:byte], byte, word32)
	r18_142 = r16_36 + 0x30<32>
	branch r7_141 != 0x2C<32> l0040319E
l00403196:
	r7_141 = CONVERT(Mem38[r16_36 + 48<i32>:byte], byte, word32)
	r18_142 = r16_36 + 0x38<32>
l0040319E:
	branch r7_141 != 0x3A<32> l0040327A
l004031A2:
	branch Mem38[r18_142:byte] != 0x80<8> l00403158
l004031AC:
	branch is_ours(r4, CONVERT(Mem38[r18_142 + 4<i32>:uint16], uint16, word32)) == 0<32> l00403158
l004031B4:
	r4_276 = fn004030A4(CONVERT(Mem38[r18_142 + 6<i32>:uint16], uint16, word32))
	r7_277 = Mem38[0x004544E4<p32>:word32]
	r5_278 = r7_277 - r4_276
	branch !__bit<word32,word32>(r5_278, 0xF<32>) l004031FA
l004031C6:
	branch (r5_278 & 0xFFFF<32>) < Mem38[0x00430078<p32>:word32] l004031D8
l004031D0:
	Mem282[0x00430078<p32>:word32] = (r5_278 & 0xFFFF<32>) + 1<32>
l004031D8:
	r17_285 = CONVERT(Mem284[0x00454518<p32>:uint16], uint16, word32)
	branch SLICE(r4_276 - r17_285, word16, 0) > 0<16> l004031F6
l004031EA:
	branch (r7_277 & 0xFFFF<32>) - r17_285 <= 0x7FFF<32> l004031FA
l004031F6:
	Mem296[0x00454518<p32>:word16] = SLICE(r4_276, word16, 0)
l004031FA:
	branch Mem300[r4 + 2<i32>:word32] == 0<32> l00403202
l004031FE:
	goto l0040315A
l00403202:
	Mem304[0x004544D0<p32>:word32] = Mem300[0x004544D0<p32>:word32] + 1<32>
	branch __bit<word32,word32>(Mem304[0x004544EC<p32>:word32], 0<32>) l00403224
l0040321A:
	write_stdout(2<32>)
	goto l0040315A
l00403224:
	fn004033EA()
	pr_addr(r0, r7, r18_142, r7, r4, r6, r8, r23_33, r28, r30, ra)
	fn004030A4(CONVERT(Mem304[r18_142 + 6<i32>:uint16], uint16, word32))
	fn0040309C(0x00411230<p32>)
l0040323A:
	r17_405 = CONVERT(Mem403[r16_36:byte], byte, word32)
	r18_406 = CONVERT(Mem403[r16_36 + 1<i32>:byte], byte, word32)
	ntohl(Mem403[r16_36 + 4<i32>:word32])
	pr_icmph(r17_405, r18_406)
l0040324A:
	branch __bit<word32,word32>(Mem506[0x004544EC<p32>:word32], 0xD<32>) l0040326A
l00403254:
	fn004033EE(7<32>)
	branch __bit<word32,word32>(Mem506[0x004544EC<p32>:word32], 0<32>) l00403274
l00403262:
	fn004033F2(Mem506[0x00412EF4<p32>:word32], out r17_1095)
l0040326A:
	branch !__bit<word32,word32>(Mem506[0x004544EC<p32>:word32], 0<32>) l004031FE
l00403274:
	fn004033EE(0xA<32>)
	goto l00403100
l0040327A:
	branch __bit<word32,word32>(Mem38[0x004544EC<p32>:word32], 8<32>) l00403158
l00403284:
	branch Mem38[0x00454514<p32>:word32] != 0<32> l00403158
l0040328E:
	fn004033EA()
	pr_addr(r0, r7, r18_142, r7, r4, r6, r8, r23_33, r28, r30, ra)
	fn0040309C(0x0041126C<p32>)
	goto l0040323A
ping6_parse_reply_exit:


word32 fn004032A0(word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      hextoui
// MayUse: 
// LiveOut: r3:[0..31]-hextoui r4:[0..31]-hextoui
// Trashed: r25 r3 r4
// Preserved: sp
fn004032A0_entry:
l004032A0:
l004032A0_thunk___errno_location:
	r3_5 = __errno_location(out r4_6)
	r4Out = r4_6
	return r3_5
fn004032A0_exit:


void ping6_install_filter()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
ping6_install_filter_entry:
l004032A4:
	branch Mem9[0x0045454C<p32>:word32] != 0<32> l004032FC
l004032B0:
	wLoc14_76 = Mem9[0x004544C4<p32>:uint16] (alias)
	Mem17[0x0045454C<p32>:word32] = 1<32>
	fn0040359C(CONVERT(wLoc14_76, uint16, word32))
	Mem22[0x004300A2<p32>:byte] = 0<8>
	Mem24[0x004300A3<p32>:byte] = 1<8>
	Mem29[0x004300A0<p32>:word16] = 0x15<16>
	setsockopt(out r3_136, out r4_36, out r5_137, out r7_138)
	branch r4_36 == 0<32> l004032FC
l004032F0:
l004032F8_thunk_perror:
	perror(0x004104E4<p32>, out r3_139, out r5_140, out r6_141, out r7_142, out r8_143, out r11_144, out r12_145, out r17_146)
	return
l004032FC:
	return
ping6_install_filter_exit:


word32 fn004032FE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
//      niquery_option_subject_addr_handler
//      if_name2index
//      ping6_usage
// MayUse: 
// LiveOut: r6:[0..31]-ping6_usage
// Trashed: r25 r6 r7
// Preserved: sp
fn004032FE_entry:
l004032FE:
l004032FE_thunk_fprintf:
	return fprintf(out r7_7)
fn004032FE_exit:


void niquery_option_subject_addr_handler(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 r18, word32 r20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r12:[0..31] r18:[0..31] r2:[0..31] r20:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
niquery_option_subject_addr_handler_entry:
l00403302:
	memset(&tLoc40, 0<32>, 0x20<32>, out r6_311, out r7_312, out r8_313, out r10_314)
	Mem35[&tLoc40:word32] = 2<32>
	r6_36 = Mem35[0x00430210<p32>:word32]
	Mem38[&tLoc40 + 8<i32>:word32] = 1<32>
	r7_40 = Mem38[0x004300D0<p32> + r4 *s 0x14<32> + 12<i32>:word32]
	branch r6_36 < 0<32> l00403338
l0040332E:
	branch Mem38[0x004314D4<p32>:word32] != 0<32> l004033BA
l00403338:
	Mem62[0x00430210<p32>:word32] = r7_40
	branch r7_40 == 0<32> l00403348
l00403340:
	branch r7_40 == 2<32> l0040337A
l00403344:
	r16_214 = 0xFFFFFFFF<32>
	goto l00403356
l00403348:
	Mem65[0x004314D0<p32>:word32] = 0x10<32>
	Mem68[&tLoc40 + 4<i32>:word32] = 0xA<32>
	r16_214 = 8<32>
l00403356:
	getaddrinfo(r0, r2, r3, r5, 0<32>, &tLoc40, r12, r20, out r4_315, out r8_316, out r11_120, out r12_317)
	r4_113 = dwLoc44
	branch dwLoc44 == 0<32> l004033A6
l00403366:
	gai_strerror(dwLoc44)
	fn004032FE()
	goto l004033C6
l0040337A:
	Mem70[&tLoc40 + 4<i32>:word32] = r7_40
	Mem71[0x004314D0<p32>:word32] = 4<32>
	r16_214 = 4<32>
	goto l00403356
l00403386:
	free(r0, Mem112[0x004314D4<p32>:word32], fn004034E2(r4_113, Mem112[r18 + 20<i32>:word32] + r16_214, r20_117), out r3_323, out r4_113, out r6_324, out r7_325, out r8_326, out r9_327, out r11_120)
	Mem164[0x004314D4<p32>:word32] = r4_113
l0040339E:
	freeaddrinfo(r0, r4_113, r11_120, out r3_318, out r11_319)
	goto l004033C8
l004033A6:
	branch r18 == 0<32> l0040339E
l004033A8:
	r20_117 = Mem112[0x004314D0<p32>:word32]
	malloc(r0, r20_117, r11_120, out r3_320, out r4_113, out r6_321, out r8_322, out r11_120)
	branch r4_113 != 0<32> l00403386
l004033B6:
	r18 = Mem112[r18 + 28<i32>:word32]
	goto l004033A6
l004033BA:
	branch r6_36 == r7_40 l00403338
l004033BE:
	puts(0x004119F4<p32>)
l004033C6:
l004033C8:
	return
niquery_option_subject_addr_handler_exit:


word32 if_name2index(word32 r4, word32 & r11Out, word32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-ping6_run r16:[0..31]-ping6_run r4:[0..31]-ping6_run sp:[0..31]-ping6_run
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
if_name2index_entry:
l004033CC:
	if_nametoindex(r4, out r4_15, out r6_87, out r8_88, out r9_89)
	branch r4_15 == 0<32> l004033D8
l004033D6:
	r11Out = r11
	r16Out = r16
	return r4_15
l004033D8:
	fn004032FE()
	fn004030A0()
l004033EA_thunk_print_timestamp:
	r4_44 = print_timestamp(out r11_35)
	r11Out = r11_35
	r16Out = r4
	return r4_44
if_name2index_exit:


void fn004033EA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004033EA_entry:
l004033EA:
l004033EA_thunk_print_timestamp:
	print_timestamp(out r11_23)
	return
fn004033EA_exit:


void fn004033EE(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004033EE_entry:
l004033EE:
l004033EE_thunk_putchar:
	putchar(r4, out r17_15)
	return
fn004033EE_exit:


word32 fn004033F2(word32 r4, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r16:[0..31]-ping6_receive_error_msg r17:[0..31]-ping6_receive_error_msg
// Trashed: r16 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004033F2_entry:
l004033F2:
l004033F2_thunk_fflush_unlocked:
	fflush_unlocked(r4, out r16_5, out r17_6)
	r17Out = r17_6
	return r16_5
fn004033F2_exit:


void niquery_option_handler(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
niquery_option_handler_entry:
l004033F6:
	r19_20 = 0<32>
	r16_21 = 0x004300D0<p32>
	goto l00403416
l00403404:
	branch r7_38 != 0x3D<32> l00403412
l00403408:
	r7_40 = Mem15[r16_21 + 16<i32>:word32]
	goto l00403432
l00403412:
	r19_20 = r19_20 + 1<32>
	r16_21 = r16_21 + 0x14<32>
l00403416:
	r4_24 = Mem15[r16_21:word32]
	branch r4_24 == 0<32> l0040343C
l0040341A:
	r18_25 = Mem15[r16_21 + 4<i32>:word32]
	branch strncmp(r4_24, r4, r18_25, out r6_239) != 0<32> l00403412
l00403424:
	r7_38 = CONVERT(Mem15[r4 + r18_25:byte], byte, word32)
	branch Mem15[r16_21 + 8<i32>:word32] != 0<32> l00403404
l0040342C:
	branch r7_38 != 0<32> l00403412
l0040342E:
	r7_40 = Mem15[r16_21 + 16<i32>:word32]
l00403432:
	call r7_40 (retsize: 0;)
		uses: Mem:Mem15,r10:r10_65,r11:r11_119,r12:r12_120,r13:r13_121,r14:r14_122,r15:r15_123,r2:r2_124,r24:r24_125,r3:r3_126,r4:r19_45,r5:r5_59,r6:r6_60,r8:r8_63,r9:r9_64
		defs: r10:r10_65,r11:r11_119,r12:r12_120,r13:r13_121,r14:r14_122,r15:r15_123,r2:r2_124,r24:r24_125,r3:r3_126,r4:r4_58,r5:r5_59,r6:r6_60,r8:r8_63,r9:r9_64
	branch r4_58 < 0<32> l00403412
l0040343C:
	branch Mem15[r16_21:word32] != 0<32> l00403446
l00403440:
	niquery_option_help_handler()
l00403446:
	return
niquery_option_handler_exit:


void hextoui(word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
hextoui_entry:
l0040344A:
	__strtoul_internal(r2, fn004032A0(out r4_77), r4, fp - 0x14<32>, 0x10<32>, r12, out r3_78, out r4_79, out r6_80, out r7_32, out r8_81, out r9_82, out r11_83, out r12_84)
	branch Mem15[r7_32:byte] == 0<8> l00403470
l00403462:
	fn004032A0(out r4_40)
	branch Mem15[r4_40:word32] != 0<32> l00403470
l0040346A:
	fn004032A0(out r4_85)
l00403470:
	return
hextoui_exit:


word32 build_echo(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_send_probe
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-ping6_send_probe
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
build_echo_entry:
l00403474:
	Mem11[r4 + 1<i32>:byte] = 0<8>
	Mem12[r4:byte] = 0x80<8>
	Mem14[r4 + 2<i32>:word16] = 0<16>
	r4_19 = fn0040359C(Mem14[0x004544E4<p32>:word32] + 1<32> & 0xFFFF<32>)
	Mem21[r4 + 4<i32>:word16] = Mem14[0x004544C4<p32>:word16]
	r7_22 = Mem21[0x00454508<p32>:word32]
	Mem23[r4 + 6<i32>:word16] = SLICE(r4_19, word16, 0)
	branch r7_22 == 0<32> l004034A8
l004034A0:
	gettimeofday(r4 + 8<32>, out r4_69, out r6_70, out r17_71)
l004034A8:
	return Mem23[0x00430074<p32>:word32] + 8<32>
build_echo_exit:


word32 build_niquery(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_send_probe
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r16:[0..31]-ping6_send_probe
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
build_niquery_entry:
l004034B2:
	Mem12[r4:byte] = 0x8B<8>
	Mem13[r4 + 2<i32>:word16] = 0<16>
	r4_14 = Mem13[0x004544E4<p32>:word32]
	Mem17[0x00430074<p32>:word32] = r0
	r4_20 = fn0040359C(r4_14 + 1<32> & 0xFFFF<32>)
	Mem21[r4 + 8<i32>:byte] = SLICE(r4_20, byte, 0)
	Mem24[r4 + 9<i32>:byte] = SLICE(r4_20 >>u 8<32>, byte, 0)
	r4_38 = niquery_nonce.isra.0(out r5_39, out r6_40)
l004034DE_thunk_fn004034E2:
	fn004034E2(r4_38, r5_39, r6_40)
	return r4
build_niquery_exit:


word32 fn004034E2(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_parse_reply
//      niquery_option_subject_addr_handler
//      build_niquery
//      ping6_run
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-ping6_run
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn004034E2_entry:
l004034E2:
l004034E2_thunk_memcpy:
	memcpy(r4, r5, r6, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r11_15, out r12_28, out r13_29, out r14_30)
	return r11_15
fn004034E2_exit:


void ping6_send_probe(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
ping6_send_probe_entry:
l004034E6:
	branch Mem32[0x00430214<p32>:word32] >= 0<32> l0040354C
l0040351C:
	r16_119 = build_echo(r5)
	branch Mem32[0x00454554<p32>:word32] != 0<32> l0040354E
l00403528:
	r4_113 = sendto(out r7_214, out r10_215)
l0040353E:
	Mem124[0x004314C4<p32>:word32] = r0
	branch (r16_119 ^ r4_113) != 0<32> l0040354A
l00403546_1:
l0040354A:
	return
l0040354C:
	r16_119 = build_niquery(r0, r5)
l0040354E:
	r4_113 = sendmsg()
	goto l0040353E
ping6_send_probe_exit:


word32 ping6_usage(word32 r4, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      usage
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-ping6_run r6:[0..31]-usage
// Trashed: r17 r25 r4 r5 r6 r7
// Preserved: sp
ping6_usage_entry:
l0040357C:
	branch r4 != 0<32> l0040358A
l00403586_1:
l0040358A:
	r6_15 = fn004032FE()
	r17_18 = exit()
l0040359C_thunk_htons:
	htons(2<32>)
	r17Out = r17_18
	return r6_15
ping6_usage_exit:


word32 fn0040359C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_install_filter
//      build_echo
//      build_niquery
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-ping6_run
// Trashed: r25 r4
// Preserved: sp
fn0040359C_entry:
l0040359C:
l0040359C_thunk_htons:
	return htons(r4)
fn0040359C_exit:


word32 ping6_run(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 ra, word32 & r8Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut: r11:[0..31]-main r4:[0..31]-main r8:[0..31]-main
// Trashed:
// Preserved: sp
// Terminates process
ping6_run_entry:
l004035A0:
	sp_1605 = fp - 112<i32>
	r19_128 = r6
	r16_1726 = r7
	r17_32 = r4
	r18_129 = r5
	branch Mem23[0x00430214<p32>:word32] < 0<32> l004035E0
l004035B8:
	r3 = gettimeofday(0x00454470<p32>, out r4_1890, out r6_1891, out r17_32)
	r2 = getpid(out r4_1892)
	branch Mem58[0x00430210<p32>:word32] < 0<32> l00403C7E
l004035D6:
	branch Mem58[0x004314D4<p32>:word32] == 0<32> l00403C7E
l004035E0:
	branch r17_32 < 2<32> l004035F6
l004035E4:
	r2 = fputs_unlocked(0x00411B64<p32>, Mem62[0x00412EF0<p32>:word32], out r3, out r4_1893, out r5_1894, out r6_1895, out r8_1896, out r11_1897, out r12)
l004035F2:
	ping6_usage(0<32>, out r17_32)
l004035F6:
	branch r17_32 != 1<32> l0040362C
l004035FA:
	r17_101 = Mem94[r18_129:word32]
l004035FC:
	branch r19_128 != 0<32> l00403648
l004035FE:
	r2 = getaddrinfo(r0, r2, r3, r17_101, 0<32>, 0x004122E4<p32>, r12, r20, out r4_121, out r8_1907, out r11_1908, out r12)
	r19_128 = 0<32>
	branch r4_121 == 0<32> l00403648
l00403612:
	r3 = gai_strerror(r4_121)
	fprintf(out r7_1909)
l00403626:
	exit()
	sp_1605 = <invalid>
l0040362C:
	branch Mem1606[0x00430214<p32>:word32] >= 0<32> l00403640
l00403636:
	branch Mem1606[0x00430210<p32>:word32] != 1<32> l004035F2
l00403640:
	r17_101 = Mem1606[0x004544D4<p32>:word32]
	goto l004035FC
l00403648:
	memcpy(0x004324F8<p32>, Mem127[r19_128 + 20<i32>:word32], 0x1C<32>, out r3_1898, out r5_1899, out r6_1900, out r7_1901, out r8_1902, out r9_1903, out r11_143, out r12_1904, out r13_1905, out r14_1906)
	Mem153[0x004324FA<p32>:word16] = SLICE(fn0040359C(0x3A<32>), word16, 0)
	r18_129 = 0x004324F8<p32>
	branch true l00403664
l00403660:
	freeaddrinfo(r0, 0<32>, r11_143, out r3_1916, out r11_143)
l00403664:
	branch memchr(r17_101, 0x3A<32>, strlen(r17_101, out r5_1910, out r6_1911, out r7_1912), out r5_1913, out r6_1914, out r8_1915) == 0<32> l00403682
l00403672:
	Mem189[0x004544EC<p32>:word32] = Mem153[0x004544EC<p32>:word32] | 4<32>
l00403682:
	r19_128 = 0x004324DC<p32>
	r20 = 0x004324DC<p32>
	branch Mem191[0x004324E4<p32>:word32] != 0<32> l004036CC
l0040368C:
	branch Mem191[0x004324E8<p32>:word32] != 0<32> l004036CC
l00403690:
	branch Mem191[0x004324EC<p32>:word32] != 0<32> l004036CC
l00403694:
	branch Mem191[0x004324F0<p32>:word32] != 0<32> l004036CC
l00403698:
	r11_143 = fn004034E2(0x004324E4<p32>, 0x00432500<p32>, 0x10<32>)
	r7_217 = Mem191[0x00432510<p32>:word32]
	r6_218 = Mem191[0x00454550<p32>:word32]
	Mem223[sp_1605 + 88<i32>:word32] = r7_217
	branch r7_217 == 0<32> l004036C4
l004036B0:
	branch r6_218 == 0<32> l004036C6
l004036B2:
	branch r6_218 == r7_217 l004036CC
l004036B4:
	r5_1535 = Mem223[0x00412EF0<p32>:word32]
	r4_1536 = 0x00411B98<p32>
l004036BE:
	r2 = fputs_unlocked(r4_1536, r5_1535, out r3, out r4_1947, out r5_1948, out r6_1949, out r8_1950, out r11_1951, out r12)
	goto l00403626
l004036C4:
	branch r6_218 != 0<32> l004036CC
l004036C6:
	Mem225[0x00454550<p32>:word32] = r7_217
l004036CC:
	r6_228 = Mem227[0x00430224<p32>:word32]
	Mem232[0x004544C0<p32>:word32] = r17_101
	r17_233 = 0x0043021C<p32>
	branch r6_228 != 0<32> l004038E0
l004036DE:
	branch Mem232[0x00430228<p32>:word32] != 0<32> l004038E0
l004036E4:
	branch Mem232[0x0043022C<p32>:word32] != 0<32> l004038E0
l004036EA:
	branch Mem232[0x00430230<p32>:word32] != 0<32> l004038E0
l004036F0:
	socket(1<32>, out r3_1917, out r4_277, out r6_1918, out r8_1919, out r9_1920)
	r19_128 = r4_277
	r4_1527 = 0x00410520<p32>
	branch r4_277 < 0<32> l00403790
l00403702:
	r4_285 = Mem232[0x004544B0<p32>:word32]
	branch r4_285 == 0<32> l0040379C
l0040370C:
	r4_300 = if_name2index(r4_285, out r11_1928, out r16_1726)
	r7_309 = CONVERT(Mem232[0x004324E4<p32>:byte], byte, word32)
	Mem315[&tLoc50:word32] = 0<32>
	sp_1605 = <invalid>
	dwLoc40 = r4_300
	branch r7_309 != 0xFE<32> l00403740
l0040372C:
	branch (CONVERT(Mem319[0x004324E5<p32>:byte], byte, word32) & 0xC0<32>) != 0x80<32> l00403750
l0040373A:
	Mem328[0x004324F4<p32>:word32] = r4_300
	goto l00403750
l00403740:
	branch r7_309 != 0xFF<32> l00403750
l00403746:
	branch (CONVERT(Mem319[0x004324E5<p32>:byte], byte, word32) & 0xF<32>) == 2<32> l0040373A
l00403750:
	modify_capability(r0, 1<32>, out r3_1929, out r4_1930, out r6_1931, out r7_1932, out r8_1933, out r11_1934, out r12_1935, out r17_1936)
	setsockopt(out r3_1937, out r4_368, out r5_1938, out r7_1939)
	r21 = r4_368
	branch r4_368 != 0xFFFFFFFF<32> l00403796
l0040376E:
	r22 = Mem376[0x004544B0<p32>:word32]
	strlen(r22, out r5_1958, out r6_1959, out r7_1960)
	setsockopt(out r3_1961, out r4_393, out r5_1962, out r7_1963)
	branch r4_393 != r4_368 l00403796
l0040378C:
	r4_1527 = 0x00411BBC<p32>
l00403790:
	r2 = perror(r4_1527, out r3, out r5_1921, out r6_1922, out r7_1923, out r8_1924, out r11_1925, out r12, out r17_1926)
	goto l00403626
l00403796:
	modify_capability(r0, 0<32>, out r3_1952, out r4_1953, out r6_1954, out r7_1955, out r8_1956, out r11_143, out r12_1957, out r17_233)
l0040379C:
	Mem427[0x004324DE<p32>:word16] = SLICE(fn0040359C(0x401<32>), word16, 0)
	r20 = 0xFFFFFFFF<32>
	branch connect(out r5_1927) != 0xFFFFFFFF<32> l004037BE
l004037B8:
	r4_1527 = 0x004105F8<p32>
	goto l00403790
l004037BE:
	branch getsockname() != 0xFFFFFFFF<32> l004037DA
l004037D4:
	r4_1527 = 0x00410600<p32>
	goto l00403790
l004037DA:
	Mem461[r17_233 + 2<i32>:word16] = 0<16>
	close(out r4_1940, out r6_1941, out r8_1942)
	branch Mem461[0x004544B0<p32>:word32] == 0<32> l0040382A
l004037E8:
	branch getifaddrs(r0, r11_143, out r11_484) == 0<32> l004037F8
l004037F2:
	r4_1527 = 0x00411BD8<p32>
	goto l00403790
l004037F8:
	r23 = Mem461[r17_233 + 16<i32>:word32]
	r20 = Mem461[0x004544B0<p32>:word32]
	r8_501 = Mem461[r17_233 + 20<i32>:word32]
	r21 = Mem461[r17_233 + 8<i32>:word32]
	r22 = Mem461[r17_233 + 12<i32>:word32]
	r19_504 = Mem461[&tLoc50:word32]
l0040380E:
	branch r19_504 != 0<32> l0040389E
l00403812:
	fprintf(out r7_1964)
l00403822:
	r11_143 = freeifaddrs(r0, Mem549[&tLoc50:word32], r11_484)
l0040382A:
	r19_128 = Mem568[0x004544B0<p32>:word32]
	branch r19_128 == 0<32> l00403864
l00403832:
	r7_570 = Mem568[0x00454554<p32>:word32]
	Mem576[0x00454554<p32>:word32] = r7_570 + 0x20<32>
	Mem589[sp_1605 + 64<i32>:word32] = 0x20<32>
	Mem591[sp_1605 + 68<i32>:word32] = 0x29<32>
	Mem593[sp_1605 + 72<i32>:word32] = 0x32<32>
	memset(r7_570 + 0x004314DC<p32> + 0xC<32>, 0<32>, 0x14<32>, out r6_1943, out r7_1944, out r8_1945, out r10_1946)
	sp_1605 = <invalid>
	Mem624[sp_1605 + 92<i32>:word32] = if_name2index(r19_128, out r11_143, out r16_1726)
l00403864:
	branch fn0040359C(0xFF00<32>) != (CONVERT(Mem638[0x00432500<p32>:uint16], uint16, word32) & fn0040359C(0xFF00<32>)) l0040394C
l0040387A:
	branch Mem638[0x00454514<p32>:word32] == 0<32> l0040393A
l00403884:
	branch Mem638[0x0043008C<p32>:word32] > 0x3E7<32> l00403920
l00403892:
	r5_1535 = Mem638[0x00412EF0<p32>:word32]
	r4_1536 = 0x00411BE4<p32>
	goto l004036BE
l0040389E:
	r17_507 = Mem506[r19_504 + 12<i32>:word32]
	branch r17_507 == 0<32> l004038DC
l004038A2:
	branch Mem506[r17_507:uint16] != 0xA<u16> l004038DC
l004038A8:
	branch strncmp(Mem506[r19_504 + 4<i32>:word32], r20, 3<32>, out r6_1965) != 0<32> l004038DC
l004038BA:
	branch (Mem513[r17_507 + 8<i32>:word32] - r21 | Mem513[r17_507 + 12<i32>:word32] - r22 | Mem513[r17_507 + 16<i32>:word32] - r23 | Mem513[r17_507 + 20<i32>:word32] - r8_501) == 0<32> l00403822
l004038DC:
	r19_504 = Mem540[r19_504:word32]
	goto l0040380E
l004038E0:
	r4_238 = Mem232[0x004544B0<p32>:word32]
	branch r4_238 == 0<32> l0040382A
l004038EA:
	r7_240 = CONVERT(Mem232[0x00430224<p32>:byte], byte, word32)
	branch r7_240 != 0xFE<32> l0040390C
l004038F4:
	branch (CONVERT(Mem232[0x00430225<p32>:byte], byte, word32) & 0xC0<32>) != 0x80<32> l0040382A
l00403904:
	sp_1605 = <invalid>
	Mem270[sp_1605 + 88<i32>:word32] = if_name2index(r4_238, out r11_143, out r16_1726)
	goto l0040382A
l0040390C:
	branch r7_240 != 0xFF<32> l0040382A
l00403914:
	branch (CONVERT(Mem232[0x00430225<p32>:byte], byte, word32) & 0xF<32>) != 2<32> l0040382A
l0040391E:
	goto l00403904
l00403920:
	r7_650 = Mem638[0x00430218<p32>:word32]
	branch r7_650 < 0<32> l0040393A
l0040392A:
	branch r7_650 == 2<32> l0040393A
l0040392E:
	r5_1535 = Mem638[0x00412EF0<p32>:word32]
	r4_1536 = 0x00411C14<p32>
	goto l004036BE
l0040393A:
	branch Mem638[0x00430218<p32>:word32] >= 0<32> l0040394C
l00403944:
	Mem654[0x00430218<p32>:word32] = 2<32>
l0040394C:
	branch Mem655[0x00430218<p32>:word32] < 0<32> l00403970
l00403956:
	branch fn00403C9A(out r5_1966, out r7_1967) != 0xFFFFFFFF<32> l00403970
l0040396A:
	r4_1527 = 0x00411C40<p32>
	goto l00403790
l00403970:
	branch __bit<word32,word32>(Mem655[0x004544EC<p32>:word32], 0xF<32>) l00403990
l0040397A:
	branch bind() != 0xFFFFFFFF<32> l00403990
l0040398A:
	r4_1527 = 0x00411C58<p32>
	goto l00403790
l00403990:
	r17_709 = Mem655[0x00430074<p32>:word32]
	branch r17_709 <u 8<32> l004039AC
l0040399A:
	branch Mem655[0x00430214<p32>:word32] >= 0<32> l004039AC
l004039A4:
	Mem712[0x00454508<p32>:word32] = 1<32>
l004039AC:
	malloc(r0, r17_709 + 0x1038<32>, r11_143, out r3_1968, out r4_738, out r6_1969, out r8_1970, out r11_1971)
	r19_128 = r4_738
	branch r4_738 != 0<32> l004039C4
l004039B8:
	r5_1535 = Mem748[0x00412EF0<p32>:word32]
	r4_1536 = 0x00410874<p32>
	goto l004036BE
l004039C4:
	Mem756[sp_1605 + 8<i32>:word32] = 1<32>
	branch fn00403C9A(out r5_776, out r7_1972) == 0<32> l004039EE
l004039DE:
	fputs_unlocked(0x00410710<p32>, Mem767[0x00412EF0<p32>:word32], out r3_1973, out r4_1974, out r5_776, out r6_1975, out r8_1976, out r11_1977, out r12_1978)
	Mem801[sp_1605 + 8<i32>:word32] = 0<32>
l004039EE:
	sock_setbufs(r5_776 *s 0x118<32> + (Mem802[0x00430074<p32>:word32] + 8<32>))
	branch Mem813[r16_1726 + 4<i32>:word32] != 3<32> l00403A96
l00403A18:
	branch fn00403C9A(out r5_1979, out r7_1980) >= 0<32> l00403A42
l00403A34:
	fputs_unlocked(0x00411C70<p32>, Mem837[0x00412EF0<p32>:word32], out r3_1985, out r4_1986, out r5_1987, out r6_1988, out r8_1989, out r11_1990, out r12_1991)
l00403A42:
	memset(&tLoc50, 0xFF<32>, 0x20<32>, out r6_1981, out r7_1982, out r8_1983, out r10_1984)
	branch Mem837[r16_1726 + 8<i32>:word32] != 0<32> l00403A60
l00403A54:
	Mem888[&tLoc50:word32] = __ins<word32,word32>(Mem837[&tLoc50:word32], 0<32>, 1<32>, 1<32>)
l00403A60:
	branch Mem889[0x00430214<p32>:word32] < 0<32> l00403A90
l00403A6E:
	r7_893 = __ins<word32,word32>(dwLoc40, 0<32>, 0xC<32>, 1<32>)
l00403A72:
	dwLoc40 = r7_893
	branch fn00403C9A(out r5_2021, out r7_2022) >= 0<32> l00403A96
l00403A8A:
	r4_1527 = 0x00411CA4<p32>
	goto l00403790
l00403A90:
	r7_893 = __ins<word32,word32>(dwLoc40, 0<32>, 1<32>, 1<32>)
	goto l00403A72
l00403A96:
	branch __bit<word32,word32>(Mem916[0x004544EC<p32>:word32], 0x10<32>) l00403ABE
l00403AA0:
	branch fn00403C9A(out r5_1992, out r7_1993) != 0xFFFFFFFF<32> l00403ABE
l00403AB8:
	r4_1527 = 0x00411CC0<p32>
	goto l00403790
l00403ABE:
	branch __bit<word32,word32>(Mem937[0x004544EC<p32>:word32], 0x11<32>) l00403B00
l00403AC8:
	r20 = 0xFFFFFFFF<32>
	branch fn00403C9A(out r5_1996, out r7_1997) != 0xFFFFFFFF<32> l00403AE6
l00403AE0:
	r4_1527 = 0x00411CE4<p32>
	goto l00403790
l00403AE6:
	branch fn00403C9A(out r5_1998, out r7_1999) != 0xFFFFFFFF<32> l00403B00
l00403AFA:
	r4_1527 = 0x00411D04<p32>
	goto l00403790
l00403B00:
	r4_986 = fn00403C9A(out r5_1994, out r7_1995)
	r20 = r4_986
	branch r4_986 != 0xFFFFFFFF<32> l00403B36
l00403B1C:
	branch fn00403C9A(out r5_2000, out r7_2001) != r4_986 l00403B36
l00403B30:
	r4_1527 = 0x00411D20<p32>
	goto l00403790
l00403B36:
	branch __bit<word32,word32>(Mem977[0x004544EC<p32>:word32], 0xA<32>) l00403B5A
l00403B40:
	branch fn00403C9A(out r5_2002, out r7_2003) != 0xFFFFFFFF<32> l00403B5A
l00403B54:
	r4_1527 = 0x00411D38<p32>
	goto l00403790
l00403B5A:
	branch __bit<word32,word32>(Mem977[0x004544EC<p32>:word32], 9<32>) l00403BF2
l00403B64:
	sp_1045 = sp_1605 - __ins<word32,word32>(Mem977[0x00454554<p32>:word32] + 0x2F<32>, 0<32>, 0<32>, 1<32>)
	memset(sp_1045, 0<32>, 0x20<32>, out r6_2004, out r7_2005, out r8_2006, out r10_2007)
	Mem1062[sp_1045 + 16<i32>:word32] = htonl(__ext<word32,word32>(Mem977[0x004544BC<p32>:word32], 0<32>, 0x14<32>))
	Mem1064[sp_1045 + 21<i32>:byte] = 1<8>
	Mem1065[sp_1045 + 22<i32>:word16] = 1<16>
	Mem1066[sp_1045 + 20<i32>:byte] = 0<8>
	memcpy(sp_1045, 0x00432500<p32>, 0x10<32>, out r3_2008, out r5_2009, out r6_2010, out r7_2011, out r8_2012, out r9_2013, out r11_2014, out r12_2015, out r13_2016, out r14_2017)
	r20 = sp_1605
	r21 = 0xFFFFFFFF<32>
	branch fn00403C9A(out r5_2018, out r7_1095) != 0xFFFFFFFF<32> l00403BCA
l00403BC2:
	r4_1527 = 0x00411D50<p32>
	goto l00403790
l00403BCA:
	Mem1102[0x004544BC<p32>:word32] = r7_1095
	Mem1103[sp_1045 + 4<i32>:word32] = r7_1095
	branch fn00403C9A(out r5_2019, out r7_2020) != 0xFFFFFFFF<32> l00403BF0
l00403BE8:
	r4_1527 = 0x00411D64<p32>
	goto l00403790
l00403BF0:
l00403BF2:
	pr_addr(r0, 0x004324F8<p32>, Mem1121[0x004544C0<p32>:word32], r4_738, r20, r21, r22, r23, r28, fp + 0xFFFFF000<32>, ra)
	fn00403C9E(0x00411D78<p32>)
	r4_1339 = Mem1121[0x004544BC<p32>:word32]
	branch r4_1339 == 0<32> l00403C1E
l00403C12:
	ntohl(r4_1339)
	fn00403C9E(0x00411D88<p32>)
l00403C1E:
	r18_1364 = Mem1121[0x004544EC<p32>:word32]
	branch Mem1121[0x004544B0<p32>:word32] != 0<32> l00403C30
l00403C2C:
	branch __bit<word32,word32>(r18_1364, 0xF<32>) l00403C60
l00403C30:
	Mem1369[0x004544EC<p32>:word32] = r18_1364 | 4<32>
	pr_addr(r0, 0x0043021C<p32>, r18_1364, r4_738, r20, r21, r22, r23, r28, fp + 0xFFFFF000<32>, ra)
	branch Mem1369[0x004544B0<p32>:word32] != 0<32> l00403C54
l00403C50_1:
l00403C54:
	fn00403C9E(0x0041089C<p32>)
	Mem1431[0x004544EC<p32>:word32] = r18_1364
l00403C60:
	fn00403C9E(0x00411D98<p32>)
	setup(r0, r16_1726)
	main_loop(r0, drop_capabilities(r0), 0x00430238<p32>, r16_1726, r4_738, r21, r22)
l00403C7E:
	Mem1521[0x004314D4<p32>:word32] = 0x00432500<p32>
	Mem1523[0x004314D0<p32>:word32] = 0x10<32>
	Mem1526[0x00430210<p32>:word32] = r0
	goto l004035E0
ping6_run_exit:


word32 fn00403C9A(word32 & r5Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_run
// MayUse: 
// LiveOut: r4:[0..31]-ping6_run r5:[0..31]-ping6_run r7:[0..31]-ping6_run
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00403C9A_entry:
l00403C9A:
l00403C9A_thunk_setsockopt:
	setsockopt(out r3_16, out r4_8, out r5_9, out r7_11)
	r5Out = r5_9
	r7Out = r7_11
	return r4_8
fn00403C9A_exit:


void fn00403C9E(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00403C9E_entry:
l00403C9E:
l00403C9E_thunk_printf:
	printf(r4, out r4_23, out r7_24, out r11_25, out r14_26)
	return
fn00403C9E_exit:


word32 __divdi3(ui64 r5_r4, word32 r3, word32 r6, word32 r7, word32 & r4Out, word32 & r5Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00402A9A
// MayUse:  r3:[0..31] r6:[0..31] r7:[0..31] Sequence r5:r4:[0..63]
// LiveOut: r11:[0..31]-fn00402A9A r3:[0..31]-fn00402A9A r4:[0..31]-fn00402A9A r5:[0..31]-fn00402A9A
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__divdi3_entry:
	r5 = SLICE(r5_r4, word32, 32)
	r4 = SLICE(r5_r4, word32, 0)
l00403CB0:
	r2_14 = 0<32>
	r5_r4_354 = r5_r4 (alias)
	branch r5 >= 0<32> l00403CCE
l00403CBA:
	r4_11 = -r4
	r2_14 = 0xFFFFFFFF<32>
	r5_r4_354 = SEQ(-r5 - CONVERT(r4_11 >u 0<32>, bool, word32), r4_11) (alias)
l00403CCE:
	r5_34 = SLICE(r5_r4_354, word32, 32) (alias)
	r4_31 = SLICE(r5_r4_354, word32, 0) (alias)
	r12_r8_357 = SEQ(r7, r6) (alias)
	branch r7 >= 0<32> l00403CE6
l00403CD2:
	r8_18 = -r6
	r2_14 = ~r2_14
	r12_r8_357 = SEQ(-r7 - CONVERT(r8_18 >u 0<32>, bool, word32), r8_18) (alias)
l00403CE6:
	r8_24 = SLICE(r12_r8_357, word32, 0) (alias)
	r12_27 = SLICE(r12_r8_357, word32, 32) (alias)
	r9_113 = r8_24
	r11_102 = r12_27
	r10_116 = r4_31
	r7_165 = r5_34
	branch r12_27 != 0<32> l00403E44
l00403CF0:
	branch r5_34 >=u r8_24 l00403D94
l00403CF4:
	r6_170 = __count_leading_zeros<word32>(r8_24)
	branch r6_170 == 0<32> l00403D10
l00403CFA:
	r9_113 = r8_24 << r6_170
	r7_165 = r5_34 << r6_170 | r4_31 >>u -r6_170
	r10_116 = r4_31 << r6_170
l00403D10:
	r8_179 = __ext<word32,word32>(r9_113, 0<32>, 0x10<32>)
	r4_180 = r9_113 >>u 0x10<32>
	r5_186 = r8_179 *s r3
	r6_194 = r7_165 %u r4_180 << 0x10<32> | r10_116 >>u 0x10<32>
	r7_195 = r3
	branch r6_194 >=u r5_186 l00403D46
l00403D34:
	r6_194 = r6_194 + r9_113
	r7_195 = r3 + 0xFFFFFFFF<32>
	branch r6_194 <u r9_113 l00403D46
l00403D3C:
	branch r6_194 >=u r5_186 l00403D46
l00403D40:
	r7_195 = r3 + 0xFFFFFFFE<32>
	r6_194 = r6_194 + r9_113
l00403D46:
	r8_207 = r8_179 *s r3
	r10_213 = (r6_194 - r5_186) %u r4_180 << 0x10<32> | __ext<word32,word32>(r10_116, 0<32>, 0x10<32>)
	r4_214 = r3
	branch r10_213 >=u r8_207 l00403D76
l00403D66:
	r10_216 = r10_213 + r9_113
	r4_214 = r3 + 0xFFFFFFFF<32>
	branch r10_216 <u r9_113 l00403D76
l00403D6E:
	branch r10_216 >=u r8_207 l00403D76
l00403D72:
	r4_214 = r3 + 0xFFFFFFFE<32>
l00403D76:
	r7_101 = r7_195 << 0x10<32> | r4_214
l00403D7C:
	r4_226 = r7_101
	r5_231 = r11_102
	branch r2_14 == 0<32> l00403D92
l00403D84:
	r4_226 = -r7_101
	r5_231 = -r11_102 - CONVERT(r4_226 >u 0<32>, bool, word32)
l00403D92:
	r4Out = r4_226
	r5Out = r5_231
	r11Out = r11_102
	return r3
l00403D94:
	branch r8_24 != 0<32> l00403D9E
l00403D98:
l00403D9E:
	r7_111 = __count_leading_zeros<word32>(r8_24)
	branch r7_111 != 0<32> l00403DAE
l00403DA4:
	r7_165 = r5_34 - r8_24
	r11_102 = 1<32>
	goto l00403D10
l00403DAE:
	r9_113 = r8_24 << r7_111
	r8_r9_249 = r5_r4_354 >>u r7_111
	r7_121 = __ext<word32,word32>(r9_113, 0<32>, 0x10<32>)
	r8_122 = SLICE(r8_r9_249, word32, 32) (alias)
	r9_46 = SLICE(r8_r9_249, word32, 0) (alias)
	r10_116 = r4_31 << r7_111
	r4_130 = r7_121 *s r3
	r6_134 = (r5_34 >>u 0x20<32> - r7_111) %u (r9_113 >>u 0x10<32>) << 0x10<32> | r8_122 >>u 0x10<32>
	r11_135 = r3
	branch r6_134 >=u r4_130 l00403E06
l00403DF4:
	r6_134 = r6_134 + r9_113
	r11_135 = r3 + 0xFFFFFFFF<32>
	branch r6_134 <u r9_113 l00403E06
l00403DFC:
	branch r6_134 >=u r4_130 l00403E06
l00403E00:
	r11_135 = r3 + 0xFFFFFFFE<32>
	r6_134 = r6_134 + r9_113
l00403E06:
	r7_147 = r7_121 *s r3
	r5_153 = (r6_134 - r4_130) %u (r9_113 >>u 0x10<32>) << 0x10<32> | __ext<word32,word32>(r8_122, 0<32>, 0x10<32>)
	r6_154 = r3
	branch r5_153 >=u r7_147 l00403E38
l00403E26:
	r5_153 = r5_153 + r9_113
	r6_154 = r3 + 0xFFFFFFFF<32>
	branch r5_153 <u r9_113 l00403E38
l00403E2E:
	branch r5_153 >=u r7_147 l00403E38
l00403E32:
	r6_154 = r3 + 0xFFFFFFFE<32>
	r5_153 = r5_153 + r9_113
l00403E38:
	r7_165 = r5_153 - r7_147
	r11_102 = r11_135 << 0x10<32> | r6_154
	goto l00403D10
l00403E44:
	branch r5_34 <u r12_27 l00403F24
l00403E48:
	r13_38 = __count_leading_zeros<word32>(r12_27)
	branch r13_38 != 0<32> l00403E60
l00403E50:
	branch r12_27 <u r5_34 l00403F2A
l00403E54:
	r7_101 = CONVERT(r4_31 <u r8_24, bool, word32) ^ 1<32>
l00403E5C:
	r11_102 = 0<32>
	goto l00403D7C
l00403E60:
	r12_44 = SLICE(r12_r8_357 >>u r13_38, word32, 32) (alias)
	r5_45 = r5_34 << r13_38
	r10_47 = __ext<word32,word32>(r12_44, 0<32>, 0x10<32>)
	r3_48 = r9_46 | r5_45
	r6_53 = r10_47 *s r5_45
	r8_56 = r8_24 << r13_38
	r11_57 = (r5_34 >>u 0x20<32> - r13_38) %u (r12_44 >>u 0x10<32>) << 0x10<32> | r3_48 >>u 0x10<32>
	r9_58 = r5_45
	branch r11_57 >=u r6_53 l00403EC4
l00403EAE:
	r11_57 = r11_57 + r12_44
	r9_58 = r5_45 + 0xFFFFFFFF<32>
	branch r11_57 <u r12_44 l00403EC4
l00403EB8:
	branch r11_57 >=u r6_53 l00403EC4
l00403EBC:
	r9_58 = r5_45 + 0xFFFFFFFE<32>
	r11_57 = r11_57 + r12_44
l00403EC4:
	r3 = __ext<word32,word32>(r3_48, 0<32>, 0x10<32>)
	r10_69 = r10_47 *s r6_53
	r5_75 = (r11_57 - r6_53) %u (r12_44 >>u 0x10<32>) << 0x10<32> | r3
	r7_76 = r6_53
	branch r5_75 >=u r10_69 l00403EFA
l00403EE4:
	r5_75 = r5_75 + r12_44
	r7_76 = r6_53 + 0xFFFFFFFF<32>
	branch r5_75 <u r12_44 l00403EFA
l00403EEE:
	branch r5_75 >=u r10_69 l00403EFA
l00403EF2:
	r7_76 = r6_53 + 0xFFFFFFFE<32>
	r5_75 = r5_75 + r12_44
l00403EFA:
	r7_101 = r9_58 << 0x10<32> | r7_76
	r10_87 = r5_75 - r10_69
	r6_92 = r7_101 *s r8_56
	r8_93 = SLICE(r7_101 *u64 r8_56, word32, 32)
	branch r10_87 <u r8_93 l00403F20
l00403F12:
	r11_102 = 0<32>
	branch r10_87 != r8_93 l00403D7C
l00403F18:
	branch r4_31 << r13_38 >=u r6_92 l00403D7C
l00403F20:
	r7_101 = r7_101 + 0xFFFFFFFF<32>
	goto l00403E5C
l00403F24:
	r11_102 = 0<32>
	r7_101 = 0<32>
	goto l00403D7C
l00403F2A:
	r11_102 = 0<32>
	r7_101 = 1<32>
	goto l00403D7C
__divdi3_exit:


void __moddi3(ui64 r5_r4, word32 r6, word32 r7, word32 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      finish
// MayUse:  r14:[0..31] r6:[0..31] r7:[0..31] Sequence r5:r4:[0..63]
// LiveOut:
// Trashed: r10 r11 r2 r25 r4 r5 r7 r8 r9
// Preserved: hi lo r12 r13 r3 r6 sp
__moddi3_entry:
	r5 = SLICE(r5_r4, word32, 32)
	r4 = SLICE(r5_r4, word32, 0)
l00403F30:
	r11_14 = 0<32>
	r5_r4_448 = r5_r4 (alias)
	branch r5 >= 0<32> l00403F4E
l00403F3A:
	r4_11 = -r4
	r11_14 = 0xFFFFFFFF<32>
	r5_r4_448 = SEQ(-r5 - CONVERT(r4_11 >u 0<32>, bool, word32), r4_11) (alias)
l00403F4E:
	r4_29 = SLICE(r5_r4_448, word32, 0) (alias)
	r5_217 = SLICE(r5_r4_448, word32, 32) (alias)
	r10_r2_445 = SEQ(r7, r6) (alias)
	branch r7 >= 0<32> l00403F62
l00403F52:
	r2_18 = -r6
	r10_r2_445 = SEQ(-r7 - CONVERT(r2_18 >u 0<32>, bool, word32), r2_18) (alias)
l00403F62:
	r2_22 = SLICE(r10_r2_445, word32, 0) (alias)
	r10_31 = SLICE(r10_r2_445, word32, 32) (alias)
	r9_147 = r2_22
	r7_219 = r5_217
	r8_161 = r4_29
	branch r10_31 != 0<32> l004040BA
l00403F6A:
	branch r5_217 >=u r2_22 l00404000
l00403F6E:
	r2_214 = __count_leading_zeros<word32>(r2_22)
	branch r2_214 == 0<32> l00403F8C
l00403F76:
	r5_217 = r4_29 >>u -r2_214
	r9_147 = r2_22 << r2_214
	r7_219 = r5_217 << r2_214 | r5_217
	r8_161 = r4_29 << r2_214
l00403F8C:
	r4_191 = __ext<word32,word32>(r9_147, 0<32>, 0x10<32>)
	r10_192 = r9_147 >>u 0x10<32>
	r5_206 = r5_217 *s r4_191
	r7_233 = r7_219 %u r10_192 << 0x10<32> | r8_161 >>u 0x10<32>
	branch r7_233 >=u r5_206 l00403FB8
l00403FAC:
	r7_233 = r7_233 + r9_147
	branch r7_233 <u r9_147 l00403FB8
l00403FB2:
	branch r7_233 >=u r5_206 l00403FB8
l00403FB6:
	r7_233 = r7_233 + r9_147
l00403FB8:
	r7_213 = r7_233 - r5_206
l00403FBA:
	r4_247 = r4_191 *s r5_206
	r8_257 = r7_213 %u r10_192 << 0x10<32> | __ext<word32,word32>(r8_161, 0<32>, 0x10<32>)
	branch r8_257 >=u r4_247 l00403FE0
l00403FD4:
	r8_261 = r8_257 + r9_147
	branch r8_261 <u r9_147 l00403FE0
l00403FDA:
	branch r8_261 >=u r4_247 l00403FE0
l00403FDE:
l00403FE0:
l00403FEA:
	branch r11_14 == 0<32> l00403FFE
l00403FEE:
l00403FFE:
	return
l00404000:
	branch r2_22 != 0<32> l0040400A
l00404004:
l0040400A:
	r2_145 = __count_leading_zeros<word32>(r2_22)
	branch r2_145 != 0<32> l00404046
l00404012:
	r5_187 = r5_217 - r2_22
l00404016:
	r4_191 = __ext<word32,word32>(r9_147, 0<32>, 0x10<32>)
	r10_192 = r9_147 >>u 0x10<32>
	r5_206 = r8_161 >>u 0x10<32>
	r6_200 = r6 *s r4_191
	r7_208 = r5_187 %u r10_192 << 0x10<32> | r5_206
	branch r7_208 >=u r6_200 l00404042
l00404036:
	r7_208 = r7_208 + r9_147
	branch r7_208 <u r9_147 l00404042
l0040403C:
	branch r7_208 >=u r6_200 l00404042
l00404040:
	r7_208 = r7_208 + r9_147
l00404042:
	r7_213 = r7_208 - r6_200
	goto l00403FBA
l00404046:
	r9_147 = r2_22 << r2_145
	r5_159 = __ext<word32,word32>(r9_147, 0<32>, 0x10<32>)
	r7_158 = SLICE(r5_r4_448 >>u r2_145, word32, 32) (alias)
	r10_160 = r10_31 *s r5_159
	r8_161 = r4_29 << r2_145
	r6_165 = (r5_217 >>u 0x20<32> - r2_145) %u (r9_147 >>u 0x10<32>) << 0x10<32> | r7_158 >>u 0x10<32>
	branch r6_165 >=u r10_160 l00404090
l00404084:
	r6_165 = r6_165 + r9_147
	branch r6_165 <u r9_147 l00404090
l0040408A:
	branch r6_165 >=u r10_160 l00404090
l0040408E:
	r6_165 = r6_165 + r9_147
l00404090:
	r6_177 = (r6_165 - r10_160) %u (r9_147 >>u 0x10<32>)
	r4_175 = (r7_158 >>u 0x10<32>) *s r5_159
	r6 = r6_177 << 0x10<32>
	r5_181 = r7_158 & 0xFFFF<32> | r6_177 << 0x10<32>
	branch r5_181 >=u r4_175 l004040B6
l004040AA:
	r5_181 = r5_181 + r9_147
	branch r5_181 <u r9_147 l004040B6
l004040B0:
	branch r5_181 >=u r4_175 l004040B6
l004040B4:
	r5_181 = r5_181 + r9_147
l004040B6:
	r5_187 = r5_181 - r4_175
	goto l00404016
l004040BA:
	branch r5_217 <u r10_31 l00403FEA
l004040BE:
	r3_33 = __count_leading_zeros<word32>(r10_31)
	branch r3_33 != 0<32> l004040E0
l004040C6:
	branch r10_31 <u r5_217 l004040CE
l004040CA:
	branch r4_29 <u r2_22 l004040DC
l004040CE:
l004040DC:
	goto l00403FEA
l004040E0:
	r12_40 = SLICE(r10_r2_445 >>u r3_33, word32, 32) (alias)
	r5_r4_304 = r5_r4_448 << r3_33
	r7_45 = __ext<word32,word32>(r12_40, 0<32>, 0x10<32>)
	r5_44 = SLICE(r5_r4_304, word32, 32) (alias)
	r8_37 = r2_22 << r3_33
	r4_55 = SLICE(r5_r4_304, word32, 0) (alias)
	r6_52 = r7_45 *s r14
	r2_56 = (r5_217 >>u 0x20<32> - r3_33) %u (r12_40 >>u 0x10<32>) << 0x10<32> | r5_44 >>u 0x10<32>
	r10_57 = r14
	branch r2_56 >=u r6_52 l00404146
l00404130:
	r2_56 = r2_56 + r12_40
	r10_57 = r14 + 0xFFFFFFFF<32>
	branch r2_56 <u r12_40 l00404146
l0040413A:
	branch r2_56 >=u r6_52 l00404146
l0040413E:
	r10_57 = r14 + 0xFFFFFFFE<32>
	r2_56 = r2_56 + r12_40
l00404146:
	r2_71 = r7_45 *s r14
	r7_75 = (r2_56 - r6_52) %u (r12_40 >>u 0x10<32>) << 0x10<32> | r5_44 & 0xFFFF<32>
	r5_76 = r14
	branch r7_75 >=u r2_71 l0040417C
l00404166:
	r7_75 = r7_75 + r12_40
	r5_76 = r14 + 0xFFFFFFFF<32>
	branch r7_75 <u r12_40 l0040417C
l00404170:
	branch r7_75 >=u r2_71 l0040417C
l00404174:
	r5_76 = r14 + 0xFFFFFFFE<32>
	r7_75 = r7_75 + r12_40
l0040417C:
	r6_89 = r10_57 << 0x10<32> | r5_76
	r7_87 = r7_75 - r2_71
	r10_92 = r6_89 *s r8_37
	r6_93 = SLICE(r6_89 *u64 r8_37, word32, 32)
	branch r7_87 <u r6_93 l0040419C
l00404196:
	branch r6_93 != r7_87 l004041AC
l00404198:
	branch r4_55 >=u r10_92 l004041AC
l0040419C:
l004041AC:
	goto l00403FEA
__moddi3_exit:


int32 __gtdf2(real32 r4, real32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4:[0..31]-__gtdf2
// Trashed: r4
// Preserved: sp
__gtdf2_entry:
l004041D0:
	r10_6 = __ext<word32,word32>(r5, 4<32>, 0xB<32>)
	r8_8 = __ext<word32,word32>(r5, 0<32>, 0x14<32>)
	r9_10 = __ext<word32,word32>(r7, 0<32>, 0x14<32>)
	r11_11 = __ext<word32,word32>(r7, 4<32>, 0xB<32>)
	r5_15 = r5 >>u 0x1F<32>
	branch r10_6 != 0x7FF<32> l004041FC
l004041F4:
	branch (r8_8 | r4) != 0<32> l00404254
l004041FC:
	branch r11_11 != 0x7FF<32> l00404208
l00404200:
	branch (r9_10 | r6) != 0<32> l00404254
l00404208:
	r2_26 = 0<32>
	branch r10_6 != 0<32> l00404216
l0040420E:
	r2_26 = CONVERT((r8_8 | r4) <u 1<32>, bool, word32)
l00404216:
	branch r11_11 != 0<32> l00404220
l0040421A:
	branch (r9_10 | r6) == 0<32> l0040425A
l00404220:
	branch r2_26 == 0<32> l00404260
l00404224:
	r5_15 = 0xFFFFFFFF<32>
	branch r7 >>u 0x1F<32> == 0<32> l0040422A
l00404226_1:
	r5_15 = r7 >>u 0x1F<32>
l0040422A:
	return r5_15
l0040422E:
	branch r10_6 >= r11_11 l0040423A
l00404232:
	branch r5 >>u 0x1F<32> != 0<32> l00404238
l00404234_1:
	r5_15 = 0xFFFFFFFF<32>
l00404238:
	goto l0040422A
l0040423A:
	branch r9_10 <u r8_8 l00404266
l0040423E:
	branch r8_8 != r9_10 l0040424C
l00404242:
	branch r6 <u r4 l00404266
l00404246:
	branch r4 <u r6 l00404232
l0040424A:
	goto l00404250
l0040424C:
	branch r8_8 <u r9_10 l00404232
l00404250:
	r5_15 = 0<32>
	goto l0040422A
l00404254:
	r5_15 = 0xFFFFFFFE<32>
	goto l0040422A
l0040425A:
	branch r2_26 != 0<32> l00404250
l0040425E:
	goto l00404266
l00404260:
	branch r5 >>u 0x1F<32> != r7 >>u 0x1F<32> l00404266
l00404262:
	branch r11_11 >= r10_6 l0040422E
l00404266:
	r7_70 = 0xFFFFFFFF<32>
	branch r5 >>u 0x1F<32> != 0<32> l0040426E
l0040426A_1:
	r7_70 = 1<32>
l0040426E:
	r5_15 = r7_70
	goto l0040422A
__gtdf2_exit:


int32 __ltdf2(real32 r4, real32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4:[0..31]-__ltdf2
// Trashed: r4
// Preserved:
__ltdf2_entry:
l00404280:
	r11_6 = __ext<word32,word32>(r5, 4<32>, 0xB<32>)
	r9_8 = __ext<word32,word32>(r5, 0<32>, 0x14<32>)
	r10_10 = __ext<word32,word32>(r7, 0<32>, 0x14<32>)
	r2_11 = __ext<word32,word32>(r7, 4<32>, 0xB<32>)
	branch r11_6 != 0x7FF<32> l004042B0
l004042A4:
	r8_20 = 2<32>
	branch (r9_8 | r4) != 0<32> l004042E4
l004042B0:
	branch r2_11 != 0x7FF<32> l004042C0
l004042B4:
	r8_20 = 2<32>
	branch (r10_10 | r6) != 0<32> l004042E4
l004042C0:
	r3_27 = 0<32>
	branch r11_6 != 0<32> l004042CE
l004042C6:
	r3_27 = CONVERT((r9_8 | r4) <u 1<32>, bool, word32)
l004042CE:
	branch r2_11 != 0<32> l004042D8
l004042D2:
	branch (r10_10 | r6) == 0<32> l00404312
l004042D8:
	branch r3_27 == 0<32> l0040431A
l004042DC:
	r8_20 = 0xFFFFFFFF<32>
	branch r7 >>u 0x1F<32> == 0<32> l004042E4
l004042E0_1:
	r8_20 = r7 >>u 0x1F<32>
l004042E4:
	return r8_20
l004042E8:
	branch r11_6 >= r2_11 l004042F6
l004042EC:
	r8_20 = 0xFFFFFFFF<32>
	branch r5 >>u 0x1F<32> == 0<32> l004042F4
l004042F0_1:
	r8_20 = r5 >>u 0x1F<32>
l004042F4:
	goto l004042E4
l004042F6:
	branch r10_10 <u r9_8 l00404320
l004042FA:
	branch r9_8 != r10_10 l0040430A
l004042FE:
	branch r6 <u r4 l00404320
l00404302:
	r8_20 = 0<32>
	branch r4 <u r6 l004042EC
l00404308:
	goto l004042E4
l0040430A:
	r8_20 = 0<32>
	branch r9_8 <u r10_10 l004042EC
l00404310:
	goto l004042E4
l00404312:
	r8_20 = 0<32>
	branch r3_27 != 0<32> l004042E4
l00404318:
	goto l00404320
l0040431A:
	branch r5 >>u 0x1F<32> != r7 >>u 0x1F<32> l00404320
l0040431C:
	branch r2_11 >= r11_6 l004042E8
l00404320:
	r8_20 = 1<32>
	branch r5 >>u 0x1F<32> == 0<32> l0040432A
l00404326_1:
	r8_20 = 0xFFFFFFFF<32>
l0040432A:
	goto l004042E4
__ltdf2_exit:


real64 __muldf3(real64 r4:r5, real64 r6:r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
//      __floatscan
//      frexpl
//      fn0040CFCC
//      fmod
// MayUse:  Sequence r4:r5:[0..95] Sequence r6:r7:[0..95]
// LiveOut: Sequence r4:r5:[0..63]-__muldf3
// Trashed: r4:r5
// Preserved: sp
__muldf3_entry:
	r5_5 = SLICE(r4:r5, word32, 0)
	r6_9 = SLICE(r6:r7, word32, 32)
	r4_12 = SLICE(r4:r5, word32, 32)
	r7_52 = SLICE(r6:r7, word32, 0)
l00404330:
	r10_104 = __ext<word32,word32>(r5_5, 4<32>, 0xB<32>)
	r11_14 = __ext<word32,word32>(r5_5, 0<32>, 0x14<32>)
	r5_11 = r5_5 >>u 0x1F<32>
	branch r10_104 == 0<32> l004043BE
l00404342:
	branch r10_104 == 0x7FF<32> l00404410
l0040434A:
	r11_14 = r4_12 >>u 0x1D<32> | 0x8000000<32> | r11_14 << 3<32>
	r8_13 = r4_12 << 3<32>
	r10_104 = r10_104 + 0xFFFFFC01<32>
l00404366:
	r13_111 = 0<32>
l00404368:
	r6_101 = __ext<word32,word32>(r7_52, 4<32>, 0xB<32>)
	r4_141 = __ext<word32,word32>(r7_52, 0<32>, 0x14<32>)
	branch r6_101 == 0<32> l00404432
l00404378:
	branch r6_101 == 0x7FF<32> l00404482
l00404380:
	r4_141 = r6_9 >>u 0x1D<32> | 0x8000000<32> | r4_141 << 3<32>
	r6_101 = r6_101 + 0xFFFFFC01<32>
	r9_145 = r6_9 << 3<32>
l0040439A:
	r3_100 = 0<32>
l0040439C:
	r6_109 = r6_101 + r10_104
	r10_117 = r13_111 << 2<32> | r3_100
	r2_130 = r5_5 >>u 0x1F<32> ^ r7_52 >>u 0x1F<32>
	r12_132 = r6_109 + 1<32>
	branch r10_117 >=u 0x10<32> l004044A4
l004043B4:
	switch (r10_117 + 0xFFFFFFFF<32>) { l004045E0 l004045E0 l004045DE l004045CE l004045CE l0040466E l004045DE l004045CE l0040466E l004045CE l004045DE l004045CC l004045CC l004045CC l0040459E }
l004043BE:
	r8_13 = r11_14 | r4_12
	branch r8_13 == 0<32> l00404420
l004043C6:
	r9_17 = __count_leading_zeros<word32>(r11_14)
	branch r11_14 != 0<32> l004043D6
l004043CE:
	r9_17 = __count_leading_zeros<word32>(r4_12) + 0x20<32>
l004043D6:
	r6_21 = r9_17 + 0xFFFFFFF5<32>
	branch r6_21 >= 0x1D<32> l00404404
l004043DE:
	r8_27 = r9_17 + 0xFFFFFFF8<32>
	r8_13 = r4_12 << r8_27
	r11_14 = r4_12 >>u 0x1D<32> - r6_21 | r11_14 << r8_27
l004043FA:
	r10_104 = 0xFFFFFC0D<32> - r9_17
	goto l00404366
l00404404:
	r8_13 = 0<32>
	r11_14 = r4_12 << r9_17 + 0xFFFFFFD8<32>
	goto l004043FA
l00404410:
	r8_13 = r11_14 | r4_12
	branch r8_13 == 0<32> l0040442A
l00404418:
	r8_13 = r4_12
	r13_111 = 3<32>
	goto l00404368
l00404420:
	r11_14 = 0<32>
	r10_104 = 0<32>
	r13_111 = 1<32>
	goto l00404368
l0040442A:
	r11_14 = 0<32>
	r13_111 = 2<32>
	goto l00404368
l00404432:
	r9_145 = r4_141 | r6_9
	branch r9_145 == 0<32> l00404492
l0040443A:
	r2_67 = __count_leading_zeros<word32>(r4_141)
	branch r4_141 != 0<32> l00404448
l00404440:
	r2_67 = __count_leading_zeros<word32>(r6_9) + 0x20<32>
l00404448:
	r6_71 = r2_67 + 0xFFFFFFF5<32>
	branch r6_71 >= 0x1D<32> l00404476
l00404450:
	r9_77 = r2_67 + 0xFFFFFFF8<32>
	r9_145 = r6_9 << r9_77
	r4_141 = r6_9 >>u 0x1D<32> - r6_71 | r4_141 << r9_77
l0040446C:
	r6_101 = 0xFFFFFC0D<32> - r2_67
	goto l0040439A
l00404476:
	r9_145 = 0<32>
	r4_141 = r6_9 << r2_67 + 0xFFFFFFD8<32>
	goto l0040446C
l00404482:
	r9_145 = r4_141 | r6_9
	branch r9_145 == 0<32> l0040449C
l0040448A:
	r9_145 = r6_9
	r3_100 = 3<32>
	goto l0040439C
l00404492:
	r4_141 = 0<32>
	r6_101 = 0<32>
	r3_100 = 1<32>
	goto l0040439C
l0040449C:
	r4_141 = 0<32>
	r3_100 = 2<32>
	goto l0040439C
l004044A4:
	r3_144 = r8_13 *s r4_141
	r10_161 = r3_144 + SLICE(r8_13 *u64 r9_145, word32, 32)
	r8_158 = SLICE(r8_13 *u64 r4_141, word32, 32)
	r5_159 = r9_145 *s r11_14
	r3_163 = CONVERT(r10_161 <u r3_144, bool, word32)
	r15_164 = r8_158 + r4_141 *s r11_14
	r10_165 = r10_161 + r5_159
	r9_160 = SLICE(r9_145 *u64 r11_14, word32, 32)
	r25_166 = r3_163 + r15_164
	r5_167 = CONVERT(r10_165 <u r5_159, bool, word32)
	r24_168 = r9_160 + r25_166
	r14_169 = r5_167 + r24_168
	r11_14 = (CONVERT(r15_164 <u r8_158, bool, word32) | CONVERT(r25_166 <u r3_163, bool, word32)) + SLICE(r4_141 *u64 r11_14, word32, 32) + (CONVERT(r24_168 <u r9_160, bool, word32) | CONVERT(r14_169 <u r5_167, bool, word32)) << 9<32> | r14_169 >>u 0x17<32>
	r8_13 = CONVERT((r10_165 << 9<32> | r8_13 *s r9_145) >u 0<32>, bool, word32) | r10_165 >>u 0x17<32> | r14_169 << 9<32>
	branch __bit<word32,word32>(r11_14, 0x18<32>) l004045E8
l0040452A:
	r8_13 = r8_13 >>u 1<32> | r8_13 & 1<32> | r11_14 << 0x1F<32>
	r11_14 = r11_14 >>u 1<32>
l00404542:
	r5_250 = r12_132 + 0x3FF<32>
	branch r5_250 <= 0<32> l004045EC
l0040454A:
	branch (r8_13 & 7<32>) == 0<32> l00404564
l00404550:
	branch (r8_13 & 0xF<32>) == 4<32> l00404564
l00404558:
	r7_298 = r8_13 + 4<32>
	r11_14 = r11_14 + CONVERT(r7_298 <u r8_13, bool, word32)
	r8_13 = r7_298
l00404564:
	branch __bit<word32,word32>(r11_14, 0x18<32>) l00404570
l00404568:
	r11_14 = __ins<word32,word32>(r11_14, 0<32>, 8<32>, 1<32>)
	r5_250 = r12_132 + 0x400<32>
l00404570:
	branch r5_250 > 0x7FE<32> l0040467C
l00404578:
	r8_13 = r11_14 << 0x1D<32> | r8_13 >>u 3<32>
	r7_244 = r11_14 >>u 3<32>
l00404588:
	return SEQ(r8_13, __ins<word32,word32>(__ins<word32,word32>(__ins<word32,word32>(0<32>, r7_244, 0<32>, 1<32>), r5_250, 4<32>, 1<32>), r2_130, 0xF<32>, 1<32>))
l0040459E:
	r4_206 = r11_14 | r4_141
	branch (r4_206 & 0x800000<32>) == 0<32> l004045B2
l004045AE_1:
	r5_11 = 0<32>
l004045B2:
	branch (r4_206 & 0x800000<32>) == 0<32> l004045B6
l004045B2_1:
	r11_14 = 0xFFFFF<32>
l004045B6:
	r2_130 = r5_11
	branch (r4_206 & 0x800000<32>) == 0<32> l004045BE
l004045BA_1:
	r8_13 = 0xFFFFFFFF<32>
l004045BE:
	r7_244 = r11_14 | 0x800000<32>
l004045C6:
	r5_250 = 0x7FF<32>
	goto l00404588
l004045CC:
	r2_130 = r5_5 >>u 0x1F<32>
l004045CE:
	branch r13_111 == 2<32> l0040467C
l004045D2:
	branch r13_111 == 3<32> l004045BE
l004045D6:
	branch r13_111 != 1<32> l00404542
l004045DA:
	r7_244 = 0<32>
	r8_13 = 0<32>
	goto l00404642
l004045DE:
	r2_130 = r7_52 >>u 0x1F<32>
l004045E0:
	r11_14 = r4_141
	r8_13 = r9_145
	r13_111 = r3_100
	goto l004045CE
l004045E8:
	r12_132 = r6_109
	goto l00404542
l004045EC:
	r7_252 = 1<32> - r5_250
	branch r7_252 >= 0x39<32> l004045DA
l004045F4:
	branch r7_252 >= 0x20<32> l00404646
l004045F8:
	r5_272 = 0x20<32> - r7_252
	r7_266 = r11_14 >>u r7_252
	r8_269 = r11_14 << r5_272 | r8_13 >>u r7_252 | CONVERT(r8_13 << r5_272 >u 0<32>, bool, word32)
l00404616:
	branch (r8_269 & 7<32>) == 0<32> l00404630
l0040461C:
	branch (r8_269 & 0xF<32>) == 4<32> l00404630
l00404624:
	r6_282 = r8_269 + 4<32>
	r7_266 = r7_266 + CONVERT(r6_282 <u r8_269, bool, word32)
	r8_269 = r6_282
l00404630:
	branch !__bit<word32,word32>(r7_266, 0x17<32>) l00404680
l00404634:
	r8_13 = r7_266 << 0x1D<32> | r8_269 >>u 3<32>
	r7_244 = r7_266 >>u 3<32>
l00404642:
	r5_250 = 0<32>
	goto l00404588
l00404646:
	r5_255 = 0<32>
	r6_257 = r11_14 >>u 0xFFFFFFE1<32> - r5_250
	branch r7_252 == 0x20<32> l0040465E
l00404656:
	r5_255 = r11_14 << -r7_252
l0040465E:
	r7_266 = 0<32>
	r8_269 = r6_257 | CONVERT((r5_255 | r8_13) >u 0<32>, bool, word32)
	goto l00404616
l0040466E:
	r11_14 = 0xFFFFF<32>
	r8_13 = 0xFFFFFFFF<32>
	r2_130 = 0<32>
	goto l004045BE
l0040467C:
	r7_244 = 0<32>
	r8_13 = 0<32>
	goto l004045C6
l00404680:
	r7_244 = 0<32>
	r8_13 = 0<32>
	r5_250 = 1<32>
	goto l00404588
__muldf3_exit:


void __unorddf2(word32 r4, word32 r5, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r10 r25 r4 r5 r7 r8 r9
// Preserved: sp
__unorddf2_entry:
l00404690:
	r9_5 = __ext<word32,word32>(r5, 0<32>, 0x14<32>)
	r5_7 = __ext<word32,word32>(r5, 4<32>, 0xB<32>)
	__ext<word32,word32>(r7, 0<32>, 0x14<32>)
	r7_10 = __ext<word32,word32>(r7, 4<32>, 0xB<32>)
	branch r5_7 != 0x7FF<32> l004046B0
l004046A8:
	branch (r9_5 | r4) != 0<32> l004046BE
l004046B0:
	branch r7_10 != 0x7FF<32> l004046BE
l004046B6:
l004046BE:
	return
__unorddf2_exit:


word32 __fixdfsi(word32 r4, word32 r5, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-printf_core r6:[0..31]-printf_core
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__fixdfsi_entry:
l004046C0:
	r6_5 = __ext<word32,word32>(r5, 4<32>, 0xB<32>)
	r8_9 = __ext<word32,word32>(r5, 0<32>, 0x14<32>)
	r4_10 = 0<32>
	branch r6_5 <= 0x3FE<32> l00404714
l004046D8:
	branch r6_5 <= 0x41D<32> l004046EA
l004046E0:
	r6Out = <invalid>
	return (r5 >>u 0x1F<32>) + 0x7FFFFFFF<32>
l004046EA:
	r8_16 = 0x433<32> - r6_5
	branch r8_16 >= 0x20<32> l00404716
l004046FE:
	r4_10 = (r8_9 | 0x1000000<32>) << r6_5 + 0xFFFFFBED<32> | r4 >>u r8_16
l0040470E:
	branch r5 >>u 0x1F<32> == 0<32> l00404714
l00404710:
	r4_10 = -r4_10
l00404714:
	r6Out = <invalid>
	return r4_10
l00404716:
	r4_10 = (r8_9 | 0x1000000<32>) >>u 0x413<32> - r6_5
	goto l0040470E
__fixdfsi_exit:


word32 sysconf(word32 r4, word32 r12, word32 & r7Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00402CEE
// MayUse:  r12:[0..31] r4:[0..63]
// LiveOut: r17:[0..31]-fn00402CEE r4:[0..31]-fn00402CEE r7:[0..31]-fn00402CEE
// Trashed: hi lo r10 r11 r13 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
sysconf_entry:
l00404730:
	branch r4 >u 0xF8<32> l00404748
l0040473E:
	r4_111 = CONVERT(Mem7[0x00412368<p32> + r4 * 2<32>:int16], int16, int32)
	branch r4_111 != 0<32> l00404756
l00404748:
	__errno_location(out r4_285)
	r7_112 = 0x16<32>
	r4_111 = 0xFFFFFFFF<32>
l00404752:
	r7Out = r7_112
	r17Out = r17
	return r4_111
l00404756:
	r7_112 = 0xFFFFFFFF<32>
	branch r4_111 >= 0xFFFFFFFF<32> l00404752
l0040475C:
	branch r4_111 >= 0xFFFFFF00<32> l00404782
l00404764:
	__ext<word32,word32>(r4_111, 0<32>, 0xE<32>)
	r4_111 = getrlimit64(&tLoc0148, out r6_136)
	r7_112 = 0x7FFFFFFF<32>
	r17 = Mem7[&tLoc0148:word32]
	branch r6_136 != 0<32> l00404830
l0040477C:
	r7_112 = 0x7FFFFFFF<32>
	branch r4_111 <=u 0x7FFFFFFF<32> l00404752
l00404780:
	goto l00404830
l00404782:
	r7_112 = r4_111 + 0xFFFFFFFF<32> & 0xFF<32>
	branch r7_112 >=u 0xA<32> l00404752
l0040478C:
	r7_112 = Mem7[0x00412340<p32> + r7_112 * 4<32>:word32]
	switch (r7_112) { l0040483C l00404794 l0040479A l004047A0 l00404830 l004047A8 l004047A8 l004047EC l004047EC l00404838 }
l00404794:
	r4_111 = 0x200000<32>
	goto l00404752
l0040479A:
	r4_111 = 0x8000<32>
	goto l00404752
l004047A0:
	r7_112 = 0x00454430<p32>
	r4_111 = Mem7[0x00454454<p32>:word32]
	goto l00404752
l004047A8:
	memset(&tLoc0148, 0<32>, 0x80<32>, out r6_286, out r7_287, out r8_288, out r10_289)
	Mem98[&tLoc0148:byte] = 1<8>
	__syscall(out r4_290, out r5_291, out r6_292, out r7_293, out r8_294, out r9_295)
	r4_111 = 0<32>
	r7_112 = 0<32>
	goto l004047DA
l004047CE:
	Mem121[r7_112 + &tLoc0148:byte] = SLICE(r6_116, byte, 0) & SLICE(r6_116, byte, 0) + 0xFF<8>
	r4_111 = r4_111 + 1<32>
l004047DA:
	r6_116 = CONVERT(Mem115[&tLoc0148 + r7_112:byte], byte, word32)
	branch r6_116 != 0<32> l004047CE
l004047E0:
	r7_112 = r7_112 + 1<32>
	branch r7_112 != 0x80<32> l004047DA
l004047EA:
	goto l00404752
l004047EC:
	r2_24 = sysinfo(out r3_26, out r6_29)
	branch r6_29 != 0<32> l00404800
l004047FA:
	dwLoc0114 = 1<32>
l00404800:
	r17 = dwLoc0138
	branch r4 == 0x15<32> l0040480C
l00404806:
	r17 = dwLoc012C
l0040480C:
	__udivdi3(SEQ(r4 *s 0<32> + SLICE(r4 *u64 dwLoc0114, word32, 32), dwLoc0114 *s r4), CONVERT(Mem39[0x00454454<p32>:word32], uint32, uint64), r2_24, r3_26, r12, out r3_296, out r4_111, out r5_74, out r6_297, out r7_298, out r8_299, out r9_300, out r11_301, out r13_302)
	r7_112 = 0x7FFFFFFF<32>
	branch r5_74 == 0<32> l0040477C
l00404830:
	r4_111 = 0x7FFFFFFF<32>
	goto l00404752
l00404838:
	r4_111 = 0<32>
	goto l00404752
l0040483C:
	r4_111 = 0x31069<32>
	goto l00404752
sysconf_exit:


word32 isxdigit(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fill
//      isxdigit_l
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-fill
// Trashed: r25 r4 r6 r7
// Preserved: sp
isxdigit_entry:
l00404850:
	r7_10 = 1<32>
	branch r4 <u 0x3A<32> l00404866
l0040485A:
	r7_10 = CONVERT((r4 | 0x20<32>) <u 0x67<32>, bool, word32)
l00404866:
	return r7_10
isxdigit_exit:


void isxdigit_l(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: sp
isxdigit_l_entry:
l0040486A:
l0040486A_thunk_isxdigit:
	isxdigit(r4)
	return
isxdigit_l_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l00404870:
	return
dummy_exit:


void __init_ssp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __init_libc
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__init_ssp_entry:
l00404872:
	return
__init_ssp_exit:


void __init_libc(word32 r0, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __libc_start_main
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 ra sp
__init_libc_entry:
l00404874:
	memset(&tLocA8, 0<32>, 0x98<32>, out r6_343, out r7_344, out r8_345, out r10_346)
	Mem25[0x00432DD0<p32>:word32] = r4
	r16_102 = r5
	r4_26 = 0<32>
l0040488C:
	r4_26 = r4_358 + 1<32>
	r4_358 = r4_26
	branch Mem25[r4 + r4_358 * 4<32>:word32] != 0<32> l0040488C
l00404892:
	r4_146 = r4 + (r4_26 << 2<8>)
	goto l004048A0
l0040489E:
	r4_146 = r4_146 + 8<32>
l004048A0:
	r7_38 = Mem37[r4_146:word32]
	branch r7_38 == 0<32> l004048B6
l004048A4:
	branch r7_38 >=u 0x26<32> l0040489E
l004048A8:
	Mem144[fp - 0x10<32> + (r7_38 << 2<8>) - 152<i32>:word32] = Mem37[r4_146 + 4<i32>:word32]
	goto l0040489E
l004048B6:
	Mem41[0x004544A0<p32>:word32] = r7_38
	Mem43[0x004544A8<p32>:word32] = dwLoc28
	branch r5 != 0<32> l00404940
l004048CE:
	__init_tls(r0, &tLocA8)
	__init_ssp()
	branch dwLoc7C != dwLoc78 l004048EE
l004048E2:
	branch dwLoc74 != dwLoc70 l004048EE
l004048E8:
	branch dwLoc4C == 0<32> l00404966
l004048EE:
	__syscall(out r4_347, out r5_348, out r6_349, out r7_350, out r8_351, out r9_352)
	r16_102 = 0<32>
l00404918:
	branch __bit<word32,word32>(CONVERT(Mem91[fp - 0xC0<32> + r16_102 + 6<i32>:uint16], uint16, word32), 5<32>) l0040495C
l00404922:
	__syscall(out r4_112, out r5_353, out r6_354, out r7_355, out r8_356, out r9_357)
	branch r4_112 >= 0<32> l0040495C
l00404938:
	Mem132[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
l00404940:
	Mem134[0x00432520<p32>:word32] = r16_102
l00404946:
	Mem136[0x00432524<p32>:word32] = r16_102
	goto l00404952
l0040494E:
	branch r7_140 == 0x2F<32> l00404946
l00404952:
	r16_102 = r16_102 + 1<32>
	r7_140 = CONVERT(Mem136[r16_102 - 1<i32>:byte], byte, word32)
	branch r7_140 != 0<32> l0040494E
l0040495A:
	goto l004048CE
l0040495C:
	r16_102 = r16_102 + 8<32>
	branch r16_102 != 0x18<32> l00404918
l00404962:
l00404966:
	return
__init_libc_exit:


void __libc_start_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __libc_start_main
// MayUse: 
// LiveOut:
// Trashed: r25 r7
// Preserved: r16 ra sp
__libc_start_init_entry:
l00404968:
	_init()
	r16_13 = 0x0042FFF4<p32>
	goto l0040497C
l00404976:
	call Mem7[r16_13:word32] (retsize: 0;)
		uses: Mem:Mem7
	r16_13 = r16_13 + 4<32>
l0040497C:
	branch r16_13 <u 0x0042FFF8<p32> l00404976
l00404986:
	return
__libc_start_init_exit:


void __libc_start_main(word32 r0, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      _start_c
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__libc_start_main_entry:
l00404988:
	__init_libc(r0, r6 + (r5 + 1<32> << 2<8>), Mem13[r6:word32])
	__libc_start_init()
	main(r0, r5, r6)
	exit()
	__reserved_instruction(0<32>)
__libc_start_main_exit:


word32 __errno_location(word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      set_socket_option.isra.0.part.1
//      fn00400B56
//      ping4_receive_error_msg
//      fn00401E7A
//      fn004021AC
//      fn00402CEA
//      fn00402CEE
//      fn004032A0
//      malloc
//      realloc
//      mmap64
//      mremap
//      mbtowc
//      if_indextoname
//      inet_ntop
//      inet_pton
//      name_from_hosts
//      __lookup_serv
//      __res_msend_rc
//      __get_resolv_conf
//      socket
//      __sigaction
//      sigprocmask
//      printf_core
//      vsnprintf
//      seteuid
//      __floatscan
//      __intscan
//      __syscall_ret
//      calloc
//      __expand_heap
//      wctomb
//      handler
//      readdir64
//      mbrtowc
//      mbsrtowcs
//      sem_init
//      sem_post
//      sem_wait
//      sem_trywait
// MayUse: 
// LiveOut: r3:[0..31]-__syscall_ret r4:[0..31]-perror
// Trashed: r25 r3 r4
// Preserved: sp
__errno_location_entry:
l004049B0:
	r3_4 = __read_user_local()
	r4Out = r3_4 + 0xFFFFFF78<32>
	return r3_4
__errno_location_exit:


word32 strerror_l(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strerror
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-strerror
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
strerror_l_entry:
l004049C0:
	r7_10 = 0<32>
l004049C2:
	r6_8 = CONVERT(Mem0[0x00412C68<p32> + r7_10:byte], byte, word32)
	branch r6_8 != 0<32> l004049D8
l004049CC:
	r4_11 = 0x0041255C<p32>
l004049D0:
	branch r7_10 != 0<32> l004049E0
l004049D2:
l004049D4_thunk___lctrans:
	__lctrans()
	return r4_11
l004049D8:
	branch r4 == r6_8 l004049CC
l004049DC:
	r7_10 = r7_10 + 1<32>
	goto l004049C2
l004049E0:
	r4_11 = r4_38 + 1<32>
	r4_38 = r4_11
	branch Mem0[r4_38:byte] != 0<8> l004049E0
l004049E6:
	r7_10 = r7_10 + 0xFFFFFFFF<32>
	goto l004049D0
strerror_l_exit:


word32 strerror(word32 r4, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      set_socket_option.isra.0.part.1
//      create_socket
//      ping4_receive_error_msg
//      fn00401E7A
//      ping6_receive_error_msg
//      printf_core
// MayUse:  r4:[0..31]
// LiveOut: r3:[0..31]-create_socket r4:[0..31]-perror
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: sp
strerror_entry:
l004049EA:
	r3_4 = __read_user_local()
l004049F2_thunk_strerror_l:
	r4Out = strerror_l(r4)
	return r3_4
strerror_exit:


void abort(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      pinger
//      ping6_receive_error_msg
// MayUse:  r0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
abort_entry:
l00404A00:
	raise()
	__block_all_sigs()
	Mem27[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
	__reserved_instruction(0<32>)
abort_exit:


void __funcs_on_exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7E
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__funcs_on_exit_entry:
l00404A20:
	return
__funcs_on_exit_exit:


void __libc_exit_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7E
// MayUse: 
// LiveOut:
// Trashed: r25 r7
// Preserved: r16 ra sp
__libc_exit_fini_entry:
l00404A22:
	r16_11 = 0x0042FFFC<p32>
	goto l00404A32
l00404A2C:
	r16_11 = r16_11 + 0xFFFFFFFC<32>
	call Mem7[r16_11:word32] (retsize: 0;)
		uses: Mem:Mem7
l00404A32:
	branch 0x0042FFF8<p32> <u r16_11 l00404A2C
l00404A3C:
l00404A40_thunk__fini:
	_fini()
	return
__libc_exit_fini_exit:


word32 __syscall(word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E82
//      fn00402CEE
//      __init_libc
//      sysinfo
//      alloc_fwd
//      alloc_rev
//      free
//      malloc
//      getrlimit64
//      ioctl
//      madvise
//      mmap64
//      mremap
//      bind
//      getsockname
//      getsockopt
//      if_indextoname
//      if_nametoindex
//      __rtnetlink_enumerate
//      cleanup
//      setsockopt
//      socket
//      sched_yield
//      __block_all_sigs
//      __block_app_sigs
//      __restore_sigs
//      raise
//      setitimer
//      __libc_sigaction
//      __fopen_rb_ca
//      __stdio_close
//      __stdio_read
//      __stdio_seek
//      __unlock
//      __syscall_cp
//      __wait
//      pthread_sigmask
//      __clock_gettime
//      geteuid
//      getpid
//      isatty
//      fn0040B048
//      __init_tp
//      __init_tls
//      _Exit
//      __expand_heap
//      __unlockfile
//      __stdio_write
//      __stdout_write
//      __set_thread_area
//      handler
//      __synccall
//      fn0040E00C
//      readdir64
//      open64
//      sem_post
//      lseek64
// MayUse: 
// LiveOut: r2:[0..31]-__wait r4:[0..31]-__init_tls r5:[0..31]-__wait r6:[0..31]-__syscall_cp_c r7:[0..31]-__unlockfile r8:[0..31]-__wait r9:[0..31]-__wait
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__syscall_entry:
l00404A50:
	__syscall<word32>(0<32>)
	r4Out = r5
	r5Out = r6
	r6Out = r7
	r7Out = r8
	r8Out = r9
	r9Out = r10
	return r4
__syscall_exit:


word32 sysinfo(word32 & r3Out, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00402CEE
// MayUse: 
// LiveOut: r2:[0..31]-sysconf r3:[0..31]-sysconf r6:[0..31]-sysconf
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sysinfo_entry:
l00404A70:
	r2_10 = __syscall(out r4_12, out r5_27, out r6_14, out r7_28, out r8_29, out r9_30)
l00404A80_thunk___syscall_ret:
	r3Out = __syscall_ret(r4_12, out r4_31, out r7_32)
	r6Out = r6_14
	return r2_10
sysinfo_exit:


void __lctrans_impl()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lctrans
//      __lctrans_cur
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__lctrans_impl_entry:
l00404A90:
	return
__lctrans_impl_exit:


void __lctrans()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strerror
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__lctrans_entry:
l00404A92:
l00404A92_thunk___lctrans_impl:
	__lctrans_impl()
	return
__lctrans_exit:


word32 __lctrans_cur()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __getopt_msg
//      gai_strerror
// MayUse: 
// LiveOut: r3:[0..31]-gai_strerror
// Trashed: r25 r3 r5 r7
// Preserved: sp
__lctrans_cur_entry:
l00404A96:
	r3_4 = __read_user_local()
l00404AA0_thunk___lctrans_impl:
	__lctrans_impl()
	return r3_4
__lctrans_cur_exit:


void __simple_malloc(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r2 r22 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__simple_malloc_entry:
l00404AB0:
	branch r4 == 0<32> l00404B26
l00404AB4:
	r17_113 = r4
	branch r4 <u 2<32> l00404B72
l00404ABA:
	r16_27 = 1<32>
	goto l00404AC2
l00404ABE:
	branch r16_27 >=u 0x10<32> l00404B3A
l00404AC2:
	r16_27 = r16_27 << 1<32>
	branch r16_27 <u r4 l00404ABE
l00404AC8:
	r16_25 = r16_27 + 0xFFFFFFFF<32>
l00404ACA:
	__lock(0x00432538<p32>)
	r7_106 = Mem9[0x00432534<p32>:word32]
	r16_13 = r16_25 & -r7_106
l00404ADE:
	r17_113 = r17_113 + r16_13
l00404AE0:
	branch Mem9[0x00432530<p32>:word32] - r7_106 >=u r17_113 l00404B10
l00404AEC:
	Mem77[&tLoc14:word32] = r17_113
	__expand_heap(&tLoc14, out r3_207, out r4_80, out r6_81, out r7_208, out r8_209, out r11_210)
	branch r4_80 == 0<32> l00404B64
l00404AF6:
	branch r4_80 == Mem77[0x00432530<p32>:word32] l00404B5C
l00404B00:
	r7_106 = r4_80
l00404B06:
	r17_113 = Mem77[&tLoc14:word32]
	Mem117[0x00432530<p32>:word32] = r4_80 + r6_81
l00404B10:
	Mem126[0x00432534<p32>:word32] = r7_106 + r17_113
	__unlock(0x00432538<p32>)
	return
l00404B26:
	__lock(0x00432538<p32>)
	r16_13 = 0<32>
	r17_113 = 1<32>
	r7_106 = Mem9[0x00432534<p32>:word32]
	goto l00404ADE
l00404B3A:
	__lock(0x00432538<p32>)
	r7_106 = Mem9[0x00432534<p32>:word32]
	r16_13 = r16_27 + 0xFFFFFFFF<32> & -r7_106
	branch r4 >u 0x8000000F<32> l00404AE0
l00404B5A:
	goto l00404ADE
l00404B5C:
	r7_106 = Mem77[0x00432534<p32>:word32]
	goto l00404B06
l00404B64:
	__unlock(0x00432538<p32>)
	return
l00404B72:
	r16_25 = 0<32>
	r17_113 = 1<32>
	goto l00404ACA
__simple_malloc_exit:


word32 alloc_fwd(word32 r4, word32 & r4Out, word32 & r8Out, word32 & r19Out, word32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      free
//      realloc
// MayUse:  r4:[0..31]
// LiveOut: r19:[0..31]-free r2:[0..31]-free r22:[0..31]-free r4:[0..31]-free r8:[0..31]-realloc
// Trashed: r19 r2 r22 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r20 r21 ra sp
alloc_fwd_entry:
l00404B80:
	dwLoc20_330 = r22
l00404B84:
	r18_174 = Mem24[r4 + 4<i32>:word32]
l00404B86:
	branch !__bit<word32,word32>(r18_174, 0<32>) l00404C4A
l00404B8A:
	r7_28 = r18_174 >>u 4<32>
	branch r7_28 >=u 0x22<32> l00404C24
l00404B92:
	r20_35 = r7_28 + 0xFFFFFFFF<32> << 4<32>
	r17_122 = r7_28 + 0xFFFFFFFF<32>
	r22_33 = r7_28 + 0xFFFFFFFF<32>
	r16_32 = r20_35 + 8<32>
l00404B9E:
	r16_61 = r16_32 + 0x00432550<p32>
	branch Mem39[0x0045443C<p32>:word32] != 0<32> l00404C12
l00404BAC:
	branch Mem39[0x00432550<p32> + r20_35 + 16<i32>:word32] != 0<32> l00404C8E
l00404BB6:
	r7_109 = r18_174
l00404BB8:
	r20_100 = r20_35 + 0x00432550<p32>
	r6_102 = (r22_33 << 4<32>) + 8<32> + 0x00432550<p32>
	Mem103[r20_100 + 16<i32>:word32] = r6_102
	Mem104[r20_100 + 20<i32>:word32] = r6_102
l00404BCA:
	branch r18_174 == r7_109 l00404C8E
l00404BCE:
	branch Mem117[r16_61:word32] == 0<32> l00404C44
l00404BD2:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_330 = 0<32>
	branch Mem284[r16_61 + 4<i32>:word32] == 0<32> l00404B84
l00404BE0:
	r2 = __syscall(out r4_292, out r5_600, out r6_601, out r7_602, out r8, out r9_603)
	branch r4_292 != 0xFFFFFFDA<32> l00404B84
l00404BF4:
	r2 = __syscall(out r4_604, out r5_605, out r6_606, out r7_607, out r8, out r9_608)
	r18_174 = Mem284[r4 + 4<i32>:word32]
	goto l00404B86
l00404C02:
	__sync(0<32>)
	branch r6_64 == 0<32> l00404C4E
l00404C08:
	r2 = __wait(r16_61, r16_61 + 4<32>, 1<32>, 1<32>, out r4_618, out r5_619, out r8, out r9_620)
l00404C12:
	__sync(0<32>)
l00404C16:
	r6_64 = __load_linked<word32>(&Mem39[r16_61:word32])
	branch __store_conditional<word32>(&Mem39[r16_61:word32], 1<32>) == 0<32> l00404C16
l00404C22:
	goto l00404C02
l00404C24:
	branch r7_28 >u 0x200<32> l00404C5C
l00404C2C:
	r17_122 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
	r20_35 = r17_122 << 4<32>
	r22_33 = r17_122
	r16_32 = (r17_122 << 4<32>) + 8<32>
	goto l00404B9E
l00404C44:
	r18_174 = r7_109
	branch __bit<word32,word32>(r7_109, 0<32>) l00404B8A
l00404C4A:
	r4Out = 0<32>
	r8Out = r8
	r19Out = r19
	r22Out = dwLoc20_330
	return r2
l00404C4E:
	r7_109 = Mem39[r4 + 4<i32>:word32]
	branch Mem39[0x00432550<p32> + r20_35 + 16<i32>:word32] != 0<32> l00404BCA
l00404C5A:
	goto l00404BB8
l00404C5C:
	branch r7_28 >u 0x1C01<32> l00404C7E
l00404C64:
	r7_40 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
	r20_35 = r7_40 + 0x10<32> << 4<32>
	r17_122 = r7_40 + 0x10<32>
	r22_33 = r7_40 + 0x10<32>
	r16_32 = r20_35 + 8<32>
	goto l00404B9E
l00404C7E:
	r16_32 = 0x3F8<32>
	r22_33 = 0x3F<32>
	r17_122 = 0x3F<32>
	r20_35 = 0x3F0<32>
	goto l00404B9E
l00404C8E:
	r7_119 = Mem116[r4 + 12<i32>:word32]
	branch Mem116[r4 + 8<i32>:word32] == r7_119 l00404CEC
l00404C96:
	r5_197 = __ins<word32,word32>(r18_174, 0<32>, 0<32>, 1<32>)
	Mem206[r4 + r5_197:word32] = Mem196[r4 + r5_197:word32] | 1<32>
	branch Mem206[r16_61:word32] == 0<32> l00404CC6
l00404CB8:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_330 = 0<32>
	branch Mem219[r16_61 + 4<i32>:word32] != 0<32> l00404CCA
l00404CC6:
	r4Out = 1<32>
	r8Out = r8
	r19Out = r7_119
	r22Out = dwLoc20_330
	return r2
l00404CCA:
	r2 = __syscall(out r4_227, out r5_609, out r6_610, out r7_611, out r8, out r9_612)
	branch r4_227 != 0xFFFFFFDA<32> l00404CC6
l00404CDE:
	r2_238 = __syscall(out r4_613, out r5_614, out r6_615, out r7_616, out r8_244, out r9_617)
	r4Out = 1<32>
	r8Out = r8_244
	r19Out = r7_119
	r22Out = 0<32>
	return r2_238
l00404CEC:
	r7_128 = 1<32> >>u -r17_122
	r5_129 = CONVERT(r17_122 < 0x20<32>, bool, word32)
	r6_130 = 1<32> << r17_122
	branch r17_122 != 0<32> l00404D02
l00404CFE_1:
	r7_128 = 0<32>
l00404D02:
	branch r5_129 != 0<32> l00404D06
l00404D02_1:
	r7_128 = r6_130
l00404D06:
	branch r5_129 != 0<32> l00404D0A
l00404D06_1:
	r6_130 = 0<32>
l00404D0A:
	r7_140 = ~r7_128
	r4_143 = ~r6_130
	branch r6_130 == 0<32> l00404D34
l00404D14:
	__sync(0<32>)
l00404D1C:
	branch __store_conditional<word32>(&Mem116[0x00432000<p32> | 0x550<32>:word32], __load_linked<word32>(&Mem116[0x00432000<p32> | 0x550<32>:word32]) & r4_143) == 0<32> l00404D1C
l00404D30:
	__sync(0<32>)
l00404D34:
	branch r7_140 == 0xFFFFFFFF<32> l00404D4C
l00404D38:
	__sync(0<32>)
l00404D3C:
	branch __store_conditional<word32>(&Mem116[0x00432554<p32>:word32], __load_linked<word32>(&Mem116[0x00432554<p32>:word32]) & r7_140) == 0<32> l00404D3C
l00404D48:
	__sync(0<32>)
l00404D4C:
	r18_174 = Mem116[r4 + 4<i32>:word32]
	r7_119 = Mem116[r4 + 12<i32>:word32]
	goto l00404C96
alloc_fwd_exit:


word32 alloc_rev(word32 r4, word32 & r4Out, word32 & r5Out, word32 & r8Out, word32 & r9Out, word32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      free
//      malloc
// MayUse:  r4:[0..31]
// LiveOut: r2:[0..31]-malloc r22:[0..31]-free r4:[0..31]-malloc r5:[0..31]-malloc r8:[0..31]-malloc r9:[0..31]-malloc
// Trashed: r2 r20 r22 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r21 ra sp
alloc_rev_entry:
l00404D54:
	dwLoc20_332 = r22
l00404D58:
	r18_25 = Mem24[r4:word32]
l00404D5A:
	branch !__bit<word32,word32>(r18_25, 0<32>) l00404E1E
l00404D5E:
	r7_28 = r18_25 >>u 4<32>
	branch r7_28 >=u 0x22<32> l00404DF8
l00404D66:
	r20_35 = r7_28 + 0xFFFFFFFF<32> << 4<32>
	r17_125 = r7_28 + 0xFFFFFFFF<32>
	r22_33 = r7_28 + 0xFFFFFFFF<32>
	r16_32 = r20_35 + 8<32>
l00404D72:
	r16_61 = r16_32 + 0x00432550<p32>
	branch Mem39[0x0045443C<p32>:word32] != 0<32> l00404DE6
l00404D80:
	branch Mem39[0x00432550<p32> + r20_35 + 16<i32>:word32] != 0<32> l00404E62
l00404D8A:
	r7_109 = r18_25
l00404D8C:
	r20_100 = r20_35 + 0x00432550<p32>
	r6_102 = (r22_33 << 4<32>) + 8<32> + 0x00432550<p32>
	Mem103[r20_100 + 16<i32>:word32] = r6_102
	Mem104[r20_100 + 20<i32>:word32] = r6_102
l00404D9E:
	branch r18_25 == r7_109 l00404E62
l00404DA2:
	branch Mem120[r16_61:word32] == 0<32> l00404E18
l00404DA6:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_332 = 0<32>
	branch Mem286[r16_61 + 4<i32>:word32] == 0<32> l00404D58
l00404DB4:
	r2 = __syscall(out r4_294, out r5, out r6_603, out r7_604, out r8, out r9)
	branch r4_294 != 0xFFFFFFDA<32> l00404D58
l00404DC8:
	r2 = __syscall(out r4_605, out r5, out r6_606, out r7_607, out r8, out r9)
	r18_25 = Mem286[r4:word32]
	goto l00404D5A
l00404DD6:
	__sync(0<32>)
	branch r6_64 == 0<32> l00404E22
l00404DDC:
	r2 = __wait(r16_61, r16_61 + 4<32>, 1<32>, 1<32>, out r4_613, out r5, out r8, out r9)
l00404DE6:
	__sync(0<32>)
l00404DEA:
	r6_64 = __load_linked<word32>(&Mem39[r16_61:word32])
	branch __store_conditional<word32>(&Mem39[r16_61:word32], 1<32>) == 0<32> l00404DEA
l00404DF6:
	goto l00404DD6
l00404DF8:
	branch r7_28 >u 0x200<32> l00404E30
l00404E00:
	r17_125 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
	r20_35 = r17_125 << 4<32>
	r22_33 = r17_125
	r16_32 = (r17_125 << 4<32>) + 8<32>
	goto l00404D72
l00404E18:
	r18_25 = r7_109
	branch __bit<word32,word32>(r7_109, 0<32>) l00404D5E
l00404E1E:
	r4Out = 0<32>
	r5Out = r5
	r8Out = r8
	r9Out = r9
	r22Out = dwLoc20_332
	return r2
l00404E22:
	r7_109 = Mem39[r4:word32]
	branch Mem39[0x00432550<p32> + r20_35 + 16<i32>:word32] != 0<32> l00404D9E
l00404E2E:
	goto l00404D8C
l00404E30:
	branch r7_28 >u 0x1C01<32> l00404E52
l00404E38:
	r7_40 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
	r20_35 = r7_40 + 0x10<32> << 4<32>
	r17_125 = r7_40 + 0x10<32>
	r22_33 = r7_40 + 0x10<32>
	r16_32 = r20_35 + 8<32>
	goto l00404D72
l00404E52:
	r16_32 = 0x3F8<32>
	r22_33 = 0x3F<32>
	r17_125 = 0x3F<32>
	r20_35 = 0x3F0<32>
	goto l00404D72
l00404E62:
	r19_118 = r4 - __ins<word32,word32>(r18_25, 0<32>, 0<32>, 1<32>)
	branch Mem119[r19_118 + 8<i32>:word32] == Mem119[r19_118 + 12<i32>:word32] l00404EC8
l00404E70:
	r4_201 = __ins<word32,word32>(Mem119[r19_118 + 4<i32>:word32], 0<32>, 0<32>, 1<32>)
	r5_203 = Mem198[r19_118 + r4_201:word32]
	Mem208[r19_118 + r4_201:word32] = r5_203 | 1<32>
	r5_206 = r5_203 | 1<32>
	branch Mem208[r16_61:word32] == 0<32> l00404EA2
l00404E94:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_332 = 0<32>
	branch Mem221[r16_61 + 4<i32>:word32] != 0<32> l00404EA6
l00404EA2:
	r4Out = 1<32>
	r5Out = r5_206
	r8Out = r8
	r9Out = r9
	r22Out = dwLoc20_332
	return r2
l00404EA6:
	r2 = __syscall(out r4_229, out r5_206, out r6_608, out r7_609, out r8, out r9)
	branch r4_229 != 0xFFFFFFDA<32> l00404EA2
l00404EBA:
	r2_240 = __syscall(out r4_610, out r5_243, out r6_611, out r7_612, out r8_246, out r9_247)
	r4Out = 1<32>
	r5Out = r5_243
	r8Out = r8_246
	r9Out = r9_247
	r22Out = 0<32>
	return r2_240
l00404EC8:
	r7_131 = 1<32> >>u -r17_125
	r5_132 = CONVERT(r17_125 < 0x20<32>, bool, word32)
	r6_133 = 1<32> << r17_125
	branch r17_125 != 0<32> l00404EDE
l00404EDA_1:
	r7_131 = 0<32>
l00404EDE:
	branch r5_132 != 0<32> l00404EE2
l00404EDE_1:
	r7_131 = r6_133
l00404EE2:
	branch r5_132 != 0<32> l00404EE6
l00404EE2_1:
	r6_133 = 0<32>
l00404EE6:
	r7_143 = ~r7_131
	r4_146 = ~r6_133
	branch r6_133 == 0<32> l00404F10
l00404EF0:
	__sync(0<32>)
l00404EF8:
	branch __store_conditional<word32>(&Mem119[0x00432000<p32> | 0x550<32>:word32], __load_linked<word32>(&Mem119[0x00432000<p32> | 0x550<32>:word32]) & r4_146) == 0<32> l00404EF8
l00404F0C:
	__sync(0<32>)
l00404F10:
	branch r7_143 == 0xFFFFFFFF<32> l00404F28
l00404F14:
	__sync(0<32>)
l00404F18:
	branch __store_conditional<word32>(&Mem119[0x00432554<p32>:word32], __load_linked<word32>(&Mem119[0x00432554<p32>:word32]) & r7_143) == 0<32> l00404F18
l00404F24:
	__sync(0<32>)
l00404F28:
	goto l00404E70
alloc_rev_exit:


word32 free(word32 r0, word32 r4, word32 r11, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      niquery_option_subject_addr_handler
//      malloc
//      realloc
//      freeaddrinfo
//      netlink_msg_to_ifaddr
//      freeifaddrs
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-malloc r2:[0..31]-malloc r3:[0..31]-malloc r4:[0..31]-__isoc99_vfscanf r6:[0..31]-malloc r7:[0..31]-__isoc99_vfscanf r8:[0..31]-malloc r9:[0..31]-malloc
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
free_entry:
l00404F2E:
	branch r4 == 0<32> l00405290
l00404F32:
	r7_26 = Mem24[r4 - 4<i32>:word32]
	r17_124 = r4 + 0xFFFFFFF8<32>
	r22_29 = __ins<word32,word32>(r7_26, 0<32>, 0<32>, 1<32>)
	branch !__bit<word32,word32>(r7_26, 0<32>) l00404F5C
l00404F46:
	r7_26 = Mem24[r4 - 8<i32>:word32]
	branch __bit<word32,word32>(r7_26, 0<32>) l00404F6E
l00404F54:
	Mem34[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
l00404F5C:
	r18_39 = r4 + 0xFFFFFFF8<32> + r22_29
	branch Mem37[r4 + 0xFFFFFFF8<32> + r22_29:word32] == r7_26 l00404F76
l00404F66:
	Mem600[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
l00404F6E:
l00404F72_thunk_munmap:
	r2_614 = munmap(out r3_616, out r4_617, out r6_619, out r7_620, out r8_621, out r9_622)
	r3Out = r3_616
	r4Out = r4_617
	r6Out = r6_619
	r7Out = r7_620
	r8Out = r8_621
	r9Out = r9_622
	r11Out = r11
	return r2_614
l00404F76:
	r19_41 = r22_29
	dwLoc38_675 = 0<32>
l00404F82:
	branch __bit<word32,word32>(Mem47[r17_124:word32] & Mem47[r18_39 + 4<i32>:word32], 0<32>) l0040500C
l00404F8C:
	r16_53 = r19_41 >>u 4<32>
	r16_181 = r16_53 + 0xFFFFFFFF<32>
	branch r16_53 <u 0x22<32> l00404FB0
l00404F9C:
	branch r16_53 >u 0x200<32> l004050C6
l00404FA4:
	r16_181 = CONVERT(Mem58[(r16_53 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
l00404FB0:
	r20_114 = r16_181 << 4<32>
	dwLoc34_678 = r16_181
	r8_108 = r20_114 + 8<32>
l00404FBA:
	r23_92 = 0x00432550<p32> + r8_108
	branch Mem86[0x00454433<p32>:word32] != 0<32> l004050B4
l00404FC4:
	branch Mem86[0x00432550<p32> + r20_114 + 16<i32>:word32] == 0<32> l004050E8
l00404FCE:
	branch Mem134[0x00454433<p32>:word32] != 0<32> l00405086
l00404FD4:
	branch !__bit<word32,word32>(Mem134[r17_124:word32] & Mem134[r18_39 + 4<i32>:word32], 0<32>) l00405150
l00404FDE:
	branch Mem134[0x00432958<p32>:word32] == 0<32> l00404FF8
l00404FE4:
	__sync(0<32>)
	Mem462[0x00432958<p32>:word32] = 0<32>
	__sync(0<32>)
	branch Mem462[0x0043295C<p32>:word32] != 0<32> l00405118
l00404FF8:
	branch Mem490[r23_92:word32] == 0<32> l0040500C
l00404FFC:
	__sync(0<32>)
	Mem503[r23_92:word32] = r11
	__sync(0<32>)
	branch Mem503[r23_92 + 1<i32>:word32] != 0<32> l004050F8
l0040500C:
	alloc_rev(r17_124, out r4_534, out r5_1200, out r8_1201, out r9_1202, out r22_540)
	branch r4_534 == 0<32> l0040503E
l00405012:
	r17_124 = r17_124 - __ins<word32,word32>(Mem543[r17_124:word32], 0<32>, 0<32>, 1<32>)
	r7_549 = __ins<word32,word32>(Mem543[r17_124 + 4<i32>:word32], 0<32>, 0<32>, 1<32>)
	r5_545 = 0x280000<32>
	r6_550 = r7_549 + r22_540
	branch r6_550 <=u 0x280000<32> l0040503E
l0040502E:
	r17_124 = dwLoc38_675
	branch r7_549 >=u (r6_550 ^ r7_549) l0040503C
l00405038_1:
	r5_545 = 1<32>
l0040503C:
	dwLoc38_675 = r5_545
l0040503E:
	r2 = alloc_fwd(r18_39, out r4_570, out r8_1203, out r19_41, out r22_576)
	branch r4_570 == 0<32> l00404F82
l00405046:
	r7_582 = __ins<word32,word32>(Mem579[r18_39 + 4<i32>:word32], 0<32>, 0<32>, 1<32>)
	r6_583 = r7_582 + r22_576
	r19_41 = r19_41 + r7_582
	branch r6_583 <=u 0x280000<32> l0040506A
l0040505A:
	r17_124 = dwLoc38_675
	branch r7_582 >=u (r6_583 ^ r7_582) l00405068
l00405064_1:
	r4_570 = 1<32>
l00405068:
	dwLoc38_675 = r4_570
l0040506A:
	r18_39 = r18_39 + r7_582
	goto l00404F82
l0040506E:
	__sync(0<32>)
	branch r6_139 == 0<32> l00404FD4
l00405076:
	r2 = __wait(0x00432958<p32>, 0x0043295C<p32>, 1<32>, 1<32>, out r4_1226, out r5_1227, out r8_108, out r9_1228)
l00405086:
	__sync(0<32>)
l0040508A:
	r6_139 = __load_linked<word32>(&Mem134[0x00432958<p32>:word32])
	branch __store_conditional<word32>(&Mem134[0x00432958<p32>:word32], 1<32>) == 0<32> l0040508A
l0040509E:
	goto l0040506E
l004050A0:
	__sync(0<32>)
	branch r6_95 == 0<32> l00404FC4
l004050A8:
	r2 = __wait(r23_92, r23_92 + 4<32>, 1<32>, 1<32>, out r4_1236, out r5_1237, out r8_108, out r9_1238)
l004050B4:
	__sync(0<32>)
l004050B8:
	r6_95 = __load_linked<word32>(&Mem86[r23_92:word32])
	branch __store_conditional<word32>(&Mem86[r23_92:word32], 1<32>) == 0<32> l004050B8
l004050C4:
	goto l004050A0
l004050C6:
	branch r16_53 >u 0x1C01<32> l00405140
l004050CE:
	r16_69 = CONVERT(Mem58[(r16_53 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
	r20_114 = r16_69 + 0x10<32> << 4<32>
	r16_181 = r16_69 + 0x10<32>
	dwLoc34_678 = r16_69 + 0x10<32>
	r8_108 = r20_114 + 8<32>
	goto l00404FBA
l004050E8:
	r17_124 = dwLoc34_678
	goto l00404FCE
l004050F8:
	__syscall(out r4_511, out r5_1209, out r6_1210, out r7_1211, out r8_1212, out r9_1213)
	branch r4_511 != 0xFFFFFFDA<32> l0040500C
l0040510C:
	__syscall(out r4_1214, out r5_1215, out r6_1216, out r7_1217, out r8_1218, out r9_1219)
	goto l0040500C
l00405118:
	__syscall(out r4_470, out r5_1204, out r6_1205, out r7_1206, out r8_1207, out r9_1208)
	branch r4_470 != 0xFFFFFFDA<32> l00404FF8
l00405130:
	__syscall(out r4_1220, out r5_1221, out r6_1222, out r7_1223, out r8_1224, out r9_1225)
	goto l00404FF8
l00405140:
	r8_108 = 0x3F8<32>
	r16_181 = 0x3F<32>
	r20_114 = 0x3F0<32>
	dwLoc34_678 = 0x3F<32>
	goto l00404FBA
l00405150:
	r7_186 = -r16_181
	r11_189 = Mem134[0x00432554<p32>:word32]
	r4_1144 = 0x00432000<p32>
	r22_188 = CONVERT(r16_181 < 0x20<32>, bool, word32)
	r6_190 = Mem134[0x00432550<p32>:word32] >>u r16_181
	r5_191 = r11_189 << r7_186
	r10_192 = r11_189 >>u r16_181
	branch r16_181 != 0<32> l00405174
l00405170_1:
	r5_191 = 0<32>
l00405174:
	r6_196 = r6_190 | r5_191
	branch r22_188 != 0<32> l0040517A
l00405176_1:
	r6_196 = r10_192
l0040517A:
	branch __bit<word32,word32>(r6_196, 0<32>) l00405218
l0040517E:
	r7_280 = Mem269[0x00432958<p32>:word32]
	branch r7_280 == 0<32> l0040519C
l00405188:
	__sync(0<32>)
	Mem281[0x00432958<p32>:word32] = 0<32>
	__sync(0<32>)
	r7_280 = Mem281[0x0043295C<p32>:word32]
	branch r7_280 != 0<32> l00405268
l0040519C:
	r6_1161 = Mem309[0x00432550<p32> + r20_114 + 20<i32>:word32]
	r9_1189 = 0x00432550<p32> + (r7_280 + 1<32> << 4<32>)
	Mem335[r9_1189 + 1<i32>:word32] = dwLoc34_678
	branch Mem335[dwLoc34_678 + 12<i32>:word32] != 0<32> l004051F8
l004051C0:
	r7_1165 = Mem337[r23_92:word32]
	branch r7_1165 == 0<32> l004051D2
l004051C4:
	__sync(0<32>)
	Mem409[r23_92:word32] = r11_189
	__sync(0<32>)
	r7_1165 = Mem409[r23_92 + 1<i32>:word32]
	branch r7_1165 != 0<32> l004051D4
l004051D2:
	r3Out = r3
	r4Out = r4_1144
	r6Out = r6_1161
	r7Out = r7_1165
	r8Out = r8_108
	r9Out = r9_1189
	r11Out = r11_189
	return r2
l004051D4:
	r2 = __syscall(out r4_1144, out r5_1233, out r6_1161, out r7_1234, out r8_108, out r9_1189)
	r7_1165 = 0xFFFFFFDA<32>
	branch r4_1144 != 0xFFFFFFDA<32> l004051D2
l004051E8:
l004051F4_thunk___syscall:
	r2_440 = __syscall(out r4_442, out r5_1235, out r6_444, out r7_445, out r8_446, out r9_447)
	r3Out = r3
	r4Out = r4_442
	r6Out = r6_444
	r7Out = r7_445
	r8Out = r8_446
	r9Out = r9_447
	r11Out = r11_189
	return r2_440
l004051F8:
	r2 = madvise(out r3, out r4_1144, out r6_1161, out r8_108, out r9_1189)
	goto l004051C0
l00405218:
	r7_204 = 1<32> >>u r7_186
	r5_207 = 1<32> << r16_181
	branch r16_181 != 0<32> l00405226
l00405222_1:
	r7_204 = 0<32>
l00405226:
	branch r22_188 != 0<32> l0040522A
l00405226_1:
	r7_204 = r5_207
l0040522A:
	branch r22_188 != 0<32> l0040522E
l0040522A_1:
	r5_207 = 0<32>
l0040522E:
	branch r5_207 == 0<32> l0040524E
l00405232:
	__sync(0<32>)
l00405236:
	branch __store_conditional<word32>(&Mem134[0x00432000<p32> | 0x550<32>:word32], __load_linked<word32>(&Mem134[0x00432000<p32> | 0x550<32>:word32]) | r5_207) == 0<32> l00405236
l0040524A:
	__sync(0<32>)
l0040524E:
	branch r7_204 == 0<32> l0040517E
l00405252:
	__sync(0<32>)
l00405256:
	branch __store_conditional<word32>(&Mem134[0x00432554<p32>:word32], __load_linked<word32>(&Mem134[0x00432554<p32>:word32]) | r7_204) == 0<32> l00405256
l00405262:
	__sync(0<32>)
	goto l0040517E
l00405268:
	r2 = __syscall(out r4_1144, out r5_1229, out r6_1230, out r7_1231, out r8_108, out r9_1232)
	r7_280 = 0xFFFFFFDA<32>
	branch r4_1144 != 0xFFFFFFDA<32> l0040519C
l00405280:
	r2 = __syscall(out r4_1144, out r5_1239, out r6_1240, out r7_280, out r8_108, out r9_1241)
	goto l0040519C
l00405290:
	r3Out = r3
	r4Out = r4
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r11Out = r11
	return r2
free_exit:


word32 malloc(word32 r0, word32 r4, word32 r11, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
//      realloc
//      __strdup
//      calloc
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-__malloc0 r2:[0..31]-__malloc0 r3:[0..31]-__isoc99_vfscanf r4:[0..31]-__malloc0 r6:[0..31]-__malloc0 r8:[0..31]-__malloc0
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
malloc_entry:
l00405292:
	r6_27 = Mem23[0x00454454<p32>:word32]
	branch 0x7FFFFFEF<32> - r6_27 >=u r4 + 0xFFFFFFFF<32> l00405472
l004052AC:
	branch r4 != 0<32> l004056DC
l004052B0:
	r21_142 = 0xFFFFFFFF<32>
	r20_143 = 0xFFFFFFFF<32>
	dwLoc48_845 = 0x10<32>
	dwLoc44_1280 = 0<32>
l004052BE:
l004052C2:
	r4_149 = Mem148[0x00432550<p32>:word32]
	r7_152 = r4_149 & r21_142
	r6_154 = Mem148[0x00432554<p32>:word32] & r20_143
	branch (r7_152 | r6_154) == 0<32> l00405370
l004052DA:
	branch r7_152 != 0<32> l00405450
l004052DE:
	r19_164 = CONVERT(Mem163[((-r6_154 & r6_154) *s 0x76BE629<32> >>u 0x1B<32>) + 0x00412CC0<p32>:byte], byte, word32) + 0x20<32>
l004052FC:
	r17_175 = r19_164 << 4<32>
	r30_182 = 0x00432550<p32> + (r17_175 + 8<32>)
	branch Mem163[0x00454433<p32>:word32] != 0<32> l0040543E
l0040530E:
	r7_210 = 0x00432550<p32> + (r17_175 + 8<32>)
	r9_212 = Mem163[0x00432550<p32> + r17_175 + 16<i32>:word32]
	branch r9_212 == 0<32> l0040546C
l0040531A:
	branch r7_210 != r9_212 l00405514
l0040531E:
	branch Mem428[0x00432550<p32> + (r17_175 + 8<32>):word32] == 0<32> l004052C2
l00405324:
	__sync(0<32>)
	Mem430[0x00432550<p32> + (r17_175 + 8<32>):word32] = 0<32>
	__sync(0<32>)
	branch Mem430[r30_182 + 4<i32>:word32] == 0<32> l004052C2
l00405336:
	r2 = __syscall(out r4_439, out r5_1500, out r6_1501, out r7_1502, out r8, out r9_1503)
	branch r4_439 != 0xFFFFFFDA<32> l004052C2
l0040534C:
	r2 = __syscall(out r4_1504, out r5_1505, out r6_1506, out r7_1507, out r8, out r9_1508)
	r4_149 = Mem430[0x00432550<p32>:word32]
	r7_152 = r4_149 & r21_142
	r6_154 = Mem430[0x00432554<p32>:word32] & r20_143
	branch (r7_152 | r6_154) != 0<32> l004052DA
l00405370:
	r7_504 = Mem489[0x00454433<p32>:word32]
	Mem507[&tLoc34:word32] = r6_154 + 0x10<32>
	branch r7_504 != 0<32> l004055B4
l00405380:
	r2_1329 = __expand_heap(&tLoc34, out r3, out r4_533, out r6_100, out r7_535, out r8_102, out r11)
	branch r4_533 == 0<32> l004056EA
l0040538C:
	r18_587 = Mem507[0x00432540<p32>:word32]
	r17_588 = Mem507[&tLoc34:word32]
	branch r18_587 == r4_533 l004053A2
l00405396:
	Mem593[&tLoc34:word32] = r7_535 + 0xFFFFFFF0<32>
	r7_535 = r7_535 + 0xFFFFFFF0<32>
	r18_587 = r4_533 + 0x10<32>
l004053A2:
	r5_596 = Mem595[r17_588 + 1348<i32>:word32]
	r6_100 = r18_587 + r7_535
	r7_601 = r7_535 | 1<32>
	Mem602[r6_100 - 8<i32>:word32] = r7_601
	Mem603[0x00432540<p32>:word32] = r6_100
	Mem604[r6_100 - 4<i32>:word32] = 1<32>
	Mem606[r18_587 - 4<i32>:word32] = r7_601
	r9_605 = r18_587 + 0xFFFFFFF8<32>
	branch r5_596 == 0<32> l004053DC
l004053C6:
	__sync(0<32>)
	Mem607[r17_588 + 1348<i32>:word32] = 0<32>
	__sync(0<32>)
	branch Mem607[0x00432548<p32>:word32] != 0<32> l00405678
l004053DC:
	branch r9_605 == 0<32> l004056D2
l004053E0:
	r2 = alloc_rev(r9_605, out r4_660, out r5_221, out r8, out r9_212, out r22_1511)
	branch r4_660 == 0<32> l00405636
l004053EC:
	r5_221 = Mem657[r9_605 - 4<i32>:word32]
	r6_677 = r9_212 - __ins<word32,word32>(Mem657[r9_605 - 8<i32>:word32], 0<32>, 0<32>, 1<32>)
	r7_679 = Mem657[r6_677 + 4<i32>:word32]
	r4_680 = __ins<word32,word32>(r5_221, 0<32>, 0<32>, 1<32>)
	r7_325 = __ins<word32,word32>(r7_679, 0<32>, 0<32>, 1<32>) + r5_221
	Mem684[r9_212 + r4_680:word32] = r7_325
	r9_212 = r6_677
l00405412:
	r7_417 = __ins<word32,word32>(r7_325, 0<32>, 0<32>, 1<32>)
	r6_1446 = r7_417 + 0xFFFFFFF0<32>
	branch r5_221 <u r7_417 + 0xFFFFFFF0<32> l004055CE
l00405420:
	r16_791 = r9_212 + 8<32>
l00405424:
	r3Out = r3
	r4Out = r16_791
	r6Out = r6_1446
	r8Out = r8
	r11Out = r11
	return r2
l00405428:
	__sync(0<32>)
	branch r6_185 == 0<32> l0040530E
l00405430:
	r2 = __wait(r30_182, r30_182 + 4<32>, 1<32>, 1<32>, out r4_149, out r5_1533, out r8, out r9_1534)
l0040543E:
	__sync(0<32>)
l00405442:
	r6_185 = __load_linked<word32>(&Mem163[r30_182:word32])
	branch __store_conditional<word32>(&Mem163[r30_182:word32], 1<32>) == 0<32> l00405442
l0040544E:
	goto l00405428
l00405450:
	r19_164 = CONVERT(Mem163[((r7_152 & -r7_152) *s 0x76BE629<32> >>u 0x1B<32>) + 0x00412CC0<p32>:byte], byte, word32)
	goto l004052FC
l0040546C:
	goto l0040531E
l00405472:
	r4_33 = __ins<word32,word32>(r4 + 0x17<32>, 0<32>, 0<32>, 1<32>)
	dwLoc48_845 = r4_33
	branch r4_33 <=u 0x1C0000<32> l004054BA
l00405484:
	r16_87 = r6_27 + 7<32> + r4_33 & -r6_27
	r11 = 0<32>
	r2_1329 = mmap64(r16_87, 0x802<32>, 0<32>, 0<32>, out r3, out r4_98, out r6_100, out r8_102)
	branch r4_98 == 0xFFFFFFFF<32> l004056D2
l004054AA:
	r3Out = r3
	r4Out = r4_98 + 0x10<32>
	r6Out = r16_87 + 0xFFFFFFF8<32>
	r8Out = r8_102
	r11Out = 0<32>
	return r2_1329
l004054BA:
	r30_36 = (r4_33 >>u 4<32>) + 0xFFFFFFFF<32>
	branch r30_36 <u 0x21<32> l00405790
l004054C4:
	r7_41 = (r4_33 >>u 4<32>) + 0xFFFFFFFE<32>
	branch r7_41 >u 0x1FF<32> l004056A6
l004054CE:
	r7_39 = CONVERT(Mem34[(r7_41 >>u 3<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32) + 1<32>
l004054E0:
	r4_37 = r7_39
	dwLoc44_1280 = r7_39
l004054E4:
	r6_64 = 1<32> << r4_37
	r7_65 = 1<32> >>u -r7_39
	r5_66 = CONVERT(r4_37 < 0x20<32>, bool, word32)
	branch r4_37 != 0<32> l004054F8
l004054F4_1:
	r7_65 = 0<32>
l004054F8:
	branch r5_66 != 0<32> l004054FC
l004054F8_1:
	r7_65 = r6_64
l004054FC:
	branch r5_66 != 0<32> l00405500
l004054FC_1:
	r6_64 = 0<32>
l00405500:
	r6_75 = -r6_64
	r21_142 = r6_75
	r20_143 = -r7_65 - CONVERT(r6_75 >u 0<32>, bool, word32)
	goto l004052BE
l00405514:
	r17_220 = Mem163[r9_212 + 2<i32>:word32]
	r5_221 = Mem163[r9_212 + 3<i32>:word32]
	branch r19_164 < 0x28<32> l00405610
l0040551C:
	r17_220 = dwLoc44_1280
	branch r7_210 + 2<32> >= r19_164 l004055FA
l00405524:
	r6_230 = __ins<word32,word32>(Mem163[r9_212 + 1<i32>:word32], 0<32>, 0<32>, 1<32>)
	r18_236 = r6_230 - (r7_210 + 2<32>)
l0040552E:
	r17_220 = dwLoc48_845
	r7_242 = r18_236 >>u 4<32>
	branch r7_242 <u 0x22<32> l00405610
l00405536:
	branch r7_242 >u 0x200<32> l004056BA
l0040553E:
	r7_246 = CONVERT(Mem163[(r7_242 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32)
l0040554A:
	branch r7_246 != r19_164 l00405610
l0040554E:
	r7_325 = 0x00432550<p32> | 1<32>
	r5_221 = Mem354[r9_212 + 0x00432550<p32> + 8<i32>:word32]
	Mem357[r9_212 + 0x00432550<p32>:word32] = r7_325
	Mem362[r9_212 + r6_230:word32] = r18_236
	Mem363[r9_212 + 1<i32>:word32] = r7_325
l0040556E:
	branch Mem377[r30_182:word32] == 0<32> l00405412
l00405576:
	__sync(0<32>)
	Mem379[r30_182:word32] = 0<32>
	__sync(0<32>)
	branch Mem379[r30_182 + 4<i32>:word32] != 0<32> l0040564A
l0040558A:
	r7_412 = Mem414[r9_212 + 1<i32>:word32]
l0040558C:
	r7_417 = __ins<word32,word32>(r7_412, 0<32>, 0<32>, 1<32>)
	r6_1446 = r7_417 + 0xFFFFFFF0<32>
	branch r5_221 >=u r7_417 + 0xFFFFFFF0<32> l00405420
l0040559A:
	goto l004055CE
l0040559C:
	__sync(0<32>)
	branch r6_511 == 0<32> l00405380
l004055A4:
	__wait(0x00432544<p32>, 0x00432548<p32>, 1<32>, 1<32>, out r4_1521, out r5_1522, out r8_1523, out r9_1524)
l004055B4:
	__sync(0<32>)
l004055B8:
	r6_511 = __load_linked<word32>(&Mem507[0x00432000<p32> | 0x544<32>:word32])
	branch __store_conditional<word32>(&Mem507[0x00432000<p32> | 0x544<32>:word32], 1<32>) == 0<32> l004055B8
l004055CC:
	goto l0040559C
l004055CE:
	r5_703 = r5_221 | 1<32>
	Mem706[r9_212 + r5_221:word32] = r5_703
	Mem709[r9_212 + r7_417:word32] = r7_417 - r5_221 | 1<32>
	Mem710[r9_212 + 1<i32>:word32] = r5_703
	r2 = free(r0, r9_212 + r5_221 + 8<32>, r11, out r3, out r4_1512, out r6_1446, out r7_1513, out r8, out r9_789, out r11)
	r16_791 = r9_789 + 8<32>
	goto l00405424
l004055FA:
	branch r19_164 != 0x3F<32> l00405610
l004055FE:
	r6_230 = __ins<word32,word32>(Mem163[r9_212 + 1<i32>:word32], 0<32>, 0<32>, 1<32>)
	r17_220 = dwLoc48_845
	r18_236 = r6_230 - r4_149
	branch r18_236 >u 0x1C0000<32> l0040552E
l00405610:
	branch r17_220 == r5_221 l0040572E
l00405614:
	r7_323 = Mem163[r9_212 + 1<i32>:word32]
	r4_326 = __ins<word32,word32>(r7_323, 0<32>, 0<32>, 1<32>)
	r6_327 = Mem163[r9_212 + r4_326:word32]
	Mem345[r9_212 + 1<i32>:word32] = r7_323 | 1<32>
	Mem346[r9_212 + r4_326:word32] = r6_327 | 1<32>
	r7_325 = r7_323 | 1<32>
	goto l0040556E
l00405636:
	r7_417 = __ins<word32,word32>(Mem657[r9_605 - 4<i32>:word32], 0<32>, 0<32>, 1<32>)
	r6_1446 = r7_417 + 0xFFFFFFF0<32>
	branch r5_221 >=u r7_417 + 0xFFFFFFF0<32> l00405420
l00405648:
	goto l004055CE
l0040564A:
	r2 = __syscall(out r4_390, out r5_221, out r6_1528, out r7_1529, out r8, out r9_212)
	branch r4_390 != 0xFFFFFFDA<32> l0040558A
l00405664:
	r2 = __syscall(out r4_1530, out r5_221, out r6_1531, out r7_1532, out r8, out r9_212)
	r7_412 = Mem402[r9_212 + 1<i32>:word32]
	goto l0040558C
l00405678:
	r2_1329 = __syscall(out r4_618, out r5_1509, out r6_100, out r7_1510, out r8_102, out r9_605)
	branch r4_618 != 0xFFFFFFDA<32> l004053DC
l00405694:
	r2_1329 = __syscall(out r4_1525, out r5_1526, out r6_100, out r7_1527, out r8_102, out r9_605)
	goto l004053DC
l004056A6:
	r7_39 = CONVERT(Mem34[(r7_41 >>u 7<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32) + 0x11<32>
	goto l004054E0
l004056BA:
	branch r7_242 >u 0x1C01<32> l004056D8
l004056C2:
	r7_246 = CONVERT(Mem163[(r7_242 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<i32>:byte], byte, word32) + 0x10<32>
	goto l0040554A
l004056D2:
	r3Out = r3
	r4Out = 0<32>
	r6Out = r6_100
	r8Out = r8_102
	r11Out = r11
	return r2_1329
l004056D8:
	r7_246 = 0x3F<32>
	goto l0040554A
l004056DC:
	r3Out = __errno_location(out r4_1499)
	r4Out = 0<32>
	r6Out = r6_27
	r8Out = r8
	r11Out = r11
	return r2
l004056EA:
	branch Mem507[0x00432544<p32>:word32] == 0<32> l004056D2
l004056F0:
	__sync(0<32>)
	Mem547[0x00432544<p32>:word32] = 0<32>
	__sync(0<32>)
	branch Mem547[0x00432548<p32>:word32] == 0<32> l004056D2
l00405704:
	r2_1329 = __syscall(out r4_556, out r5_1514, out r6_100, out r7_1515, out r8_102, out r9_1516)
	branch r4_556 != 0xFFFFFFDA<32> l004056D2
l0040571C:
	r2_567 = __syscall(out r4_1517, out r5_1518, out r6_571, out r7_1519, out r8_573, out r9_1520)
	r3Out = r3
	r4Out = r4_533
	r6Out = r6_571
	r8Out = r8_573
	r11Out = r11
	return r2_567
l0040572E:
	r7_269 = 1<32> >>u -r19_164
	r5_270 = CONVERT(r19_164 < 0x20<32>, bool, word32)
	r6_271 = 1<32> << r19_164
	branch r19_164 != 0<32> l00405744
l00405740_1:
	r7_269 = 0<32>
l00405744:
	branch r5_270 != 0<32> l00405748
l00405744_1:
	r7_269 = r6_271
l00405748:
	branch r5_270 != 0<32> l0040574C
l00405748_1:
	r6_271 = 0<32>
l0040574C:
	r7_281 = ~r7_269
	r5_284 = ~r6_271
	branch r6_271 == 0<32> l00405772
l00405756:
	__sync(0<32>)
l0040575A:
	branch __store_conditional<word32>(&Mem163[0x00432000<p32> | 0x550<32>:word32], __load_linked<word32>(&Mem163[0x00432000<p32> | 0x550<32>:word32]) & r5_284) == 0<32> l0040575A
l0040576E:
	__sync(0<32>)
l00405772:
	branch r7_281 == 0xFFFFFFFF<32> l0040578A
l00405776:
	__sync(0<32>)
l0040577A:
	branch __store_conditional<word32>(&Mem163[0x00432554<p32>:word32], __load_linked<word32>(&Mem163[0x00432554<p32>:word32]) & r7_281) == 0<32> l0040577A
l00405786:
	__sync(0<32>)
l0040578A:
	r5_221 = Mem163[r9_212 + 3<i32>:word32]
	goto l00405614
l00405790:
	r4_37 = r30_36
	r7_39 = r30_36
	dwLoc44_1280 = r30_36
	goto l004054E4
malloc_exit:


word32 __malloc0(word32 r0, word32 r4, word32 r11, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      calloc
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-calloc r2:[0..31]-calloc r4:[0..31]-calloc r6:[0..31]-calloc r8:[0..31]-calloc
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__malloc0_entry:
l0040579A:
	malloc(r0, r4, r11, out r3_89, out r4_18, out r6_20, out r8_22, out r11_14)
	branch r4_18 == 0<32> l004057CE
l004057A4:
	branch __bit<word32,word32>(Mem7[r4_18 - 4<i32>:word32], 0<32>) l004057CE
l004057AC:
	branch r4 + 3<32> >>u 2<32> == 0<32> l004057CE
l004057B4:
	r5_27 = r4_18 + __align(r4 + 3<32>, 4<i32>)
	r7_28 = r4_18
l004057BA:
	r6_20 = Mem30[r7_28:word32]
	branch r6_20 == 0<32> l004057C8
l004057BE:
	r7_28 = r7_28 + 4<32>
	branch r7_28 != r5_27 l004057BA
l004057C6:
	r4Out = <invalid>
	r6Out = r6_20
	r8Out = <invalid>
	r11Out = <invalid>
	return <invalid>
l004057C8:
	r7_28 = r7_28 + 4<32>
	branch r7_28 != r5_27 l004057BA
l004057CE:
	r4Out = <invalid>
	r6Out = r6_20
	r8Out = <invalid>
	r11Out = <invalid>
	return <invalid>
__malloc0_exit:


word32 realloc(word32 r0, word32 r4, word32 r5, word32 r11, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-__isoc99_vfscanf r12:[0..31]-__isoc99_vfscanf r2:[0..31]-__isoc99_vfscanf r3:[0..31]-__isoc99_vfscanf r4:[0..31]-__isoc99_vfscanf r6:[0..31]-__isoc99_vfscanf r8:[0..31]-__isoc99_vfscanf
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 r18 r19 r20 r21 r22 r23 ra sp
realloc_entry:
l004057D0:
	branch r4 == 0<32> l00405918
l004057D4:
	r4_41 = Mem37[0x00454454<p32>:word32]
	r5_317 = r5
	branch 0x7FFFFFEF<32> - r4_41 <u r5 + 0xFFFFFFFF<32> l00405822
l004057F0:
	r5_317 = __ins<word32,word32>(r5 + 0x17<32>, 0<32>, 0<32>, 1<32>)
	r19_156 = r5_317
l004057FA:
	r7_50 = Mem49[r4 - 4<i32>:word32]
	r8_101 = r8 (alias)
	r6_155 = r5 + 0xFFFFFFFF<32> (alias)
	r3_203 = r3 (alias)
	r2_201 = r2 (alias)
	r4_197 = r4_41 (alias)
	r11_200 = r11 (alias)
	r17_53 = __ins<word32,word32>(r7_50, 0<32>, 0<32>, 1<32>)
	branch !__bit<word32,word32>(r7_50, 0<32>) l00405868
l0040580C:
	r22_194 = Mem49[r4 - 8<i32>:word32]
	r17_195 = r17_53 + r22_194
	r20_196 = r22_194 + r19_156
	branch __bit<word32,word32>(r22_194, 0<32>) l00405834
l0040581A:
	Mem315[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
l00405822:
	r8_101 = r8 (alias)
	r6_155 = r5 + 0xFFFFFFFF<32> (alias)
	r2_201 = r2 (alias)
	r11_200 = r11 (alias)
	r19_156 = 0x10<32>
	branch r5_317 == 0<32> l004057FA
l00405826:
	r3_203 = __errno_location(out r4_623)
	r18_103 = 0<32>
l00405830:
	r3Out = r3_203
	r4Out = r18_103
	r6Out = r6_155
	r8Out = r8_101
	r11Out = r11_200
	r12Out = r12
	return r2_201
l00405834:
	branch r20_196 <u r4_41 l00405900
l00405838:
	r20_258 = -r4_197 & r4_197 + (r20_196 + 0xFFFFFFFF<32>)
	branch r17_195 == r20_258 l00405896
l00405848:
	r2_201 = mremap(r20_258, 1<32>, out r3_203, out r4_272, out r6_155, out r8_101)
	branch r4_272 == 0xFFFFFFFF<32> l00405932
l0040585A:
	r4_300 = r4_272 + r22_194
	Mem303[r4_300 + 1<i32>:word32] = r20_258 - r22_194
	r3Out = r3_203
	r4Out = r4_300 + 8<32>
	r6Out = r6_155
	r8Out = r8_101
	r11Out = r11_200
	r12Out = r12
	return r2_201
l00405868:
	r18_55 = r4 + 0xFFFFFFF8<32> + r17_53
	branch Mem49[r4 + 0xFFFFFFF8<32> + r17_53:word32] == r7_50 l0040587A
l00405872:
	Mem57[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
l0040587A:
	branch r17_53 <u r19_156 l004058C4
l0040587E:
	Mem151[r4 - 4<i32>:word32] = r17_53 | 1<32>
	Mem152[r4 + 0xFFFFFFF8<32> + r17_53:word32] = r17_53 | 1<32>
	r7_150 = r17_53 | 1<32>
l0040588A:
	r7_154 = __ins<word32,word32>(r7_150, 0<32>, 0<32>, 1<32>)
	r6_155 = r7_154 + 0xFFFFFFF0<32>
	branch r19_156 <u r7_154 + 0xFFFFFFF0<32> l0040589C
l00405896:
l00405898:
	r3Out = r3_203
	r4Out = r4
	r6Out = r6_155
	r8Out = r8_101
	r11Out = r11_200
	r12Out = r12
	return r2_201
l0040589C:
	r5_158 = r19_156 | 1<32>
	Mem162[r4 + 0xFFFFFFF8<32> + r19_156:word32] = r5_158
	Mem168[r4 + 0xFFFFFFF8<32> + r7_154:word32] = r7_154 - r19_156 | 1<32>
	Mem169[r4 - 4<i32>:word32] = r5_158
	r2_175 = free(r0, r4 + 0xFFFFFFF8<32> + r19_156 + 8<32>, r11, out r3_176, out r4_609, out r6_179, out r7_610, out r8_181, out r9_611, out r11_174)
	r3Out = r3_176
	r4Out = r4
	r6Out = r6_179
	r8Out = r8_181
	r11Out = r11_174
	r12Out = r12
	return r2_175
l004058C4:
	r2_201 = alloc_fwd(r18_55, out r4_64, out r8_101, out r19_156, out r22_608)
	branch r4_64 == 0<32> l0040591E
l004058CA:
	r6_80 = __ins<word32,word32>(Mem78[r18_55 + 4<i32>:word32], 0<32>, 0<32>, 1<32>)
	r5_81 = r17_53 + r6_80
	Mem83[r4 - 4<i32>:word32] = r5_81 | 1<32>
	Mem84[r18_55 + r6_80:word32] = r5_81 | 1<32>
	r7_150 = r5_81 | 1<32>
	branch r5_81 >=u r19_156 l0040588A
l004058E2:
	r2_201 = malloc(r0, r19_156 + 0xFFFFFFF8<32>, r11, out r3_203, out r4_97, out r6_155, out r8_101, out r11_200)
	r18_103 = r4_97
	branch r4_97 == 0<32> l00405830
l004058F0:
	memcpy(r4_97, r4, r17_53 + 0xFFFFFFF8<32>, out r3_612, out r5_613, out r6_614, out r7_615, out r8_616, out r9_617, out r11_116, out r12_117, out r13_618, out r14_619)
	r2_127 = free(r0, r4, r11_116, out r3_128, out r4_620, out r6_131, out r7_621, out r8_133, out r9_622, out r11_126)
	r3Out = r3_128
	r4Out = r4_97
	r6Out = r6_131
	r8Out = r8_133
	r11Out = r11_126
	r12Out = r12_117
	return r2_127
l00405900:
	r2_201 = malloc(r0, r19_156, r11, out r3_203, out r4_204, out r6_155, out r8_101, out r11_200)
	branch r4_204 == 0<32> l0040592C
l00405908:
	memcpy(r4_204, r4, r19_156 + 0xFFFFFFF8<32>, out r3_597, out r5_598, out r6_599, out r7_600, out r8_601, out r9_602, out r11_223, out r12_224, out r13_603, out r14_604)
	r2_234 = free(r0, r4, r11_223, out r3_235, out r4_605, out r6_238, out r7_606, out r8_240, out r9_607, out r11_233)
	r3Out = r3_235
	r4Out = r4_204
	r6Out = r6_238
	r8Out = r8_240
	r11Out = r11_233
	r12Out = r12_224
	return r2_234
l00405918:
l0040591A_thunk_malloc:
	r2_11 = malloc(r0, r5, r11, out r3_13, out r4_14, out r6_16, out r8_18, out r11_10)
	r3Out = r3_13
	r4Out = r4_14
	r6Out = r6_16
	r8Out = r8_18
	r11Out = r11_10
	r12Out = r12
	return r2_11
l0040591E:
	Mem75[r4 - 4<i32>:word32] = r17_53 | 1<32>
	Mem77[r4 + 0xFFFFFFF8<32> + r17_53:word32] = r17_53 | 1<32>
	goto l004058E2
l0040592C:
	r4_197 = Mem49[0x00454454<p32>:word32]
	goto l00405838
l00405932:
	r18_103 = 0<32>
	branch r20_258 >=u r17_195 l00405830
l00405938:
	goto l00405898
realloc_exit:


word32 __getopt_msg(word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __posix_getopt
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r8:[0..31]-__posix_getopt
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__getopt_msg_entry:
l00405940:
	r16_19 = Mem15[0x00412EF0<p32>:word32]
	__lctrans_cur()
	flockfile(r16_19)
	fputs_unlocked(r4, r16_19, out r3_162, out r4_53, out r5_163, out r6_164, out r8_165, out r11_166, out r12_167)
	branch r4_53 < 0<32> l00405980
l00405960:
	fwrite_unlocked(r5, strlen(r5, out r5_168, out r6_169, out r7_170), 1<32>, r16_19, out r3_171, out r4_79, out r5_172, out r6_173, out r8_174, out r11_175, out r12_176)
	branch r4_79 == 0<32> l00405980
l00405970:
	fwrite_unlocked(r6, 1<32>, r7, r16_19, out r3_177, out r4_101, out r5_178, out r6_179, out r8_180, out r11_181, out r12_182)
	branch r7 != r4_101 l00405980
l0040597A:
	_IO_putc(0xA<32>, r16_19)
l00405980:
l00405986_thunk_funlockfile:
	return funlockfile(r16_19)
__getopt_msg_exit:


word32 __posix_getopt(word32 r0, word32 r4, word32 r5, word32 r6, word32 r8, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r4:[0..31]-main r8:[0..31]-main
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__posix_getopt_entry:
l0040598A:
	r17_103 = r6
	branch Mem15[0x00430254<p32>:word32] == 0<32> l004059A0
l00405998:
	branch Mem15[0x00432960<p32>:word32] == 0<32> l004059B4
l004059A0:
	Mem28[0x00432960<p32>:word32] = r0
	Mem29[0x004544A4<p32>:word32] = r0
	Mem30[0x00430254<p32>:word32] = 1<32>
l004059B4:
	r7_32 = Mem31[0x00430254<p32>:word32]
	r4_133 = 0xFFFFFFFF<32>
	branch r7_32 >= r4 l00405B00
l004059C0:
	r5_38 = Mem31[r5 + r7_32 * 4<32>:word32]
	branch r5_38 == 0<32> l00405B00
l004059C6:
	branch Mem31[r5_38:byte] == 0x2D<8> l004059E4
l004059CC:
	branch Mem31[r6:byte] != 0x2D<8> l00405B00
l004059D2:
	Mem259[0x004544E8<p32>:word32] = r5_38
	Mem260[0x00430254<p32>:word32] = r7_32 + 1<32>
	r8Out = r8
	return 1<32>
l004059E4:
	r6_40 = CONVERT(Mem31[r5_38 + 1<i32>:byte], byte, word32)
	r4_133 = 0xFFFFFFFF<32>
	branch r6_40 == 0<32> l00405B00
l004059EC:
	branch r6_40 != 0x2D<32> l004059FE
l004059F0:
	branch Mem31[r5_38 + 2<i32>:byte] != 0<8> l004059FE
l004059F4:
	Mem238[0x00430254<p32>:word32] = r7_32 + 1<32>
	r8Out = r8
	return 0xFFFFFFFF<32>
l004059FE:
	branch Mem31[0x004544A4<p32>:word32] != 0<32> l00405A0E
l00405A06:
	Mem46[0x004544A4<p32>:word32] = 1<32>
l00405A0E:
	r4_64 = mbtowc(fp - 0x28<32>, r5_38 + Mem47[0x004544A4<p32>:word32], 4<32>, r8, out r6_608, out r7_609, out r8)
	r7_70 = r4_64
	branch r4_64 >= 0<32> l00405A2C
l00405A24:
	r7_70 = 1<32>
l00405A2C:
	r5_75 = Mem74[0x00430254<p32>:word32]
	r6_80 = Mem74[0x004544A4<p32>:word32]
	r4_79 = Mem74[r5 + r5_75 * 4<32>:word32]
	r6_83 = r7_70 + r6_80
	Mem84[0x004544A4<p32>:word32] = r6_83
	r20_81 = r4_79 + r6_80
	branch Mem84[r4_79 + r6_83:byte] != 0<8> l00405A5A
l00405A4C:
	Mem91[0x004544A4<p32>:word32] = r0
	Mem92[0x00430254<p32>:word32] = r5_75 + 1<32>
l00405A5A:
	branch (CONVERT(Mem99[r6:byte], byte, word32) + 0xFFFFFFD5<32> & 0xFD<32>) != 0<32> l00405A68
l00405A66:
	r17_103 = r6 + 1<32>
l00405A68:
	r16_104 = 0<32>
	goto l00405A74
l00405A6E:
	r16_104 = r16_104 + 1<32>
	branch r4_119 == 0<32> l00405A8E
l00405A72:
	branch r5_112 == r6_123 l00405A8E
l00405A74:
	r5_112 = r17_103 + r16_104
	r4_119 = mbtowc(fp - 0x24<32>, r5_112, 4<32>, r8, out r6_123, out r7_120, out r8)
	r17_103 = 0<32>
	branch r4_119 <= 0<32> l00405A6E
l00405A8A:
	r16_104 = r16_104 + r4_119
	goto l00405A72
l00405A8E:
	r4_133 = r6_123
	branch r5_112 == r6_123 l00405ABA
l00405A94:
	Mem193[0x004544F0<p32>:word32] = r6_123
	branch Mem193[0<32>:byte] != 0x3A<8> l00405AA4
l00405AA0:
	r8Out = r8
	return 0x3F<32>
l00405AA4:
	branch Mem193[0x00430250<p32>:word32] == 0<32> l00405AA0
l00405AAC:
	r5_164 = 0x00411EBC<p32>
l00405AB2:
	r8 = __getopt_msg(Mem199[r5:word32], r5_164, r20_81, r7_120)
	goto l00405AA0
l00405ABA:
	r6_141 = CONVERT(Mem116[r16_104:byte], byte, word32)
	branch r6_141 != 0x3A<32> l00405B00
l00405AC2:
	r16_142 = r16_104 + 1<32>
	branch Mem116[r16_142:byte] != 0x3A<8> l00405B02
l00405ACC:
	Mem170[0x004544E8<p32>:word32] = r0
l00405AD2:
	r6_174 = Mem172[0x004544A4<p32>:word32]
	branch Mem172[r16_142:byte] != 0x3A<8> l00405AE0
l00405ADE:
	branch r6_174 == 0<32> l00405B00
l00405AE0:
	r7_176 = Mem172[0x00430254<p32>:word32]
	r7_185 = Mem172[r5 + r7_176 * 4<32>:word32]
	Mem186[0x00430254<p32>:word32] = r7_176 + 1<32>
	Mem191[0x004544A4<p32>:word32] = r0
	Mem192[0x004544E8<p32>:word32] = r7_185 + r6_174
l00405B00:
	r8Out = r8
	return r4_133
l00405B02:
	branch Mem116[0x00430254<p32>:word32] < r4 l00405AD2
l00405B0C:
	Mem154[0x004544F0<p32>:word32] = r6_123
	r4_133 = r6_141
	branch Mem154[0<32>:byte] == 0x3A<8> l00405B00
l00405B1A:
	branch Mem154[0x00430250<p32>:word32] == 0<32> l00405AA0
l00405B24:
	r5_164 = 0x00411ED4<p32>
	goto l00405AB2
__posix_getopt_exit:


word32 getrlimit64(word32 r5, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00402CEE
// MayUse:  r5:[0..31]
// LiveOut: r4:[0..31]-sysconf r6:[0..31]-sysconf
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
getrlimit64_entry:
l00405B30:
	__syscall(out r4_19, out r5_96, out r6_21, out r7_97, out r8_98, out r9_99)
	__syscall_ret(r4_19, out r4_27, out r7_100)
	branch r4_27 != 0<32> l00405B76
l00405B46:
	branch Mem7[r5 + 4<i32>:word32] != 0<32> l00405B56
l00405B4A:
	branch Mem7[r5:word32] <=u 0x7FFFFFFE<32> l00405B5E
l00405B56:
	Mem35[r5:word32] = 0xFFFFFFFF<32>
	Mem36[r5 + 4<i32>:word32] = 0xFFFFFFFF<32>
l00405B5E:
	branch Mem38[r5 + 12<i32>:word32] != 0<32> l00405B6E
l00405B62:
	r6_21 = 0x7FFFFFFE<32>
	branch Mem38[r5 + 8<i32>:word32] <=u 0x7FFFFFFE<32> l00405B76
l00405B6E:
	Mem45[r5 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem46[r5 + 12<i32>:word32] = 0xFFFFFFFF<32>
	r6_21 = 0xFFFFFFFF<32>
l00405B76:
	r6Out = r6_21
	return r4_27
getrlimit64_exit:


word32 ioctl(word32 & r4Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      setup
//      main_loop
//      if_indextoname
//      if_nametoindex
// MayUse: 
// LiveOut: r3:[0..31]-setup r4:[0..31]-if_nametoindex r7:[0..31]-ping4_run
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
ioctl_entry:
l00405B80:
	__syscall(out r4_36, out r5_63, out r6_64, out r7_65, out r8_66, out r9_67)
	r3_43 = __syscall_ret(r4_36, out r4_44, out r7_45)
	r4Out = r4_44
	r7Out = r7_45
	return r3_43
ioctl_exit:


word32 madvise(word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      free
// MayUse: 
// LiveOut: r2:[0..31]-free r3:[0..31]-free r4:[0..31]-free r6:[0..31]-free r8:[0..31]-free r9:[0..31]-free
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
madvise_entry:
l00405BC0:
	r2_14 = __syscall(out r4_16, out r5_34, out r6_18, out r7_35, out r8_20, out r9_21)
l00405BD4_thunk___syscall_ret:
	r3Out = __syscall_ret(r4_16, out r4_26, out r7_36)
	r4Out = r4_26
	r6Out = r6_18
	r8Out = r8_20
	r9Out = r9_21
	return r2_14
madvise_exit:


void __vm_wait()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      free
//      mmap64
//      mremap
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__vm_wait_entry:
l00405BE0:
	return
__vm_wait_exit:


word32 mmap64(word32 r5, word32 r7, word32 r10, word32 r11, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      malloc
//      __expand_heap
// MayUse:  r10:[0..31] r11:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r2:[0..31]-__expand_heap r3:[0..31]-__expand_heap r4:[0..31]-__expand_heap r6:[0..31]-__expand_heap r8:[0..31]-__expand_heap
// Trashed: r10 r2 r22 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
mmap64_entry:
l00405BE2:
	branch (r10 & 0xFFF<32> | __ins<word32,word32>(r11, 0<32>, 0<32>, 1<32>)) == 0<32> l00405C0C
l00405C00:
	r3_140 = __errno_location(out r4_158)
l00405C06:
	r3Out = r3_140
	r4Out = 0xFFFFFFFF<32>
	r6Out = r6
	r8Out = r8
	return r2
l00405C0C:
	branch r5 <=u 0x7FFFFFFE<32> l00405C1E
l00405C16:
	r3_140 = __errno_location(out r4_159)
	goto l00405C06
l00405C1E:
	branch __bit<word32,word32>(r7, 4<32>) l00405C26
l00405C22:
	__vm_wait()
l00405C26:
	r2_57 = __syscall(out r4_59, out r5_160, out r6_61, out r7_161, out r8_63, out r9_162)
l00405C44_thunk___syscall_ret:
	r3Out = __syscall_ret(r4_59, out r4_78, out r7_163)
	r4Out = r4_78
	r6Out = r6_61
	r8Out = r8_63
	return r2_57
mmap64_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l00405C50:
	return
dummy_exit:


word32 mremap(word32 r6, word32 r7, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      realloc
// MayUse:  r6:[0..31] r7:[0..31]
// LiveOut: r2:[0..31]-realloc r3:[0..31]-realloc r4:[0..31]-realloc r6:[0..31]-realloc r8:[0..31]-realloc
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
mremap_entry:
l00405C52:
	branch r6 <=u 0x7FFFFFFE<32> l00405C82
l00405C6E:
	r3_110 = __errno_location(out r4_121)
	r4_111 = 0xFFFFFFFF<32>
l00405C78:
	r3Out = r3_110
	r4Out = r4_111
	r6Out = r6
	r8Out = r8
	return r2
l00405C82:
	branch __bit<word32,word32>(r7, 1<32>) l00405CA2
l00405C88:
	__vm_wait()
l00405CA2:
	r2 = __syscall(out r4_55, out r5_122, out r6, out r7_123, out r8, out r9_124)
	r3_110 = __syscall_ret(r4_55, out r4_111, out r7_125)
	goto l00405C78
mremap_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l00405CC0:
	return
dummy_exit:


word32 munmap(word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      free
// MayUse: 
// LiveOut: r2:[0..31]-free r3:[0..31]-free r4:[0..31]-free r6:[0..31]-free r7:[0..31]-free r8:[0..31]-free r9:[0..31]-free
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
munmap_entry:
l00405CC2:
	__vm_wait()
	r2_19 = __syscall(out r4_21, out r5_44, out r6_23, out r7_45, out r8_25, out r9_26)
l00405CD8_thunk___syscall_ret:
	r3Out = __syscall_ret(r4_21, out r4_33, out r7_34)
	r4Out = r4_33
	r6Out = r6_23
	r7Out = r7_34
	r8Out = r8_25
	r9Out = r9_26
	return r2_19
munmap_exit:


word32 mbtowc(word32 r4, word32 r5, word32 r6, word32 r8, word32 & r6Out, word32 & r7Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __posix_getopt
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r4:[0..31]-__posix_getopt r6:[0..31]-__posix_getopt r7:[0..31]-__posix_getopt r8:[0..31]-__posix_getopt
// Trashed: r25 r3 r4 r6 r7 r8 r9
// Preserved: ra sp
mbtowc_entry:
l00405CE0:
	r7_57 = 0<32>
	branch r5 == 0<32> l00405CFE
l00405CE6:
	branch r6 == 0<32> l00405D9E
l00405CEA:
	branch r4 != 0<32> l00405CEE
l00405CEC:
l00405CEE:
	r7_18 = CONVERT(SLICE(r8, byte, 0), byte, int32)
	branch r8 < 0<32> l00405D02
l00405CF8:
	r7_57 = CONVERT(r7_18 >u 0<32>, bool, word32)
l00405CFE:
	r6Out = r6
	r7Out = r7_57
	r8Out = r8
	return r7_57
l00405D02:
	r8 = Mem5[Mem5[__read_user_local() - 56<i32>:word32]:word32]
	branch r8 != 0<32> l00405D1E
l00405D10:
	r6 = 0xDFFF<32>
	r7_57 = 1<32>
	goto l00405CFE
l00405D1E:
	branch r7_18 >=u 0xF5<32> l00405D9E
l00405D26:
	r8 = 0x00413370<p32>
	r7_24 = Mem5[0x00413370<p32> + (r7_18 + 0xFFFFFF3E<32>) * 4<32>:word32]
	branch r6 >=u 4<32> l00405D42
l00405D32:
	r6 = r7_24 << r6 * 6<32> + 0xFFFFFFFA<32>
	branch r6 < 0<32> l00405D9E
l00405D42:
	r8 = CONVERT(Mem5[r5 + 1<i32>:byte], byte, word32)
	r6 = (r8 >>u 3<32>) + 0xFFFFFFF0<32>
	branch __ins<word32,word32>((r7_24 >> 0x1A<32>) + (r8 >>u 3<32>) | r6, 0<32>, 0<32>, 1<32>) != 0<32> l00405D9E
l00405D60:
	r6 = r8 + 0xFFFFFF80<32> | r7_24 << 6<32>
	branch r6 < 0<32> l00405D72
l00405D6C:
	r7_57 = 2<32>
	goto l00405CFE
l00405D72:
	r7_43 = CONVERT(Mem5[r5 + 2<i32>:byte], byte, word32)
	branch r7_43 >=u 0x80<32> l00405D9E
l00405D7C:
	r6 = r6 << 6<32>
	branch (r7_43 + 0xFFFFFF80<32> | r6 << 6<32>) < 0<32> l00405D8A
l00405D84:
	r7_57 = 3<32>
	goto l00405CFE
l00405D8A:
	r6_47 = CONVERT(Mem5[r5 + 3<i32>:byte], byte, word32)
	r6 = r6_47 + 0xFFFFFF80<32>
	branch r6_47 >=u 0x80<32> l00405D9E
l00405D94:
	r7_57 = 4<32>
	goto l00405CFE
l00405D9E:
	__errno_location(out r4_108)
	r7_57 = 0xFFFFFFFF<32>
	goto l00405CFE
mbtowc_exit:


word32 bind()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
//      __res_msend_rc
// MayUse: 
// LiveOut: r4:[0..31]-__res_msend_rc
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
bind_entry:
l00405DB0:
	__syscall(out r4_19, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36)
l00405DC8_thunk___syscall_ret:
	__syscall_ret(r4_19, out r4_29, out r7_37)
	return r4_29
bind_exit:


word32 connect(word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
//      __lookup_name
// MayUse: 
// LiveOut: r4:[0..31]-__lookup_name r5:[0..31]-ping4_run
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
connect_entry:
l00405DD0:
	__syscall_cp(out r4_19, out r5_20, out r6_33, out r8_34)
l00405DE8_thunk___syscall_ret:
	__syscall_ret(r4_19, out r4_29, out r7_35)
	r5Out = r5_20
	return r4_29
connect_exit:


word32 freeaddrinfo(word32 r0, word32 r4, word32 r11, word32 & r3Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-ping4_run r2:[0..31]-ping4_run r3:[0..31]-ping4_run
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
freeaddrinfo_entry:
l00405DF0:
l00405DF0_thunk_free:
	r2_10 = free(r0, r4, r11, out r3_11, out r4_20, out r6_21, out r7_22, out r8_23, out r9_24, out r11_9)
	r3Out = r3_11
	r11Out = r11_9
	return r2_10
freeaddrinfo_exit:


word32 gai_strerror(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r3:[0..31]-ping6_run
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: sp
gai_strerror_entry:
l00405E00:
	r7_10 = r4 + 1<32>
	r4_11 = 0x00412D1C<p32>
l00405E08:
	r6_9 = CONVERT(Mem0[r4_11:byte], byte, word32)
	branch r7_10 != 0<32> l00405E14
l00405E0C:
	branch r6_9 != 0<32> l00405E10
l00405E0E:
l00405E10:
l00405E10_thunk___lctrans_cur:
	return __lctrans_cur()
l00405E14:
	branch r6_9 == 0<32> l00405E0E
l00405E16:
	r4_11 = r4_31 + 1<32>
	r4_31 = r4_11
	branch Mem0[r4_31:byte] != 0<8> l00405E16
l00405E1C:
	r7_10 = r7_10 + 1<32>
	goto l00405E08
gai_strerror_exit:


word32 getaddrinfo(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, word32 r20, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r20:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-main r12:[0..31]-ping6_run r2:[0..31]-ping6_run r4:[0..31]-ping4_run r8:[0..31]-main
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
getaddrinfo_entry:
l00405E20:
	branch r4 != 0<32> l00405E30
l00405E2A:
	r30_113 = 0xFFFFFFFE<32>
	branch r5 == 0<32> l00405E58
l00405E30:
	branch r6 == 0<32> l00405E5E
l00405E32:
	r16_35 = Mem28[r6:word32]
	r17_36 = Mem28[r6 + 4<i32>:word32]
	r7_33 = Mem28[r6 + 8<i32>:word32]
	r19_34 = Mem28[r6 + 12<i32>:word32]
	r30_113 = 0xFFFFFFFF<32>
	branch r16_35 != (r16_35 & 0x43F<32>) l00405E58
l00405E44:
	r30_113 = 0xFFFFFFFA<32>
	branch r17_36 >=u 0xB<32> l00405E58
l00405E4C:
	branch (1<32> << r17_36 & 0x405<32>) != 0<32> l00405E66
l00405E58:
	r4Out = r30_113
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l00405E5E:
	r7_33 = 0<32>
	r19_34 = 0<32>
	r16_35 = 0<32>
	r17_36 = 0<32>
l00405E66:
	r2 = __lookup_serv(r2, r3, &tLoc0678, r5, r19_34, r7_33, r16_35, r12, out r3_79, out r4_68, out r8, out r11, out r12)
	r30_113 = r4_68
	branch r4_68 < 0<32> l00405E58
l00405E76:
	r2 = __lookup_name(r2, r3_79, &tLoc0570, &tLoc0670, r4, r17_36, r16_35, r12, out r4_106, out r8, out r11, out r12)
	branch r4_106 < 0<32> l00405FAA
l00405E8A:
	r16_114 = r4_68 *s r4_106
	r4_117 = strlen(&tLoc0670, out r5_597, out r6_598, out r7_599)
	r2 = calloc(r0, 1<32>, r16_114 *s 0x3C<32> + 1<32> + r4_117, 0x3C<32>, r11, out r4_135, out r6_600, out r8, out r11)
	r18_143 = r4_135
	branch r4_135 == 0<32> l00405FAE
l00405EAC:
	r22_145 = 0<32>
	branch r4_117 == 0<32> l00405EBE
l00405EB0:
	r22_145 = r4_135 + r16_114 *s 0x3C<32>
	r2 = memcpy(r22_145, &tLoc0670, r4_117 + 1<32>, out r3_601, out r5_602, out r6_603, out r7_604, out r8, out r9_605, out r11, out r12, out r13_606, out r14_607)
l00405EBE:
	r23_170 = 0<32>
l00405ECE:
	branch r23_170 == r4_106 l00405F9C
l00405ED2:
	r7_185 = &tLoc0678
	r21_187 = &tLoc0678
	dwLoc06A4_366 = 0<32>
	goto l00405F48
l00405EDC:
	r10_194 = Mem190[dwLoc06A4_366 - 8<i32>:word32]
	r7_196 = 0x10<32>
	r3_198 = CONVERT(Mem190[r21_187 + 3<i32>:byte], byte, word32)
	r2_200 = CONVERT(Mem190[r21_187 + 2<i32>:byte], byte, word32)
	branch (r10_194 ^ 2<32>) == 0<32> l00405EF4
l00405EF0_1:
	r7_196 = 0x1C<32>
l00405EF4:
	memset(r20, 0<32>, 0x20<32>, out r6_608, out r7_609, out r8, out r10_222)
	Mem232[r20 + 16<i32>:word32] = r7_196
	Mem233[r20 + 1<i32>:word32] = r10_222
	Mem234[r20 + 8<i32>:word32] = r3_198
	Mem235[r20 + 12<i32>:word32] = r2_200
	Mem236[r20 + 20<i32>:word32] = r20 + 0x20<32>
	Mem239[r20 + 24<i32>:word32] = r22_145
	Mem240[r20 + 28<i32>:word32] = r20 + 0x3C<32>
	r11 = r7_196
	r18_143 = r10_194
	r7_229 = r20 + 0x3C<32>
	r2 = r2_200
	branch r10_222 == 2<32> l00405F5C
l00405F3A:
	branch r10_222 == 0xA<32> l00405F7A
l00405F3E:
	r7_185 = r7_229 + 1<32>
	r21_187 = r21_187 + 4<32>
	dwLoc06A4_366 = r7_185
l00405F48:
	branch r7_185 != r4_68 l00405EDC
l00405F4E:
	r23_170 = r23_170 + 1<32>
	goto l00405ECE
l00405F5C:
	Mem241[r20 + 32<i32>:word16] = SLICE(r10_222, word16, 0)
	Mem247[r20 + 34<i32>:word16] = SLICE(htons(CONVERT(Mem241[r21_187:uint16], uint16, word32)), word16, 0)
	r6_246 = 4<32>
	r4_250 = r20 + 0x24<32>
l00405F74:
	r2 = memcpy(r4_250, dwLoc06A4_366, r6_246, out r3_610, out r5_611, out r6_612, out r7_229, out r8, out r9_613, out r11, out r12, out r13_614, out r14_615)
	goto l00405F3E
l00405F7A:
	Mem251[r20 + 32<i32>:word16] = SLICE(r10_222, word16, 0)
	Mem256[r20 + 34<i32>:word16] = SLICE(htons(CONVERT(Mem251[r21_187:uint16], uint16, word32)), word16, 0)
	Mem259[r20 + 56<i32>:word32] = Mem256[dwLoc06A4_366 - 4<i32>:word32]
	r4_250 = r20 + 0x28<32>
	r6_246 = 0x10<32>
	goto l00405F74
l00405F9C:
	Mem182[r18_143 + r16_114 *s 0x3C<32> - 32<i32>:word32] = 0<32>
	Mem184[&tLoc0670:word32] = r18_143
	r30_113 = 0<32>
	goto l00405E58
l00405FAA:
	r30_113 = r4_106
	goto l00405E58
l00405FAE:
	r30_113 = 0xFFFFFFF6<32>
	goto l00405E58
getaddrinfo_exit:


word32 copy_addr(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      netlink_msg_to_ifaddr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-netlink_msg_to_ifaddr
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
copy_addr_entry:
l00405FC0:
	branch r5 == 2<32> l00405FD0
l00405FCA:
	branch r5 == 0xA<32> l00405FE2
l00405FCE:
	return r11
l00405FD0:
	r4_16 = r6 + 4<32>
	r6_17 = 4<32>
l00405FD4:
	branch r8 <u r6_17 l00405FE0
l00405FD8:
	Mem44[r6:word16] = SLICE(r5, word16, 0)
	memcpy(r4_16, r7, r6_17, out r3_178, out r5_179, out r6_180, out r7_181, out r8_182, out r9_183, out r11, out r12_184, out r13_185, out r14_186)
	Mem70[r4:word32] = r6
l00405FE0:
	return r11
l00405FE2:
	r10_19 = CONVERT(Mem9[r7:byte], byte, word32)
	r4_16 = r6 + 8<32>
	branch r10_19 != 0xFE<32> l00406002
l00405FF0:
	branch (CONVERT(Mem9[r7 + 1<i32>:byte], byte, word32) & 0xC0<32>) == 0x80<32> l00406018
l00405FFE:
	r6_17 = 0x10<32>
	goto l00405FD4
l00406002:
	r11 = 0xFF<32>
	r6_17 = 0x10<32>
	branch r10_19 != 0xFF<32> l00405FD4
l0040600C:
	branch (CONVERT(Mem9[r7 + 1<i32>:byte], byte, word32) & 0xF<32>) != 2<32> l00405FD4
l00406018:
	Mem32[r6 + 24<i32>:word32] = r9
	goto l00405FFE
copy_addr_exit:


word32 netlink_msg_to_ifaddr(word32 r0, word32 r4, word32 r5, word32 r11, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __netlink_enumerate
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-__netlink_enumerate r4:[0..31]-__netlink_enumerate
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
netlink_msg_to_ifaddr_entry:
l0040601E:
	branch Mem19[r5 + 4<i32>:uint16] != 0x10<u16> l004060AC
l00406028:
	r7_32 = r5 + 0x20<32>
	r6_37 = r5 + Mem19[r5:word32]
l00406030:
	branch r6_37 - r7_32 >=u 4<32> l0040603A
l00406036:
	r5_44 = 0<32>
	goto l0040604E
l0040603A:
	r5_43 = CONVERT(Mem19[r7_32:uint16], uint16, word32)
	branch Mem19[r7_32 + 2<i32>:uint16] == 7<u16> l0040604C
l00406042:
	r7_32 = r7_32 + __ins<word32,word32>(r5_43 + 3<32>, 0<32>, 0<32>, 1<32>)
	goto l00406030
l0040604C:
	r5_44 = r5_43 + 0xFFFFFFFC<32>
l0040604E:
	calloc(r0, 1<32>, r5_44 + 0xA4<32>, r7_32, r11, out r4_69, out r6_894, out r8_895, out r11)
	r4_479 = 0xFFFFFFFF<32>
	branch r4_69 == 0<32> l004060AA
l0040605E:
	branch Mem19[r5 + 4<i32>:uint16] != 0x10<u16> l00406168
l00406064:
	Mem297[r4_69 + 140<i32>:word32] = Mem19[r5 + 20<i32>:word32]
	r18_296 = r5 + 0x20<32>
l00406072:
	branch r5 + Mem301[r5:word32] - r18_296 >=u 4<32> l004060C6
l0040607C:
	branch Mem301[r4_69 + 4<i32>:word32] == 0<32> l00406288
l00406082:
	Mem421[r4 + ((Mem301[r4_69 + 140<i32>:word32] & 0x3F<32>) << 2<8>) + 2<i32>:word32] = r4_69
l00406094:
	branch Mem425[r4_69 + 4<i32>:word32] == 0<32> l00406288
l0040609A:
	branch Mem425[r4:word32] != 0<32> l004060A0
l0040609E:
	Mem470[r4:word32] = r4_69
l004060A0:
	r7_473 = Mem472[r4 + 4<i32>:word32]
	branch r7_473 == 0<32> l004060A6
l004060A4:
	Mem475[r7_473:word32] = r4_69
l004060A6:
	Mem478[r4 + 1<i32>:word32] = r4_69
l004060A8:
	r4_479 = 0<32>
l004060AA:
	r11Out = r11
	return r4_479
l004060AC:
	r6_26 = Mem19[r5 + 20<i32>:word32]
	r18_29 = Mem19[r4 + ((r6_26 & 0x3F<32>) << 2<8>) + 8<i32>:word32]
l004060B8:
	branch r18_29 == 0<32> l004060A8
l004060BA:
	r7_32 = Mem19[r18_29 + 140<i32>:word32]
	branch r6_26 == r7_32 l00406036
l004060C2:
	r18_29 = Mem19[r18_29 + 28<i32>:word32]
	goto l004060B8
l004060C6:
	r7_306 = CONVERT(Mem301[r18_296 + 2<i32>:uint16], uint16, word32)
	r6_307 = CONVERT(Mem301[r18_296:uint16], uint16, word32)
	branch r7_306 == 2<32> l00406138
l004060CE:
	branch r7_306 >=u 3<32> l004060E2
l004060D2:
	branch r7_306 == 1<32> l0040610C
l004060D6:
	r18_296 = r18_296 + __ins<word32,word32>(CONVERT(Mem404[r18_296:uint16], uint16, word32) + 3<32>, 0<32>, 0<32>, 1<32>)
	goto l00406072
l004060E2:
	branch r7_306 == 3<32> l004060F8
l004060E6:
	branch r7_306 != 7<32> l004060D6
l004060EA:
	r11 = fn0040628E(r4_69 + 0xA4<32>, r18_296 + 4<32>, r6_307 + 0xFFFFFFFC<32>)
	goto l004060D6
l004060F8:
	branch r6_307 >=u 0x15<32> l004060D6
l004060FE:
	memcpy(r4_69 + 0x90<32>, r18_296 + 4<32>, r6_307 + 0xFFFFFFFC<32>, out r3_906, out r5_907, out r6_908, out r7_909, out r8_910, out r9_911, out r11, out r12_912, out r13_913, out r14_914)
	Mem355[r4_69 + 1<i32>:word32] = r4_69 + 0x90<32>
	goto l004060D6
l0040610C:
	branch r6_307 >=u 0x1D<32> l004060D6
l00406112:
	r7_379 = CONVERT(Mem301[r5 + 18<i32>:uint16], uint16, word32)
	Mem381[r4_69 + 32<i32>:word16] = 0x11<16>
	Mem385[r4_69 + 40<i32>:word16] = SLICE(r7_379, word16, 0)
	Mem386[r4_69 + 43<i32>:byte] = SLICE(r6_307, byte, 0) + 0xFC<8>
	r11 = fn0040628E(r4_69 + 0x2C<32>, r18_296 + 4<32>, r6_307 + 0xFFFFFFFC<32>)
	Mem402[r4_69 + 3<i32>:word32] = r4_69 + 0x20<32>
	goto l004060D6
l00406138:
	branch r6_307 >=u 0x1D<32> l004060D6
l0040613E:
	r5_309 = Mem301[r5 + 20<i32>:word32]
	r7_311 = CONVERT(Mem301[r5 + 18<i32>:uint16], uint16, word32)
	Mem314[r4_69 + 104<i32>:word16] = 0x11<16>
	Mem316[r4_69 + 108<i32>:word32] = r5_309
	Mem318[r4_69 + 112<i32>:word16] = SLICE(r7_311, word16, 0)
	Mem319[r4_69 + 115<i32>:byte] = SLICE(r6_307, byte, 0) + 0xFC<8>
	r11 = fn0040628E(r4_69 + 0x74<32>, r18_296 + 4<32>, r6_307 + 0xFFFFFFFC<32>)
	Mem335[r4_69 + 20<i32>:word32] = r4_69 + 0x68<32>
	goto l004060D6
l00406168:
	r18_102 = r5 + 0x18<32>
l00406172:
	branch r5 + Mem99[r5:word32] - r18_102 >=u 4<32> l004061E4
l0040617C:
	branch Mem99[r4_69 + 12<i32>:word32] == 0<32> l00406094
l00406182:
	r7_233 = CONVERT(Mem99[r5 + 17<i32>:byte], byte, word32)
	r21_235 = CONVERT(Mem99[r5 + 16<i32>:byte], byte, word32)
	Mem239[&tLoc30:word32] = 0<32>
	r17_238 = r7_233
	branch r7_233 <=u 0x80<32> l004061A8
l004061A4:
	r17_238 = 0xFFFFFF80<32>
l004061A8:
	r17_245 = r17_238 & 0xFF<32>
	memset(&tLoc30, 0xFF<32>, r17_245 >> 3<32>, out r6_902, out r7_903, out r8_904, out r10_905)
	branch r17_245 >> 3<32> == 0x10<32> l004061D4
l004061BE:
	Mem265[fp - 0x20<32> + (r17_245 >> 3<32>) - 16<i32>:int8] = -1<i8> << 8<i8> - (SLICE(r17_245, int8, 0) & 7<i8>)
l004061D4:
	r11 = copy_addr(r4_69 + 0x10<32>, r21_235, r4_69 + 0x44<32>, &tLoc30, 0x10<32>, 0<32>)
	goto l00406094
l004061E4:
	r7_104 = CONVERT(Mem99[r18_102 + 2<i32>:uint16], uint16, word32)
	branch r7_104 == 2<32> l00406240
l004061EA:
	r8_150 = CONVERT(Mem99[r18_102:uint16], uint16, word32)
	branch r7_104 >=u 3<32> l00406202
l004061F2:
	branch r7_104 == 1<32> l0040621C
l004061F6:
	r18_102 = r18_102 + __ins<word32,word32>(CONVERT(Mem224[r18_102:uint16], uint16, word32) + 3<32>, 0<32>, 0<32>, 1<32>)
	goto l00406172
l00406202:
	branch r7_104 == 3<32> l00406272
l00406206:
	branch r7_104 != 4<32> l004061F6
l0040620A:
	r7_143 = r18_102 + 4<32>
	r5_147 = CONVERT(Mem99[r5 + 16<i32>:byte], byte, word32)
	r9_149 = Mem99[r5 + 20<i32>:word32]
	goto l00406230
l0040621C:
	r7_143 = r18_102 + 4<32>
	r5_147 = CONVERT(Mem99[r5 + 16<i32>:byte], byte, word32)
	r8_148 = r8_150 + 0xFFFFFFFC<32>
	r9_149 = Mem99[r5 + 20<i32>:word32]
	branch Mem99[r4_69 + 12<i32>:word32] == 0<32> l00406234
l0040622C:
l00406230:
	r8_148 = r8_150 + 0xFFFFFFFC<32>
	r6_189 = r4_69 + 0x68<32>
	r4_184 = r4_69 + 0x14<32>
	goto l0040623A
l00406234:
l00406238:
	r6_189 = r4_69 + 0x20<32>
	r4_184 = r4_69 + 0xC<32>
l0040623A:
	r11 = copy_addr(r4_184, r5_147, r6_189, r7_143, r8_148, r9_149)
	goto l004061F6
l00406240:
	branch Mem99[r4_69 + 12<i32>:word32] == 0<32> l0040625E
l00406248:
	fn0040628E(r4_69 + 0x68<32>, r4_69 + 0x20<32>, 0x24<32>)
	memset(r4_69 + 0x20<32>, 0<32>, 0x24<32>, out r6_915, out r7_916, out r8_917, out r10_918)
l0040625E:
	r7_143 = r18_102 + 4<32>
	r5_147 = CONVERT(Mem141[r5 + 16<i32>:byte], byte, word32)
	r8_148 = CONVERT(Mem141[r18_102:uint16], uint16, word32) + 0xFFFFFFFC<32>
	r9_149 = Mem141[r5 + 20<i32>:word32]
	goto l00406238
l00406272:
	branch r8_150 >=u 0x15<32> l004061F6
l0040627A:
	memcpy(r4_69 + 0x90<32>, r18_102 + 4<32>, r8_150 + 0xFFFFFFFC<32>, out r3_919, out r5_920, out r6_921, out r7_922, out r8_923, out r9_924, out r11, out r12_925, out r13_926, out r14_927)
	Mem170[r4_69 + 1<i32>:word32] = r4_69 + 0x90<32>
	goto l004061F6
l00406288:
	free(r0, r4_69, r11, out r3_896, out r4_897, out r6_898, out r7_899, out r8_900, out r9_901, out r11)
	goto l004060A8
netlink_msg_to_ifaddr_exit:


word32 fn0040628E(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      netlink_msg_to_ifaddr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-netlink_msg_to_ifaddr
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn0040628E_entry:
l0040628E:
l0040628E_thunk_memcpy:
	memcpy(r4, r5, r6, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r11_15, out r12_28, out r13_29, out r14_30)
	return r11_15
fn0040628E_exit:


word32 freeifaddrs(word32 r0, word32 r4, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
//      getifaddrs
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-getifaddrs
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
freeifaddrs_entry:
l00406292:
	goto l0040629E
l00406296:
	r16_11 = Mem7[r4:word32]
	free(r0, r4, r11, out r3_54, out r4_55, out r6_56, out r7_57, out r8_58, out r9_59, out r11)
	r4 = r16_11
l0040629E:
	branch r4 != 0<32> l00406296
l004062A0:
	return r11
freeifaddrs_exit:


word32 getifaddrs(word32 r0, word32 r11, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r0:[0..31] r11:[0..31]
// LiveOut: r11:[0..31]-ping4_run r4:[0..31]-ping4_run
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
getifaddrs_entry:
l004062A2:
	memset(&tLoc0118, 0<32>, 0x108<32>, out r6_96, out r7_97, out r8_98, out r10_99)
	r4_33 = __rtnetlink_enumerate(r0, &tLoc0118, r11, out r11_41)
	branch r4_33 != 0<32> l004062CE
l004062C4:
l004062C8:
	r11Out = r11_41
	return r4_33
l004062CE:
	r11_41 = freeifaddrs(r0, r4_33, r11_41)
	goto l004062C8
getifaddrs_exit:


void dns_parse_callback(word32 r4, word32 r5, word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r2 r25 r3 r4 r5 r7 r8 r9
// Preserved: r16 ra sp
dns_parse_callback_entry:
l004062E0:
	branch r5 != 0xC<32> l004062FE
l004062EA:
	dn_expand(r8, r8 + 0x200<32>, r6, r4, 0x100<32>, out r4_25, out r8_61, out r11_62, out r12_63)
	branch r4_25 > 0<32> l004062FE
l004062FC:
	Mem29[r4:byte] = 0<8>
l004062FE:
	return
dns_parse_callback_exit:


word32 getnameinfo(word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r21, word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_addr
// MayUse:  r10:[0..31] r21:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4:[0..31]-pr_addr r5:[0..31]-pr_addr
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
getnameinfo_entry:
l00406302:
	r20_26 = CONVERT(Mem23[r4:uint16], uint16, word32)
	r19_162 = r10
	branch r20_26 == 2<32> l00406324
l0040631A:
	branch r20_26 == 0xA<32> l004064E4
l0040631E:
	r4_1601 = 0xFFFFFFFA<32>
	goto l004065A0
l00406324:
	r17_164 = r4 + 4<32>
	r4_1601 = 0xFFFFFFFA<32>
	branch r5 <u 0x10<32> l004065A0
l0040632E:
	r18_133 = 0<32>
	r5 = sprintf(fp - 0x818<32>, 0x00411EF4<p32>, out r7_127)
l0040634A:
	branch r6 == 0<32> l004065BE
l0040634E:
	branch r7 == 0<32> l004065BE
l00406352:
	Mem146[&tLoc0738:byte] = 0<8>
	branch (r10 & 1<32>) != 0<32> l0040644E
l0040635E:
	__fopen_rb_ca(&tLoc07C8, out r4_156, out r5, out r8_1647, out r9_1648, out r19_162)
	r21 = r4_156
	branch r4_156 == 0<32> l0040644E
l00406376:
	dwLoc0860_920 = r17_164
	branch r20_26 != 2<32> l00406392
l0040637C:
	memcpy(fp - 0x838<32>, r17_164, 4<32>, out r3_1652, out r5_1653, out r6_1654, out r7_1655, out r8_1656, out r9_1657, out r11_1658, out r12_1659, out r13_1660, out r14_1661)
	fn004066AA(fp - 0x844<32>, 0x00412E0C<p32>, 0xC<32>)
	dwLoc0860_920 = fp - 0x844<32>
l00406392:
	r2_215 = fgets_unlocked(&tLoc0638, 0x200<32>, r21, out r3_228, out r4_229, out r5, out r8_1649, out r9_1650, out r11_1651, out r12_222, out r21)
	branch r4_229 == 0<32> l0040644A
l004063A4:
	r4_234 = strchr(&tLoc0638, 0x23<32>)
	branch r4_234 == 0<32> l004063B6
l004063B0:
	Mem241[r4_234 + 1<i32>:byte] = 0<8>
	Mem242[r4_234:byte] = 0xA<8>
l004063B6:
	r6_244 = &tLoc0638
l004063BA:
	r5_247 = CONVERT(Mem895[r6_244:byte], byte, word32)
	r22_248 = r6_244 + 1<32>
	branch (r5_247 & 0xDF<32>) == 0<32> l004063CE
l004063C6:
	branch r5_247 >=u 0xE<32> l00406552
l004063CE:
	Mem253[r6_244:byte] = 0<8>
	__lookup_ipliteral(r2_215, r3_228, fp - 0x834<32>, &tLoc0638, 0<32>, r12_222, out r4_280, out r6_282, out r8_1670, out r9_1671, out r11_1672, out r12_1673)
	branch r4_280 <= 0<32> l00406392
l004063E0:
	branch r6_282 != 2<32> l004063FA
l004063E6:
	fn004066AA(fp - 0x820<32>, &tLoc082C, 4<32>)
	fn004066AA(&tLoc082C, 0x00412E0C<p32>, 0xC<32>)
	r4_280 = &tLoc082C
	dwLoc0830 = 0<32>
l004063FA:
	r17_164 = dwLoc0860_920
	branch memcmp(r4_280, &tLoc082C, 0x10<32>, out r7_1674, out r8_1675, out r9_1676) != 0<32> l00406392
l00406406:
	r17_164 = dwLoc0830
	branch r18_133 != 0x10<32> l00406392
l0040640C:
	r6_343 = CONVERT(Mem325[r22_248:byte], byte, word32)
	branch r6_343 == 0<32> l00406556
l00406414:
	branch r6_343 == 0x20<32> l004066A2
l00406418:
	branch r6_343 <u 0xE<32> l004066A2
l00406420:
	r6_344 = r22_248
l00406422:
	r5_351 = CONVERT(Mem325[r6_344:byte], byte, word32)
	branch (r5_351 & 0xDF<32>) == 0<32> l00406432
l0040642A:
	branch r5_351 >=u 0xE<32> l004066A6
l00406432:
	Mem356[r6_344:byte] = 0<8>
	r6_360 = r6_344 - r22_248
	branch r6_360 > 0xFF<32> l00406392
l00406440:
	memcpy(&tLoc0738, r22_248, r6_360 + 1<32>, out r3_1677, out r5, out r6_1678, out r7_1679, out r8_1680, out r9_1681, out r11_1682, out r12_1683, out r13_1684, out r14_1685)
l0040644A:
	__fclose_ca(r21)
l0040644E:
	r7_401 = CONVERT(Mem398[&tLoc0738:byte], byte, word32)
	branch r7_401 != 0<32> l0040649E
l00406454:
	r17_164 = r10 & 1<32>
	branch r7_401 != 0<32> l0040649E
l00406458:
	res_mkquery(0<32>, fp - 0x818<32>, 1<32>, 0xC<32>, &tLoc0638, 0x60<32>, out r4_1662, out r8_1663, out r11_1664, out r12_415)
	r4_449 = res_send(r12_415, r21, out r11_440, out r17_164)
	Mem456[&tLoc0738:byte] = 0<8>
	r5 = r4_449
	branch r4_449 <= 0<32> l0040649E
l0040648E:
	__dns_parse(&tLoc0438, r4_449, &tLoc0738, r11_440, out r5, out r6_1665, out r7_1666, out r8_1667, out r11_1668, out r12_1669)
l0040649E:
	branch Mem478[&tLoc0738:byte] != 0<8> l00406590
l004064A6:
	r4_1601 = 0xFFFFFFFE<32>
	branch !__bit<word32,word32>(r19_162, 3<32>) l004065A0
l004064AE:
	inet_ntop(r20_26, r17_164, &tLoc0738, 0x100<32>)
	branch r18_133 == 0<32> l00406590
l004064C0:
	branch __bit<word32,word32>(r19_162, 8<32>) l0040655A
l004064C4:
	r4_562 = fp - 0x829<32>
l004064CC:
	r4_562 = r4_562 + 0xFFFFFFFF<32>
	Mem577[r4_562:byte] = SLICE(r18_133 %u 0xA<32>, byte, 0) + 0x30<8>
	branch r18_133 != 0<32> l004064CC
l004064E2:
	goto l0040657E
l004064E4:
	r17_164 = r4 + 8<32>
	r4_1601 = 0xFFFFFFFA<32>
	branch r5 <u 0x1C<32> l004065A0
l004064EE:
	branch memcmp(r4 + 8<32>, 0x00412E0C<p32>, 0xC<32>, out r7_1720, out r8_1721, out r9_1722) == 0<32> l00406536
l004064FA:
	r7_100 = fp - 0x818<32>
	r6_101 = 0xF<32>
l004064FE:
	r5_105 = CONVERT(Mem104[r4 + 8<32> + r6_101:byte], byte, word32)
	r5_111 = CONVERT(Mem104[0x00412E1C<p32> + (r5_105 >>u 4<32>):byte], byte, word32)
	Mem113[r7_100:byte] = Mem104[0x00412E1C<p32> + (r5_105 & 0xF<32>):byte]
	Mem115[r7_100 + 2<i32>:byte] = SLICE(r5_111, byte, 0)
	Mem117[r7_100 + 1<i32>:byte] = 0x2E<8>
	r7_100 = r7_100 + 4<32>
	Mem119[r7_100 - 1<i32>:int8] = 46<i8>
	r6_101 = r6_101 + 0xFFFFFFFF<32>
	branch r6_101 != 0xFFFFFFFF<32> l004064FE
l00406528:
	r5 = strcpy(fp - 0x7D8<32>, 0x00411F10<p32>, out r6_1723, out r7_127, out r8_1724)
l00406532:
	r18_133 = Mem132[r4 + 24<i32>:word32]
	goto l0040634A
l00406536:
	r5 = sprintf(fp - 0x818<32>, 0x00411EF4<p32>, out r7_127)
	goto l00406532
l00406552:
	r6_244 = r22_248
	goto l004063BA
l00406556:
	r6_344 = r22_248
	goto l00406432
l0040655A:
	r7_546 = CONVERT(Mem478[r17_164:byte], byte, word32)
	branch r7_546 != 0xFE<32> l004065A4
l00406564:
	branch (CONVERT(Mem478[r17_164 + 1<i32>:byte], byte, word32) & 0xC0<32>) != 0x80<32> l004064C4
l00406572:
	r4_562 = if_indextoname(&tLoc0438 + 1<i32>)
	branch r4_562 == 0<32> l004064C4
l0040657E:
	Mem584[r4_562 - 1<i32>:int8] = 37<i8>
	strcat(&tLoc0738)
l00406590:
	branch strlen(&tLoc0738, out r5, out r6_1686, out r7_1687) <u r7 l004065B6
l0040659C:
	r4_1601 = 0xFFFFFFF4<32>
l004065A0:
	r5Out = r5
	return r4_1601
l004065A4:
	branch r7_546 != 0xFF<32> l004064C4
l004065AC:
	branch (CONVERT(Mem478[r17_164 + 1<i32>:byte], byte, word32) & 0xF<32>) != 2<32> l004064C4
l004065B4:
	goto l00406572
l004065B6:
	r5 = strcpy(r6, &tLoc0738, out r6_1718, out r7_127, out r8_1719)
l004065BE:
	r4_1601 = 0<32>
	branch r7_127 == 0<32> l004065A0
l004065C4:
	branch r7_127 == 0<32> l004065A0
l004065C8:
	r4_677 = ntohs(CONVERT(Mem647[r4 + 2<i32>:uint16], uint16, word32))
	Mem678[&tLoc0738:byte] = 0<8>
	branch !__bit<word32,word32>(r19_162, 1<32>) l004065F4
l004065D8:
	__fopen_rb_ca(&tLoc0638, out r4_694, out r5_1688, out r8_1689, out r9_1690, out r19_700)
	branch r4_694 != 0<32> l00406636
l004065F4:
	r16_840 = &tLoc0738
	branch Mem835[&tLoc0738:byte] != 0<8> l0040661E
l004065FE:
	r16_840 = fp - 0x829<32>
l00406608:
	r16_840 = r16_840 + 0xFFFFFFFF<32>
	Mem853[r16_840:byte] = SLICE(r4_677 %u 0xA<32>, byte, 0) + 0x30<8>
	branch r4_677 != 0<32> l00406608
l0040661E:
	r4_860 = strlen(r16_840, out r5, out r6_1696, out r7_863)
	branch r4_860 >=u r7_863 l0040659C
l00406628:
	r5 = strcpy(r4_860, r16_840, out r6_1697, out r7_1698, out r8_1699)
	r4_1601 = 0<32>
	goto l004065A0
l00406632:
	r6_740 = r16_744
	goto l00406654
l00406636:
	r2_711 = fgets_unlocked(&tLoc07C8, 0x80<32>, r4_694, out r3_724, out r4_725, out r5_1691, out r8_1692, out r9_1693, out r11_1694, out r12_718, out r21_1695)
	branch r4_725 == 0<32> l0040669C
l00406644:
	r4_730 = strchr(&tLoc07C8, 0x23<32>)
	branch r4_730 == 0<32> l00406652
l0040664C:
	Mem737[r4_730 + 1<i32>:byte] = 0<8>
	Mem738[r4_730:byte] = 0xA<8>
l00406652:
	r6_740 = &tLoc07C8
l00406654:
	r7_743 = CONVERT(Mem900[r6_740:byte], byte, word32)
	branch r7_743 == 0<32> l00406636
l00406658:
	r16_744 = r6_740 + 1<32>
	branch r7_743 == 0x20<32> l00406668
l00406660:
	branch r7_743 >=u 0xE<32> l00406632
l00406668:
	Mem748[r6_740:byte] = 0<8>
	__strtoul_internal(r2_711, r3_724, r16_744, fp - 0x844<32>, 0xA<32>, r12_718, out r3_1700, out r4_774, out r6_1701, out r7_1702, out r8_1703, out r9_1704, out r11_1705, out r12_1706)
	branch r4_774 != r4_677 l00406636
l00406676:
	branch r16_744 == r4_774 l00406636
l0040667C:
	r5_786 = 0x00411F40<p32>
	branch (r19_700 & 0x10<32>) == 0<32> l00406688
l00406684:
	r5_786 = 0x00411F38<p32>
l00406688:
	branch strncmp(r4_774, r5_786, 4<32>, out r6_1707) != 0<32> l00406636
l0040668E:
	r6_805 = r16_744 - dwLoc0844
	branch r6_805 >= 0x21<32> l00406636
l00406694:
	memcpy(&tLoc0738, dwLoc0844, r6_805, out r3_1708, out r5_1709, out r6_1710, out r7_1711, out r8_1712, out r9_1713, out r11_1714, out r12_1715, out r13_1716, out r14_1717)
l0040669C:
	__fclose_ca(r4_694)
	goto l004065F4
l004066A2:
	r22_248 = r22_248 + 1<32>
	goto l0040640C
l004066A6:
	r6_344 = r6_344 + 1<32>
	goto l00406422
getnameinfo_exit:


void fn004066AA(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn004066AA_entry:
l004066AA:
l004066AA_thunk_memcpy:
	memcpy(r4, r5, r6, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r11_28, out r12_29, out r13_30, out r14_31)
	return
fn004066AA_exit:


word32 getsockname()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
//      __lookup_name
// MayUse: 
// LiveOut: r4:[0..31]-__lookup_name
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
getsockname_entry:
l004066B0:
	__syscall(out r4_19, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36)
l004066C8_thunk___syscall_ret:
	__syscall_ret(r4_19, out r4_29, out r7_37)
	return r4_29
getsockname_exit:


word32 getsockopt(word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sock_setbufs
// MayUse: 
// LiveOut: r4:[0..31]-sock_setbufs r7:[0..31]-sock_setbufs
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
getsockopt_entry:
l004066D0:
	__syscall(out r4_21, out r5_35, out r6_36, out r7_37, out r8_38, out r9_39)
l004066EA_thunk___syscall_ret:
	__syscall_ret(r4_21, out r4_31, out r7_32)
	r7Out = r7_32
	return r4_31
getsockopt_exit:


word32 htonl(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-ping6_run
// Trashed: r25 r4
// Preserved: sp
htonl_entry:
l004066F0:
	return __rotx<word32>(r4, 8<32>, 0x18<32>, 0<32>)
htonl_exit:


word32 htons(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00400B62
//      setup
//      ping6_usage
//      fn0040359C
//      getaddrinfo
//      __res_msend_rc
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__res_msend_rc
// Trashed: r25 r4
// Preserved: sp
htons_entry:
l00406700:
	return __rotx<word32>(r4, 0x18<32>, 8<32>, 0<32>) & 0xFFFF<32>
htons_exit:


word32 if_indextoname(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
// MayUse:  r5:[0..31]
// LiveOut: r4:[0..31]-getnameinfo
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
if_indextoname_entry:
l00406710:
	socket(0x80001<32>, out r3_120, out r4_24, out r6_121, out r8_122, out r9_123)
	branch r4_24 < 0<32> l00406752
l00406728:
	ioctl(out r4_37, out r7_124)
	__syscall(out r4_125, out r5_126, out r6_127, out r7_128, out r8_129, out r9_130)
	branch r4_37 >= 0<32> l00406756
l00406740:
	__errno_location(out r4_71)
	branch Mem33[r4_71:word32] != 0x13<32> l00406752
l0040674A:
	__errno_location(out r4_131)
l00406752:
	return 0<32>
l00406756:
	strncpy(r5, fp - 48<i32>, 0x10<32>)
	return r5
if_indextoname_exit:


word32 if_nametoindex(word32 r4, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      if_name2index
//      __lookup_ipliteral
// MayUse:  r4:[0..31]
// LiveOut: r2:[0..31]-__lookup_ipliteral r4:[0..31]-__lookup_ipliteral r6:[0..31]-__lookup_ipliteral r8:[0..31]-__lookup_ipliteral r9:[0..31]-__lookup_ipliteral
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
if_nametoindex_entry:
l00406760:
	r2_17 = socket(0x80001<32>, out r3_106, out r4_20, out r6_22, out r8_24, out r9_25)
	branch r4_20 >= 0<32> l0040677C
l00406778:
	r4Out = 0<32>
	r6Out = r6_22
	r8Out = r8_24
	r9Out = r9_25
	return r2_17
l0040677C:
	strncpy(fp - 48<i32>, r4, 0x10<32>)
	ioctl(out r4_43, out r7_107)
	r2_17 = __syscall(out r4_54, out r5_108, out r6_22, out r7_109, out r8_24, out r9_25)
	branch r4_43 < 0<32> l00406778
l0040679A:
	r4Out = r4_54
	r6Out = r6_22
	r8Out = r8_24
	r9Out = r9_25
	return r2_17
if_nametoindex_exit:


word32 __inet_aton(word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      __lookup_ipliteral
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-__lookup_ipliteral r12:[0..31]-__lookup_ipliteral r2:[0..31]-__lookup_ipliteral r3:[0..31]-ping4_run r4:[0..31]-__lookup_ipliteral r6:[0..31]-__lookup_ipliteral r8:[0..31]-__lookup_ipliteral r9:[0..31]-__lookup_ipliteral
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__inet_aton_entry:
l004067A0:
	r16_13 = 0<32>
	r17_16 = r4
l004067AE:
	r2 = __strtoul_internal(r2, r3, r17_16, fp - 0x24<32>, 0<32>, r12, out r3, out r4_39, out r6_244, out r7_270, out r8_43, out r9_44, out r11_33, out r12)
	Mem47[fp - 0x20<32> + r16_13 * 4<32>:word32] = r4_39
	branch dwLoc24 != fp - 0x20<32> l004067C4
l004067C0:
	r3Out = <invalid>
	r4Out = 0<32>
	r6Out = r6_244
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r12Out = <invalid>
	return <invalid>
l004067C4:
	r6_244 = 0<32>
	branch true l004067CC
l004067C8:
	branch true l004067C0
l004067CC:
	branch Mem47[dwLoc24:byte] >=u 0x3A<8> l004067C0
l004067D6:
	branch true l004067E4
l004067D8:
	r16_13 = r16_13 + 1<32>
	r17_16 = fp - 0x1F<32>
	branch r16_13 != 4<32> l004067AE
l004067E2:
	goto l004067C0
l004067E4:
	branch r16_13 == 1<32> l004067FC
l004067E8:
	branch r16_13 == 2<32> l00406808
l004067EC:
	branch r16_13 != 0<32> l00406812
l004067EE:
	__ext<word32,word32>(fp - 0x20<32>, 0<32>, 0x18<32>)
l004067FC:
l00406808:
l00406812:
	r7_79 = 0<32>
l00406814:
	r6_244 = Mem84[fp - 0x20<32> + r7_79 * 4<32>:word32]
	branch r6_244 >u 0xFF<32> l004067C0
l00406820:
	Mem87[r7_79 + r5:byte] = SLICE(r6_244, byte, 0)
	r7_79 = r7_79 + 1<32>
	branch r7_79 != 4<32> l00406814
l0040682A:
	r3Out = <invalid>
	r4Out = 1<32>
	r6Out = r6_244
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r12Out = <invalid>
	return <invalid>
__inet_aton_exit:


void inet_ntoa(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401590
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
inet_ntoa_entry:
l00406830:
	__ext<word32,word32>(r4, 0<32>, 8<32>)
	__ext<word32,word32>(r4, 8<32>, 8<32>)
	snprintf(0x00432970<p32>, 0x10<32>, 0x00411F48<p32>)
	return
inet_ntoa_exit:


void inet_ntop(word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
inet_ntop_entry:
l00406860:
	branch r4 == 2<32> l0040687A
l0040686A:
	branch r4 == 0xA<32> l0040689E
l0040686E:
	__errno_location(out r4_466)
l00406874:
	goto l004069BC
l0040687A:
	branch snprintf(r6, r7, 0x00411F48<p32>) <u r7 l004069BC
l00406896:
	__errno_location(out r4_467)
	goto l00406874
l0040689E:
	branch memcmp(r5, 0x00412E30<p32>, 0xC<32>, out r7_463, out r8_464, out r9_465) == 0<32> l00406932
l004068EE:
	snprintf(&tLoc84, 0x64<32>, 0x00411F54<p32>)
l00406928:
	r19_151 = 0<32>
	r21_152 = 2<32>
	r16_153 = 0<32>
	goto l00406964
l00406932:
	snprintf(&tLoc84, 0x64<32>, 0x00411F6C<p32>)
	goto l00406928
l00406962:
	r16_153 = r16_153 + 1<32>
l00406964:
	r7_157 = CONVERT(Mem254[&tLoc84 + r16_153:byte], byte, word32)
	branch r7_157 == 0<32> l00406984
l0040696A:
	branch r16_153 == 0<32> l00406970
l0040696C:
	branch r7_157 != 0x3A<32> l00406962
l00406970:
	r4_217 = strspn(&tLoc84 + r16_153, 0x00411F8C<p32>)
	branch r21_152 >= r4_217 l00406962
l0040697E:
	r19_151 = r16_153
	r21_152 = r4_217
	goto l00406962
l00406984:
	branch r21_152 < 3<32> l004069AE
l00406988:
	r7_163 = fp - 0x20<32> + r19_151
	Mem165[r7_163 - 100<i32>:int8] = 58<i8>
	Mem167[r7_163 - 99<i32>:int8] = 58<i8>
	memmove(&tLoc84 + (r19_151 + 2<32>), &tLoc84 + (r21_152 + r19_151), r16_153 - r19_151 - r21_152 + 1<32>, out r8_471, out r9_472, out r11_473, out r12_474)
l004069AE:
	branch strlen(&tLoc84, out r5_468, out r6_469, out r7_470) >=u r7 l00406896
l004069B6:
	strcpy(r6, &tLoc84, out r6_475, out r7_476, out r8_477)
l004069BC:
	return
inet_ntop_exit:


word32 inet_pton(word32 r4, word32 r5, word32 r6, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      inet_pton
//      __lookup_ipliteral
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-inet_pton r12:[0..31]-inet_pton r2:[0..31]-inet_pton r4:[0..31]-inet_pton r6:[0..31]-inet_pton r8:[0..31]-inet_pton r9:[0..31]-inet_pton
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
inet_pton_entry:
l004069C0:
	r16_160 = r5
	branch r4 != 2<32> l00406A24
l004069C8:
	r7_225 = 0<32>
	goto l00406A20
l004069CC:
	r6 = r6 + 1<32>
	r5_226 = r5_226 *s 0xA<32> + r17_231 + 0xFFFFFFD0<32>
	branch r6 == 3<32> l004069F4
l004069DC:
	r17_231 = CONVERT(Mem320[r16_160 + r6:byte], byte, word32)
	branch r17_231 <u 0x3A<32> l004069CC
l004069E8:
	branch r6 != 0<32> l004069EE
l004069EA:
	r4Out = 0<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l004069EE:
	branch r6 == 1<32> l004069FA
l004069F2:
	r6 = r4
l004069F4:
	branch Mem320[r16_160:byte] == 0x30<8> l004069EA
l004069FA:
	branch r5_226 > 0xFF<32> l004069EA
l00406A02:
	Mem256[r7_225 + r6:byte] = SLICE(r5_226, byte, 0)
	r5_260 = CONVERT(Mem256[r16_160 + r6:byte], byte, word32)
	branch r5_260 != 0<32> l00406A12
l00406A0C:
	r4Out = CONVERT(r7_225 == 3<32>, bool, word32)
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l00406A12:
	branch r5_260 != 0x2E<32> l004069EA
l00406A16:
	r6 = r6 + 1<32>
	r7_225 = r7_225 + 1<32>
	r16_160 = r16_160 + r6
	branch r7_225 == 4<32> l004069EA
l00406A20:
	r5_226 = 0<32>
	r6 = 0<32>
	goto l004069DC
l00406A24:
	branch r4 == 0xA<32> l00406A34
l00406A28:
	__errno_location(out r4_664)
	r4Out = 0xFFFFFFFF<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l00406A34:
	branch Mem15[r5:byte] != 0x3A<8> l00406A42
l00406A3A:
	branch Mem15[r5 + 1<i32>:byte] != 0x3A<8> l004069EA
l00406A40:
	r16_160 = r5 + 1<32>
l00406A42:
	r4_207 = 0xFFFFFFFF<32>
	r17_209 = 0<32>
l00406A46:
	branch Mem28[r16_160:byte] != 0x3A<8> l00406A74
l00406A4C:
	branch r4_207 != 0xFFFFFFFF<32> l00406A74
l00406A52:
	r6 = CONVERT(Mem28[r16_160 + 1<i32>:byte], byte, word32)
	Mem85[fp - 0x20<32> + ((r17_209 & 7<32>) << 1<8>) - 16<i32>:int16] = 0<i16>
	r7_210 = r16_160 + 1<32>
	branch r6 == 0<32> l00406B3C
l00406A68:
	branch r17_209 == 7<32> l004069EA
l00406A6C:
	r4_207 = r17_209
l00406A6E:
	r17_209 = r17_209 + 1<32>
	r16_160 = r7_210
	goto l00406A46
l00406A74:
	r5_32 = 0<32>
	r7_33 = 0<32>
l00406A78:
	r18_37 = CONVERT(Mem28[r16_160 + r7_33:byte], byte, word32)
	r6_38 = r18_37 + 0xFFFFFFD0<32>
	branch r18_37 <u 0x3A<32> l00406A94
l00406A84:
	r6 = r18_37 | 0x20<32>
	branch (r18_37 | 0x20<32>) >=u 0x67<32> l00406AA0
l00406A90:
	r6_38 = (r18_37 | 0x20<32>) + 0xFFFFFFA9<32>
l00406A94:
	r7_33 = r7_33 + 1<32>
	r5_32 = (r5_32 << 4<32>) + r6_38
	branch r7_33 != 4<32> l00406A78
l00406A9E:
	goto l00406AA4
l00406AA0:
	branch r7_33 == 0<32> l004069EA
l00406AA4:
	Mem63[fp - 0x20<32> + ((r17_209 & 7<32>) << 1<8>) - 16<i32>:int16] = SLICE(r5_32, int16, 0)
	r6 = CONVERT(Mem63[r16_160 + r7_33:byte], byte, word32)
	branch r6 != 0<32> l00406AC4
l00406AB6:
	branch r4_207 != 0xFFFFFFFF<32> l00406B40
l00406ABC:
	branch r17_209 != 7<32> l004069EA
l00406AC0:
	r18_147 = 0<32>
	goto l00406B0E
l00406AC4:
	branch r17_209 == 7<32> l004069EA
l00406AC8:
	branch r6 == 0x3A<32> l00406B36
l00406ACC:
	branch r6 != 0x2E<32> l004069EA
l00406AD0:
	branch r17_209 >= 6<32> l00406B08
l00406AD6:
	branch r4_207 == 0xFFFFFFFF<32> l004069EA
l00406ADA:
	r17_209 = r17_209 + 1<32>
	r18_147 = 1<32>
l00406ADE:
	r20_99 = fp - 48<i32> + (r4_207 << 1<8>)
	r2 = memmove(fp - 48<i32> + ((r4_207 + 7<32>) - r17_209 << 1<8>), r20_99, r17_209 + 1<32> - r4_207 << 1<32>, out r8, out r9, out r11, out r12)
	r7_121 = 0<32>
l00406AF8:
	branch r7_121 >= 7<32> - r17_209 l00406B0E
l00406B00:
	Mem205[r20_99 + r7_121 * 2<32>:word16] = 0<16>
	r7_121 = r7_121 + 1<32>
	goto l00406AF8
l00406B08:
	r18_147 = 1<32>
	branch r4_207 != 0xFFFFFFFF<32> l00406ADA
l00406B0E:
	r6_133 = r6
	r7_134 = 0<32>
l00406B10:
	r5_138 = CONVERT(Mem137[fp - 48<i32> + r7_134 * 2<32>:word16], word16, word32)
	Mem142[r6_133:byte] = SLICE(r5_138 >>u 8<32>, byte, 0)
	r6_133 = r6_133 + 2<32>
	Mem144[r6_133 - 1<i32>:int8] = SLICE(r5_138, int8, 0)
	r7_134 = r7_134 + 1<32>
	branch r7_134 != 8<32> l00406B10
l00406B24:
	branch r18_147 == 0<32> l00406B44
l00406B28:
	r2_192 = inet_pton(2<32>, r16_160, r6 + 0xC<32>, out r4_183, out r6_182, out r8_195, out r9_196, out r11_187, out r12_188)
	r4Out = CONVERT(r4_183 > 0<32>, bool, word32)
	r6Out = r6_182
	r8Out = r8_195
	r9Out = r9_196
	r11Out = r11_187
	r12Out = r12_188
	return r2_192
l00406B36:
	r7_210 = r16_160 + (r7_33 + 1<32>)
	goto l00406A6E
l00406B3C:
	r4_207 = r17_209
	r16_160 = r7_210
l00406B40:
	r18_147 = 0<32>
	goto l00406ADE
l00406B44:
	r4Out = 1<32>
	r6Out = r6_133
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
inet_pton_exit:


word32 __lookup_ipliteral(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_name
//      __get_resolv_conf
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_name r12:[0..31]-__lookup_name r2:[0..31]-__lookup_name r4:[0..31]-__lookup_name r6:[0..31]-getnameinfo r8:[0..31]-__lookup_name r9:[0..31]-__get_resolv_conf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__lookup_ipliteral_entry:
l00406B50:
	r18_20 = r5
	r2_110 = __inet_aton(r2, r3, r5, fp - 0x78<32>, r12, out r3_376, out r4_37, out r6_119, out r8_117, out r9_118, out r11_105, out r12_106)
	branch r4_37 <= 0<32> l00406B7E
l00406B60:
	branch r6 != 0xA<32> l00406B6A
l00406B64:
	r7_199 = 0xFFFFFFFE<32>
	goto l00406B7A
l00406B6A:
	r2_110 = fn00406C24(r4 + 8<32>, fp - 0x78<32>, 4<32>, out r3_377, out r6_119, out r8_117, out r9_118, out r11_105, out r12_106)
l00406B78:
	r7_199 = 1<32>
l00406B7A:
	r4Out = r7_199
	r6Out = r6_119
	r8Out = r8_117
	r9Out = r9_118
	r11Out = r11_105
	r12Out = r12_106
	return r2_110
l00406B7E:
	r4_47 = strchr(r5, 0x25<32>)
	branch r4_47 == 0<32> l00406B9E
l00406B88:
	r19_54 = r4_47 - r5
	branch r19_54 >= 0<32> l00406B9E
l00406B8E:
	fn00406C24(fp - 0x60<32>, r5, r19_54, out r3_378, out r6_379, out r8_380, out r9_381, out r11_382, out r12_383)
	Mem76[fp - 0x20<32> + r19_54 - 64<i32>:int8] = 0<i8>
	r18_20 = fp - 0x60<32>
l00406B9E:
	r2_110 = inet_pton(0xA<32>, r18_20, &tLoc70, out r4_83, out r6_119, out r8_117, out r9_118, out r11_105, out r12_106)
	r7_199 = 0<32>
	branch r4_83 <= 0<32> l00406B7A
l00406BAC:
	branch r6 == 2<32> l00406B64
l00406BB0:
	r2_110 = fn00406C24(r4 + 8<32>, &tLoc70, 0x10<32>, out r3_113, out r6_384, out r8_117, out r9_118, out r11_105, out r12_106)
	r6_119 = 0xA<32>
	branch r4_47 == 0<32> l00406C20
l00406BC0:
	r7_123 = CONVERT(Mem120[r4_47 + 1<i32>:byte], byte, word32)
	r7_125 = r7_123 + 0xFFFFFFD0<32>
	branch r7_123 >=u 0x3A<32> l00406C02
l00406BCE:
	r2_110 = __strtoull_internal(r2_110, r3_113, r4_47 + 1<32>, fp - 0x74<32>, 0xA<32>, r12_106, out r5_127, out r6_119, out r7_125, out r8_117, out r9_118, out r11_105, out r12_106)
l00406BD4:
	branch Mem147[r7_125:byte] == 0<8> l00406C1C
l00406BDA:
	r7_152 = CONVERT(Mem147[&tLoc70:byte], byte, word32)
	branch r7_152 != 0xFE<32> l00406C08
l00406BE6:
	r6_119 = 0x80<32>
	branch (CONVERT(bLoc6F, byte, word32) & 0xC0<32>) != 0x80<32> l00406B64
l00406BF6:
	r2_110 = if_nametoindex(r4_47 + 1<32>, out r4_167, out r6_119, out r8_117, out r9_118)
	branch r4_167 == 0<32> l00406B64
l00406BFE:
	goto l00406B78
l00406C02:
	r5_127 = 0<32>
	goto l00406BD4
l00406C08:
	r6_119 = 0xFF<32>
	branch r7_152 != 0xFF<32> l00406B64
l00406C10:
	branch (CONVERT(bLoc6F, byte, word32) & 0xF<32>) == 2<32> l00406BF6
l00406C1A:
	goto l00406B64
l00406C1C:
	branch r5_127 == 0<32> l00406BFE
l00406C1E:
	goto l00406B64
l00406C20:
	goto l00406BFE
__lookup_ipliteral_exit:


word32 fn00406C24(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r6Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_ipliteral
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_ipliteral r12:[0..31]-__lookup_ipliteral r2:[0..31]-__lookup_ipliteral r3:[0..31]-__lookup_ipliteral r6:[0..31]-__lookup_ipliteral r8:[0..31]-__lookup_ipliteral r9:[0..31]-__lookup_ipliteral
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn00406C24_entry:
l00406C24:
l00406C24_thunk_memcpy:
	r2_19 = memcpy(r4, r5, r6, out r3_21, out r5_28, out r6_10, out r7_29, out r8_12, out r9_13, out r11_15, out r12_16, out r13_30, out r14_31)
	r3Out = r3_21
	r6Out = r6_10
	r8Out = r8_12
	r9Out = r9_13
	r11Out = r11_15
	r12Out = r12_16
	return r2_19
fn00406C24_exit:


word32 __isspace(word32 r4, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00406F46
//      __lookup_name
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-fn00406F46 r7:[0..31]-fn00406F46
// Trashed: r25 r4 r7
// Preserved: sp
__isspace_entry:
l00406C30:
	r7_4 = 1<32>
	branch r4 == 0x20<32> l00406C3E
l00406C36:
	r7_4 = CONVERT(r4 <u 0xE<32>, bool, word32)
l00406C3E:
	r7Out = r7_4
	return r7_4
__isspace_exit:


word32 scopeof(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__lookup_name
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
scopeof_entry:
l00406C42:
	r6_6 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r6_6 != 0xFF<32> l00406C52
l00406C4C:
	return CONVERT(Mem0[r4 + 1<i32>:byte], byte, word32) & 0xF<32>
l00406C52:
	branch r6_6 != 0xFE<32> l00406C68
l00406C58:
	r4_12 = 2<32>
	branch (CONVERT(Mem0[r4 + 1<i32>:byte], byte, word32) & 0xC0<32>) == 0x80<32> l00406CA8
l00406C68:
	branch Mem0[r4:word32] != 0<32> l00406C90
l00406C6C:
	branch Mem0[r4 + 4<i32>:word32] != 0<32> l00406C90
l00406C70:
	branch Mem0[r4 + 8<i32>:word32] != 0<32> l00406C90
l00406C74:
	branch Mem0[r4 + 12<i32>:byte] != 0<8> l00406C90
l00406C7A:
	branch Mem0[r4 + 13<i32>:byte] != 0<8> l00406C90
l00406C80:
	branch Mem0[r4 + 14<i32>:byte] != 0<8> l00406C90
l00406C86:
	r4_12 = 2<32>
	branch Mem0[r4 + 15<i32>:byte] == 1<8> l00406CA8
l00406C90:
	r4_12 = 0xE<32>
	branch r6_6 != 0xFE<32> l00406CA8
l00406C98:
	branch (CONVERT(Mem0[r4 + 1<i32>:byte], byte, word32) & 0xC0<32> ^ 0xC0<32>) != 0<32> l00406CA8
l00406CA4_1:
	r4_12 = 5<32>
l00406CA8:
	return r4_12
scopeof_exit:


word32 addrcmp(word32 r4, word32 r5, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sift
//      trinkle
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-sift r7:[0..31]-trinkle
// Trashed: r25 r4 r7
// Preserved: sp
addrcmp_entry:
l00406CAA:
	r7_8 = Mem0[r5 + 24<i32>:word32]
	r4_9 = r7_8 - Mem0[r4 + 24<i32>:word32]
	r7Out = r7_8
	return r4_9
addrcmp_exit:


word32 name_from_dns(word32 r4, word32 r6, word32 r7, word32 r8, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-__lookup_name r12:[0..31]-__lookup_name r2:[0..31]-__lookup_name r4:[0..31]-__lookup_name r8:[0..31]-__lookup_name
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
name_from_dns_entry:
l00406CB2:
	Mem34[&tLoc065C:word32] = r4
	branch r7 == 0xA<32> l00406D5A
l00406CE8:
	r2_128 = res_mkquery(0<32>, r6, 1<32>, 1<32>, fp - 0x650<32>, 0x118<32>, out r4_61, out r8_136, out r11_123, out r12_124)
	branch r4_61 == 0xFFFFFFFF<32> l00406D8C
l00406D0A:
	r16_103 = 1<32>
	branch r7 != 2<32> l00406D5C
l00406D10:
	r2_128 = __res_msend_rc(r16_103, fp - 0x674<32>, fp - 0x664<32>, 0x200<32>, r8, r7, out r4_132, out r6_134, out r8_136, out r11_123, out r12_124)
	r17_138 = 0<32>
	r7_139 = 0xFFFFFFF5<32>
	branch r4_132 < 0<32> l00406D90
l00406D2E:
	branch r17_138 != r16_103 l00406D96
l00406D32:
	branch r7_139 != 0<32> l00406D90
l00406D36:
	r7_139 = 0xFFFFFFFD<32>
	branch r6_134 < 4<32> l00406D90
l00406D40:
	r6_174 = CONVERT(bLoc041D, byte, word32)
	branch (r6_174 & 0xF<32>) == 2<32> l00406D90
l00406D4A:
	branch (r6_174 & 0xF<32>) == 0<32> l00406D8C
l00406D4C:
	r7_139 = 0xFFFFFFFC<32>
	branch (r6_174 & 0xF<32> ^ 3<32>) != 0<32> l00406D58
l00406D54_1:
	r7_139 = 0<32>
l00406D58:
	goto l00406D90
l00406D5A:
	r16_103 = 0<32>
l00406D5C:
	r2_128 = res_mkquery(0<32>, r6, 1<32>, 0x1C<32>, r16_103 *s 0x118<32> + (fp - 0x650<32>), 0x118<32>, out r4_95, out r8_136, out r11_123, out r12_124)
	Mem104[fp + 0xFFFFEFE0<32> + (r16_103 << 2<8>) + 2484<i32>:word32] = r4_95
	r16_103 = r16_103 + 1<32>
	branch r4_95 != 0xFFFFFFFF<32> l00406D10
l00406D8C:
	r7_139 = 0xFFFFFFFE<32>
l00406D90:
	r4Out = r7_139
	r8Out = r8_136
	r11Out = r11_123
	r12Out = r12_124
	return r2_128
l00406D96:
	r17_138 = r17_138 + 1<32>
	r2_128 = __dns_parse(fp - 0x420<32> + (r17_138 << 9<32>), Mem187[fp - 0x664<32> + r17_138 * 4<32>:word32], &tLoc065C, r11_123, out r5_340, out r6_134, out r7_139, out r8_136, out r11_123, out r12_124)
	goto l00406D2E
name_from_dns_exit:


word32 policyof(word32 r4, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__lookup_name r7:[0..31]-__lookup_name
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
policyof_entry:
l00406DAC:
	r16_17 = 0x00412E50<p32>
	r17_20 = 0<32>
	goto l00406DBE
l00406DBA:
	r17_20 = r17_20 + 1<32>
	r16_17 = r16_17 + 0x14<32>
l00406DBE:
	r18_24 = CONVERT(Mem15[r16_17 + 16<i32>:byte], byte, word32)
	branch memcmp(r4, r16_17, r18_24, out r7_79, out r8_80, out r9_81) != 0<32> l00406DBA
l00406DCA:
	r7_42 = CONVERT(Mem15[r4 + r18_24:byte], byte, word32) & CONVERT(Mem15[r16_17 + 17<i32>:byte], byte, word32)
	branch r7_42 != CONVERT(Mem15[(r17_20 *s 0x14<32> + 0x00412E50<p32>) + r18_24:byte], byte, word32) l00406DBA
l00406DE4:
	r7Out = r7_42
	return r16_17
policyof_exit:


word32 is_valid_hostname(word32 r4, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      name_from_hosts
//      dns_parse_callback
// MayUse:  r4:[0..31]
// LiveOut: r18:[0..31]-name_from_hosts r4:[0..31]-name_from_hosts r5:[0..31]-dns_parse_callback r6:[0..31]-dns_parse_callback r7:[0..31]-dns_parse_callback r8:[0..31]-dns_parse_callback
// Trashed: r18 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
is_valid_hostname_entry:
l00406DE8:
	r16_11 = r4
	r7_19 = 0xFD<32>
	branch strnlen(r4, 0xFF<32>, out r5_14, out r6_15, out r8_17) <=u 0xFE<32> l00406E02
l00406DFE:
	r5Out = r5_14
	r6Out = r6_15
	r7Out = r7_19
	r8Out = r8_17
	r18Out = r18
	return 0<32>
l00406E02:
	r7_19 = 0xFFFFFFFF<32>
	branch mbstowcs(0<32>, r4, 0<32>, out r5_14, out r6_15, out r8_17, out r18) != 0xFFFFFFFF<32> l00406E12
l00406E0E:
	goto l00406DFE
l00406E10:
	r16_11 = r16_11 + 1<32>
l00406E12:
	r4_39 = CONVERT(SLICE(r7_19, byte, 0), byte, int32)
	branch r7_19 < 0<32> l00406E10
l00406E1C:
	r7_19 = r4_39 + 0xFFFFFFD3<32> & 0xFF<32>
	branch r7_19 <u 2<32> l00406E10
l00406E26:
	branch isalnum(r4_39, out r6_44, out r7_19) != 0<32> l00406E10
l00406E2C:
	r4_49 = CONVERT(Mem7[r16_11:byte] <u 1<8>, byte, word32)
	r5Out = r5_14
	r6Out = r6_44
	r7Out = r7_19
	r8Out = r8_17
	r18Out = r18
	return r4_49
is_valid_hostname_exit:


word32 name_from_hosts(word32 r4, word32 r5, word32 r6, word32 r7, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-__lookup_name r12:[0..31]-__lookup_name r2:[0..31]-__lookup_name r4:[0..31]-__lookup_name r8:[0..31]-__lookup_name
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
name_from_hosts_entry:
l00406E34:
	strlen(r6, out r5_572, out r6_573, out r7_574)
	r2_45 = __fopen_rb_ca(&tLoc06C8, out r4_48, out r5_575, out r8_52, out r9_576, out r19_577)
	branch r4_48 == 0<32> l00406E7A
l00406E5A:
	r16_201 = 0<32>
	r18_224 = 0<32>
l00406E5E:
	r2_45 = fgets_unlocked(&tLoc0638, 0x200<32>, r4_48, out r3_91, out r4_92, out r5_578, out r8_52, out r9_579, out r11, out r12, out r21_580)
	branch r4_92 == 0<32> l00406E70
l00406E6C:
	branch r18_224 < 0x30<32> l00406EA6
l00406E70:
	branch r18_224 == 0<32> l00406E74
l00406E70_1:
	r16_201 = r18_224
l00406E74:
	__fclose_ca(r4_48)
	goto l00406EA0
l00406E7A:
	__errno_location(out r4_58)
	r16_201 = 0xFFFFFFF5<32>
	r7_60 = Mem40[r4_58:word32]
	branch r7_60 >=u 0x15<32> l00406EA0
l00406E88:
	r7_65 = 0xFFFFFFF5<32>
	branch (1<32> << r7_60 & 0x102004<32>) == 0<32> l00406E9E
l00406E9A_1:
	r7_65 = 0<32>
l00406E9E:
	r16_201 = r7_65
l00406EA0:
	r4Out = r16_201
	r8Out = r8_52
	r11Out = r11
	r12Out = r12
	return r2_45
l00406EA6:
	r4_98 = strchr(&tLoc0638, 0x23<32>)
	branch r4_98 == 0<32> l00406EB6
l00406EB0:
	Mem105[r4_98 + 1<i32>:byte] = 0<8>
	Mem106[r4_98:byte] = 0xA<8>
l00406EB6:
	r4_108 = fp - 0x637<32>
	goto l00406EC0
l00406EBC:
	r4_108 = r4_114 + 1<32>
l00406EC0:
	r2_121 = strstr(r4_108, r6, out r4_114)
	branch r4_114 == 0<32> l00406E5E
l00406EC8:
	branch fn00406F46(CONVERT(Mem321[r4_114 - 1<i32>:byte], byte, word32), out r7_127) == 0<32> l00406EBC
l00406ED0:
	branch fn00406F46(CONVERT(Mem321[r4_114 + r7_127:byte], byte, word32), out r7_581) == 0<32> l00406EBC
l00406EDA:
	r6_136 = &tLoc0638
l00406EDC:
	r4_139 = CONVERT(Mem321[r6_136:byte], byte, word32)
	r17_140 = r6_136 + 1<32>
	branch r4_139 == 0<32> l00406EE8
l00406EE4:
	branch fn00406F46(r4_139, out r7_587) == 0<32> l00406F30
l00406EE8:
	Mem147[r6_136:byte] = 0<8>
	__lookup_ipliteral(r2_121, r3_91, r18_224 *s 0x1C<32> + r4, &tLoc0638, r7, r12, out r4_195, out r6_582, out r8_583, out r9_584, out r11_585, out r12_586)
	branch r4_195 == 0<32> l00406E5E
l00406EFC:
	branch r4_195 != 1<32> l00406F40
l00406F00:
l00406F02:
	r4_205 = CONVERT(Mem147[r17_140:byte], byte, word32)
	branch r4_205 == 0<32> l00406F3C
l00406F06:
	branch fn00406F46(r4_205, out r7_588) != 0<32> l00406F34
l00406F0A:
	r21_206 = r17_140
l00406F0C:
	r4_214 = CONVERT(Mem147[r21_206:byte], byte, word32)
	branch r4_214 == 0<32> l00406F16
l00406F12:
	branch fn00406F46(r4_214, out r7_593) == 0<32> l00406F38
l00406F16:
	Mem220[r21_206:byte] = 0<8>
	branch is_valid_hostname(r17_140, out r5_589, out r6_590, out r7_591, out r8_592, out r18_224) == 0<32> l00406E5E
l00406F22:
	memcpy(r5, r17_140, r21_206 - r17_140 + 1<32>, out r3_594, out r5_595, out r6_596, out r7_597, out r8_598, out r9_599, out r11_600, out r12_601, out r13_602, out r14_603)
	goto l00406E5E
l00406F30:
	r6_136 = r17_140
	goto l00406EDC
l00406F34:
	r17_140 = r17_140 + 1<32>
	goto l00406F02
l00406F38:
	r21_206 = r21_206 + 1<32>
	goto l00406F0C
l00406F3C:
	r21_206 = r17_140
	goto l00406F16
l00406F40:
	r16_201 = 0xFFFFFFFE<32>
	goto l00406E5E
name_from_hosts_exit:


word32 fn00406F46(word32 r4, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      name_from_hosts
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-name_from_hosts r7:[0..31]-name_from_hosts
// Trashed: r25 r4 r7
// Preserved: sp
fn00406F46_entry:
l00406F46:
l00406F46_thunk___isspace:
	r4_6 = __isspace(r4, out r7_7)
	r7Out = r7_7
	return r4_6
fn00406F46_exit:


word32 dns_parse_callback(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r11, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out, word32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __dns_parse
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-__dns_parse r12:[0..31]-__dns_parse r18:[0..31]-__dns_parse r2:[0..31]-__dns_parse r4:[0..31]-__dns_parse r5:[0..31]-__dns_parse r6:[0..31]-__dns_parse r7:[0..31]-__dns_parse r8:[0..31]-__dns_parse
// Trashed: r10 r11 r12 r13 r14 r15 r18 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
dns_parse_callback_entry:
l00406F4A:
	r5_149 = r6
	branch r5 == 5<32> l00406FAA
l00406F56:
	branch r5 == 0x1C<32> l00406F8A
l00406F5A:
	branch r5 != 1<32> l00406F84
l00406F5E:
	r4_148 = 0xFFFFFFFF<32>
	branch r7 != 4<32> l00406F86
l00406F64:
	r4_70 = Mem7[r4:word32] + Mem7[r4 + 8<i32>:word32] *s 0x1C<32>
	Mem72[r4_70:word32] = 2<32>
	r4_59 = r4_70 + 8<32>
l00406F80:
	r2 = memcpy(r4_59, r6, r7, out r3_167, out r5_149, out r6, out r7, out r8, out r9_168, out r11, out r12, out r13_169, out r14_170)
l00406F84:
	r4_148 = 0<32>
l00406F86:
	r4Out = r4_148
	r5Out = r5_149
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	r18Out = r18
	return r2
l00406F8A:
	r4_148 = 0xFFFFFFFF<32>
	branch r7 != 0x10<32> l00406F86
l00406F90:
	r9_56 = r5 *s Mem7[r4 + 8<i32>:word32] + Mem7[r4:word32]
	Mem58[r9_56:word32] = 0xA<32>
	Mem61[r9_56 + 1<i32>:word32] = r11
	r4_59 = r9_56 + 8<32>
	goto l00406F80
l00406FAA:
	r7 = fp - 272<i32>
	r5_149 = r8 + 0x200<32>
	r2 = dn_expand(r8, r8 + 0x200<32>, r6, fp - 272<i32>, 0x100<32>, out r4_27, out r8, out r11, out r12)
	branch r4_27 <= 0<32> l00406F84
l00406FBC:
	branch is_valid_hostname(fp - 272<i32>, out r5_149, out r6, out r7, out r8, out r18) == 0<32> l00406F84
l00406FC4:
	r5_149 = strcpy(Mem7[r4 + 4<i32>:word32], fp - 272<i32>, out r6, out r7, out r8)
	goto l00406F84
dns_parse_callback_exit:


word32 __lookup_name(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r12, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getaddrinfo
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-getaddrinfo r12:[0..31]-getaddrinfo r2:[0..31]-getaddrinfo r4:[0..31]-getaddrinfo r8:[0..31]-getaddrinfo
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__lookup_name_entry:
l00406FCE:
	Mem35[r5:byte] = 0<8>
	r19_32 = r7
	r18_105 = r8
	r8_102 = r8
	branch r6 == 0<32> l00407006
l00406FE0:
	r4_39 = strnlen(r6, 0xFF<32>, out r5_1650, out r6_1651, out r8_102)
	branch r4_39 <=u 0xFE<32> l00406FFE
l00406FF4:
	r17_104 = 0xFFFFFFFE<32>
l00406FF8:
	r4Out = r17_104
	r8Out = r8_102
	r11Out = r11
	r12Out = r12
	return r2
l00406FFE:
	r2 = fn0040738E(r5, r6, r4_39 + 1<32>, out r3, out r7_1652, out r8_102, out r11, out r12)
l00407006:
	branch __bit<word32,word32>(r8, 3<32>) l00407010
l0040700A:
	branch r7 == 0xA<32> l00407034
l0040700E:
	r18_105 = r8 + 0xFFFFFFF8<32>
l00407010:
	branch r6 != 0<32> l004070D2
l00407014:
	r7_339 = r18_105 & 1<32>
	branch r7_339 == 0<32> l00407088
l00407018:
	branch r19_32 == 0xA<32> l00407038
l0040701C:
	dwLoc019C = 0<32>
	branch r19_32 != 2<32> l0040703A
l0040702E:
	dwLoc019C = 0<32>
	r20_282 = 1<32>
	goto l00407054
l00407034:
	r19_32 = 0<32>
	goto l00407010
l00407038:
	r7_339 = 0<32>
l0040703A:
	Mem387[&tLoc0194 + 36<i32>:word32] = 0xA<32>
	Mem388[&tLoc0194 + 40<i32>:word32] = 0<32>
	Mem389[&tLoc0194 + 44<i32>:word32] = 0<32>
	Mem390[&tLoc0194 + 48<i32>:word32] = 0<32>
	Mem391[&tLoc0194 + 52<i32>:word32] = 0<32>
	Mem392[&tLoc0194 + 56<i32>:word32] = 0<32>
	Mem393[&tLoc0194 + 60<i32>:word32] = 0<32>
	r20_282 = r7_339 + 1<32>
l00407054:
	r17_104 = r20_282
	branch __bit<word32,word32>(r18_105, 3<32>) l0040706A
l0040705A:
	r18_411 = r18_105 & 0x10<32>
	branch r18_411 == 0<32> l0040720C
l00407062:
	r18_462 = r4 + 0x14<32>
	r17_104 = 0<32>
l00407066:
	branch r20_282 != r17_104 l00407210
l0040706A:
	branch r17_104 < 2<32> l00406FF8
l0040706E:
	branch r19_32 == 2<32> l00406FF8
l00407072:
	r7_525 = 0<32>
l00407074:
	branch Mem840[r4 + r7_525 *s 0x1C<32>:word32] != 2<32> l00407238
l00407080:
	r7_525 = r7_525 + 1<32>
	branch r7_525 != r17_104 l00407074
l00407086:
	goto l00406FF8
l00407088:
	branch r19_32 == 0xA<32> l004070B0
l0040708C:
	Mem344[r4 + 8<i32>:byte] = 0x7F<8>
	Mem351[r4 + 11<i32>:byte] = 1<8>
	dwLoc019C = 0<32>
	branch r19_32 == 2<32> l0040702E
l004070AE:
	r7_339 = 1<32>
l004070B0:
	Mem361[&tLoc0194 + 36<i32>:word32] = 0xA<32>
	Mem363[&tLoc0194 + 56<i32>:word32] = 0<32>
	Mem364[&tLoc0194 + 40<i32>:word32] = 0<32>
	Mem365[&tLoc0194 + 44<i32>:word32] = 0<32>
	Mem366[&tLoc0194 + 48<i32>:word32] = 0<32>
	Mem367[&tLoc0194 + 52<i32>:word32] = 0<32>
	Mem368[&tLoc0194 + 60<i32>:word32] = 0<32>
	Mem369[r4 + r7_339 *s 0x1C<32> + 23<i32>:byte] = 1<8>
	r20_282 = r7_339 + 1<32>
	goto l00407054
l004070D2:
	r2 = __lookup_ipliteral(r2, r3, r4, r6, r19_32, r12, out r4_98, out r6_1653, out r8_102, out r9_1654, out r11, out r12)
	r17_104 = r4_98
	branch r4_98 != 0<32> l004071AC
l004070DE:
	branch !__bit<word32,word32>(r18_105, 2<32>) l00406FF4
l004070E2:
	r2 = name_from_hosts(r4, r5, r6, r19_32, out r4_116, out r8_102, out r11, out r12)
	r17_104 = r4_116
	branch r4_116 != 0<32> l004071AC
l004070F0:
	r17_104 = 0xFFFFFFFF<32>
	r2 = __get_resolv_conf(&tLoc0194, &tLoc0130, r12, out r4_147, out r8_102, out r9_1695, out r11, out r12)
	branch r4_147 < 0<32> l00406FF8
l00407102:
	r7_153 = 0<32>
	r23_154 = 0<32>
l00407106:
	r6_158 = CONVERT(Mem35[r6 + r23_154:byte], byte, word32)
	branch r6_158 != 0<32> l0040714C
l0040710C:
	branch r7_153 >=u r6_158 l0040711E
l00407112:
	branch Mem35[r6 + r23_154 - 1<i32>:byte] != 0x2E<8> l00407122
l0040711E:
	Mem169[&tLoc0130:byte] = 0<8>
l00407122:
	r17_104 = 0xFFFFFFFE<32>
	branch r23_154 >u 0xFF<32> l00406FF8
l0040712E:
	memcpy(r5, r6, r23_154, out r3_1696, out r5_1697, out r6_1698, out r7_1699, out r8_1700, out r9_1701, out r11_1702, out r12_1703, out r13_1704, out r14_1705)
	r30_182 = r5 + r23_154
	Mem200[r30_182:byte] = 0x2E<8>
	r20_203 = &tLoc0130
l00407142:
	branch Mem205[r20_203:byte] == 0<8> l004071B4
l00407148:
	r5_207 = r20_203
	goto l00407158
l0040714C:
	branch r6_158 != 0x2E<32> l00407152
l00407150:
	r7_153 = r7_153 + 1<32>
l00407152:
	r23_154 = r23_154 + 1<32>
	goto l00407106
l00407156:
	r5_207 = r5_207 + 1<32>
l00407158:
	branch __isspace(CONVERT(Mem205[r5_207:byte], byte, word32), out r7_1706) != 0<32> l00407156
l00407160:
	r20_203 = r5_207
	goto l00407166
l00407164:
	r20_203 = r20_203 + 1<32>
l00407166:
	r4_218 = CONVERT(Mem205[r20_203:byte], byte, word32)
	branch r4_218 == 0<32> l00407172
l0040716C:
	branch __isspace(r4_218, out r7_1707) == 0<32> l00407164
l00407172:
	branch r5_207 == r20_203 l004071B4
l00407176:
	r17_284 = r20_203 - r5_207
	branch r17_284 >=u 0xFF<32> - r23_154 l00407142
l00407186:
	r7_290 = r23_154 + 1<32>
	fn0040738E(r5 + r7_290, r5_207, r17_284, out r3_1708, out r7_306, out r8_1709, out r11_1710, out r12_1711)
	Mem313[r7_290 + r5 + r7_306:byte] = 0<8>
	r2 = name_from_dns(r4, r5, r19_32, &tLoc0194, out r4_330, out r8_102, out r11, out r12)
	r17_104 = r4_330
	branch r4_330 == 0<32> l00407142
l004071AC:
	r20_282 = r17_104
	branch r17_104 > 0<32> l00407054
l004071B2:
	goto l00406FF8
l004071B4:
	Mem237[r30_182:byte] = 0<8>
	r2 = name_from_dns(r4, r6, r19_32, &tLoc0194, out r4_275, out r8_102, out r11, out r12)
	r17_104 = r4_275
	r20_282 = r4_275
	branch r4_275 > 0<32> l00407054
l004071CC:
	branch r4_275 != 0<32> l00406FF8
l004071D0:
	goto l00406FF4
l004071D2:
	r21_412 = r21_412 + 1<32>
	branch r21_412 >= r20_282 l00407062
l004071D8:
	r17_415 = r21_412 *s 0x1C<32>
	branch Mem841[r4 + r21_412 *s 0x1C<32>:word32] != 0xA<32> l004071D2
l004071E4:
	branch r21_412 >= r20_282 l00407062
l004071E8:
	r17_421 = r4 + r17_415
l004071EA:
	branch Mem841[r17_421:word32] != 0xA<32> l00407200
l004071F0:
	r18_411 = r18_411 + 1<32>
	r2 = memcpy(r4 + r18_411 *s 0x1C<32>, r17_421, 0x1C<32>, out r3_1688, out r5_1689, out r6_1690, out r7_1691, out r8_102, out r9_1692, out r11, out r12, out r13_1693, out r14_1694)
l00407200:
	r21_412 = r21_412 + 1<32>
	r17_421 = r17_421 + 0x1C<32>
	branch r21_412 != r20_282 l004071EA
l00407208:
	r20_282 = r18_411
	goto l00407062
l0040720C:
	r21_412 = 0<32>
	goto l004071D8
l00407210:
	branch Mem467[r18_462 - 20<i32>:word32] != 2<32> l00407232
l00407218:
	r21_469 = r18_462 + 0xFFFFFFF4<32>
	fn0040738E(r18_462, r21_469, 4<32>, out r3_1665, out r7_1666, out r8_1667, out r11_1668, out r12_1669)
	r2 = memcpy(r21_469, 0x00412E40<p32>, 0xC<32>, out r3_1670, out r5_1671, out r6_1672, out r7_1673, out r8_102, out r9_1674, out r11, out r12, out r13_1675, out r14_1676)
	Mem507[r18_462 - 20<i32>:word32] = 0xA<32>
l00407232:
	r17_104 = r17_104 + 1<32>
	r18_462 = r18_462 + 0x1C<32>
	goto l00407066
l00407238:
	branch r17_104 == r7_525 l00406FF8
l0040723C:
	__pthread_setcancelstate(1<32>, fp - 0x19C<32>, out r7_1655)
	r19_540 = r4 + 8<32>
	r20_541 = 0<32>
l00407248:
	Mem545[&tLoc0130:word16] = 0xA<16>
	Mem550[&tLoc0128:word32] = 0<32>
	r7_552 = Mem551[r19_540 - 8<i32>:word32]
	Mem553[&tLoc0128 + 4<i32>:word32] = 0<32>
	Mem554[&tLoc0128 + 8<i32>:word32] = 0<32>
	Mem555[&tLoc0128 + 12<i32>:word32] = 0<32>
	branch r7_552 != 0xA<32> l00407370
l00407278:
	r6_574 = 0x10<32>
	r4_576 = &tLoc0128
l0040727E:
	fn0040738E(r4_576, r19_540, r6_574, out r3_1678, out r7_1679, out r8_1680, out r11_1681, out r12_1682)
	r4_601 = policyof(&tLoc0128, out r7_1683)
	r4_610 = scopeof(&tLoc0128)
	r7_617 = CONVERT(Mem555[r4_601 + 19<i32>:byte], byte, word32)
	r21_621 = CONVERT(Mem555[r4_601 + 18<i32>:byte], byte, word32)
	socket(0x80001<32>, out r3_1684, out r4_627, out r6_1685, out r8_1686, out r9_1687)
	branch r4_627 < 0<32> l00407388
l004072AE:
	r4_642 = connect(out r5_1661)
	r18_634 = r4_642
	branch r4_642 != 0<32> l00407382
l004072BC:
	branch getsockname() != 0<32> l0040732A
l004072D0:
	branch (r4_610 ^ scopeof(&tLoc0194 + 8<i32>)) != 0<32> l004072E2
l004072DE_1:
l004072E2:
	r17_104 = r7_617
	branch CONVERT(Mem655[policyof(&tLoc0194 + 8<i32>, out r7_683) + 19<i32>:byte], byte, word32) != r7_683 l004072F8
l004072F0:
l004072F8:
	r4_692 = 0<32>
l004072FA:
	r6_694 = r4_692 >>u 3<32>
	branch ((CONVERT(Mem655[fp + 0xFFFFEFD0<32> + r6_694 + 3748<i32>:byte], byte, word32) ^ CONVERT(Mem655[((fp - 0x30<32>) + r6_694) - 248<i32>:byte], byte, word32)) & 0xFF<32> & 0x80<32> >> (r4_692 & 7<32>)) != 0<32> l00407328
l00407322:
	r4_692 = r4_692 + 1<32>
	branch r4_692 != 0x80<32> l004072FA
l00407328:
	r18_634 = r4_692
l0040732A:
	close(out r4_1662, out r6_1663, out r8_1664)
l0040732E:
	Mem770[&tLoc0194 + 52<i32>:word32] = r18_634 << 8<32> | ((0xF<32> - r4_610 << 0x10<32> | 0x30<32> - r20_541) | r21_621 << 0x14<32>)
	r20_541 = r20_541 + 1<32>
	r19_540 = r19_540 + 0x1C<32>
	branch r17_104 != r20_541 l00407248
l0040735A:
	r2 = qsort(r4, r17_104, 0x1C<32>, out r4_810, out r8_102, out r11, out r12)
	__pthread_setcancelstate(r4_810, 0<32>, out r7_1677)
	r17_104 = dwLoc019C
	goto l00406FF8
l00407370:
	fn0040738E(&tLoc0128, 0x00412E40<p32>, 0xC<32>, out r3_1656, out r7_1657, out r8_1658, out r11_1659, out r12_1660)
	r6_574 = 4<32>
	r4_576 = &tLoc0128 + 12<i32>
	goto l0040727E
l00407382:
	r18_634 = 0<32>
	goto l0040732A
l00407388:
	r18_634 = 0<32>
	goto l0040732E
__lookup_name_exit:


word32 fn0040738E(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_name r12:[0..31]-__lookup_name r2:[0..31]-__lookup_name r3:[0..31]-__lookup_name r7:[0..31]-__lookup_name r8:[0..31]-__lookup_name
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn0040738E_entry:
l0040738E:
l0040738E_thunk_memcpy:
	r2_19 = memcpy(r4, r5, r6, out r3_21, out r5_27, out r6_28, out r7_11, out r8_12, out r9_29, out r11_15, out r12_16, out r13_30, out r14_31)
	r3Out = r3_21
	r7Out = r7_11
	r8Out = r8_12
	r11Out = r11_15
	r12Out = r12_16
	return r2_19
fn0040738E_exit:


word32 __lookup_serv(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getaddrinfo
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-getaddrinfo r12:[0..31]-getaddrinfo r2:[0..31]-getaddrinfo r3:[0..31]-getaddrinfo r4:[0..31]-getaddrinfo r8:[0..31]-getaddrinfo
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 ra sp
__lookup_serv_entry:
l004073A0:
	r19_24 = r6
	branch r7 == 1<32> l0040740E
l004073B4:
	branch r7 == 2<32> l00407402
l004073B8:
	branch r7 != 0<32> l00407418
l004073BA:
	branch r5 == 0<32> l0040742E
l004073BE:
	branch Mem32[r5:byte] == 0<8> l00407408
l004073C4:
	r2 = __strtoul_internal(r2, r3, r5, fp - 0x54C<32>, 0xA<32>, r12, out r3, out r4_297, out r6_695, out r7, out r8, out r9_696, out r11, out r12)
l004073CC:
	branch Mem32[r7:byte] != 0<8> l00407436
l004073D2:
	branch r4_297 >u 0xFFFF<32> l00407408
l004073DA:
	r4_299 = r4_297 & 0xFFFF<32>
	branch r19_24 == 0x11<32> l00407432
l004073E0:
	Mem309[r4 + 3<i32>:byte] = 2<8>
	Mem311[r4:word16] = SLICE(r4_299, word16, 0)
	Mem312[r4 + 2<i32>:byte] = 6<8>
	r16_141 = 1<32>
	branch r19_24 == 6<32> l00407424
l004073F0:
	r18_315 = r4 + (r16_141 << 2<8>)
	Mem318[r18_315 + 3<i32>:byte] = 1<8>
	Mem321[r18_315:word16] = SLICE(r4_299, word16, 0)
	Mem322[r18_315 + 2<i32>:byte] = 0x11<8>
	r16_141 = r16_141 + 1<32>
	goto l00407424
l00407402:
	branch r6 == 0<32> l0040742A
l00407404:
	branch r6 == 6<32> l0040742A
l00407408:
	r16_141 = 0xFFFFFFF8<32>
	goto l00407424
l0040740E:
	branch r6 == 0<32> l00407414
l00407410:
	branch r6 != 0x11<32> l00407408
l00407414:
	r19_24 = 0x11<32>
	goto l004073BA
l00407418:
	branch r5 != 0<32> l00407408
l0040741C:
	Mem37[r4:word16] = 0<16>
	Mem38[r4 + 2<i32>:byte] = SLICE(r6, byte, 0)
	Mem39[r4 + 3<i32>:byte] = SLICE(r7, byte, 0)
	r16_141 = 1<32>
l00407424:
	r3Out = r3
	r4Out = r16_141
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040742A:
	r19_24 = 6<32>
	goto l004073BA
l0040742E:
	r4_297 = 0<32>
	goto l004073CC
l00407432:
	r16_141 = 0<32>
	goto l004073F0
l00407436:
	r16_141 = r8 & 0x400<32>
	branch (r8 & 0x400<32>) != 0<32> l00407408
l0040743C:
	r4_97 = strlen(r5, out r5_697, out r6_698, out r7_699)
	r2 = __fopen_rb_ca(&tLoc04C8, out r4_110, out r5_700, out r8, out r9_701, out r19_116)
	r21_117 = r4_110
	branch r4_110 != 0<32> l0040748E
l00407458:
	r3 = __errno_location(out r4_289)
	r16_141 = 0xFFFFFFF5<32>
	r6_291 = Mem32[r4_289:word32]
	branch r6_291 >=u 0x15<32> l00407424
l00407466:
	branch (1<32> << r6_291 & 0x102004<32>) != 0<32> l00407408
l00407476:
	goto l00407424
l00407478:
	r4_146 = strchr(&tLoc0548, 0x23<32>)
	branch r4_146 == 0<32> l00407486
l00407480:
	Mem153[r4_146 + 1<i32>:byte] = 0<8>
	Mem154[r4_146:byte] = 0xA<8>
l00407486:
	r4_156 = &tLoc0548
l00407488:
	r2_169 = strstr(r4_156, r5, out r4_162)
	branch r4_162 != 0<32> l004074AA
l0040748E:
	r17_119 = &tLoc0548
	r2 = fgets_unlocked(&tLoc0548, 0x80<32>, r21_117, out r3, out r4_140, out r5_702, out r8, out r9_703, out r11, out r12, out r21_117)
	branch r4_140 == 0<32> l004074A0
l0040749C:
	branch r16_141 < 2<32> l00407478
l004074A0:
	__fclose_ca(r21_117)
	branch r16_141 != 0<32> l00407424
l004074A8:
	goto l00407408
l004074AA:
	branch &tLoc0548 >=u r4_162 l004074BE
l004074AE:
	r7_172 = CONVERT(Mem359[r4_162 - 1<i32>:byte], byte, word32)
	branch r7_172 == 0x20<32> l004074BE
l004074B6:
	branch r7_172 >=u 0xE<32> l004074D0
l004074BE:
	r7_178 = CONVERT(Mem359[r4_162 + r4_97:byte], byte, word32)
	branch (r7_178 & 0xDF<32>) == 0<32> l004074D6
l004074C8:
	branch r7_178 <u 0xE<32> l004074D6
l004074D0:
	r4_156 = r4_162 + 1<32>
	goto l00407488
l004074D4:
	r17_119 = r17_119 + 1<32>
l004074D6:
	r7_183 = CONVERT(Mem359[r17_119:byte], byte, word32)
	branch (r7_183 & 0xDF<32>) == 0<32> l004074E6
l004074DE:
	branch r7_183 >=u 0xE<32> l004074D4
l004074E6:
	__strtoul_internal(r2_169, r3, r17_119, fp - 0x54C<32>, 0xA<32>, r12, out r3_704, out r4_215, out r6_705, out r7_706, out r8_707, out r9_708, out r11_709, out r12_710)
	branch r4_215 >u 0xFFFF<32> l0040748E
l004074F8:
	branch 0x00410478<p32> == r4_215 l0040748E
l004074FE:
	r4_228 = strncmp(r4_215, 0x00411F38<p32>, 4<32>, out r6_711)
	branch r4_228 != 0<32> l00407520
l0040750A:
	branch r19_116 == 6<32> l0040748E
l0040750E:
	r7_247 = r4 + (r16_141 << 2<8>)
	Mem250[r7_247 + 3<i32>:byte] = 1<8>
	Mem252[r7_247:word16] = SLICE(r4_215, word16, 0)
	Mem253[r7_247 + 2<i32>:byte] = 0x11<8>
	r16_141 = r16_141 + 1<32>
l00407520:
	branch strncmp(r4_228, 0x00411F40<p32>, 4<32>, out r6_712) != 0<32> l0040748E
l00407530:
	branch r19_116 == 0x11<32> l0040748E
l00407534:
	r7_271 = r4 + (r16_141 << 2<8>)
	Mem274[r7_271 + 3<i32>:byte] = 2<8>
	Mem277[r7_271:word16] = SLICE(r4_215, word16, 0)
	Mem278[r7_271 + 2<i32>:byte] = 6<8>
	r16_141 = r16_141 + 1<32>
	goto l0040748E
__lookup_serv_exit:


word32 __netlink_enumerate(word32 r0, word32 r9, word32 r11, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __rtnetlink_enumerate
// MayUse:  r0:[0..31] r11:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-__rtnetlink_enumerate r4:[0..31]-__rtnetlink_enumerate
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
__netlink_enumerate_entry:
l00407550:
	memset(&tLoc2020, 0<32>, 0x14<32>, out r6_241, out r7_242, out r8_243, out r10_244)
	Mem47[&tLoc2020:word32] = 0x14<32>
	r4_225 = send()
	branch r4_225 < 0<32> l004075C8
l0040758C:
	r4_72 = recv()
	branch r4_72 <= 0<32> l004075C6
l0040759E:
	r16_129 = &tLoc2020
l004075A0:
	branch &tLoc2020 + r4_72 - r16_129 <u 0x10<32> l0040758C
l004075AA:
	r7_86 = CONVERT(Mem50[r16_129 + 4<i32>:uint16], uint16, word32)
	branch r7_86 == 3<32> l004075CE
l004075B0:
	branch r7_86 == 2<32> l004075C6
l004075B4:
	r4_225 = netlink_msg_to_ifaddr(r0, r9, r16_129, r11, out r11)
	branch r4_225 != 0<32> l004075C8
l004075BA:
	r16_129 = r16_129 + __ins<word32,word32>(Mem50[r16_129:word32] + 3<32>, 0<32>, 0<32>, 1<32>)
	goto l004075A0
l004075C6:
	r4_225 = 0xFFFFFFFF<32>
l004075C8:
	r11Out = r11
	return r4_225
l004075CE:
	r4_225 = 0<32>
	goto l004075C8
__netlink_enumerate_exit:


word32 __rtnetlink_enumerate(word32 r0, word32 r7, word32 r11, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getifaddrs
// MayUse:  r0:[0..31] r11:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-getifaddrs r4:[0..31]-getifaddrs
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
__rtnetlink_enumerate_entry:
l004075D2:
	socket(0x80003<32>, out r3_175, out r4_35, out r6_176, out r8_177, out r9_178)
	r16_104 = 0xFFFFFFFF<32>
	branch r4_35 < 0<32> l00407612
l004075EE:
	r4_53 = __netlink_enumerate(r0, r7, r11, out r11)
	r16_104 = r4_53
	branch r4_53 != 0<32> l0040760C
l004075FE:
	r16_104 = __netlink_enumerate(r0, r7, r11, out r11)
l0040760C:
	__syscall(out r4_179, out r5_180, out r6_181, out r7_182, out r8_183, out r9_184)
l00407612:
	r11Out = r11
	return r16_104
__rtnetlink_enumerate_exit:


word32 ntohl(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      fn0040193C
//      ping6_parse_reply
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-ping4_run
// Trashed: r25 r4
// Preserved: sp
ntohl_entry:
l00407620:
	return __rotx<word32>(r4, 8<32>, 0x18<32>, 0<32>)
ntohl_exit:


word32 ntohs(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_echo_reply
//      fn00401B9C
//      fn004030A4
//      getnameinfo
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-getnameinfo
// Trashed: r25 r4
// Preserved: sp
ntohs_entry:
l00407630:
	return __rotx<word32>(r4, 0x18<32>, 8<32>, 0<32>) & 0xFFFF<32>
ntohs_exit:


word32 recv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __netlink_enumerate
// MayUse: 
// LiveOut: r4:[0..31]-__netlink_enumerate
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
recv_entry:
l00407640:
l00407644_thunk_recvfrom:
	recvfrom(out r4_10, out r7_16, out r10_17)
	return r4_10
recv_exit:


word32 recvfrom(word32 & r4Out, word32 & r7Out, word32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      recv
//      __res_msend_rc
// MayUse: 
// LiveOut: r10:[0..31]-__res_msend_rc r2:[0..31]-__res_msend_rc r4:[0..31]-__res_msend_rc r7:[0..31]-__res_msend_rc
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
recvfrom_entry:
l00407650:
	r2_20 = __syscall_cp(out r4_22, out r5_38, out r6_39, out r8_40)
l0040766A_thunk___syscall_ret:
	__syscall_ret(r4_22, out r4_32, out r7_33)
	r4Out = r4_32
	r7Out = r7_33
	r10Out = r9
	return r2_20
recvfrom_exit:


word32 recvmsg(word32 & r5Out, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_receive_error_msg
//      main_loop
//      ping6_receive_error_msg
// MayUse: 
// LiveOut: r4:[0..31]-main_loop r5:[0..31]-main_loop r6:[0..31]-main_loop
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
recvmsg_entry:
l00407670:
	__syscall_cp(out r4_19, out r5_20, out r6_21, out r8_34)
l00407688_thunk___syscall_ret:
	__syscall_ret(r4_19, out r4_29, out r7_35)
	r5Out = r5_20
	r6Out = r6_21
	return r4_29
recvmsg_exit:


word32 res_mkquery(word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 dwArg00, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      name_from_dns
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] Stack +0000:[0..31]
// LiveOut: r11:[0..31]-name_from_dns r12:[0..31]-name_from_dns r2:[0..31]-name_from_dns r4:[0..31]-name_from_dns r8:[0..31]-name_from_dns
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
res_mkquery_entry:
l00407690:
	r4_39 = strnlen(r5, 0xFF<32>, out r5_364, out r6_365, out r8_138)
	r17_45 = r4_39
	branch r4_39 == 0<32> l004076BE
l004076AE:
	branch (CONVERT(Mem23[r5 + (r4_39 + 0xFFFFFFFF<32>):byte], byte, word32) ^ 0x2E<32>) != 0<32> l004076BE
l004076BA_1:
	r17_45 = r4_39 + 0xFFFFFFFF<32>
l004076BE:
	r16_53 = r17_45 + 0x11<32> + CONVERT(r17_45 >u 0<32>, bool, word32)
	r19_165 = r16_53
	branch r17_45 <=u 0xFD<32> l004076DA
l004076D2:
	r19_165 = 0xFFFFFFFF<32>
l004076D4:
	r4Out = r19_165
	r8Out = r8_138
	r11Out = r11
	r12Out = r12
	return r2
l004076DA:
	branch dwArg00 < r16_53 l004076D2
l004076DE:
	branch r4 >=u 0x10<32> l004076D2
l004076E2:
	branch r6 >u 0xFF<32> l004076D2
l004076EA:
	branch r7 >u 0xFF<32> l004076D2
l004076EE:
	memset(&tLoc0148, 0<32>, r16_53, out r6_366, out r7_367, out r8_368, out r10_369)
	Mem81[&tLoc0148 + 2<i32>:byte] = (SLICE(r4, byte, 0) << 3<8>) + 1<8>
	r2 = memcpy(fp - 0x13B<32>, r5, r17_45, out r3_370, out r5_371, out r6_372, out r7_373, out r8_138, out r9_374, out r11, out r12, out r13_375, out r14_376)
	r6_100 = 0xD<32>
l00407714:
	r7_101 = fp + 0xFFFFEFD0<32> + r6_100
	branch Mem102[r7_101 + 3816<i32>:byte] == 0<8> l0040774A
l00407720:
	r7_148 = r6_100
	goto l00407726
l00407724:
	r7_148 = r7_148 + 1<32>
l00407726:
	r5_152 = CONVERT(Mem102[&tLoc0148 + r7_148:byte], byte, word32)
	branch r5_152 == 0<32> l00407730
l0040772C:
	branch r5_152 != 0x2E<32> l00407724
l00407730:
	r5_157 = r7_148 - r6_100
	branch r5_157 >=u 0x40<32> l004076D2
l0040773A:
	Mem163[fp + 0xFFFFEFD0<32> + r6_100 + 3815<i32>:byte] = SLICE(r5_157, byte, 0)
	r6_100 = r7_148 + 1<32>
	goto l00407714
l0040774A:
	Mem107[r7_101 + 3817<i32>:byte] = SLICE(r7, byte, 0)
	Mem109[r7_101 + 3819<i32>:byte] = SLICE(r6, byte, 0)
	__clock_gettime(0<32>, &tLoc0150, out r3_377, out r4_378, out r5_379, out r6_115, out r7_380, out r8_381)
	r7_126 = (r6_115 >>u 0x10<32>) + r6_115
	Mem129[&tLoc0148 + 1<i32>:byte] = SLICE(r7_126, byte, 0)
	Mem130[&tLoc0148:byte] = SLICE((r7_126 & 0xFFFF<32>) >> 8<32>, byte, 0)
	r2 = memcpy(r11, &tLoc0148, r16_53, out r3_382, out r5_383, out r6_384, out r7_385, out r8_138, out r9_386, out r11, out r12, out r13_387, out r14_388)
	goto l004076D4
res_mkquery_exit:


word32 mtime(word32 & r4Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __res_msend_rc
// MayUse: 
// LiveOut: r2:[0..31]-__res_msend_rc r4:[0..31]-__res_msend_rc r6:[0..31]-__res_msend_rc r8:[0..31]-__res_msend_rc
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
mtime_entry:
l00407780:
	r2_9 = __clock_gettime(0<32>, &tLoc18, out r3_34, out r4_35, out r5_36, out r6_37, out r7_15, out r8_16)
	r4Out = r7_15 *s 0x3E8<32> + 0x3E8<32>
	r6Out = 0xF4240<32>
	r8Out = r8_16
	return r2_9
mtime_exit:


void cleanup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
cleanup_entry:
l004077A2:
l004077A6_thunk___syscall:
	__syscall(out r4_15, out r5_16, out r6_17, out r7_18, out r8_19, out r9_20)
	return
cleanup_exit:


word32 __res_msend_rc(word32 r4, word32 r7, word32 r8, word32 r9, word32 r10, word32 r21, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      name_from_dns
//      __res_msend
// MayUse:  r10:[0..31] r21:[0..31] r4:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-name_from_dns r12:[0..31]-name_from_dns r2:[0..31]-name_from_dns r4:[0..31]-name_from_dns r6:[0..31]-name_from_dns r8:[0..31]-name_from_dns
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__res_msend_rc_entry:
l004077AA:
	Mem45[&tLocA0:word32] = 0<32>
	memset(&tLoc84, 0<32>, 0x54<32>, out r6_1430, out r7_1431, out r8_1432, out r10_1433)
	fn00407A82(1<32>, fp - 0xC0<32>)
	r18_341 = r4
	r23_138 = r10 + 8<32>
	r16_136 = &tLoc84
	r17_130 = 2<32>
	r20_134 = 0<32>
	r19_102 = 0x10<32>
l004077F4:
	branch r20_134 <u Mem73[r10 + 84<i32>:word32] l00407850
l004077FC:
	Mem143[&tLocA0:word16] = SLICE(r17_130, word16, 0)
	r2_1350 = socket(0x80081<32>, out r3_1434, out r4_149, out r6_1404, out r8_1411, out r9_1435)
	r16_155 = r4_149
	branch r4_149 >= 0<32> l00407836
l00407812:
	branch r17_130 != 0xA<32> l00407846
l00407816:
	__errno_location(out r4_149)
	branch Mem143[r4_149:word32] != 0x21<32> l00407846
l00407820:
	r2_1350 = socket(0x80081<32>, out r3_1436, out r4_149, out r6_1404, out r8_1411, out r9_1437)
	r16_155 = r4_149
	branch r4_149 < 0<32> l00407846
l00407834:
l00407836:
	branch bind() >= 0<32> l00407898
l00407842:
	r2_1350 = close(out r4_149, out r6_1404, out r8_1411)
l00407846:
	fn00407A82(r4_149, 0<32>)
	r4Out = 0xFFFFFFFF<32>
	r6Out = r6_1404
	r8Out = r8_1411
	r11Out = r11
	r12Out = r12
	return r2_1350
l00407850:
	r7_77 = Mem73[r23_138 - 8<i32>:word32]
	branch r7_77 != 2<32> l00407878
l00407858:
	memcpy(r16_136 + 4<32>, r23_138, 4<32>, out r3_1446, out r5_1447, out r6_1448, out r7_116, out r8_1449, out r9_1450, out r11, out r12, out r13_1451, out r14_1452)
	Mem131[r16_136 + 2<i32>:word16] = SLICE(htons(0x35<32>), word16, 0)
	Mem132[r16_136:word16] = SLICE(r7_116, word16, 0)
	r17_130 = r7_77
l0040786E:
	r20_134 = r20_134 + 1<32>
	r16_136 = r16_136 + 0x1C<32>
	r23_138 = r23_138 + 0x1C<32>
	goto l004077F4
l00407878:
	memcpy(r16_136 + 8<32>, r23_138, 0x10<32>, out r3_1438, out r5_1439, out r6_1440, out r7_1441, out r8_1442, out r9_1443, out r11, out r12, out r13_1444, out r14_1445)
	Mem103[r16_136 + 2<i32>:word16] = SLICE(htons(0x35<32>), word16, 0)
	Mem107[r16_136:word16] = 0xA<16>
	r17_130 = 0xA<32>
	r19_102 = 0x1C<32>
	goto l0040786E
l00407898:
	_pthread_cleanup_push(&tLocAC, 0x004077A2<p32>, r16_155)
	r4_202 = fn00407A82(&tLocAC, 0<32>)
	branch dwLocC0 == 0xA<32> l0040791A
l004078AE:
	memset(r4_202, 0<32>, r4 << 2<32>, out r6_1456, out r7_1457, out r8_1458, out r10_1459)
	r2_1351 = mtime(out r4_311, out r6_1460, out r8_1412)
	r6_1405 = &tLoc84
	r30_325 = r4_311 - r23_138
	r10_326 = r4_311
l004078E2:
	branch r10_326 - r4_311 >=u r6_1405 l00407A76
l004078EC:
	r7_337 = r10_326 - r30_325
	branch r7_337 <u r23_138 l004078FE
l004078F4:
	r21 = 0<32>
l004078F6:
	branch r21 < r18_341 l0040795E
l004078FA:
	r30_325 = r10_326
l004078FE:
	poll(r23_138 - r10_326 + r30_325, out r4_402, out r7_405)
	branch r4_402 > 0<32> l004079EE
l00407912:
	r2_1351 = mtime(out r4_602, out r6_1405, out r8_1412)
	r10_326 = r4_602
	goto l004078E2
l0040791A:
	setsockopt(out r3_1453, out r4_202, out r5_1454, out r7_1455)
	r17_208 = fp - 0x80<32>
	r23_138 = 0<32>
l0040792E:
	branch r20_134 == r23_138 l004078AE
l00407932:
	branch Mem225[r17_208 - 4<i32>:uint16] != 2<u16> l00407958
l0040793A:
	memcpy(r17_208 + 0x10<32>, r17_208, 4<32>, out r3_1461, out r5_1462, out r6_1463, out r7_1464, out r8_1465, out r9_1466, out r11_1467, out r12_1468, out r13_1469, out r14_1470)
	r4_202 = r17_208 + 4<32>
	memcpy(r4_202, 0x00412EC8<p32>, 0xC<32>, out r3_1471, out r5_1472, out r6_1473, out r7_1474, out r8_1475, out r9_1476, out r11, out r12, out r13_1477, out r14_1478)
	Mem264[r17_208 - 4<i32>:int16] = 10<i16>
l00407958:
	r23_138 = r23_138 + 1<32>
	r17_208 = r17_208 + 0x1C<32>
	goto l0040792E
l0040795E:
	r7_337 = Mem343[r7_337 + r21 * 4<32>:word32]
	branch r7_337 == 0<32> l00407992
l00407966:
	r21 = r21 + 1<32>
	goto l004078F6
l0040796A:
	sendto(out r7_337, out r10_326)
	r30_348 = r30_348 + 0x1C<32>
	r18_341 = r10_326
l0040798A:
	branch r7_337 != r30_348 l0040796A
l00407990:
	goto l00407966
l00407992:
	r7_337 = &tLoc84
	r30_348 = &tLoc84
	goto l0040798A
l00407998:
	r8_441 = r8_1412 + 1<32>
	goto l00407A18
l0040799C:
	r7_405 = r7_405 + 1<32>
l0040799E:
	branch r7_405 >= r9_439 l004079EA
l004079A2:
	r5_474 = Mem455[r10_414:word32]
	r6_453 = Mem455[r6_453 + r7_405 * 4<32>:word32]
	r11 = CONVERT(Mem455[r5_474:byte], byte, word32)
	branch r11 != CONVERT(Mem455[r6_453:byte], byte, word32) l0040799C
l004079B2:
	r6_453 = CONVERT(Mem455[r6_453 + 1<i32>:byte], byte, word32)
	branch r6_453 != CONVERT(Mem455[r5_474 + 1<i32>:byte], byte, word32) l0040799C
l004079BA:
	r11 = r6_453 + (r7_405 << 2<32>)
	r17_485 = r8
	branch Mem455[r11:word32] != 0<32> l004079EE
l004079C6:
	r5_492 = Mem455[r10_414:word32]
	r6_493 = CONVERT(Mem455[r5_492 + 3<i32>:byte], byte, word32)
	r6_1405 = r6_493 & 0xF<32>
	branch (r6_493 & 0xF<32>) == 2<32> l00407A40
l004079D0:
	branch (r6_493 & 0xF<32>) == 3<32> l004079D6
l004079D4:
	branch (r6_493 & 0xF<32>) != 0<32> l004079EE
l004079D6:
	Mem538[r11:word32] = r9_439
	branch r7_405 != r8 l00407A66
l004079DC:
	branch r17_485 >= r9_439 l00407A72
l004079E0:
	r7_405 = Mem538[r7_405 + r8 * 4<32>:word32]
	branch r7_405 == 0<32> l004079EE
l004079E6:
	r17_485 = r8 + 1<32>
	goto l004079DC
l004079EA:
	branch r7_405 != r9_439 l004079BA
l004079EE:
	r10_414 = r7_405 + (r7 << 2<8>)
l004079F4:
	r2_1351 = recvfrom(out r4_433, out r7_405, out r10_414)
	r9_439 = r4_433
	r18_341 = r10_414
	branch r4_433 < 0<32> l00407912
l00407A12:
	branch r4_433 < 4<32> l004079F4
l00407A16:
	r8_441 = 0<32>
l00407A18:
	branch r20_134 == r8_441 l004079EE
l00407A20:
	r6_453 = r19_102
	branch memcmp(&tLoc84 + r8_441 *s 0x1C<32>, &tLocA0, r19_102, out r7_405, out r8_1412, out r9_439) != 0<32> l00407998
l00407A3C:
	r7_405 = r9
	goto l0040799E
l00407A40:
	branch r21 == 0<32> l004079EE
l00407A44:
	sendto(out r7_405, out r10_1484)
	r21 = r21 + 0xFFFFFFFF<32>
	goto l004079EE
l00407A66:
	r17_485 = r7
	r2_1351 = memcpy(Mem538[r7_405 * 5<32>:word32], r5_492, r9_439, out r3_1479, out r5_1480, out r6_1405, out r7_405, out r8_1412, out r9_1481, out r11, out r12, out r13_1482, out r14_1483)
l00407A72:
	branch r9_439 != r17_485 l004079EE
l00407A76:
	_pthread_cleanup_pop(&tLocAC, 1<32>)
	r4Out = 0<32>
	r6Out = r6_1405
	r8Out = r8_1412
	r11Out = r11
	r12Out = r12
	return r2_1351
__res_msend_rc_exit:


word32 fn00407A82(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __res_msend_rc
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-__res_msend_rc
// Trashed: r25 r3 r4 r7
// Preserved: sp
fn00407A82_entry:
l00407A82:
l00407A82_thunk___pthread_setcancelstate:
	return __pthread_setcancelstate(r4, r5, out r7_10)
fn00407A82_exit:


word32 __res_msend(word32 r4, word32 r12, word32 r21, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      res_send
// MayUse:  r12:[0..31] r21:[0..31] r4:[0..31]
// LiveOut: r11:[0..31]-res_send r4:[0..31]-res_send
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__res_msend_entry:
l00407A86:
	__get_resolv_conf(&tLoc74, 0<32>, r12, out r4_41, out r8_45, out r9_46, out r11_100, out r12_114)
	r6_47 = 0xFFFFFFFF<32>
	branch r4_41 < 0<32> l00407AB2
l00407AA0:
	__res_msend_rc(r4, &tLoc74, r8_45, r9_46, &tLoc74, r21, out r4_69, out r6_115, out r8_116, out r11_100, out r12_117)
	r6_47 = r4_69
l00407AB2:
	r11Out = r11_100
	return r6_47
__res_msend_exit:


word32 res_send(word32 r12, word32 r21, word32 & r11Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
// MayUse:  r12:[0..31] r21:[0..31]
// LiveOut: r11:[0..31]-getnameinfo r17:[0..31]-getnameinfo r4:[0..31]-getnameinfo
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
res_send_entry:
l00407AC0:
	r4_35 = __res_msend(1<32>, r12, r21, out r11_26)
	branch r4_35 < 0<32> l00407AE0
l00407ADE:
	r17 = r7
l00407AE0:
	r11Out = r11_26
	r17Out = r17
	return r4_35
res_send_exit:


word32 __isspace(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00407D08
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-fn00407D08
// Trashed: r25 r4 r7
// Preserved: sp
__isspace_entry:
l00407AF0:
	r7_4 = 1<32>
	branch r4 == 0x20<32> l00407AFE
l00407AF6:
	r7_4 = CONVERT(r4 <u 0xE<32>, bool, word32)
l00407AFE:
	return r7_4
__isspace_exit:


word32 __get_resolv_conf(word32 r4, word32 r5, word32 r12, word32 & r4Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
//      __res_msend
// MayUse:  r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-__lookup_name r12:[0..31]-__lookup_name r2:[0..31]-__lookup_name r4:[0..31]-__lookup_name r8:[0..31]-__lookup_name r9:[0..31]-__res_msend
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
__get_resolv_conf_entry:
l00407B02:
	Mem28[r4 + 92<i32>:word32] = 1<32>
	Mem30[r4 + 96<i32>:word32] = 5<32>
	Mem32[r4 + 88<i32>:word32] = 2<32>
	branch r5 == 0<32> l00407B24
l00407B20:
	Mem33[r5:byte] = 0<8>
l00407B24:
	r2_40 = __fopen_rb_ca(&tLoc02B0, out r4_43, out r5_847, out r8_464, out r9_465, out r19_848)
	r17_198 = 0<32>
	branch r4_43 != 0<32> l00407B8C
l00407B3C:
	r3_293 = __errno_location(out r4_429)
	r6_431 = Mem430[r4_429:word32]
	r4_432 = 0xFFFFFFFF<32>
	branch r6_431 >=u 0x15<32> l00407B6A
l00407B48:
	branch (1<32> << r6_431 & 0x102004<32>) == 0<32> l00407B6A
l00407B58:
	r17_198 = 1<32>
	r2_40 = __lookup_ipliteral(r2_40, r3_293, r4, 0x00411FA4<p32>, 0<32>, r12, out r4_850, out r6_851, out r8_464, out r9_465, out r11, out r12)
l00407B64:
	Mem469[r4 + 84<i32>:word32] = r17_198
	r4_432 = 0<32>
l00407B6A:
	r4Out = r4_432
	r8Out = r8_464
	r9Out = r9_465
	r11Out = r11
	r12Out = r12
	return r2_40
l00407B6E:
	branch strchr(&tLoc0220, 0xA<32>) != 0<32> l00407BA2
l00407B78:
	branch !__bit<word32,word32>(Mem84[r4_43:word32], 4<32>) l00407BA2
l00407B7E:
	r4_415 = _IO_getc(r4_43, out r17_198)
	branch r4_415 == 0xA<32> l00407B8C
l00407B86:
	branch r4_415 != 0xFFFFFFFF<32> l00407B7E
l00407B8C:
	r2_40 = fgets_unlocked(&tLoc0220, 0x100<32>, r4_43, out r3_293, out r4_73, out r5_849, out r8_464, out r9_465, out r11, out r12, out r21_70)
	branch r4_73 != 0<32> l00407B6E
l00407B9A:
	__fclose_ca(r4_43)
	branch r17_198 != 0<32> l00407B64
l00407BA0:
	goto l00407B58
l00407BA2:
	branch fn00407D00(&tLoc0220, 0x00411FB0<p32>, 7<32>, out r6_852) != 0<32> l00407C66
l00407BB0:
	branch fn00407D08(CONVERT(bLoc0219, byte, word32)) == 0<32> l00407C66
l00407BC0:
	r2_271 = fn00407D04(&tLoc0220, 0x00411FB8<p32>, out r4_273)
	branch r4_273 == 0<32> l00407BF6
l00407BCA:
	branch Mem84[r4_273 + 6<i32>:byte] >=u 0x3A<8> l00407BF6
l00407BD6:
	__strtoul_internal(r2_271, r3_293, r4_273 + 6<32>, fp - 0x2B4<32>, 0xA<32>, r12, out r3_293, out r4_294, out r6_853, out r7_854, out r8_855, out r9_856, out r11_857, out r12)
	branch r4_273 + 6<32> == dwLoc02B4 l00407BF6
l00407BE8:
	branch r4_294 <u 0x10<32> l00407BF2
l00407BEE_1:
	r4_294 = 0xF<32>
l00407BF2:
	Mem306[r4 + 92<i32>:word32] = r4_294
l00407BF6:
	r2_313 = fn00407D04(&tLoc0220, 0x00411FC0<p32>, out r4_315)
	branch r4_315 == 0<32> l00407C2A
l00407C00:
	branch Mem321[r4_315 + 9<i32>:byte] >=u 0x3A<8> l00407C2A
l00407C0C:
	__strtoul_internal(r2_313, r3_293, r4_315 + 9<32>, fp - 0x2B4<32>, 0xA<32>, r12, out r3_293, out r4_341, out r6_878, out r7_344, out r8_879, out r9_880, out r11_881, out r12)
	r17_198 = dwLoc02B4
	branch r4_315 + 9<32> == r7_344 l00407C2A
l00407C1C:
	branch r4_341 <u 0xB<32> l00407C26
l00407C22_1:
	r4_341 = 0xA<32>
l00407C26:
	Mem354[r4 + 88<i32>:word32] = r4_341
l00407C2A:
	r2_361 = fn00407D04(&tLoc0220, 0x00411FCC<p32>, out r4_363)
	branch r4_363 == 0<32> l00407B8C
l00407C36:
	r7_370 = CONVERT(Mem369[r4_363 + 8<i32>:byte], byte, word32)
	branch r7_370 <u 0x3A<32> l00407C46
l00407C42:
	branch r7_370 != 0x2E<32> l00407B8C
l00407C46:
	__strtoul_internal(r2_361, r3_293, r4_363 + 8<32>, fp - 0x2B4<32>, 0xA<32>, r12, out r3_882, out r4_394, out r6_883, out r7_397, out r8_884, out r9_885, out r11_886, out r12_887)
	r17_198 = dwLoc02B4
	branch r4_363 + 8<32> == r7_397 l00407B8C
l00407C56:
	branch r4_394 <u 0x3D<32> l00407C60
l00407C5C_1:
	r4_394 = 0x3C<32>
l00407C60:
	Mem409[r4 + 96<i32>:word32] = r4_394
	goto l00407B8C
l00407C66:
	branch fn00407D00(&tLoc0220, 0x00411FD8<p32>, 0xA<32>, out r6_113) != 0<32> l00407CB4
l00407C72:
	branch fn00407D08(CONVERT(bLoc0216, byte, word32)) == 0<32> l00407CB4
l00407C7A:
	r5_195 = fp - 0x215<32>
	branch r17_198 >= 3<32> l00407B8C
l00407C82:
	branch fn00407D08(CONVERT(Mem84[r5_195:byte], byte, word32)) != 0<32> l00407CA6
l00407C88:
	dwLoc02B4 = r5_195
l00407C8A:
	r17_198 = dwLoc02B4
	r4_212 = CONVERT(Mem209[r6_113:byte], byte, word32)
	branch r4_212 != 0<32> l00407CAA
l00407C90:
	Mem220[r6_113:byte] = 0<8>
	__lookup_ipliteral(r2_40, r3_293, r4 + dwLoc02B4 *s 0x1C<32>, r5_195, 0<32>, r12, out r4_260, out r6_858, out r8_859, out r9_860, out r11_861, out r12_862)
	branch r4_260 <= 0<32> l00407B8C
l00407CA2:
	r17_198 = dwLoc02B4 + 1<32>
	goto l00407B8C
l00407CA6:
	r5_195 = r5_195 + 1<32>
	goto l00407C82
l00407CAA:
	branch fn00407D08(r4_212) != 0<32> l00407C90
l00407CAE:
	r6_113 = r6_113 + 1<32>
	dwLoc02B4 = r6_113
	goto l00407C8A
l00407CB4:
	branch r5 == 0<32> l00407B8C
l00407CB8:
	branch fn00407D00(&tLoc0220, 0x00411FE4<p32>, 6<32>, out r6_863) != 0<32> l00407CEC
l00407CC4:
	r18_153 = fp - 0x219<32>
	branch fn00407D08(CONVERT(bLoc021A, byte, word32)) == 0<32> l00407B8C
l00407CD2:
	branch fn00407D08(CONVERT(Mem84[r18_153:byte], byte, word32)) != 0<32> l00407CFC
l00407CD8:
	r4_166 = strlen(r18_153, out r5_865, out r6_866, out r7_867)
	branch r4_166 >=u r21_70 l00407B8C
l00407CE0:
	memcpy(r5, r18_153, r4_166 + 1<32>, out r3_868, out r5_869, out r6_870, out r7_871, out r8_872, out r9_873, out r11_874, out r12_875, out r13_876, out r14_877)
	goto l00407B8C
l00407CEC:
	branch fn00407D00(&tLoc0220, 0x00411FEC<p32>, 6<32>, out r6_864) != 0<32> l00407B8C
l00407CFA:
	goto l00407CC4
l00407CFC:
	r18_153 = r18_153 + 1<32>
	goto l00407CD2
__get_resolv_conf_exit:


word32 fn00407D00(word32 r4, word32 r5, word32 r6, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-__get_resolv_conf r6:[0..31]-__get_resolv_conf
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00407D00_entry:
l00407D00:
l00407D00_thunk_strncmp:
	r4_8 = strncmp(r4, r5, r6, out r6_12)
	r6Out = r6_12
	return r4_8
fn00407D00_exit:


word32 fn00407D04(word32 r4, word32 r5, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2:[0..31]-__get_resolv_conf r4:[0..31]-__get_resolv_conf
// Trashed: r10 r11 r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00407D04_entry:
l00407D04:
l00407D04_thunk_strstr:
	r2_15 = strstr(r4, r5, out r4_8)
	r4Out = r4_8
	return r2_15
fn00407D04_exit:


word32 fn00407D08(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__get_resolv_conf
// Trashed: r25 r4 r7
// Preserved: sp
fn00407D08_entry:
l00407D08:
l00407D08_thunk___isspace:
	return __isspace(r4)
fn00407D08_exit:


word32 send()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __netlink_enumerate
// MayUse: 
// LiveOut: r4:[0..31]-__netlink_enumerate
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
send_entry:
l00407D10:
l00407D14_thunk_sendto:
	return sendto(out r7_16, out r10_17)
send_exit:


word32 sendmsg()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_send_probe
// MayUse: 
// LiveOut: r4:[0..31]-ping6_send_probe
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sendmsg_entry:
l00407D20:
	__syscall_cp(out r4_19, out r5_32, out r6_33, out r8_34)
l00407D38_thunk___syscall_ret:
	__syscall_ret(r4_19, out r4_29, out r7_35)
	return r4_29
sendmsg_exit:


word32 sendto(word32 & r7Out, word32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      ping6_send_probe
//      __res_msend_rc
//      send
// MayUse: 
// LiveOut: r10:[0..31]-__res_msend_rc r4:[0..31]-send r7:[0..31]-__res_msend_rc
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sendto_entry:
l00407D40:
	__syscall_cp(out r4_22, out r5_37, out r6_38, out r8_39)
l00407D5A_thunk___syscall_ret:
	__syscall_ret(r4_22, out r4_32, out r7_33)
	r7Out = r7_33
	r10Out = r9
	return r4_32
sendto_exit:


word32 setsockopt(word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      fn00400B4A
//      ping4_run
//      fn00401280
//      ping4_receive_error_msg
//      fn004023EE
//      ping6_install_filter
//      ping6_run
//      fn00403C9A
//      __res_msend_rc
// MayUse: 
// LiveOut: r2:[0..31]-main r3:[0..31]-main r4:[0..31]-main r5:[0..31]-fn00401280 r7:[0..31]-fn00403C9A
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
setsockopt_entry:
l00407D60:
	r2_19 = __syscall(out r4_21, out r5_22, out r6_38, out r7_39, out r8_40, out r9_41)
l00407D7A_thunk___syscall_ret:
	r3Out = __syscall_ret(r4_21, out r4_31, out r7_32)
	r4Out = r4_31
	r5Out = r5_22
	r7Out = r7_32
	return r2_19
setsockopt_exit:


word32 socket(word32 r5, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      create_socket
//      ping4_run
//      ping6_run
//      if_indextoname
//      if_nametoindex
//      __lookup_name
//      __rtnetlink_enumerate
//      __res_msend_rc
// MayUse:  r5:[0..31]
// LiveOut: r2:[0..31]-create_socket r3:[0..31]-create_socket r4:[0..31]-create_socket r6:[0..31]-if_nametoindex r8:[0..31]-create_socket r9:[0..31]-if_nametoindex
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
socket_entry:
l00407D80:
	r2_139 = __syscall(out r4_30, out r5_167, out r6_151, out r7_168, out r8_156, out r9_100)
	r3_145 = __syscall_ret(r4_30, out r4_38, out r7_169)
	r16_101 = r4_38
	branch r4_38 >= 0<32> l00407E00
l00407DA0:
	r3_145 = __errno_location(out r4_43)
	branch Mem13[r4_43:word32] != 0x16<32> l00407DF6
l00407DAA:
	branch (r5 & 0x80080<32>) == 0<32> l00407E00
l00407DB4:
	r2_139 = __syscall(out r4_64, out r5_170, out r6_151, out r7_171, out r8_156, out r9_100)
	r3_145 = __syscall_ret(r4_64, out r4_72, out r7_172)
	r16_101 = r4_72
	branch r4_72 < 0<32> l00407E00
l00407DD4:
	branch __bit<word32,word32>(r5, 0x13<32>) l00407DE4
l00407DD8:
	r2_139 = __syscall(out r4_173, out r5_174, out r6_151, out r7_175, out r8_156, out r9_100)
l00407DE4:
	branch __bit<word32,word32>(r5, 7<32>) l00407E00
l00407DE8:
	r2_139 = __syscall(out r4_176, out r5_177, out r6_151, out r7_178, out r8_156, out r9_100)
	goto l00407E00
l00407DF6:
	r3_145 = __errno_location(out r4_47)
	branch Mem13[r4_47:word32] == 0x1D<32> l00407DAA
l00407E00:
	r3Out = r3_145
	r4Out = r16_101
	r6Out = r6_151
	r8Out = r8_156
	r9Out = r9_100
	return r2_139
socket_exit:


void sched_yield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sched_yield_entry:
l00407E10:
	__syscall(out r4_10, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27)
l00407E1C_thunk___syscall_ret:
	__syscall_ret(r4_10, out r4_28, out r7_29)
	return
sched_yield_exit:


word32 poll(word32 r6, word32 & r4Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main_loop
//      __res_msend_rc
// MayUse:  r6:[0..31]
// LiveOut: r3:[0..31]-main_loop r4:[0..31]-__res_msend_rc r7:[0..31]-__res_msend_rc
// Trashed: hi lo r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
poll_entry:
l00407E20:
	branch r6 < 0<32> l00407E42
l00407E28:
l00407E42:
	__syscall_cp(out r4_30, out r5_54, out r6_55, out r8_56)
	r3_37 = __syscall_ret(r4_30, out r4_38, out r7_39)
	r4Out = r4_38
	r7Out = r7_39
	return r3_37
poll_exit:


void _longjmp(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sigexit
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r16 r17 r18 r19 r20 r21 r22 r23 r25 r28 r30 r4 ra sp
// Preserved:
_longjmp_entry:
l00407E60:
	branch r5 != 0<32> l00407E7A
l00407E78:
l00407E7A:
	return
_longjmp_exit:


word32 _setjmp(word32 r4, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_addr
// MayUse:  r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] ra:[0..31]
// LiveOut: r4:[0..31]-pr_addr
// Trashed: r25 r4
// Preserved: sp
_setjmp_entry:
l00407E80:
	Mem6[r4:word32] = ra
	Mem7[r4 + 4<i32>:word32] = fp
	Mem9[r4 + 8<i32>:word32] = r16
	Mem11[r4 + 12<i32>:word32] = r17
	Mem13[r4 + 16<i32>:word32] = r18
	Mem15[r4 + 20<i32>:word32] = r19
	Mem17[r4 + 24<i32>:word32] = r20
	Mem19[r4 + 28<i32>:word32] = r21
	Mem21[r4 + 32<i32>:word32] = r22
	Mem23[r4 + 36<i32>:word32] = r23
	Mem25[r4 + 40<i32>:word32] = r30
	Mem27[r4 + 44<i32>:word32] = r28
	return 0<32>
_setjmp_exit:


void __block_all_sigs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      abort
//      do_setxid
//      __synccall
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__block_all_sigs_entry:
l00407EA0:
l00407EB0_thunk___syscall:
	__syscall(out r4_18, out r5_19, out r6_20, out r7_21, out r8_22, out r9_23)
	return
__block_all_sigs_exit:


void __block_app_sigs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      raise
//      __synccall
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__block_app_sigs_entry:
l00407EB4:
l00407EC4_thunk___syscall:
	__syscall(out r4_18, out r5_19, out r6_20, out r7_21, out r8_22, out r9_23)
	return
__block_app_sigs_exit:


word32 __restore_sigs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      raise
//      __synccall
// MayUse: 
// LiveOut: r4:[0..31]-__synccall
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__restore_sigs_entry:
l00407EC8:
l00407ED4_thunk___syscall:
	__syscall(out r4_12, out r5_18, out r6_19, out r7_20, out r8_21, out r9_22)
	return r4_12
__restore_sigs_exit:


void raise()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      abort
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
raise_entry:
l00407EE0:
	__block_app_sigs()
	__syscall(out r4_60, out r5_61, out r6_62, out r7_63, out r8_64, out r9_65)
	__syscall(out r4_34, out r5_66, out r6_67, out r7_68, out r8_69, out r9_70)
	__syscall_ret(r4_34, out r4_71, out r7_72)
	__restore_sigs()
	return
raise_exit:


word32 setitimer()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __schedule_exit
//      setup
// MayUse: 
// LiveOut: r3:[0..31]-setup
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
setitimer_entry:
l00407F10:
	__syscall(out r4_16, out r5_29, out r6_30, out r7_31, out r8_32, out r9_33)
l00407F22_thunk___syscall_ret:
	return __syscall_ret(r4_16, out r4_34, out r7_35)
setitimer_exit:


void __get_handler_set(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
__get_handler_set_entry:
l00407F30:
l00407F36_thunk_memcpy:
	memcpy(r4, 0x00432980<p32>, 8<32>, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r11_28, out r12_29, out r13_30, out r14_31)
	return
__get_handler_set_exit:


void __libc_sigaction(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __sigaction
//      __synccall
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__libc_sigaction_entry:
l00407F3A:
	branch r5 == 0<32> l00407FD2
l00407F46:
	branch Mem11[r5:word32] <u 2<32> l00407FA4
l00407F4C:
	__sync(0<32>)
	r6_24 = 0x00432980<p32> + ((r4 + 0xFFFFFFFF<32> >>u 5<32>) << 2<8>)
	r5_26 = 1<32> << r4 + 0xFFFFFFFF<32>
l00407F64:
	branch __store_conditional<word32>(&Mem11[r6_24:word32], __load_linked<word32>(&Mem11[r6_24:word32]) | r5_26) == 0<32> l00407F64
l00407F70:
	__sync(0<32>)
	branch Mem11[0x00454434<p32>:word32] != 0<32> l00407FA4
l00407F7C:
	branch Mem11[0x00432988<p32>:word32] != 0<32> l00407FA4
l00407F84:
	__syscall(out r4_240, out r5_241, out r6_242, out r7_243, out r8_244, out r9_245)
	Mem54[0x00432988<p32>:word32] = 1<32>
l00407FA4:
	branch (Mem63[r5 + 132<i32>:word32] & 4<32>) == 0<32> l00407FC4
l00407FC0_1:
l00407FC4:
	memcpy(fp - 0x30<32>, r5 + 4<32>, 8<32>, out r3_262, out r5_263, out r6_264, out r7_265, out r8_266, out r9_267, out r11_268, out r12_269, out r13_270, out r14_271)
l00407FD2:
	branch r6 == 0<32> l00407FD8
l00407FD6:
l00407FD8:
	__syscall(out r4_111, out r5_246, out r6_247, out r7_248, out r8_249, out r9_250)
	__syscall_ret(r4_111, out r4_119, out r7_251)
	branch r4_119 != 0<32> l00408006
l00407FEC:
	branch r6 == 0<32> l00408006
l00407FF0:
	Mem133[r6 + 132<i32>:word32] = 0<32>
	memcpy(r6 + 4<32>, fp - 0x1C<32>, 8<32>, out r3_252, out r5_253, out r6_254, out r7_255, out r8_256, out r9_257, out r11_258, out r12_259, out r13_260, out r14_261)
l00408006:
	return
__libc_sigaction_exit:


void __sigaction(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0040271C
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__sigaction_entry:
l0040800A:
	branch r4 <u 0x23<32> l00408024
l00408016:
	branch r4 >=u 0x40<32> l00408024
l0040801C:
l00408020_thunk___libc_sigaction:
	__libc_sigaction(r4, r5, r6)
	return
l00408024:
	__errno_location(out r4_82)
	return
__sigaction_exit:


void sigemptyset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setup
// MayUse: 
// LiveOut:
// Trashed: r25 r4
// Preserved: sp
sigemptyset_entry:
l00408030:
	return
sigemptyset_exit:


void sigprocmask(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setup
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
sigprocmask_entry:
l00408040:
	r4_12 = pthread_sigmask(r4, r6)
	branch r4_12 != 0<32> l0040804E
l0040804A:
	return
l0040804E:
	__errno_location(out r4_22)
	Mem23[r4_22:word32] = r4_12
	goto l0040804A
sigprocmask_exit:


void __fclose_ca(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
__fclose_ca_entry:
l00408060:
	call Mem0[r4 + 12<i32>:word32] (retsize: 0;)
		uses: Mem:Mem0,r4:r4
	return
__fclose_ca_exit:


word32 __fopen_rb_ca(word32 r5, word32 & r4Out, word32 & r5Out, word32 & r8Out, word32 & r9Out, word32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r5:[0..31]
// LiveOut: r19:[0..31]-__lookup_serv r2:[0..31]-__lookup_serv r4:[0..31]-__lookup_serv r5:[0..31]-getnameinfo r8:[0..31]-__lookup_serv r9:[0..31]-__get_resolv_conf
// Trashed: r10 r19 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__fopen_rb_ca_entry:
l00408070:
	memset(r5, 0<32>, 0x90<32>, out r6_118, out r7_119, out r8_120, out r10_121)
	r2_105 = __syscall(out r4_39, out r5_122, out r6_123, out r7_124, out r8_111, out r9_112)
	__syscall_ret(r4_39, out r4_47, out r7_125)
	dwLoc14_103 = r19
	r16_18 = r5
	r5_108 = r4_47
	branch r4_47 < 0<32> l004080CE
l0040809C:
	r2_105 = __syscall(out r4_126, out r5_108, out r6_127, out r7_128, out r8_111, out r9_112)
	Mem76[r5 + 76<i32>:word32] = 0xFFFFFFFF<32>
	dwLoc14_103 = 0x004080E2<p32>
l004080CA:
	r4Out = r16_18
	r5Out = r5_108
	r8Out = r8_111
	r9Out = r9_112
	r19Out = dwLoc14_103
	return r2_105
l004080CE:
	r16_18 = 0<32>
	goto l004080CA
__fopen_rb_ca_exit:


void __aio_close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __stdio_close
//      close
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__aio_close_entry:
l004080E0:
	return
__aio_close_exit:


void __stdio_close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__stdio_close_entry:
l004080E2:
	__aio_close()
	__syscall(out r4_14, out r5_27, out r6_28, out r7_29, out r8_30, out r9_31)
l004080F6_thunk___syscall_ret:
	__syscall_ret(r4_14, out r4_32, out r7_33)
	return
__stdio_close_exit:


void __stdio_read(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__stdio_read_entry:
l00408100:
	r7_24 = r6 - CONVERT(Mem11[r4 + 48<i32>:word32] >u 0<32>, bool, word32)
	__syscall(out r4_33, out r5_109, out r6_35, out r7_110, out r8_111, out r9_112)
	__syscall_ret(r4_33, out r4_41, out r7_113)
	branch r4_41 > 0<32> l0040813E
l0040812C:
l0040813A:
	goto l00408160
l0040813E:
	branch r6_35 >=u r4_41 l0040813A
l00408144:
	r7_44 = Mem29[r4 + 44<i32>:word32]
	branch Mem29[r4 + 48<i32>:word32] == 0<32> l00408160
l00408152:
	Mem54[r5 + r7_24 - 1<i32>:int8] = Mem52[r7_44:byte]
l00408160:
	return
__stdio_read_exit:


void __stdio_seek()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__stdio_seek_entry:
l00408170:
	__syscall(out r4_20, out r5_55, out r6_56, out r7_57, out r8_58, out r9_59)
	__syscall_ret(r4_20, out r4_28, out r7_60)
	branch r4_28 >= 0<32> l00408194
l0040818C:
l00408194:
	return
__stdio_seek_exit:


word32 fflush_unlocked(word32 r4, word32 & r16Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401B98
//      pinger
//      finish
//      fn004033F2
//      fflush_unlocked
// MayUse:  r4:[0..31]
// LiveOut: r16:[0..63]-finish r17:[0..31]-pinger r4:[0..31]-fflush_unlocked
// Trashed: r16 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
fflush_unlocked_entry:
l004081A0:
	dwLoc08_164 = r16
	dwLoc0C_165 = r17
	branch r4 != 0<32> l004081DE
l004081A6:
	r17_107 = 0<32>
	branch Mem9[0x00430300<p32>:word32] == 0<32> l004081BA
l004081B0:
	r17_107 = fflush_unlocked(Mem9[0x00430300<p32>:word32], out r16_237, out r17_238)
l004081BA:
	r16_117 = Mem9[__ofl_lock():word32]
	goto l004081C4
l004081C2:
	r16_117 = Mem9[r16_117 + 56<i32>:word32]
l004081C4:
	branch r16_117 == 0<32> l004081D6
l004081C6:
	branch Mem9[r16_117 + 28<i32>:word32] >=u Mem9[r16_117 + 20<i32>:word32] l004081C2
l004081CE:
	r17_107 = r17_107 | fflush_unlocked(r16_117, out r16_249, out r17_250)
	goto l004081C2
l004081D6:
	__ofl_unlock()
l004081DA:
	r16Out = dwLoc08_164
	r17Out = dwLoc0C_165
	return r17_107
l004081DE:
	r17_107 = 0<32>
	branch Mem9[r4 + 76<i32>:word32] < 0<32> l004081EE
l004081E8:
	__lockfile(r4, out r3_239, out r4_18, out r5_240, out r8_241, out r9_242)
	r17_107 = r4_18
l004081EE:
	branch Mem9[r4 + 28<i32>:word32] >=u Mem9[r4 + 20<i32>:word32] l0040820C
l004081F6:
	call Mem9[r4 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem9,r2:r2_42,r3:r3_43,r4:r4,r5:0<32>,r6:0<32>,r8:r8_40,r9:r9_44
		defs: r2:r2_42,r3:r3_43,r8:r8_40,r9:r9_44
	branch Mem9[r4 + 20<i32>:word32] != 0<32> l0040820C
l00408202:
	branch r17_107 == 0<32> l00408208
l00408204:
	__unlockfile(r4, out r4_243, out r5_244, out r6_245, out r7_246, out r8_247, out r9_248)
l00408208:
	r17_107 = 0xFFFFFFFF<32>
	goto l004081DA
l0040820C:
	r6_48 = Mem9[r4 + 4<i32>:word32]
	r7_49 = Mem9[r4 + 8<i32>:word32]
	branch r6_48 >=u r7_49 l00408224
l00408214:
	r6_50 = r6_48 - r7_49
	call Mem9[r4 + 40<i32>:word32] (retsize: 0;)
		uses: Mem:Mem9,r2:r2_64,r3:r3_65,r4:r4,r5:r5_61,r6:r6_50,r7:r6_50 >> 0x1F<32>,r8:1<32>,r9:r9_66
		defs: r2:r2_64,r3:r3_65,r5:r5_61,r9:r9_66
l00408224:
	dwLoc0C_165 = 0<32>
	dwLoc08_164 = 0<32>
	branch r17_107 == 0<32> l004081DA
l00408230:
	__unlockfile(r4, out r4_251, out r5_252, out r6_253, out r7_254, out r8_255, out r9_256)
	r17_107 = 0<32>
	goto l004081DA
fflush_unlocked_exit:


word32 fgets_unlocked(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out, word32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_serv r12:[0..31]-__lookup_serv r2:[0..31]-__lookup_serv r21:[0..31]-__lookup_serv r3:[0..31]-__lookup_serv r4:[0..31]-__lookup_serv r5:[0..31]-getnameinfo r8:[0..31]-__lookup_serv r9:[0..31]-__get_resolv_conf
// Trashed: r10 r11 r12 r13 r14 r15 r2 r21 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r22 ra sp
fgets_unlocked_entry:
l00408240:
	dwLoc1C_205 = r21
	r19_117 = r4
	r21_138 = 0<32>
	r5_112 = r5
	branch Mem19[r6 + 76<i32>:word32] < 0<32> l00408256
l00408250:
	r2 = __lockfile(r6, out r3, out r4_33, out r5_112, out r8, out r9)
	r21_138 = r4_33
l00408256:
	r20_127 = r5 + 0xFFFFFFFF<32>
	r17_128 = r4
	branch r5 >= 2<32> l004082BC
l00408260:
	r7_158 = CONVERT(Mem19[r6 + 74<i32>:int8], int8, word32)
	Mem161[r6 + 74<i32>:byte] = SLICE(r7_158, byte, 0) | SLICE(r7_158, byte, 0) + 0xFF<8>
	branch r21_138 == 0<32> l00408276
l00408272:
	r2 = __unlockfile(r6, out r4_425, out r5_112, out r6_426, out r7_427, out r8, out r9)
l00408276:
	r17_134 = 0<32>
	branch r5 != 1<32> l00408280
l0040827C:
	Mem175[r4:byte] = 0<8>
	r17_134 = r4
l00408280:
	r3Out = r3
	r4Out = r17_134
	r5Out = r5_112
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	r21Out = dwLoc1C_205
	return r2
l00408284:
	r18_61 = Mem46[r6 + 8<i32>:word32] - r7_58
	goto l004082D6
l0040828A:
	r4_109 = __uflow(r6, out r5_112, out r6_435, out r7_436)
	branch r4_109 >= 0<32> l004082AC
l00408292:
	branch r17_128 == r4 l0040830C
l00408296:
	branch __bit<word32,word32>(Mem103[r6:word32], 4<32>) l0040830C
l0040829C:
	branch r4 == 0<32> l004082A0
l0040829E:
	Mem132[r17_128:byte] = 0<8>
l004082A0:
	r17_134 = r19_117
	branch r21_138 == 0<32> l00408280
l004082A6:
	r2 = __unlockfile(r6, out r4_437, out r5_112, out r6_438, out r7_439, out r8, out r9)
	goto l00408280
l004082AC:
	r4_124 = r4_109 & 0xFF<32>
	Mem125[r17_128:byte] = SLICE(r4_124, byte, 0)
	r20_127 = r20_98 + 0xFFFFFFFF<32>
	r17_128 = r17_128 + 1<32>
	branch r4_124 == 0xA<32> l0040829C
l004082BC:
	branch r20_127 == 0<32> l0040829C
l004082C0:
	r4_47 = Mem46[r6 + 4<i32>:word32]
	r4_52 = memchr(r4_47, 0xA<32>, Mem46[r6 + 8<i32>:word32] - r4_47, out r5_428, out r6_429, out r8_430)
	r7_58 = Mem46[r6 + 4<i32>:word32]
	branch r4_52 == 0<32> l00408284
l004082D2:
	r18_61 = r4_52 - r7_58 + 1<32>
l004082D6:
	r5_69 = Mem46[r6 + 4<i32>:word32]
	branch r20_127 >=u r18_61 l004082E0
l004082DC_1:
	r18_61 = r20_127
l004082E0:
	r2 = memcpy(r17_128, r5_69, r18_61, out r3, out r5_112, out r6_431, out r7_432, out r8, out r9, out r11, out r12, out r13_433, out r14_434)
	r7_99 = Mem46[r6 + 4<i32>:word32] + r18_61
	r17_128 = r17_128 + r18_61
	r20_98 = r20_127 - r18_61
	dwLoc1C_205 = r7_99
	branch r4_52 != 0<32> l0040829C
l004082F8:
	branch r20_98 == 0<32> l0040829C
l004082FC:
	branch r7_99 >=u Mem103[r6 + 8<i32>:word32] l0040828A
l00408302:
	dwLoc1C_205 = r7_99 + 1<32>
	r4_109 = CONVERT(Mem119[r7_99:byte], byte, word32)
	goto l004082AC
l0040830C:
	r19_117 = 0<32>
	goto l004082A0
fgets_unlocked_exit:


void flockfile(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r5 r6 r7 r8
// Preserved: r16 r2 r9 ra sp
flockfile_entry:
l00408310:
l00408314:
	branch ftrylockfile(r4) == 0<32> l00408330
l0040831A:
	r6_25 = Mem7[r4 + 76<i32>:word32]
	branch r6_25 == 0<32> l00408314
l00408320:
	__wait(r4 + 0x4C<32>, r4 + 0x50<32>, r6_25, 1<32>, out r4_45, out r5_46, out r8_47, out r9_48)
	goto l00408314
l00408330:
	return
flockfile_exit:


word32 fprintf(word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      set_socket_option.isra.0.part.1
//      main
//      fn00400B5E
//      ping4_receive_error_msg
//      ping4_parse_reply
//      fn004023F2
//      status
//      fn004032FE
//      ping6_run
// MayUse: 
// LiveOut: r6:[0..31]-fn00400B5E r7:[0..31]-fn00400B5E
// Trashed: r25 r6 r7
// Preserved: ra sp
fprintf_entry:
l00408340:
	vfprintf(r4, r5, r6, out r4_47, out r5_48, out r7_49, out r11_50, out r14_51)
	r7Out = 0x40<32>
	return fp - 0x40<32>
fprintf_exit:


word32 fputc(word32 r4, word32 r5, word32 & r3Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7A
//      status
//      fn00402A96
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r17:[0..31]-perror r2:[0..31]-perror r3:[0..31]-perror r5:[0..31]-perror r6:[0..31]-perror r7:[0..31]-perror r8:[0..31]-perror
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
fputc_entry:
l00408380:
	dwLoc0C_104 = r17
	r5_155 = r5
	branch Mem13[r5 + 76<i32>:word32] >= 0<32> l004083A2
l00408390:
	branch CONVERT(Mem13[r5 + 75<i32>:int8], int8, word32) != (r4 & 0xFF<32>) l004083C6
l00408398:
l0040839E_thunk___overflow:
	__overflow(r5, r4, out r5_101, out r6_99, out r7_100)
	r3Out = r3
	r5Out = r5_101
	r6Out = r6_99
	r7Out = r7_100
	r8Out = r8
	r17Out = r17
	return r2
l004083A2:
	r2 = __lockfile(r5, out r3, out r4_26, out r5_155, out r8, out r9_179)
	branch r4_26 == 0<32> l00408390
l004083A8:
	branch (r4 & 0xFF<32>) == CONVERT(Mem13[r5 + 75<i32>:int8], int8, word32) l004083DA
l004083B0:
	r7_34 = Mem13[r5 + 20<i32>:word32]
	branch r7_34 >=u Mem13[r5 + 16<i32>:word32] l004083DA
l004083B8:
	Mem47[r7_34:byte] = SLICE(r4, byte, 0)
	dwLoc0C_104 = r7_34 + 1<32>
l004083C0:
	r2 = __unlockfile(r5, out r4_183, out r5_155, out r6_158, out r7_160, out r8, out r9_184)
	goto l004083D6
l004083C6:
	r7_160 = Mem13[r5 + 20<i32>:word32]
	branch r7_160 >=u Mem13[r5 + 16<i32>:word32] l00408398
l004083CE:
	Mem68[r7_160:byte] = SLICE(r4, byte, 0)
	r6_158 = r7_160 + 1<32>
	dwLoc0C_104 = r7_160 + 1<32>
l004083D6:
	r3Out = r3
	r5Out = r5_155
	r6Out = r6_158
	r7Out = r7_160
	r8Out = r8
	r17Out = dwLoc0C_104
	return r2
l004083DA:
	__overflow(r5, r4, out r5_180, out r6_181, out r7_182)
	goto l004083C0
fputc_exit:


word32 fputs_unlocked(word32 r4, word32 r5, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      fn00400B5A
//      ping4_run
//      fn00402126
//      fn00403098
//      ping6_run
//      __getopt_msg
//      puts
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-fn00400B5A r12:[0..31]-fn00400B5A r2:[0..31]-ping6_run r3:[0..31]-ping6_run r4:[0..31]-__getopt_msg r5:[0..31]-ping4_run r6:[0..31]-fn00403098 r8:[0..31]-main
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
fputs_unlocked_entry:
l004083F0:
	r4_18 = strlen(r4, out r5_64, out r6_65, out r7_66)
	r2_33 = fwrite_unlocked(r4, 1<32>, r4_18, r5, out r3_36, out r4_37, out r5_38, out r6_39, out r8_41, out r11_28, out r12_29)
	r3Out = r3_36
	r4Out = -CONVERT((r4_37 ^ r4_18) >u 0<32>, bool, word32)
	r5Out = r5_38
	r6Out = r6_39
	r8Out = r8_41
	r11Out = r11_28
	r12Out = r12_29
	return r2_33
fputs_unlocked_exit:


void __do_orphaned_stdio_locks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25 r3 r6 r7
// Preserved: sp
__do_orphaned_stdio_locks_entry:
l00408410:
	r7_10 = Mem0[__read_user_local() - 12<i32>:word32]
	goto l0040842E
l0040841A:
	__sync(0<32>)
	Mem9[r7_10 + 76<i32>:word32] = 0<32>
	__sync(0<32>)
	r7_10 = Mem9[r7_10 + 132<i32>:word32]
l0040842E:
	branch r7_10 != 0<32> l0040841A
l00408430:
	return
__do_orphaned_stdio_locks_exit:


void __unlist_locked_file(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r6 r7
// Preserved: sp
__unlist_locked_file_entry:
l00408432:
	branch Mem0[r4 + 0x44<32>:word32] == 0<32> l0040845A
l0040843A:
	r6_8 = Mem0[r4 + 0x80<32>:word32]
	r7_9 = Mem0[r4 + 0x84<32>:word32]
	branch r7_9 == 0<32> l00408444
l00408440:
	Mem10[r7_9 + 128<i32>:word32] = r6_8
l00408444:
	r6_13 = Mem12[r4 + 0x80<32>:word32]
	branch r6_13 == 0<32> l0040844E
l00408448:
	Mem18[r6_13 + 132<i32>:word32] = r7_9
	return
l0040844E:
	Mem16[__read_user_local() - 12<i32>:word32] = Mem12[r4 + 0x84<32>:word32]
l0040845A:
	return
__unlist_locked_file_exit:


word32 ftrylockfile(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      flockfile
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-flockfile
// Trashed: r25 r3 r4 r5 r6 r7 r8
// Preserved: sp
ftrylockfile_entry:
l0040845C:
	r3_6 = __read_user_local()
	r8_9 = Mem0[r3_6 - 148<i32>:word32]
	branch r8_9 != Mem0[r4 + 76<i32>:word32] l00408488
l0040846E:
	r6_37 = Mem0[r4 + 68<i32>:word32]
	branch r6_37 != 0x7FFFFFFF<32> l0040847E
l0040847A:
	return 0xFFFFFFFF<32>
l0040847E:
	Mem41[r4 + 68<i32>:word32] = r6_37 + 1<32>
	return 0<32>
l00408488:
	branch Mem0[r4 + 76<i32>:word32] >= 0<32> l00408494
l00408490:
	Mem11[r4 + 76<i32>:word32] = 0<32>
l00408494:
	branch Mem13[r4 + 76<i32>:word32] != 0<32> l0040847A
l0040849A:
	__sync(0<32>)
l004084A2:
	r4_18 = __load_linked<word32>(&Mem13[r4 + 0x4C<32>:word32])
	branch r4_18 != 0<32> l004084B0
l004084A8:
	branch __store_conditional<word32>(&Mem13[r4 + 0x4C<32>:word32], r8_9) == 0<32> l004084A2
l004084B0:
	__sync(0<32>)
	branch r4_18 != 0<32> l0040847A
l004084B6:
	Mem26[r4 + 128<i32>:word32] = 0<32>
	Mem27[r4 + 68<i32>:word32] = 1<32>
	r6_31 = Mem27[r3_6 - 12<i32>:word32]
	Mem32[r4 + 132<i32>:word32] = r6_31
	branch r6_31 == 0<32> l004084CE
l004084CA:
	Mem33[r6_31 + 128<i32>:word32] = r4
l004084CE:
	Mem36[r3_6 - 12<i32>:word32] = r4
	return r4_18
ftrylockfile_exit:


word32 funlockfile(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31]
// LiveOut: r8:[0..31]-__getopt_msg
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
funlockfile_entry:
l004084E0:
	r7_10 = Mem7[r4 + 68<i32>:word32]
	branch r7_10 == 1<32> l004084F4
l004084EC:
	Mem31[r4 + 68<i32>:word32] = r7_10 + 0xFFFFFFFF<32>
	return r8
l004084F4:
	__unlist_locked_file(r4)
	Mem18[r4 + 68<i32>:word32] = 0<32>
l00408502_thunk___unlockfile:
	__unlockfile(r4, out r4_55, out r5_56, out r6_57, out r7_58, out r8_28, out r9_59)
	return r8_28
funlockfile_exit:


word32 __fwritex(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out, word32 & r13Out, word32 & r14Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fwrite_unlocked
//      out
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-fwrite_unlocked r12:[0..31]-fwrite_unlocked r13:[0..31]-out r14:[0..31]-out r17:[0..31]-fwrite_unlocked r2:[0..31]-fwrite_unlocked r3:[0..31]-fwrite_unlocked r4:[0..31]-fwrite_unlocked r5:[0..31]-fwrite_unlocked r6:[0..31]-fwrite_unlocked r7:[0..31]-out r8:[0..31]-fwrite_unlocked
// Trashed: r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
__fwritex_entry:
l00408510:
	r19_19 = r4
	r18_21 = r5
	branch Mem13[r6 + 16<i32>:word32] == 0<32> l00408530
l0040851A:
	branch Mem13[r6 + 16<i32>:word32] - Mem13[r6 + 20<i32>:word32] >=u r5 l0040853A
l00408524:
	call Mem13[r6 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem13,r10:r10_122,r11:r11_126,r12:r12_127,r13:r13_123,r14:r14_128,r15:r15_129,r2:r2_130,r24:r24_131,r3:r3_132,r4:r6,r5:r4,r6:r5,r8:r8_124,r9:r9_125
		defs: r10:r10_122,r11:r11_126,r12:r12_127,r13:r13_123,r14:r14_128,r15:r15_129,r2:r2_130,r24:r24_131,r3:r3_132,r4:r4_119,r5:r5_120,r6:r6_117,r7:r7_118,r8:r8_124,r9:r9_125
	r3Out = r3_132
	r4Out = r4_119
	r5Out = r5_120
	r6Out = r6_117
	r7Out = r7_118
	r8Out = r8_124
	r11Out = r11_126
	r12Out = r12_127
	r13Out = r13_123
	r14Out = r14_128
	r17Out = r17
	return r2_130
l00408530:
	branch __towrite(r6, out r6_25, out r7_26) == 0<32> l0040851A
l00408536:
	r3Out = r3
	r4Out = 0<32>
	r5Out = r5
	r6Out = r6_25
	r7Out = r7_26
	r8Out = r8
	r11Out = r11
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r17Out = r17
	return r2
l0040853A:
	r17_41 = r5
	branch Mem13[r6 + 75<i32>:int8] >= 0<i8> l0040854A
l00408544:
	r17_41 = 0<32>
	goto l0040856A
l00408548:
	r17_41 = r7_43
l0040854A:
	branch r17_41 == 0<32> l0040856A
l0040854C:
	r7_43 = r17_41 + 0xFFFFFFFF<32>
	branch Mem13[r4 + r7_43:byte] != 0xA<8> l00408548
l00408558:
	call Mem13[r6 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem13,r10:r10_138,r11:r11_142,r12:r12_143,r13:r13_139,r14:r14_144,r15:r15_145,r2:r2_146,r24:r24_147,r3:r3_148,r4:r6,r5:r4,r6:r17_42,r8:r8_140,r9:r9_141
		defs: r10:r10_138,r11:r11_142,r12:r12_143,r13:r13_139,r14:r14_144,r15:r15_145,r2:r2_146,r24:r24_147,r3:r3_148,r4:r4_60,r5:r5_61,r6:r6_58,r7:r7_59,r8:r8_140,r9:r9_141
	branch r4_60 >=u r17_41 l00408566
l00408564:
	r3Out = r3_148
	r4Out = r4_60
	r5Out = r5_61
	r6Out = r6_58
	r7Out = r7_59
	r8Out = r8_140
	r11Out = r11_142
	r12Out = r12_143
	r13Out = r13_139
	r14Out = r14_144
	r17Out = r17
	return r2_146
l00408566:
	r19_19 = r4 + r17_41
	r18_21 = r5 - r17_41
l0040856A:
	r2_92 = memcpy(Mem13[r6 + 20<i32>:word32], r19_19, r18_21, out r3_94, out r5_87, out r6_83, out r7_208, out r8_85, out r9_209, out r11_88, out r12_89, out r13_81, out r14_90)
	r7_98 = Mem13[r6 + 20<i32>:word32] + r18_21
	r3Out = r3_94
	r4Out = r18_21 + r17_41
	r5Out = r5_87
	r6Out = r6_83
	r7Out = r7_98
	r8Out = r8_85
	r11Out = r11_88
	r12Out = r12_89
	r13Out = r13_81
	r14Out = r14_90
	r17Out = r7_98
	return r2_92
__fwritex_exit:


word32 fwrite_unlocked(word32 r4, word32 r5, word32 r6, word32 r7, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7A
//      __getopt_msg
//      fputs_unlocked
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-perror r12:[0..31]-perror r2:[0..31]-fputs_unlocked r3:[0..31]-fputs_unlocked r4:[0..31]-fputs_unlocked r5:[0..31]-fputs_unlocked r6:[0..31]-fputs_unlocked r8:[0..31]-fputs_unlocked
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
fwrite_unlocked_entry:
l0040857C:
	r16_20 = r6
	r7_27 = Mem17[r7 + 76<i32>:word32]
	r21_28 = 0<32>
	r20_29 = r5 *s r6
	branch r5 != 0<32> l00408590
l0040858C_1:
	r16_20 = 0<32>
l00408590:
	branch r7_27 < 0<32> l0040859A
l00408594:
	__lockfile(r7, out r3_191, out r4_37, out r5_192, out r8_193, out r9_194)
	r21_28 = r4_37
l0040859A:
	r2_164 = __fwritex(r4, r20_29, r7, out r3_65, out r4_53, out r5_172, out r6_174, out r7_188, out r8_178, out r11_57, out r12_58, out r13_189, out r14_190, out r17_62)
	branch r21_28 == 0<32> l004085AA
l004085A6:
	r2_164 = __unlockfile(r17_62, out r4_195, out r5_172, out r6_174, out r7_196, out r8_178, out r9_197)
l004085AA:
	branch r20_29 == r4_53 l004085B2
l004085AE:
l004085B2:
	r3Out = r3_65
	r4Out = r16_20
	r5Out = r5_172
	r6Out = r6_174
	r8Out = r8_178
	r11Out = r11_57
	r12Out = r12_58
	return r2_164
fwrite_unlocked_exit:


word32 _IO_getc(word32 r4, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-__get_resolv_conf r4:[0..31]-__get_resolv_conf
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
_IO_getc_entry:
l004085C0:
	dwLoc0C_76 = r17
	branch Mem9[r4 + 76<i32>:word32] >= 0<32> l004085DE
l004085CC:
	r7_47 = Mem9[r4 + 4<i32>:word32]
	branch r7_47 <u Mem9[r4 + 8<i32>:word32] l004085FA
l004085D4:
l004085DA_thunk___uflow:
	r4_70 = __uflow(r4, out r5_126, out r6_127, out r7_128)
	r17Out = r17
	return r4_70
l004085DE:
	__lockfile(r4, out r3_122, out r4_17, out r5_123, out r8_124, out r9_125)
	branch r4_17 == 0<32> l004085CC
l004085E4:
	r7_23 = Mem9[r4 + 4<i32>:word32]
	branch r7_23 >=u Mem9[r4 + 8<i32>:word32] l00408606
l004085EC:
	dwLoc0C_76 = r7_23 + 1<32>
	r17_31 = CONVERT(Mem33[r7_23:byte], byte, word32)
l004085F4:
	__unlockfile(r4, out r4_132, out r5_133, out r6_134, out r7_135, out r8_136, out r9_137)
	goto l00408602
l004085FA:
	dwLoc0C_76 = r7_47 + 1<32>
	r17_31 = CONVERT(Mem51[r7_47:byte], byte, word32)
l00408602:
	r17Out = dwLoc0C_76
	return r17_31
l00408606:
	r17_31 = __uflow(r4, out r5_129, out r6_130, out r7_131)
	goto l004085F4
_IO_getc_exit:


word32 __ofl_lock()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fflush_unlocked
//      __stdio_exit_needed
// MayUse: 
// LiveOut: r4:[0..31]-__stdio_exit_needed
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__ofl_lock_entry:
l00408610:
	__lock(0x004329A0<p32>)
	return 0x004329A8<p32>
__ofl_lock_exit:


void __ofl_unlock()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fflush_unlocked
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__ofl_unlock_entry:
l00408620:
l00408624_thunk___unlock:
	__unlock(0x004329A0<p32>)
	return
__ofl_unlock_exit:


word32 perror(word32 r4, word32 & r3Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_install_filter
//      ping4_run
//      fn00401284
//      ping4_receive_error_msg
//      fn00401E7A
//      main_loop
//      ping6_install_filter
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-fn00401E7A r12:[0..31]-fn00401E7A r17:[0..31]-fn00401E7A r2:[0..31]-fn00401E7A r3:[0..31]-fn00401E7A r5:[0..31]-fn00401284 r6:[0..31]-fn00401E7A r7:[0..31]-fn00401E7A r8:[0..31]-fn00401E7A
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
perror_entry:
l00408630:
	r16_15 = Mem13[0x00412EF0<p32>:word32]
	__errno_location(out r4_20)
	strerror(Mem13[r4_20:word32], out r4_24)
	branch Mem13[r16_15 + 76<i32>:word32] < 0<32> l00408694
l0040864E:
	__lockfile(r16_15, out r3_259, out r4_80, out r5_260, out r8_261, out r9_262)
	r19_186 = r4_80
	branch r4 == 0<32> l00408674
l00408656:
	branch Mem13[r4:byte] == 0<8> l00408674
l0040865A:
	fwrite_unlocked(r4, strlen(r4, out r5_263, out r6_264, out r7_265), 1<32>, r16_15, out r3_266, out r4_267, out r5_268, out r6_269, out r8_270, out r11_271, out r12_272)
	fputc(0x3A<32>, r16_15, out r3_273, out r5_274, out r6_275, out r7_276, out r8_277, out r17_278)
	fputc(0x20<32>, r16_15, out r3_279, out r5_280, out r6_281, out r7_282, out r8_283, out r17_284)
l00408674:
	fwrite_unlocked(r4_24, strlen(r4_24, out r5_285, out r6_286, out r7_287), 1<32>, r16_15, out r3_288, out r4_289, out r5_290, out r6_291, out r8_292, out r11_157, out r12_158)
	r2_176 = fputc(0xA<32>, r16_15, out r3_178, out r5_180, out r6_181, out r7_182, out r8_183, out r17_293)
	branch r19_186 == 0<32> l004086B2
l0040868A:
l00408690_thunk___unlockfile:
	r2_206 = __unlockfile(r16_15, out r4_294, out r5_208, out r6_209, out r7_205, out r8_210, out r9_295)
	r3Out = r3_178
	r5Out = r5_208
	r6Out = r6_209
	r7Out = r7_205
	r8Out = r8_210
	r11Out = r11_157
	r12Out = r12_158
	r17Out = r17
	return r2_206
l00408694:
	r19_186 = 0<32>
	branch r4 != 0<32> l00408656
l00408698:
	fwrite_unlocked(r4_24, strlen(r4_24, out r5_296, out r6_297, out r7_298), 1<32>, r16_15, out r3_299, out r4_300, out r5_301, out r6_302, out r8_303, out r11_41, out r12_42)
l004086AE_thunk_fputc:
	r2_66 = fputc(0xA<32>, r16_15, out r3_68, out r5_70, out r6_71, out r7_72, out r8_73, out r17_75)
	r3Out = r3_68
	r5Out = r5_70
	r6Out = r6_71
	r7Out = r7_72
	r8Out = r8_73
	r11Out = r11_41
	r12Out = r12_42
	r17Out = r17_75
	return r2_66
l004086B2:
	r3Out = r3_178
	r5Out = r5_180
	r6Out = r6_181
	r7Out = r7_182
	r8Out = r8_183
	r11Out = r11_157
	r12Out = r12_158
	r17Out = r17
	return r2_176
perror_exit:


word32 printf(word32 r4, word32 & r4Out, word32 & r7Out, word32 & r11Out, word32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_echo_reply
//      pr_options
//      fn00401594
//      pr_iph
//      fn00401B94
//      pinger
//      fn0040212A
//      gather_statistics
//      finish
//      fn004029C6
//      pr_icmph
//      pr_echo_reply
//      fn0040309C
//      fn00403C9E
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-fn004029C6 r14:[0..31]-fn004029C6 r3:[0..31]-fn004029C6 r4:[0..31]-fn0040212A r7:[0..31]-gather_statistics
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
printf_entry:
l004086C0:
	r3_45 = vfprintf(Mem24[0x00412EF4<p32>:word32], r4, fp - 0x40<32>, out r4_46, out r5_72, out r7_49, out r11_37, out r14_40)
	r4Out = r4_46
	r7Out = r7_49
	r11Out = r11_37
	r14Out = r14_40
	return r3_45
printf_exit:


void _IO_putc(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
_IO_putc_entry:
l00408700:
	branch Mem13[r5 + 76<i32>:word32] >= 0<32> l00408722
l00408710:
	branch CONVERT(Mem13[r5 + 75<i32>:int8], int8, word32) != (r4 & 0xFF<32>) l00408746
l00408718:
l0040871E_thunk___overflow:
	__overflow(r5, r4, out r5_177, out r6_178, out r7_179)
	return
l00408722:
	__lockfile(r5, out r3_173, out r4_26, out r5_174, out r8_175, out r9_176)
	branch r4_26 == 0<32> l00408710
l00408728:
	branch (r4 & 0xFF<32>) == CONVERT(Mem13[r5 + 75<i32>:int8], int8, word32) l0040875A
l00408730:
	r7_34 = Mem13[r5 + 20<i32>:word32]
	branch r7_34 >=u Mem13[r5 + 16<i32>:word32] l0040875A
l00408738:
	Mem47[r7_34:byte] = SLICE(r4, byte, 0)
l00408740:
	__unlockfile(r5, out r4_183, out r5_184, out r6_185, out r7_186, out r8_187, out r9_188)
	goto l00408756
l00408746:
	r7_63 = Mem13[r5 + 20<i32>:word32]
	branch r7_63 >=u Mem13[r5 + 16<i32>:word32] l00408718
l0040874E:
	Mem68[r7_63:byte] = SLICE(r4, byte, 0)
l00408756:
	return
l0040875A:
	__overflow(r5, r4, out r5_180, out r6_181, out r7_182)
	goto l00408740
_IO_putc_exit:


word32 putchar(word32 r4, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401766
//      ping4_parse_reply
//      fill
//      fn00402A96
//      fn004033EE
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-fn00401766 r3:[0..31]-fn00402A96
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
putchar_entry:
l00408770:
	r5_5 = Mem0[0x00412EF4<p32>:word32]
l00408776_thunk_fputc:
	fputc(r4, r5_5, out r3_9, out r5_18, out r6_19, out r7_20, out r8_21, out r17_16)
	r17Out = r17_16
	return r3_9
putchar_exit:


void puts(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401762
//      gather_statistics
//      niquery_set_qtype
//      niquery_option_subject_addr_handler
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
puts_entry:
l00408780:
	r16_13 = Mem11[0x00412EF4<p32>:word32]
	r18_17 = 0<32>
	branch Mem11[r16_13 + 76<i32>:word32] < 0<32> l0040879A
l00408794:
	__lockfile(r16_13, out r3_173, out r4_22, out r5_174, out r8_175, out r9_176)
	r18_17 = r4_22
l0040879A:
	fputs_unlocked(r4, r16_13, out r3_167, out r4_45, out r5_168, out r6_169, out r8_170, out r11_171, out r12_172)
	branch r4_45 < 0<32> l004087C0
l004087A6:
	branch Mem11[r16_13 + 75<i32>:int8] == 10<i8> l004087CE
l004087AE:
	r7_55 = Mem11[r16_13 + 20<i32>:word32]
	branch r7_55 >=u Mem11[r16_13 + 16<i32>:word32] l004087CE
l004087B6:
	Mem70[r7_55:byte] = 0xA<8>
l004087C0:
	branch r18_17 == 0<32> l004087CA
l004087C6:
	__unlockfile(r16_13, out r4_180, out r5_181, out r6_182, out r7_183, out r8_184, out r9_185)
l004087CA:
	return
l004087CE:
	__overflow(r16_13, 0xA<32>, out r5_177, out r6_178, out r7_179)
	goto l004087C0
puts_exit:


void setbuf(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: sp
setbuf_entry:
l004087E0:
	r6_10 = 2<32>
	branch r5 == 0<32> l004087EA
l004087E6_1:
	r6_10 = 0<32>
l004087EA:
l004087EA_thunk_setvbuf:
	setvbuf(r4, r6_10)
	return
setbuf_exit:


void setvbuf(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setbuf
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
setvbuf_entry:
l004087F0:
	Mem6[r4 + 75<i32>:byte] = 0xFF<8>
	branch r6 != 2<32> l00408808
l004087FA:
l004087FC:
	return
l00408808:
	branch r6 != 1<32> l004087FC
l0040880C:
	Mem9[r4 + 75<i32>:byte] = 0xA<8>
	goto l004087FC
setvbuf_exit:


word32 snprintf(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pr_addr
//      fn00401590
//      inet_ntop
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-inet_ntop
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
snprintf_entry:
l00408820:
	return vsnprintf(r4, r5, r6, fp - 0x40<32>, out r5_62, out r7_63)
snprintf_exit:


word32 sprintf(word32 r4, word32 r5, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5:[0..31]-getnameinfo r7:[0..31]-getnameinfo
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sprintf_entry:
l00408860:
	r5_44 = vsprintf(r4, r5, fp - 0x40<32>, out r7_46)
	r7Out = r7_46
	return r5_44
sprintf_exit:


word32 __isoc99_sscanf(word32 r0, word32 r4, word32 r5, word32 r19, word32 r20, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fill
// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r3:[0..31]-fill r4:[0..31]-fill
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__isoc99_sscanf_entry:
l004088A0:
	r3_45 = __isoc99_vsscanf(r0, r4, r5, fp - 0x40<32>, r19, r20, out r4_46)
	r4Out = r4_46
	return r3_45
__isoc99_sscanf_exit:


word32 fmt_u(word32 r4, word32 r5, word32 r6, word32 r13, word32 & r4Out, word32 & r5Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
//      fn004099EA
// MayUse:  r13:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-printf_core r13:[0..31]-printf_core r2:[0..31]-printf_core r4:[0..31]-printf_core r5:[0..31]-printf_core r7:[0..31]-printf_core r8:[0..31]-fn004099EA
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
fmt_u_entry:
l004088E0:
	r17_18 = r6
	r18_r16_138 = SEQ(r5, r4) (alias)
	goto l00408906
l004088E8:
	r2_36 = __umoddi3(r18_r16_138, 0xA<64>, r13, out r3_37, out r4_38, out r8_147, out r11_148, out r12_35)
	r17_18 = r17_18 + 0xFFFFFFFF<32>
	Mem45[r17_18:byte] = SLICE(r4_38, byte, 0) + 0x30<8>
	r2 = __udivdi3(r18_r16_138, 0xA<64>, r2_36, r3_37, r12_35, out r3_149, out r4_55, out r5, out r6_150, out r7, out r8, out r9_151, out r11, out r13)
	r18_r16_138 = SEQ(r5, r4_55) (alias)
l00408906:
	r16_22 = SLICE(r18_r16_138, word32, 0) (alias)
	branch SLICE(r18_r16_138, word32, 32) != 0<32> l004088E8
l00408908:
	goto l0040891E
l0040890A:
	r17_18 = r17_18 + 0xFFFFFFFF<32>
	Mem74[r17_18:byte] = SLICE(r16_22 %u 0xA<32>, byte, 0) + 0x30<8>
	r7 = r16_22
l0040891E:
	branch r16_22 != 0<32> l0040890A
l00408920:
	r4Out = r17_18
	r5Out = r5
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r13Out = r13
	return r2
fmt_u_exit:


word32 getint(word32 r4, word32 & r5Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-printf_core r5:[0..31]-printf_core r7:[0..31]-printf_core
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
getint_entry:
l00408924:
	r7_10 = 0<32>
	goto l0040892E
l00408928:
	r7_10 = 0xFFFFFFFF<32>
l0040892A:
	Mem25[r4:word32] = r8_7 + 1<32>
l0040892E:
	r8_7 = Mem6[r4:word32]
	r6_8 = CONVERT(Mem6[r8_7:byte], byte, word32)
	branch r6_8 >=u 0x3A<32> l0040895E
l0040893C:
	r5 = 0xCCCCCCC<32>
	branch r7_10 >u 0xCCCCCCC<32> l00408928
l00408946:
	r5_14 = r7_10 *s 0xFFFFFFF6<32>
	r5 = r5_14 + 0x7FFFFFFF<32>
	branch r5_14 + 0x7FFFFFFF<32> < r6_8 + 0xFFFFFFD0<32> l00408928
l00408956:
	r5 = 0xA<32>
	r7_10 = r6_8 + 0xFFFFFFD0<32> + r7_10 *s 0xA<32>
	goto l0040892A
l0040895E:
	r5Out = r5
	r7Out = r7_10
	return r7_10
getint_exit:


word32 out(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r11Out, word32 & r13Out, word32 & r14Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      pad
//      printf_core
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-printf_core r13:[0..31]-printf_core r14:[0..31]-printf_core r17:[0..31]-pad r2:[0..31]-printf_core r3:[0..31]-printf_core r4:[0..31]-printf_core r5:[0..31]-printf_core r6:[0..31]-printf_core r7:[0..31]-printf_core
// Trashed: r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
out_entry:
l00408962:
	r6_11 = Mem0[r4:word32]
	branch !__bit<word32,word32>(r6_11, 5<32>) l00408974
l0040896E:
l00408970_thunk___fwritex:
	r2_24 = __fwritex(r5, r6, r4, out r3_26, out r4_14, out r5_27, out r6_15, out r7_16, out r8_69, out r11_18, out r12_70, out r13_20, out r14_21, out r17_23)
	r3Out = r3_26
	r4Out = r4_14
	r5Out = r5_27
	r6Out = r6_15
	r7Out = r7_16
	r11Out = r11_18
	r13Out = r13_20
	r14Out = r14_21
	r17Out = r17_23
	return r2_24
l00408974:
	r3Out = r3
	r4Out = r5
	r5Out = r6
	r6Out = r6_11
	r7Out = r4
	r11Out = r11
	r13Out = r13
	r14Out = r14
	r17Out = r17
	return r2
out_exit:


word32 pop_arg(word32 r5, word32 r6, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r5:[0..31]-printf_core r6:[0..31]-printf_core r7:[0..31]-printf_core
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
pop_arg_entry:
l00408976:
	branch r5 >=u 0x1D<32> l00408A76
l0040897A:
	r5 = r5 + 0xFFFFFFF7<32>
	branch r5 >=u 0x1B<32> l00408A76
l00408982:
	r7_11 = CONVERT(Mem0[r6 + 12<i32>:int8], int8, word32)
	switch (r5 + 0xFFFFFFF7<32>) { l0040898E l00408A86 l00408AAA l00408A4E l00408A86 l00408AAA l004089B4 l004089DE l00408A06 l00408A2A l00408A4E l00408AAA l00408A4E l00408A4E l00408A86 l00408AAA l00408ACE l00408AF6 }
l0040898E:
	branch r7_11 <= 0<32> l004089AC
l00408992:
	v9_183 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem185[r6 + 12<i32>:byte] = v9_183
	r5_184 = CONVERT(v9_183, byte, int32)
	branch r5_184 < 0<32> l004089AC
l004089A2:
	r6 = Mem185[r6 + 4<i32>:word32]
	r7_188 = r6 - r7_11
l004089A6:
	r7_196 = Mem195[r7_188:word32]
	r6Out = r6
	r7Out = r7_196
	return r5_184
l004089AC:
	r7_188 = Mem187[r6:word32]
	r5_184 = r7_188 + 4<32>
	goto l004089A6
l004089B4:
	branch r7_11 <= 0<32> l004089D6
l004089B8:
	v10_87 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem89[r6 + 12<i32>:byte] = v10_87
	r5 = CONVERT(v10_87, byte, int32)
	branch r5 < 0<32> l004089D6
l004089C8:
	r6 = Mem89[r6 + 4<i32>:word32]
	r7_92 = r6 - r7_11
l004089CC:
	r7_100 = CONVERT(Mem99[r7_92:int16], int16, word32)
l004089CE:
	r7 = r7_100 >> 0x1F<32>
	goto l00408A74
l004089D6:
	r7_92 = Mem91[r6:word32]
	r5 = r7_92 + 4<32>
	goto l004089CC
l004089DE:
	branch r7_11 <= 0<32> l004089FE
l004089E2:
	v16_72 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem74[r6 + 12<i32>:byte] = v16_72
	r5_130 = CONVERT(v16_72, byte, int32)
	branch r5_130 < 0<32> l004089FE
l004089F2:
	r6 = Mem74[r6 + 4<i32>:word32]
	r7_77 = r6 - r7_11
l004089F6:
	r7_145 = CONVERT(Mem84[r7_77:uint16], uint16, word32)
l004089F8:
	r6Out = r6
	r7Out = r7_145
	return r5_130
l004089FE:
	r7_77 = Mem76[r6:word32]
	r5_130 = r7_77 + 4<32>
	goto l004089F6
l00408A06:
	branch r7_11 <= 0<32> l00408A22
l00408A0A:
	v15_57 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem59[r6 + 12<i32>:byte] = v15_57
	r5 = CONVERT(v15_57, byte, int32)
	branch r5 < 0<32> l00408A22
l00408A1A:
	r6 = Mem59[r6 + 4<i32>:word32]
	r7_62 = r6 - r7_11
l00408A1E:
	r7_100 = CONVERT(Mem69[r7_62:int8], int8, word32)
	goto l004089CE
l00408A22:
	r7_62 = Mem61[r6:word32]
	r5 = r7_62 + 4<32>
	goto l00408A1E
l00408A2A:
	branch r7_11 <= 0<32> l00408A46
l00408A2E:
	v14_42 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem44[r6 + 12<i32>:byte] = v14_42
	r5_130 = CONVERT(v14_42, byte, int32)
	branch r5_130 < 0<32> l00408A46
l00408A3E:
	r6 = Mem44[r6 + 4<i32>:word32]
	r7_47 = r6 - r7_11
l00408A42:
	r7_145 = CONVERT(Mem54[r7_47:byte], byte, word32)
	goto l004089F8
l00408A46:
	r7_47 = Mem46[r6:word32]
	r5_130 = r7_47 + 4<32>
	goto l00408A42
l00408A4E:
	branch r7_11 <= 0<32> l00408A78
l00408A52:
	r7_102 = __ins<word32,word32>(r7_11, 0<32>, 0<32>, 1<32>)
	v17_105 = SLICE(r7_102, byte, 0) + 0xF8<8>
	Mem108[r6 + 12<i32>:byte] = v17_105
	r5 = CONVERT(v17_105, byte, int32)
	branch r5 < 0<32> l00408A78
l00408A68:
	r7_114 = Mem108[r6 + 4<i32>:word32] - r7_102
l00408A6E:
	r6 = Mem122[r7_114:word32]
	r7 = Mem122[r7_114 + 4<i32>:word32]
l00408A74:
l00408A76:
	r6Out = r6
	r7Out = r7
	return r5
l00408A78:
	r7_114 = __ins<word32,word32>(Mem110[r6:word32] + 7<32>, 0<32>, 0<32>, 1<32>)
	r5 = r7_114 + 8<32>
	goto l00408A6E
l00408A86:
	branch r7_11 <= 0<32> l00408AA2
l00408A8A:
	v19_155 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem158[r6 + 12<i32>:byte] = v19_155
	r5 = CONVERT(v19_155, byte, int32)
	branch r5 < 0<32> l00408AA2
l00408A9A:
	r6 = Mem158[r6 + 4<i32>:word32]
	r7_162 = r6 - r7_11
l00408A9E:
	r7_100 = Mem170[r7_162:word32]
	goto l004089CE
l00408AA2:
	r7_162 = Mem160[r6:word32]
	r5 = r7_162 + 4<32>
	goto l00408A9E
l00408AAA:
	branch r7_11 <= 0<32> l00408AC6
l00408AAE:
	v18_129 = SLICE(r7_11, byte, 0) + 0xFC<8>
	Mem132[r6 + 12<i32>:byte] = v18_129
	r5_130 = CONVERT(v18_129, byte, int32)
	branch r5_130 < 0<32> l00408AC6
l00408ABE:
	r6 = Mem132[r6 + 4<i32>:word32]
	r7_136 = r6 - r7_11
l00408AC2:
	r7_145 = Mem144[r7_136:word32]
	goto l004089F8
l00408AC6:
	r7_136 = Mem134[r6:word32]
	r5_130 = r7_136 + 4<32>
	goto l00408AC2
l00408ACE:
	branch r7_11 <= 0<32> l00408B14
l00408AD2:
	r7_19 = __ins<word32,word32>(r7_11, 0<32>, 0<32>, 1<32>)
	v13_22 = SLICE(r7_19, byte, 0) + 0xF8<8>
	Mem24[r6 + 12<i32>:byte] = v13_22
	r5 = CONVERT(v13_22, byte, int32)
	branch r5 < 0<32> l00408B14
l00408AE8:
	r7_18 = Mem24[r6 + 4<i32>:word32] - r7_19
l00408AEE:
	r6 = Mem36[r7_18:word32]
	r7 = Mem36[r7_18 + 4<i32>:word32]
	goto l00408A74
l00408AF6:
	branch r7_11 <= 0<32> l00408B14
l00408AFA:
	r7_12 = __ins<word32,word32>(r7_11, 0<32>, 0<32>, 1<32>)
	v11_14 = SLICE(r7_12, byte, 0) + 0xF8<8>
	Mem16[r6 + 12<i32>:byte] = v11_14
	r5 = CONVERT(v11_14, byte, int32)
	branch r5 < 0<32> l00408B14
l00408B0E:
	r7_18 = Mem16[r6 + 4<i32>:word32] - r7_12
	goto l00408AEE
l00408B14:
	r7_18 = __ins<word32,word32>(Mem26[r6:word32] + 7<32>, 0<32>, 0<32>, 1<32>)
	r5 = r7_18 + 8<32>
	goto l00408AEE
pop_arg_exit:


word32 pad(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r11Out, word32 & r13Out, word32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-printf_core r13:[0..31]-printf_core r14:[0..31]-printf_core r2:[0..31]-printf_core r3:[0..31]-printf_core r4:[0..31]-printf_core r5:[0..31]-printf_core r6:[0..31]-printf_core r7:[0..31]-printf_core
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
pad_entry:
l00408B22:
	r17_14 = r4
	r4_132 = 0x120000<32>
	branch (r8 & 0x120000<32>) != 0<32> l00408B6E
l00408B34:
	branch r7 >= r6 l00408B6E
l00408B38:
	r16_20 = r6 - r7
	r7_21 = 0x100<32>
	branch r16_20 >=u 0x101<32> l00408B48
l00408B44_1:
	r7_21 = r16_20
l00408B48:
	memset(&tLoc0110, r5, r7_21, out r6_147, out r7_148, out r8_149, out r10_150)
	r16_40 = r16_20
	goto l00408B5E
l00408B52:
	out(r17_14, &tLoc0110, 0x100<32>, out r3_151, out r4_152, out r5_153, out r6_154, out r7_155, out r11_156, out r13_157, out r14_158, out r17_14)
	r16_40 = r16_40 + 0xFFFFFF00<32>
l00408B5E:
	branch r16_40 >u 0xFF<32> l00408B52
l00408B66:
	r2 = out(r17_14, &tLoc0110, r16_20 & 0xFF<32>, out r3, out r4_132, out r5, out r6, out r7, out r11, out r13, out r14, out r17_159)
l00408B6E:
	r3Out = r3
	r4Out = r4_132
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r11Out = r11
	r13Out = r13
	r14Out = r14
	return r2
pad_exit:


word32 printf_core(word32 r2, word32 r4, word32 r5, word32 r6, word32 r11, word32 r13, word32 r21, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r7Out, word32 & r11Out, word32 & r13Out, word32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vfprintf
// MayUse:  r11:[0..31] r13:[0..31] r2:[0..31] r21:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-vfprintf r13:[0..31]-vfprintf r14:[0..31]-vfprintf r2:[0..31]-vfprintf r3:[0..31]-vfprintf r4:[0..31]-vfprintf r5:[0..31]-vfprintf r7:[0..31]-vfprintf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
printf_core_entry:
l00408B72:
	Mem37[&tLoc0294:word32] = r5
	r22_1017 = 0<32>
	r16_1178 = r4
l00408B86:
	branch 0x7FFFFFFF<32> - r6 < r22_1017 l00408D8E
l00408B94:
	r7_46 = r6 + r22_1017
	r5 = Mem39[&tLoc0294:word32]
	bLoc02DC_3681 = SLICE(r7_46, byte, 0) (alias)
	r7_140 = CONVERT(Mem47[r21:byte], byte, word32)
	branch r7_140 != 0<32> l00408BCC
l00408BA2:
	branch r16_1178 != 0<32> l00408E04
l00408BA6:
	r16_3141 = 1<32>
	branch r7_140 == 0<32> l00408E02
l00408BAE:
	r5 = Mem47[r7_140 + r16_3141 * 4<32>:word32]
	branch r5 != 0<32> l004099B4
l00408BB6:
	r7_140 = Mem47[r7_140 + r16_3141 * 4<32>:word32]
	branch r7_140 != 0<32> l00408D3A
l00408BBE:
	r16_3141 = r16_3141 + 1<32>
	branch r16_3141 != 0xA<32> l00408BB6
l00408BC4:
	goto l004099CA
l00408BC8:
	r22_1017 = r22_1017 + 1<32>
	Mem56[&tLoc0294:word32] = r22_1017
l00408BCC:
	r5 = Mem51[&tLoc0294:word32]
	r7_54 = CONVERT(Mem51[r22_1017:byte], byte, word32)
	branch r7_54 == 0<32> l00408BEE
l00408BD4:
	branch r7_54 != 0x25<32> l00408BC8
l00408BD8:
	goto l00408BE0
l00408BDA:
	r7_54 = r7_54 + 2<32>
	Mem66[&tLoc0294:word32] = r7_54
	r22_1017 = r22_1017 + 1<32>
l00408BE0:
	r6 = CONVERT(Mem58[r7_54:byte], byte, word32)
	branch r6 != 0x25<32> l00408BEE
l00408BE8:
	r6 = CONVERT(Mem58[r7_54 + 1<i32>:byte], byte, word32)
	branch r6 == 0x25<32> l00408BDA
l00408BEE:
	r20_70 = 0x7FFFFFFF<32>
	r22_1017 = r22_1017 - r21
	r7_77 = 0x7FFFFFFF<32> - r7_54
	branch r7_77 < r22_1017 l00408D8E
l00408C04:
	r7_107 = r7_77
	branch r16_1178 == 0<32> l00408C0C
l00408C06:
	r2 = out(r16_1178, r21, r22_1017, out r3, out r4, out r5, out r6, out r7_107, out r11, out r13, out r14, out r17_8205)
l00408C0C:
	branch r22_1017 != 0<32> l00408B86
l00408C10:
	r19_108 = CONVERT(Mem78[r7_107 + 1<i32>:byte], byte, word32)
	r19_109 = r19_108 + 0xFFFFFFD0<32>
	branch r19_108 >=u 0x3A<32> l00408D20
l00408C1C:
	branch Mem78[r7_107 + 2<i32>:byte] != 0x24<8> l00408D20
l00408C22:
	Mem117[&tLoc0294:word32] = r7_107 + 3<32>
	r7_112 = 1<32>
l00408C2A:
l00408C2C:
	r4 = CONVERT(Mem122[r7_112:byte], byte, word32)
	branch r4 >=u 0x40<32> l00408C46
l00408C38:
	branch !__bit<word32,word32>(0x12889<32> >>u r4 + 0xFFFFFFE0<32>, 0<32>) l00408D28
l00408C46:
	branch r4 != 0x2A<32> l00408D82
l00408C4A:
	r6_146 = CONVERT(Mem122[r7_112 + 1<i32>:byte], byte, word32)
	r5 = r6_146 + 0xFFFFFFD0<32>
	branch r6_146 >=u 0x3A<32> l00408D36
l00408C54:
	r5 = CONVERT(Mem122[r7_112 + 2<i32>:byte], byte, word32)
	branch r5 != 0x24<32> l00408D36
l00408C5A:
	Mem190[r4 + (r6_146 + 0x3FFFFFD0<32>) * 4<32>:word32] = 0xA<32>
	r6_191 = CONVERT(Mem190[r7_112 + 1<i32>:byte], byte, word32)
	Mem195[&tLoc0294:word32] = r7_112 + 3<32>
	r5 = 0xA<32>
	r7_140 = 1<32>
	dwLoc02E0_3523 = Mem198[(r6_191 + 0x1FFFFFD0<32> << 3<8>) + 0xA<32>:word32]
l00408C82:
	branch r7_140 >= 0<32> l00408C96
l00408C88:
	r7_140 = -8192<i32>
	dwLoc02E0_3523 = -8192<i32>
l00408C96:
	r30_212 = 0<32>
	r18_213 = 0xFFFFFFFF<32>
	branch Mem210[r7_140:byte] != 0x2E<8> l00408CE2
l00408CA2:
	branch Mem210[r7_140 + 1<i32>:byte] != 0x2A<8> l00408DD0
l00408CA8:
	r6_228 = CONVERT(Mem210[r7_140 + 2<i32>:byte], byte, word32)
	r5 = r6_228 + 0xFFFFFFD0<32>
	branch r6_228 >=u 0x3A<32> l00408D96
l00408CB2:
	r5 = CONVERT(Mem210[r7_140 + 3<i32>:byte], byte, word32)
	branch r5 != 0x24<32> l00408D96
l00408CB8:
	Mem276[r4 + (r6_228 + 0x3FFFFFD0<32>) * 4<32>:word32] = 0xA<32>
	r5 = 0xA<32>
	r7_140 = r7_140 + 4<32>
	r18_213 = Mem276[(CONVERT(Mem276[r7_140 + 2<i32>:byte], byte, word32) + 0x1FFFFFD0<32> << 3<8>) + 0xA<32>:word32]
l00408CD8:
	Mem288[&tLoc0294:word32] = r7_140
	r30_212 = ~r18_213 >>u 0x1F<32>
l00408CE2:
	r23_290 = 0<32>
l00408CE4:
	branch Mem292[r7_140:byte] >=u 0x7B<8> l00408D3A
l00408CF0:
	Mem299[&tLoc0294:word32] = r7_140 + 1<32>
	r6 = CONVERT(Mem299[r7_140:byte], byte, word32)
	r5 = CONVERT(Mem299[r23_290 *s 0x3A<32> + 0x00413050<p32> + r6 - 65<i32>:byte], byte, word32)
	r7_140 = r5 + 0xFFFFFFFF<32>
	branch r5 <u 9<32> l00408DE2
l00408D10:
	branch r5 == 0<32> l00408D3A
l00408D12:
	branch r5 != 0x1B<32> l00408DE6
l00408D16:
	branch r19_109 >= 0<32> l00408D3A
l00408D1A:
	branch r16_1178 != 0<32> l00408E12
l00408D1E:
	goto l00408B86
l00408D20:
	r7_112 = r7_107 + 1<32>
	Mem115[&tLoc0294:word32] = r7_112
	r19_109 = 0xFFFFFFFF<32>
	goto l00408C2A
l00408D28:
	r7_112 = r7_112 + 1<32>
	Mem133[&tLoc0294:word32] = r7_112
	goto l00408C2C
l00408D36:
	branch r7_112 == 0<32> l00408D48
l00408D3A:
	r3 = __errno_location(out r4)
l00408D40:
l00408D42:
	r7_140 = 0xFFFFFFFF<32>
	goto l004099CC
l00408D48:
	dwLoc02E0_3523 = 0<32>
	branch r16_1178 == 0<32> l00408D6E
l00408D4C:
	r5 = CONVERT(Mem153[r7_112 + 12<i32>:int8], int8, word32)
	branch r5 <= 0<32> l00408D76
l00408D56:
	v19_163 = SLICE(r5, byte, 0) + 0xFC<8>
	Mem165[r7_112 + 12<i32>:byte] = v19_163
	branch v19_163 < 0<8> l00408D76
l00408D66:
	r7_171 = Mem165[r7_112 + 4<i32>:word32] - r5
l00408D6A:
	r7_112 = Mem177[r7_171:word32]
	dwLoc02E0_3523 = r7_112
l00408D6E:
	r7_140 = r7_112 + 1<32>
	Mem186[&tLoc0294:word32] = r7_140
	goto l00408C82
l00408D76:
	r7_171 = Mem167[r7_112:word32]
	goto l00408D6A
l00408D82:
	r4 = getint(&tLoc0294, out r5, out r7_140)
	dwLoc02E0_3523 = r4
	branch r4 >= 0<32> l00408C96
l00408D8E:
	r3 = __errno_location(out r4)
	goto l00408D40
l00408D96:
	branch r7_140 != 0<32> l00408D3A
l00408D9A:
	r18_213 = 0<32>
	branch r16_1178 == 0<32> l00408DBE
l00408D9E:
	r5 = CONVERT(Mem210[r7_140 + 12<i32>:int8], int8, word32)
	branch r5 <= 0<32> l00408DC4
l00408DA8:
	v20_245 = SLICE(r5, byte, 0) + 0xFC<8>
	Mem247[r7_140 + 12<i32>:byte] = v20_245
	branch v20_245 < 0<8> l00408DC4
l00408DB8:
	r7_140 = Mem247[r7_140 + 4<i32>:word32] - r5
l00408DBC:
	r18_213 = Mem259[r7_140:word32]
l00408DBE:
	r7_140 = r7_140 + 2<32>
	goto l00408CD8
l00408DC4:
	r7_140 = Mem249[r7_140:word32]
	goto l00408DBC
l00408DD0:
	Mem219[&tLoc0294:word32] = r7_140 + 1<32>
	r4 = getint(&tLoc0294, out r5, out r7_140)
	r30_212 = 1<32>
	r18_213 = r4
	goto l00408CE2
l00408DE2:
	r23_290 = r5
	goto l00408CE4
l00408DE6:
	branch r19_109 < 0<32> l00408E00
l00408DEA:
	Mem339[r5 + 0xFFFFFFFF<32> + r19_109 * 4<32>:word32] = r5
	r19_341 = r5 + 0xFFFFFFFF<32> + (r19_109 << 3<8>)
	r6 = Mem339[r19_341:word32]
	r7_140 = Mem339[r19_341 + 4<i32>:word32]
	dwLoc0288 = r6
	dwLoc0284 = r7_140
	goto l00408D1A
l00408E00:
	branch r16_1178 != 0<32> l00408E0A
l00408E02:
l00408E04:
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r7Out = r7_140
	r11Out = r11
	r13Out = r13
	r14Out = r14
	return r2
l00408E0A:
	r4 = fp - 0x288<32>
	r5 = pop_arg(r5, r6, out r6_8206, out r7_140)
l00408E12:
	r17_351 = Mem349[&tLoc0294:word32]
	r19_1607 = CONVERT(Mem349[r7_140 - 1<i32>:byte], byte, word32)
	branch r23_290 == 0<32> l00408E26
l00408E1C:
	branch (r19_1607 & 0xF<32>) != 3<32> l00408E26
l00408E22:
	r19_1607 = __ins<word32,word32>(r19_1607, 0<32>, 5<32>, 1<32>)
l00408E26:
	branch __bit<word32,word32>(r17_351, 0xD<32>) l00408E2E
l00408E2A:
	r17_351 = __ins<word32,word32>(r17_351, 0<32>, 0<32>, 1<32>)
l00408E2E:
	r7_2953 = r19_1607 + 0xFFFFFFBF<32>
	branch r7_2953 <u 0x38<32> l00408E3A
l00408E36:
	goto l004099D2
l00408E3A:
	r6 = 0x00412F40<p32>
	r7_2953 = Mem349[0x00412F40<p32> + r7_2953 * 4<32>:word32]
	switch (r7_2953) { l00409100 l004099D2 l00409082 l004099D2 l00409100 l00409100 l00409100 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l0040908E l004099D2 l004099D2 l004099D2 l004099D2 l00408E88 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l004099D2 l00409100 l004099D2 l00409024 l00408F2E l00409100 l00409100 l00409100 l004099D2 l00408F2E l004099D2 l004099D2 l004099D2 l0040903C l00408E42 l00408EE8 l00408E7A l004099D2 l004099D2 l00409076 l004099D2 l00408F4C l004099D2 l004099D2 l00408E88 }
l00408E42:
	branch r23_290 >=u 8<32> l00408B86
l00408E46:
	r7_441 = Mem349[0x00413020<p32> + r23_290 * 4<32>:word32]
	wLoc02DC_3715 = SLICE(r7_46, word16, 0) (alias)
	switch (r23_290) { l00408E64 l00408E64 l00408E6C l00408E50 l00408E5A l00408B86 l00408E64 l00408E6C }
l00408E50:
	Mem447[r7_441:word16] = wLoc02DC_3715
	r6 = CONVERT(wLoc02DC_3715, uint16, word32)
	goto l00408B86
l00408E5A:
	Mem444[r7_441:byte] = bLoc02DC_3681
	r6 = CONVERT(bLoc02DC_3681, byte, word32)
	goto l00408B86
l00408E64:
	goto l00408B86
l00408E6C:
	r6 = 0x00412F40<p32> >> 0x1F<32>
	goto l00408B86
l00408E7A:
	r6 = CONVERT(r18_213 <u 8<32>, bool, word32)
	branch r6 == 0<32> l00408E84
l00408E80_1:
	r18_213 = 8<32>
l00408E84:
	r19_1607 = 0x78<32>
l00408E88:
	r17_351 = dwLoc0288
	r8_595 = r19_1607 & 0x20<32>
	r21 = fp - 0x228<32>
	r7_600 = r6
	r5 = r23_290
l00408E98:
	branch (r7_600 | r5) != 0<32> l00408EC8
l00408E9E:
	r23_2922 = 0x00411FF4<p32>
	branch (r6 | r23_290) == 0<32> l00408EBA
l00408EAA:
	branch __bit<word32,word32>(dwLoc0288, 3<32>) l00408EBA
l00408EAE:
	r22_1017 = 2<32>
	r23_2922 = 0x00411FF4<p32> + (r19_1607 >> 4<32>)
l00408EBA:
	branch r30_212 == 0<32> l00408F86
l00408EBE:
	branch r18_213 < 0<32> l00408D8E
l00408EC2:
	__ins<word32,word32>(r17_351, 0<32>, 0<32>, 1<32>)
	goto l00408F8A
l00408EC8:
	r21 = r21 + 0xFFFFFFFF<32>
	Mem616[r21:byte] = SLICE(r8_595, byte, 0) | Mem609[0x00413040<p32> + (r7_600 & 0xF<32>):byte]
	r7_600 = r7_600 >>u 4<32> | r5 << 0x1C<32>
	r5 = r5 >>u 4<32>
	goto l00408E98
l00408EE8:
	r21 = fp - 0x228<32>
	r17_351 = dwLoc0284
l00408EF2:
	branch (r6 | r5) != 0<32> l00408F16
l00408EF8:
	r23_2922 = 0x00411FF4<p32>
	branch __bit<word32,word32>(dwLoc0284, 3<32>) l00408EBA
l00408F00:
	r22_432 = CONVERT(fp - 0x228<32> - r21 < r18_213, bool, word32)
	r23_2922 = 0x00411FF9<p32>
	branch r22_432 == 0<32> l00408F10
l00408F0C_1:
	r23_2922 = 0x00411FF4<p32>
l00408F10:
	r22_1017 = CONVERT(r22_432 <u 1<32>, bool, word32)
	goto l00408EBA
l00408F16:
	r21 = r21 + 0xFFFFFFFF<32>
	Mem422[r21:byte] = (SLICE(r6, byte, 0) & 7<8>) + 0x30<8>
	r6 = r6 >>u 3<32> | r5 << 0x1D<32>
	r5 = r5 >>u 3<32>
	goto l00408EF2
l00408F2E:
	branch dwLoc0284 >= 0<32> l00408F52
l00408F36:
	r6_519 = -dwLoc0288
	r22_1017 = 1<32>
	dwLoc0288 = r6_519
	dwLoc0284 = -dwLoc0284 - CONVERT(r6_519 >u 0<32>, bool, word32)
l00408F4C:
	r23_2922 = 0x00411FF4<p32>
	goto l00408F6C
l00408F52:
	branch !__bit<word32,word32>(r17_351, 0xB<32>) l00408F7A
l00408F56:
	r23_513 = r17_351 & 1<32>
	r19_514 = 0x00411FF6<p32>
	r22_1017 = CONVERT(r23_513 >u 0<32>, bool, word32)
	branch r23_513 != 0<32> l00408F6A
l00408F66_1:
	r19_514 = 0x00411FF4<p32>
l00408F6A:
	r23_2922 = r19_514
l00408F6C:
	r2 = fmt_u(dwLoc0288, dwLoc0284, fp - 0x228<32>, r13, out r4_575, out r5, out r7_8214, out r8_8215, out r11, out r13)
	r21 = r4_575
	goto l00408EBA
l00408F7A:
	r22_1017 = 1<32>
	r23_2922 = 0x00411FF5<p32>
	goto l00408F6C
l00408F86:
	branch r18_213 >= 0<32> l00408EC2
l00408F8A:
	r6_675 = dwLoc0288 | dwLoc0284
	branch r6_675 != 0<32> l00408F98
l00408F94:
	branch r18_213 == 0<32> l004099AC
l00408F98:
	r7_690 = fp - 0x228<32> - r21 + CONVERT(r6_675 <u 1<32>, bool, word32)
	r19_491 = fp - 0x228<32>
	branch r18_213 >= r7_690 l00408FAC
l00408FA8_1:
	r18_213 = r7_690
l00408FAC:
	r19_2924 = r19_491 - r21
	r7_2953 = 0x7FFFFFFF<32> - r22_1017
	branch r18_213 >= r19_2924 l00408FC2
l00408FBE_1:
	r18_213 = r19_2924
l00408FC2:
	r30_2929 = r18_213
	branch r7_2953 < r18_213 l00408D8E
l00408FC8:
	r20_2951 = r30_2929 + r22_1017
	r7_2956 = CONVERT(r7_2953 < r20_2951, bool, word32)
	branch r7_2956 == 0<32> l00408FD8
l00408FD4_1:
	r18_213 = r20_2951
l00408FD8:
	branch r7_2956 < r18_213 l00408D8E
l00408FDE:
	pad(r16_1178, 0x20<32>, r18_213, r20_2951, r7_77, out r3_8216, out r4_8217, out r5_8218, out r6_8219, out r7_8220, out r11_8221, out r13_8222, out r14_8223)
	out(r16_1178, r23_2922, r22_1017, out r3_8224, out r4_8225, out r5_8226, out r6_8227, out r7_8228, out r11_8229, out r13_8230, out r14_8231, out r17_3039)
	pad(r16_1178, 0x30<32>, r18_213, r20_2951, r17_3039 ^ 0x100000<32>, out r3_8232, out r4_8233, out r5_8234, out r6_8235, out r7_8236, out r11_8237, out r13_8238, out r14_8239)
	pad(r16_1178, 0x30<32>, r30_2929, r19_2924, 0<32>, out r3_8240, out r4_8241, out r5_8242, out r6_8243, out r7_8244, out r11_8245, out r13_8246, out r14_8247)
	out(r16_1178, r21, r19_2924, out r3_8248, out r4_8249, out r5_8250, out r6_8251, out r7_8252, out r11_8253, out r13_8254, out r14_8255, out r17_3112)
	r22_1017 = r18_213
	r2 = pad(r16_1178, 0x20<32>, r18_213, r20_2951, r17_3112 ^ 0x2000<32>, out r3, out r4, out r5, out r6, out r7_8256, out r11, out r13, out r14)
	goto l00408B86
l00409024:
	__ins<word32,word32>(dwLoc0288, 0<32>, 0<32>, 1<32>)
	r23_2922 = 0x00411FF4<p32>
	r18_213 = 1<32>
	r19_491 = fp - 0x228<32>
	r21 = fp - 0x229<32>
	goto l00408FAC
l0040903C:
	__errno_location(out r4_464)
	strerror(Mem349[r4_464:word32], out r4_468)
	r21 = r4_468
l00409048:
	r7_476 = 0x7FFFFFFF<32>
	branch r18_213 < 0<32> l00409056
l00409052_1:
	r7_476 = r18_213
l00409056:
	r4_485 = strnlen(r21, r7_476, out r5, out r6_8257, out r8_8258)
	r19_491 = r21 + r4_485
	branch r18_213 >= 0<32> l0040906A
l00409064:
	branch Mem349[r19_491:byte] != 0<8> l00408D8E
l0040906A:
	__ins<word32,word32>(r17_351, 0<32>, 0<32>, 1<32>)
	r18_213 = r4_485
	r23_2922 = 0x00411FF4<p32>
	goto l00408FAC
l00409076:
	branch r21 != 0<32> l00409080
l0040907C_1:
	r21 = 0x00412000<p32>
l00409080:
	goto l00409048
l00409082:
	r18_213 = 0xFFFFFFFF<32>
	dwLoc0288 = fp - 0x27C<32>
l0040908E:
	r5 = dwLoc0288
	r19_1952 = 0<32>
l00409092:
	branch r19_1952 >=u r18_213 l004090AC
l00409096:
	r5 = Mem753[r20_70:word32]
	branch r5 == 0<32> l004090AC
l0040909A:
	r20_70 = r20_70 + 4<32>
	r3 = wctomb(fp - 0x290<32>, r5, out r4, out r5, out r6)
	branch r4 < 0<32> l00408D42
l004090A6:
	branch r18_213 - r19_1952 >=u r4 l004090E0
l004090AC:
	branch r19_1952 < 0<32> l00408D8E
l004090B0:
	pad(r16_1178, 0x20<32>, r6, r19_1952, dwLoc02E0_3523, out r3_8207, out r4_8208, out r5_8209, out r6_2240, out r7_8210, out r11_8211, out r13_8212, out r14_8213)
	r20_779 = 0<32>
l004090BE:
	branch r20_779 <u r19_1952 l004090E4
l004090C2:
	r2 = pad(r16_1178, 0x20<32>, r6_2240, r19_1952, dwLoc02E0_3523 ^ 0x2000<32>, out r3, out r4, out r5, out r6, out r7_2484, out r11, out r13, out r14)
	branch r7_2484 >= r19_1952 l004090DE
l004090DA_1:
	r7_2484 = r19_1952
l004090DE:
	goto l00409330
l004090E0:
	r19_1952 = r19_1952 + r4
	goto l00409092
l004090E4:
	r5_811 = Mem753[r21:word32]
	branch r5_811 == 0<32> l004090C2
l004090E8:
	wctomb(fp - 0x290<32>, r5_811, out r4_817, out r5_8259, out r6_8260)
	r21 = r21 + 4<32>
	r20_779 = r20_779 + r4_817
	r6_2240 = r4_817
	branch r19_1952 <u r20_779 l004090C2
l004090F8:
	out(r16_1178, fp - 0x290<32>, r4_817, out r3_8261, out r4_8262, out r5_8263, out r6_2240, out r7_8264, out r11_8265, out r13_8266, out r14_8267, out r17_8268)
	goto l004090BE
l00409100:
	branch r30_212 == 0<32> l00409108
l00409104:
	branch r18_213 < 0<32> l00408D8E
l00409108:
	dwLoc02D0_3800 = r7_2953 >>u 0x1F<32>
	branch r7_2953 >>u 0x1F<32> == 0<32> l00409124
l00409116:
	r7_2953 = r7_2953 + 0x80000000<32>
	r6_858 = 0x00412008<p32>
l00409120:
	dwLoc02C8_3803 = r6_858
	goto l00409140
l00409124:
	branch !__bit<word32,word32>(dwLoc0284, 0xB<32>) l00409336
l00409128:
	dwLoc02D0_3800 = CONVERT((dwLoc0284 & 1<32>) >u 0<32>, bool, word32)
	r4_863 = 0x0041200E<p32>
	branch (dwLoc0284 & 1<32>) != 0<32> l0040913E
l0040913A_1:
	r4_863 = 0x00412009<p32>
l0040913E:
	dwLoc02C8_3803 = r4_863
l00409140:
	branch __ext<word32,word32>(r7_2953, 0<32>, 0x1F<32>) >u 0x7FEFFFFF<32> l00409342
l0040914E:
	r4_r5_8183 = frexpl(SEQ(r21, r7_2953), fp - 0x28C<32>, out r18_1022)
	r4_r5_1032 = __adddf3(r4_r5_8183, r4_r5_8183)
	r4_1035 = SLICE(r4_r5_1032, word32, 32) (alias)
	r5_1037 = SLICE(r4_r5_1032, word32, 0) (alias)
	r23_1036 = r4_1035
	r30_1038 = r5_1037
	r21_1039 = r4_1035
	r20_1040 = r5_1037
	branch __nedf2(r4_r5_1032) != 0<32> l004093B8
l0040916C:
	r7_1046 = r19_1607 | 0x20<32>
	branch r7_1046 != 0x21<32> l00409400
l00409176:
	branch (r19_1607 & 0x20<32>) == 0<32> l00409186
l0040917E:
l00409186:
	r7_2500 = 0x4120000<32>
	branch r18_1022 >=u 0xC<32> l004091E4
l00409196:
	r20_2506 = 0xC<32> - r18_1022
	r10_r11_8184 = SEQ(Mem2501[0x4120238<32>:word32], Mem2501[0x412023C<32>:word32]) (alias)
l004091AA:
	r11_2514 = SLICE(r10_r11_8184, word32, 0) (alias)
	r20_2506 = r20_2506 + 0xFFFFFFFF<32>
	branch r20_2506 != 0xFFFFFFFF<32> l004093C0
l004091B2:
	branch Mem2501[0xFFFFFFFF<32>:byte] != 0x2D<8> l004093D4
l004091BA:
	r4_r5_2567 = __subdf3(r4_r5_1032, r10_r11_8184)
	r4_r5_2578 = __adddf3(r10_r11_8184, r4_r5_2567)
	r7_2500 = SLICE(r4_r5_2567, word32, 0)
	r21_1039 = SLICE(r4_r5_2578, word32, 32)
	r20_1040 = SLICE(r4_r5_2578, word32, 0)
l004091E4:
	r4_2589 = r7_2500 >> 0x1F<32>
	r4_2591 = (r7_2500 ^ r4_2589) - r4_2589
	r2 = fmt_u(r4_2591, r4_2591 >> 0x1F<32>, fp - 0x268<32>, r13, out r4_2605, out r5_8269, out r7_2608, out r8_8270, out r11_2599, out r13)
	branch r4_2605 != fp - 0x268<32> l0040920A
l00409200:
	r7_2608 = 0x30<32>
	r4_2605 = fp - 0x269<32>
l0040920A:
	r6_2617 = 0x2D<32>
	r19_2623 = r19_1607 + 0xF<32>
	r30_2627 = fp - 0x268<32>
	branch r7_2608 < 0<32> l0040921E
l0040921A_1:
	r6_2617 = 0x2B<32>
l0040921E:
	Mem2633[r4_2605 - 2<i32>:int8] = SLICE(r19_2623, int8, 0)
	Mem2635[r4_2605 - 1<i32>:int8] = SLICE(r6_2617, int8, 0)
	r11_r20_8191 = SEQ(r11_2599, r20_1040) (alias)
l0040922C:
	r4_2645 = __fixdfsi(r21_1039, SLICE(r11_r20_8191, word32, 0), out r6_2647)
	Mem2657[r30_2627:byte] = Mem2643[0x00413040<p32> + r4_2645:byte] | SLICE(r6_2647, byte, 0)
	r4_r5_8194 = __floatsidf(r4_2645, out r8_8340)
	r5_2660 = SLICE(r4_r5_8194, word32, 0) (alias)
	r4_r5_2680 = __muldf3(__subdf3(r11_r20_8191, r4_r5_8194), SEQ(Mem2657[r5_2660 + 616<i32>:word32], Mem2657[r5_2660 + 620<i32>:word32]))
	r4_2683 = SLICE(r4_r5_2680, word32, 32) (alias)
	r19_2655 = r30_2627 + 1<32>
	r18_2665 = r21_1039
	r5_2685 = SLICE(r4_r5_2680, word32, 0) (alias)
	r11 = r4_2683
	r21_1039 = r4_2683
	branch r19_2655 - (fp - 0x268<32>) != 1<32> l00409292
l00409272:
	r18_2665 = r4_2683
	branch __nedf2(r4_r5_2680) != 0<32> l00409288
l00409280:
	branch r4_2683 > 0<32> l00409288
l00409284:
	branch __bit<word32,word32>(0x4120000<32>, 3<32>) l0040929E
l00409288:
	Mem2700[r30_2627 + 1<i32>:byte] = 0x2E<8>
	r19_2655 = r30_2627 + 2<32>
l00409292:
	branch __nedf2(r4_r5_2680) != 0<32> l004093F6
l0040929E:
	r7_2726 = 0x7FFFFFFD<32> - (fp - 0x268<32>)
	r5 = r5_2685
	r7_2728 = r7_2726
	branch r7_2726 < r18_2665 l00408D8E
l004092B6:
	r19_2733 = r19_2655 - (fp - 0x268<32>)
	branch r18_2665 == 0<32> l004093FA
l004092BE:
	r7_2728 = r19_2733 + 0xFFFFFFFF<32>
	branch r18_2665 < r19_2733 + 0xFFFFFFFF<32> l004093FA
l004092C6:
	r20_2737 = r18_2665 + 2<32> + (fp - 0x268<32>)
l004092CE:
	r21 = r7_2728 + r20_2737
	pad(r16_1178, 0x20<32>, 0<32>, r21, dwLoc02E0_3523, out r3_8294, out r4_8295, out r5_2780, out r6_2781, out r7_8296, out r11_8297, out r13_8298, out r14_8299)
	out(r16_1178, r5_2780, r6_2781, out r3_8300, out r4_8301, out r5_8302, out r6_2790, out r7_8303, out r11_8304, out r13_8305, out r14_8306, out r17_8307)
	pad(r16_1178, 0x30<32>, r6_2790, r21, dwLoc02E0_3523 ^ 0x100000<32>, out r3_8308, out r4_8309, out r5_8310, out r6_8311, out r7_8312, out r11_8313, out r13_8314, out r14_8315)
	out(r16_1178, fp - 0x268<32>, r19_2733, out r3_8316, out r4_8317, out r5_8318, out r6_8319, out r7_8320, out r11_8321, out r13_8322, out r14_8323, out r17_8324)
	pad(r16_1178, 0x30<32>, r20_2737 - (fp - 0x268<32>) - r19_2733, 0<32>, 0<32>, out r3_8325, out r4_8326, out r5_2868, out r6_8327, out r7_8328, out r11_8329, out r13_8330, out r14_8331)
	out(r16_1178, r5_2868, fp - 0x268<32>, out r3_8332, out r4_8333, out r5_8334, out r6_2878, out r7_8335, out r11_8336, out r13_8337, out r14_8338, out r17_8339)
	r2 = pad(r16_1178, 0x20<32>, r6_2878, r21, dwLoc02E0_3523 ^ 0x2000<32>, out r3, out r4, out r5, out r6, out r7_2484, out r11, out r13, out r14)
	branch r7_2484 >= r21 l00409330
l0040932C_1:
	r7_2484 = r21
l00409330:
	r22_1017 = r7_2484
	goto l00408B86
l00409336:
	dwLoc02D0_3800 = 1<32>
	r6_858 = 0x0041200B<p32>
	goto l00409120
l00409342:
	r19_891 = r19_1607 & 0x20<32>
	r20_892 = 0x00412020<p32>
	r21 = r7_2953
	branch r19_891 == 0<32> l00409356
l00409352_1:
	r20_892 = 0x0041201C<p32>
l00409356:
	r7_899 = r7_2953
	branch __nedf2(SEQ(r21, r7_2953)) == 0<32> l0040936C
l00409360:
	r7_899 = 0x00412024<p32>
	r20_892 = 0x00412028<p32>
	branch r19_891 == 0<32> l0040936C
l00409368_1:
	r20_892 = 0x00412024<p32>
l0040936C:
	r19_921 = r7_899 + 3<32>
	pad(r16_1178, 0x20<32>, r21, r19_921, __ins<word32,word32>(dwLoc02D0_3800, 0<32>, 0<32>, 1<32>), out r3_8271, out r4_8272, out r5_945, out r6_946, out r7_8273, out r11_8274, out r13_8275, out r14_8276)
	out(r16_1178, r5_945, r6_946, out r3_8277, out r4_8278, out r5_8279, out r6_8280, out r7_8281, out r11_8282, out r13_8283, out r14_8284, out r17_8285)
	out(r16_1178, r20_892, 3<32>, out r3_8286, out r4_8287, out r5_8288, out r6_977, out r7_8289, out r11_8290, out r13_8291, out r14_8292, out r17_8293)
	r2 = pad(r16_1178, 0x20<32>, r6_977, r19_921, dwLoc02E0_3523 ^ 0x2000<32>, out r3, out r4, out r5, out r6, out r7_1011, out r11, out r13, out r14)
	branch r7_1011 >= r19_921 l004093AE
l004093AA_1:
	r7_1011 = r19_921
l004093AE:
	r22_1017 = r7_1011
	branch r7_1011 >= 0<32> l00408B86
l004093B4:
	goto l00408D8E
l004093B8:
	goto l0040916C
l004093C0:
	r10_r11_8184 = __muldf3(r10_r11_8184, SEQ(Mem2501[0x267<32>:word32], Mem2501[0x26B<32>:word32])) (alias)
	goto l004091AA
l004093D4:
	r4_r5_2551 = __subdf3(__adddf3(r4_r5_1032, r10_r11_8184), r10_r11_8184)
	r7_2500 = r11_2514
	r21_1039 = SLICE(r4_r5_2551, word32, 32)
	r20_1040 = SLICE(r4_r5_2551, word32, 0)
	goto l004091E4
l004093F6:
	r30_2627 = r19_2655
	r11_r20_8191 = r4_r5_2680 (alias)
	goto l0040922C
l004093FA:
	r20_2737 = fp - 0x268<32> + r19_2733
	goto l004092CE
l00409400:
	branch r18_1022 >= 0<32> l0040940A
l00409406_1:
l0040940A:
	branch __nedf2(r4_r5_1032) == 0<32> l00409434
l00409414:
	r4_r5_1073 = __muldf3(r4_r5_1032, SEQ(Mem1048[0x4120270<32>:word32], Mem1048[0x4120274<32>:word32]))
	r21_1039 = SLICE(r4_r5_1073, word32, 32)
	r20_1040 = SLICE(r4_r5_1073, word32, 0)
l00409434:
	dwLoc02D8_3829 = fp - 0x228<32>
	branch r2 < 0<32> l00409444
l0040943E:
	dwLoc02D8_3829 = fp - 0x108<32>
l00409444:
	r11_r20_8187 = SEQ(r11, r20_1040) (alias)
l00409446:
	r4_1135 = __fixunsdfsi(r21_1039, SLICE(r11_r20_8187, word32, 0), out r9_1140)
	Mem1142[r30_1038:word32] = r4_1135
	r4_r5_1165 = __muldf3(__subdf3(r11_r20_8187, __floatunsidf(r4_1135)), SEQ(Mem1142[0x4120278<32>:word32], Mem1142[0x412027C<32>:word32]))
	r4_1166 = SLICE(r4_r5_1165, word32, 32) (alias)
	r30_1038 = r30_1038 + 4<32>
	r18_1150 = r21_1039
	r11 = r4_1166
	r21_1039 = r4_1166
	r20_1171 = SLICE(r4_r5_1165, word32, 0)
	r16_1178 = r2
	r11_r20_8187 = r4_r5_1165 (alias)
	branch __nedf2(r4_r5_1165) != 0<32> l00409446
l00409484:
	r5_1179 = dwLoc02D8_3829
	r7_1180 = 0<32>
l00409488:
	branch r2 > 0<32> l00409574
l0040948C:
	branch r7_1180 == 0<32> l00409490
l0040948E:
l00409490:
	r20_1296 = r20_1171 + 1<32>
	r7_1297 = 0<32>
	r2 = r20_1296 << 2<32>
l004094A4:
	branch r5_1179 < 0<32> l004095F0
l004094A8:
	branch r7_1297 == 0<32> l004094AC
l004094AA:
l004094AC:
	r21_1384 = 0<32>
	branch r23_1036 >=u r30_1038 l004094C8
l004094B2:
	r21_1398 = r7_1297 - r23_1036
	r6_1396 = Mem1391[r23_1036:word32]
	r7_1297 = 0xA<32>
	r21_1384 = (r21_1398 >> 2<32>) + ((r21_1398 >> 2<32>) << 3<8>)
l004094C4:
	branch r6_1396 >=u r7_1297 l00409664
l004094C8:
	r6_1414 = r21_1384
	branch (r7_1297 ^ 0x66<32>) != 0<32> l004094D6
l004094D2_1:
	r6_1414 = 0<32>
l004094D6:
	r7_1431 = r18_1150 - r6_1414
	r6_1432 = 0<32>
	branch r5_1179 != 0x27<32> l004094E2
l004094DE:
	r6_1432 = CONVERT(r18_1150 >u 0<32>, bool, word32)
l004094E2:
	r7_1440 = r7_1431 - r6_1432
	r6_1452 = (r30_1038 - r6_1432 >> 2<32>) + 0xFFFFFFFF<32>
	branch r7_1440 >= r6_1452 * 9<32> l00409706
l004094F8:
	r6_1467 = (r7_1440 + 0x2400<32>) %s 9<32>
	r8_1465 = 0xA<32>
	r20_1466 = r6_1452 * 9<32> + (r20_1296 + 0x3FFFFC01<32> << 2<8>)
	r7_1468 = r6_1467 + 1<32>
l0040951A:
	branch r7_1468 != 9<32> l0040966C
l0040951E:
	r2 = Mem1391[r20_1466:word32]
	r7_1477 = r2 %u r8_1465
	branch r7_1477 != 0<32> l00409530
l00409528:
	r6_1467 = r20_1466 + 4<32>
	branch r30_1038 == r20_1466 + 4<32> l004096FC
l00409530:
	branch !__bit<word32,word32>(r6_1467, 0<32>) l0040954E
l00409538:
	branch r8_1465 != 0x3B9ACA00<32> l00409674
l00409542:
	branch r23_1036 >=u r20_1466 l00409674
l00409546:
	branch __bit<word32,word32>(Mem1391[r20_1466 - 4<i32>:word32], 0<32>) l00409674
l0040954E:
	r4_r5_8195 = SEQ(1<32>, Mem1391[0x412024C<32>:word32]) (alias)
l00409558:
	r4_1596 = SLICE(r4_r5_8195, word32, 32) (alias)
	r5_1567 = SLICE(r4_r5_8195, word32, 0) (alias)
	r6_1507 = r8_1465 >> 1<32>
	branch r7_1477 <u r6_1507 l00409680
l00409560:
	branch r6_1507 != r7_1477 l0040956A
l00409562:
	branch r30_1038 == r20_1466 + 4<32> l00409748
l0040956A:
	r6_1514 = Mem1391[0x4120264<32>:word32]
	goto l00409688
l00409574:
	r7_1183 = 0x1D<32>
	branch r2 >= 0x1E<32> l0040957E
l0040957A_1:
	r7_1183 = r2
l0040957E:
	r21_1187 = r30_1038 + 0xFFFFFFFC<32>
	r3_1189 = r7_1183
	r20_1171 = 0<32>
l00409586:
	branch r21_1187 >=u r23_1036 l004095A8
l0040958A:
	branch r20_1171 == 0<32> l00409594
l0040958E:
	Mem1259[r23_1036 - 4<i32>:word32] = r20_1171
	r23_1036 = r23_1036 + 0xFFFFFFFC<32>
l00409594:
	branch r23_1036 >=u r30_1038 l004095A0
l00409598:
	r7_1263 = r30_1038 + 0xFFFFFFFC<32>
	branch Mem1264[r7_1263:word32] == 0<32> l004095EC
l004095A0:
	r2 = r2 - r3_1189
	r7_1180 = 1<32>
	goto l00409488
l004095A8:
	r4_1203 = __ashldi3(Mem1193[r21_1187:word32], 0<32>, r3_1189, out r5_1204)
	r20_1208 = r20_1171 + r4_1203
	r8_1212 = CONVERT(r20_1208 <u r4_1203, bool, word32) + r5_1204
	r2_1227 = __umoddi3(SEQ(r8_1212, r20_1208), 0x3B9ACA00<64>, r13, out r3_1228, out r4_1229, out r8_1222, out r11_8443, out r12_1226)
	Mem1235[r21_1187:word32] = r4_1229
	r18_1150 = r8_1212
	r2 = __udivdi3(SEQ(r8_1222, r20_1208), 0x3B9ACA00<64>, r2_1227, r3_1228, r12_1226, out r3_1189, out r4_1244, out r5_1179, out r6_8444, out r7_8445, out r8_8446, out r9_1140, out r11, out r13)
	r21_1187 = r21_1187 + 0xFFFFFFFC<32>
	r20_1171 = r4_1244
	r16_1178 = r2
	goto l00409586
l004095EC:
	r30_1038 = r7_1263
	goto l00409594
l004095F0:
	r4_1301 = 9<32>
	branch r5_1179 < 0xFFFFFFF7<32> l004095FE
l004095FA:
	r4_1301 = -r5_1179
l004095FE:
	r6_1306 = 1<32> << r4_1301
	r3_1307 = 0x3B9ACA00<32> >> r4_1301
	r6_1308 = r6_1306 + 0xFFFFFFFF<32>
	r7_1311 = r23_1036
	r21_1312 = 0<32>
l00409614:
	branch r7_1311 <u r30_1038 l0040964C
l00409618:
	r7_1328 = Mem1315[r23_1036:word32]
	branch r7_1328 != 0<32> l0040961E
l0040961C:
	r23_1036 = r23_1036 + 4<32>
l0040961E:
	branch r21_1312 == 0<32> l00409628
l00409622:
	Mem1332[r30_1038:word32] = r21_1312
	r30_1038 = r30_1038 + 4<32>
l00409628:
	branch (r7_1328 ^ 0x66<32>) == 0<32> l00409634
l00409630_1:
	r6_1308 = r23_1036
l00409634:
	branch r20_1296 >= r30_1038 - r6_1308 >> 2<32> l00409646
l00409642:
	r30_1038 = r6_1308 + (r20_1296 << 2<32>)
l00409646:
	r5_1179 = r5_1179 + r4_1301
	r7_1297 = 1<32>
	goto l004094A4
l0040964C:
	r8_1316 = Mem1315[r7_1311:word32]
	Mem1321[r7_1311:word32] = (r8_1316 >>u r4_1301) + r21_1312
	r21_1312 = (r8_1316 & r6_1306 + 0xFFFFFFFF<32>) *s r3_1307
	r7_1311 = r7_1311 + 4<32>
	goto l00409614
l00409664:
	r5_1179 = 0xA<32>
	r21_1384 = r21_1384 + 1<32>
	r7_1297 = r7_1297 *s 0xA<32>
	goto l004094C4
l0040966C:
	r6_1467 = 0xA<32>
	r7_1468 = r7_1468 + 1<32>
	r8_1465 = r8_1465 *s 0xA<32>
	goto l0040951A
l00409674:
	r4_r5_8195 = CONVERT(Mem1391[0x4120244<32>:word32], uint32, uint64) (alias)
	goto l00409558
l00409680:
	r6_1514 = Mem1391[0x4120254<32>:word32]
l00409688:
	r18_1150 = dwLoc02D0_3800
	branch r9_1140 == 0<32> l004096A4
l0040968E:
	r18_1150 = dwLoc02C8_3803
	branch Mem1391[r9_1140:byte] != 0x2D<8> l004096A4
l00409698:
l004096A4:
	r2 = r2 - r7_1477
	Mem1589[r20_1466:word32] = r2
	__adddf3(r4_r5_8195, CONVERT(r6_1514, uint32, uint64))
	r16_1178 = r5_1567
	r19_1607 = r4_1596
	branch __nedf2(CONVERT(r6_1514, uint32, uint64)) == 0<32> l004096FC
l004096D0:
	r16_1178 = r2
	r18_1150 = r8_1465
	r7_1618 = r8_1465 + r2
l004096D8:
	Mem1621[r20_1466:word32] = r7_1618
	r7_1623 = Mem1621[r20_1466:word32]
	branch r7_1623 >u 0x3B9AC9FF<32> l00409752
l004096E6:
	r21_1638 = r7_1623 - r23_1036
	r6_1637 = Mem1621[r23_1036:word32]
	r7_1639 = 0xA<32>
	r21_1384 = (r21_1638 >> 2<32>) + ((r21_1638 >> 2<32>) << 3<8>)
l004096F8:
	branch r6_1637 >=u r7_1639 l00409766
l004096FC:
	r20_1650 = r20_1466 + 4<32>
	r7_1440 = CONVERT(r20_1650 <u r30_1038, bool, word32)
	branch r7_1440 == 0<32> l00409706
l00409702_1:
	r30_1038 = r20_1650
l00409706:
	branch r23_1036 >=u r30_1038 l00409712
l0040970A:
	r7_1440 = r30_1038 + 0xFFFFFFFC<32>
	branch Mem1663[r7_1440:word32] == 0<32> l0040976E
l00409712:
	r17_1671 = r7_1046
	branch r7_1440 != 0x27<32> l004097B0
l00409718:
	r7_1674 = 1<32>
	branch r18_1150 != 0<32> l0040971E
l0040971A_1:
	r18_1150 = 1<32>
l0040971E:
	branch r21_1384 >= r18_1150 l00409772
l00409722:
	r7_1674 = 0xFFFFFFFC<32>
	branch r21_1384 < 0xFFFFFFFC<32> l00409772
l0040972A:
	r7_1674 = r21_1384 + 1<32>
	r19_1607 = r19_1607 + 0xFFFFFFFF<32>
	r18_1150 = r18_1150 - r7_1674
l00409732:
	branch !__bit<word32,word32>(r7_1046, 3<32>) l004097B0
l00409736:
	branch r23_1036 >=u r30_1038 l00409742
l0040973A:
	r6_1752 = Mem1663[r30_1038 - 4<i32>:word32]
	r7_1674 = 0xA<32>
	branch r6_1752 != 0<32> l0040977E
l00409742:
	r22_1017 = 9<32>
	goto l00409784
l00409748:
	r6_1514 = Mem1391[0x412025C<32>:word32]
	goto l00409688
l00409752:
	r20_1466 = r20_1466 + 0xFFFFFFFC<32>
	Mem1626[r20_1466 + 1<i32>:word32] = r11
	branch r20_1466 >=u r23_1036 l00409760
l0040975A:
	Mem1628[r23_1036 - 4<i32>:word32] = 0<32>
	r23_1036 = r23_1036 + 0xFFFFFFFC<32>
l00409760:
	r7_1618 = Mem1631[r20_1466:word32] + 1<32>
	goto l004096D8
l00409766:
	r21_1384 = r21_1384 + 1<32>
	r7_1639 = r7_1639 *s 0xA<32>
	goto l004096F8
l0040976E:
	r30_1038 = r7_1440
	goto l00409706
l00409772:
	r19_1607 = r19_1607 + 0xFFFFFFFE<32>
	r18_1150 = r18_1150 + 0xFFFFFFFF<32>
	goto l00409732
l00409778:
	r22_1017 = r22_1017 + 1<32>
	r7_1674 = r7_1674 *s 0xA<32>
l0040977E:
	branch r6_1752 %u r7_1674 == 0<32> l00409778
l00409784:
	r7_1787 = (r30_1038 - r7_1674 >> 2<32>) + 0xFFFFFFFF<32>
	r17_1671 = dwLoc02D8_3829
	r7_1788 = r7_1787 * 9<32>
	branch (r19_1607 | 0x20<32>) != 0x26<32> l00409858
l0040979C:
	r22_1798 = r7_1788 - r22_1017
	branch r22_1798 >= 0<32> l004097A8
l004097A4_1:
	r22_1798 = 0<32>
l004097A8:
	branch r22_1798 >= r18_1150 l004097B0
l004097AC_1:
	r18_1150 = r22_1798
l004097B0:
	r6_1810 = 1<32>
	branch r18_1150 != 0<32> l004097B8
l004097B4:
	r6_1810 = __ext<word32,word32>(r17_1671, 3<32>, 1<32>)
l004097B8:
	r5 = 0x7FFFFFFE<32> - r6_1810
	branch r5 < r18_1150 l00408D8E
l004097C4:
	r22_1822 = r18_1150 + 1<32> + r6_1810
	r20_1827 = r19_1607 | 0x20<32>
	r7_1828 = 0x7FFFFFFF<32> - r22_1822
	branch r20_1827 != 0x26<32> l0040985C
l004097D8:
	branch r7_1828 < r21_1384 l00408D8E
l004097DC:
	branch r21_1384 <= 0<32> l004097E2
l004097E0:
	r22_1822 = r22_1822 + r21_1384
l004097E2:
	branch 0x7FFFFFFF<32> - r6_1810 < r22_1822 l00408D8E
l004097F0:
	r19_1952 = r6_1810 + r22_1822
	pad(r16_1178, 0x20<32>, r6_1810, r19_1952, dwLoc02E0_3523, out r3_8341, out r4_8342, out r5_2008, out r6_2009, out r7_8343, out r11_8344, out r13_8345, out r14_8346)
	out(r16_1178, r5_2008, r6_2009, out r3_8347, out r4_8348, out r5_8349, out r6_2018, out r7_8350, out r11_8351, out r13_8352, out r14_8353, out r17_8354)
	pad(r16_1178, 0x30<32>, r6_2018, r19_1952, dwLoc02E0_3523 ^ 0x100000<32>, out r3_8355, out r4_8356, out r5_8357, out r6_8358, out r7_2052, out r11_8359, out r13_2044, out r14_8360)
	branch r20_1827 != 0x26<32> l0040991A
l0040981C:
	branch r23_1036 >=u r7_2052 l00409826
l00409822_1:
	r7_2052 = r23_1036
l00409826:
	r21 = r7_2052
	r7_2263 = r7_2052
l0040982A:
	branch r7_2263 >=u r21 l004098B2
l00409830:
	branch r18_1150 != 0<32> l00409836
l00409832:
	branch __bit<word32,word32>(dwLoc02D8_3829, 3<32>) l00409840
l00409836:
	out(r16_1178, 0x0041133C<p32>, 1<32>, out r3_8365, out r4_8366, out r5_8367, out r6_8368, out r7_8369, out r11_8370, out r13_2044, out r14_8371, out r17_8372)
l00409840:
	branch r21 >=u r30_1038 l00409848
l00409844:
	branch r18_1150 > 0<32> l004098E8
l00409848:
	pad(r16_1178, 0x30<32>, r18_1150 + 9<32>, 9<32>, 0<32>, out r3_8373, out r4_8374, out r5_8375, out r6_2240, out r7_8376, out r11_8377, out r13_8378, out r14_8379)
	goto l004090C2
l00409858:
	r7_1788 = r7_1787 * 9<32> + r21_1384
	goto l0040979C
l0040985C:
	r6_1833 = r21_1384 >> 0x1F<32>
	r4_1841 = (r6_1833 ^ r21_1384) - r6_1833
	r2 = fn004099EA(r4_1841, r4_1841 >> 0x1F<32>, fp - 0x268<32>, r13, out r4_1904, out r7_1907, out r8_1908, out r11, out r13)
	r18_1150 = fp - 0x268<32>
l0040987A:
	branch r8_1908 - r4_1904 < 2<32> l004098AA
l00409882:
	Mem1923[r4_1904 - 2<i32>:int8] = SLICE(r19_1607, int8, 0)
	r6_1920 = 0x2D<32>
	r5 = 0x2B<32>
	branch r21_1384 < 0<32> l00409892
l0040988E_1:
	r6_1920 = 0x2B<32>
l00409892:
	r6_1810 = r4_1904 + 0xFFFFFFFE<32>
	Mem1931[r4_1904 - 1<i32>:int8] = SLICE(r6_1920, int8, 0)
	r8_1930 = r8_1908 - r6_1810
	branch r7_1907 < r8_1930 l00408D8E
l004098A6:
	r22_1822 = r22_1822 + r8_1930
	goto l004097E2
l004098AA:
	r4_1904 = r4_1904 + 0xFFFFFFFF<32>
	Mem1917[r4_1904:byte] = 0x30<8>
	goto l0040987A
l004098B2:
	fn004099EA(Mem2261[r21:word32], 0<32>, fp - 0x25F<32>, r13_2044, out r4_2279, out r7_8361, out r8_8362, out r11_8363, out r13_8364)
	r5_2285 = r4_2279
	branch r7_2052 != r21 l004098D6
l004098C2:
	branch r4_2279 != fp - 0x25F<32> l004098DC
l004098C6:
	r5_2285 = fp - 0x260<32>
	goto l004098DC
l004098D0:
	r5_2285 = r5_2285 + 0xFFFFFFFF<32>
	Mem2292[r5_2285:byte] = 0x30<8>
l004098D6:
	branch fp - 0x268<32> <u r5_2285 l004098D0
l004098DC:
	out(r16_1178, r5_2285, fp - 0x25F<32> - r5_2285, out r3_8428, out r4_8429, out r5_8430, out r6_8431, out r7_2263, out r11_8432, out r13_2044, out r14_8433, out r17_8434)
	r21 = r21 + 4<32>
	goto l0040982A
l004098E8:
	fn004099EA(Mem2355[r21:word32], 0<32>, fp - 0x25F<32>, r13_2044, out r4_2370, out r7_8380, out r8_8381, out r11_8382, out r13_8383)
	r5_2376 = r4_2370
l004098F4:
	branch fp - 0x268<32> <u r5_2376 l00409912
l004098FA:
	r7_2385 = 9<32>
	branch r18_1150 >= 0xA<32> l00409904
l00409900_1:
	r7_2385 = r18_1150
l00409904:
	out(r16_1178, r5_2376, r7_2385, out r3_8403, out r4_8404, out r5_8405, out r6_8406, out r7_8407, out r11_8408, out r13_2044, out r14_8409, out r17_8410)
	r21 = r21 + 4<32>
	r18_1150 = r18_1150 + 0xFFFFFFF7<32>
	goto l00409840
l00409912:
	r5_2376 = r5_2376 + 0xFFFFFFFF<32>
	Mem2382[r5_2376:byte] = 0x30<8>
	goto l004098F4
l0040991A:
	branch r23_1036 <u r30_1038 l00409922
l0040991E:
	r30_1038 = r23_1036 + 4<32>
l00409922:
	r21 = r23_1036
l00409924:
	branch r21 >=u r30_1038 l0040992C
l00409928:
	branch r18_1150 >= 0<32> l00409948
l0040992C:
	pad(r16_1178, 0x30<32>, r18_1150 + 0x12<32>, 0x12<32>, 0<32>, out r3_8384, out r4_8385, out r5_8386, out r6_8387, out r7_2228, out r11_8388, out r13_8389, out r14_8390)
	out(r16_1178, r7_2228, fp - 0x268<32> - r7_2228, out r3_8391, out r4_8392, out r5_8393, out r6_2240, out r7_8394, out r11_8395, out r13_8396, out r14_8397, out r17_8398)
	goto l004090C2
l00409948:
	fn004099EA(Mem2082[r21:word32], 0<32>, fp - 0x25F<32>, r13_2044, out r4_2096, out r7_8399, out r8_8400, out r11_8401, out r13_8402)
	r5_2102 = r4_2096
	branch r4_2096 != fp - 0x25F<32> l00409960
l00409958:
	r5_2102 = fp - 0x260<32>
l00409960:
	r22_2107 = r5_2102
	branch r21 != r23_1036 l0040998A
l00409966:
	out(r16_1178, r5_2102, 1<32>, out r3_8411, out r4_8412, out r5_8413, out r6_8414, out r7_8415, out r11_8416, out r13_8417, out r14_8418, out r17_2133)
	r22_2107 = r5_2102 + 1<32>
	branch r18_1150 != 0<32> l00409976
l00409972:
	branch __bit<word32,word32>(r17_2133, 3<32>) l00409990
l00409976:
	out(r16_1178, 0x0041133C<p32>, 1<32>, out r3_8419, out r4_8420, out r5_8421, out r6_8422, out r7_8423, out r11_8424, out r13_8425, out r14_8426, out r17_8427)
	goto l00409990
l00409982:
	r22_2107 = r22_2107 + 0xFFFFFFFF<32>
	Mem2116[r22_2107:byte] = 0x30<8>
l0040998A:
	branch fp - 0x268<32> <u r22_2107 l00409982
l00409990:
	r20_2167 = fp - 0x25F<32> - r22_2107
	r7_2172 = r20_2167
	branch r20_2167 < r18_1150 l0040999E
l0040999A_1:
	r7_2172 = r18_1150
l0040999E:
	out(r16_1178, r22_2107, r7_2172, out r3_8435, out r4_8436, out r5_8437, out r6_8438, out r7_8439, out r11_8440, out r13_2044, out r14_8441, out r17_8442)
	r21 = r21 + 4<32>
	r18_1150 = r18_1150 - r20_2167
	goto l00409924
l004099AC:
	r21 = fp - 0x228<32>
	r19_491 = fp - 0x228<32>
	goto l00408FAC
l004099B4:
	r4 = r7_140 + (r16_3141 << 3<8>)
	r16_3141 = r16_3141 + 1<32>
	r5 = pop_arg(r5, r6, out r6, out r7_140)
	branch r16_3141 == 0xA<32> l004099CA
l004099C6:
	goto l00408BAE
l004099CA:
	r7_140 = 1<32>
l004099CC:
	goto l00408E04
l004099D2:
	r19_2924 = fp - 0x228<32> - r21
	r23_2922 = 0x00411FF4<p32>
	branch r18_213 >= r19_2924 l004099E4
l004099E0_1:
	r18_213 = r19_2924
l004099E4:
	r30_2929 = r18_213
	goto l00408FC8
printf_core_exit:


word32 fn004099EA(word32 r4, word32 r5, word32 r6, word32 r13, word32 & r4Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r13:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-printf_core r13:[0..31]-printf_core r2:[0..31]-printf_core r4:[0..31]-printf_core r7:[0..31]-printf_core r8:[0..31]-printf_core
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004099EA_entry:
l004099EA:
l004099EA_thunk_fmt_u:
	r2_14 = fmt_u(r4, r5, r6, r13, out r4_17, out r5_28, out r7_20, out r8_21, out r11_11, out r13_13)
	r4Out = r4_17
	r7Out = r7_20
	r8Out = r8_21
	r11Out = r11_11
	r13Out = r13_13
	return r2_14
fn004099EA_exit:


word32 vfprintf(word32 r4, word32 r5, word32 r6, word32 & r4Out, word32 & r5Out, word32 & r7Out, word32 & r11Out, word32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401594
//      fn004032FE
//      vsnprintf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-printf r14:[0..31]-printf r3:[0..31]-printf r4:[0..31]-vsnprintf r5:[0..31]-vsnprintf r7:[0..31]-vsnprintf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
vfprintf_entry:
l004099EE:
	memcpy(fp - 0xF8<32>, r6, 0x10<32>, out r3_390, out r5_391, out r6_392, out r7_393, out r8_394, out r9_395, out r11_396, out r12_397, out r13_398, out r14_399)
	memset(&tLocE8, 0<32>, 0x28<32>, out r6_400, out r7_401, out r8_402, out r10_403)
	r17_168 = 0xFFFFFFFF<32>
	r2_146 = printf_core(memcpy(fp - 0x108<32>, fp - 0xF8<32>, 0x10<32>, out r3_404, out r5_405, out r6_406, out r7_407, out r8_408, out r9_409, out r11_64, out r12_410, out r13_57, out r14_411), 0<32>, r5, fp - 0x108<32>, r11_64, r13_57, r5, out r3_151, out r4_79, out r5_214, out r7_212, out r11_160, out r13_89, out r14_163)
	branch r4_79 < 0<32> l00409AA8
l00409A28:
	r20_107 = 0<32>
	branch Mem17[r4 + 76<i32>:word32] < 0<32> l00409A38
l00409A32:
	r2_146 = __lockfile(r4, out r3_412, out r4_101, out r5_413, out r8_414, out r9_415)
	r20_107 = r4_101
l00409A38:
	r7_110 = Mem17[r4:word32]
	branch Mem17[r4 + 74<i32>:int8] > 0<i8> l00409A4C
l00409A46:
	__ins<word32,word32>(r7_110, 0<32>, 5<32>, 1<32>)
l00409A4C:
	r19_119 = 0<32>
	branch Mem117[r4 + 48<i32>:word32] != 0<32> l00409A64
l00409A52:
	r19_119 = Mem117[r4 + 44<i32>:word32]
l00409A64:
	printf_core(r2_146, r4, r5, fp - 0x108<32>, r11_160, r13_89, r5, out r3_151, out r4_152, out r5_416, out r7_417, out r11_160, out r13_418, out r14_163)
	r17_168 = r4_152
	branch r19_119 == 0<32> l00409A90
l00409A76:
	call Mem170[r4 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem170,r4:r4,r5:0<32>,r6:0<32>,Stack +0028:tLocE8
		defs: r11:r11_192,r14:r14_194,r3:r3_198
	branch Mem170[r4 + 20<i32>:word32] != 0<32> l00409A88
l00409A84_1:
	r17_168 = 0xFFFFFFFF<32>
l00409A88:
l00409A90:
	r7_212 = Mem211[r4:word32]
	r5_214 = r7_212 & 0x20<32>
	branch (r7_212 & 0x20<32>) == 0<32> l00409A9E
l00409A9A_1:
	r17_168 = 0xFFFFFFFF<32>
l00409A9E:
	branch r20_107 == 0<32> l00409AA8
l00409AA4:
	__unlockfile(r4, out r4_419, out r5_214, out r6_420, out r7_212, out r8_421, out r9_422)
l00409AA8:
	r4Out = r17_168
	r5Out = r5_214
	r7Out = r7_212
	r11Out = r11_160
	r14Out = r14_163
	return r3_151
vfprintf_exit:


void sn_write(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
sn_write_entry:
l00409AB0:
	r16_23 = Mem15[r4 + 84<i32>:word32]
	r5_25 = Mem15[r4 + 28<i32>:word32]
	r6_26 = Mem15[r16_23 + 4<i32>:word32]
	r7_27 = Mem15[r4 + 20<i32>:word32] - r5_25
	branch r6_26 <u r7_27 l00409ACA
l00409AC6_1:
	r6_26 = r7_27
l00409ACA:
	branch r6_26 == 0<32> l00409AE0
l00409ACE:
	memcpy(Mem15[r16_23:word32], r5_25, r6_26, out r3_221, out r5_222, out r6_223, out r7_224, out r8_225, out r9_226, out r11_227, out r12_228, out r13_229, out r14_230)
l00409AE0:
	r7_60 = Mem59[r16_23 + 4<i32>:word32]
	branch r6 >=u r7_60 l00409AEA
l00409AE6_1:
	r7_60 = r6
l00409AEA:
	branch r7_60 == 0<32> l00409B02
l00409AEE:
	memcpy(Mem59[r16_23:word32], r5, r7_60, out r3_231, out r5_232, out r6_233, out r7_234, out r8_235, out r9_236, out r11_237, out r12_238, out r13_239, out r14_240)
l00409B02:
	Mem104[Mem99[r16_23:word32]:byte] = 0<8>
	return
sn_write_exit:


word32 vsnprintf(word32 r4, word32 r5, word32 r6, word32 r7, word32 & r5Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      snprintf
//      vsprintf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4:[0..31]-snprintf r5:[0..31]-vsprintf r7:[0..31]-vsprintf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
vsnprintf_entry:
l00409B10:
	r17_21 = fp - 0xCC<32>
	branch r5 == 0<32> l00409B22
l00409B1E_1:
	r17_21 = r4
l00409B22:
	memcpy(fp - 0xC0<32>, r7, 0x10<32>, out r3_176, out r5_177, out r6_178, out r7_179, out r8_180, out r9_181, out r11_182, out r12_183, out r13_184, out r14_185)
	branch r5 == 0<32> l00409B30
l00409B2C:
l00409B30:
	r5_61 = memset(&tLocB0, 0<32>, 0x90<32>, out r6_186, out r7_187, out r8_188, out r10_189)
	Mem65[&tLocB0 + 36<i32>:word32] = 0x00409AB0<p32>
	Mem68[&tLocB0 + 75<i32>:byte] = 0xFF<8>
	Mem70[&tLocB0 + 44<i32>:word32] = fp - 208<i32>
	Mem71[&tLocB0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	branch r5 < 0<32> l00409B64
l00409B58:
	Mem89[r17_21:byte] = 0<8>
	vfprintf(&tLocB0, r6, fp - 0xC0<32>, out r4_105, out r5_106, out r7_108, out r11_191, out r14_192)
	r5Out = r5_106
	r7Out = r7_108
	return r4_105
l00409B64:
	__errno_location(out r4_190)
	r5Out = r5_61
	r7Out = 0x4B<32>
	return 0xFFFFFFFF<32>
vsnprintf_exit:


word32 vsprintf(word32 r4, word32 r5, word32 r6, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sprintf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r5:[0..31]-sprintf r7:[0..31]-sprintf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
vsprintf_entry:
l00409B70:
	memcpy(fp - 32<i32>, r6, 0x10<32>, out r3_64, out r5_65, out r6_66, out r7_67, out r8_68, out r9_69, out r11_70, out r12_71, out r13_72, out r14_73)
	vsnprintf(r4, 0x7FFFFFFF<32>, r5, fp - 32<i32>, out r5_49, out r7_51)
	r7Out = r7_51
	return r5_49
vsprintf_exit:


void do_read(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
do_read_entry:
l00409B90:
l00409B90_thunk___string_read:
	__string_read(r4, r5, r6)
	return
do_read_exit:


word32 __isoc99_vsscanf(word32 r0, word32 r4, word32 r5, word32 r6, word32 r19, word32 r20, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_sscanf
// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r3:[0..31]-__isoc99_sscanf r4:[0..31]-__isoc99_sscanf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__isoc99_vsscanf_entry:
l00409B94:
	memcpy(&tLocB0, r6, 0x10<32>, out r3_84, out r5_85, out r6_86, out r7_87, out r8_88, out r9_89, out r11_90, out r12_91, out r13_92, out r14_93)
	memset(&tLocA0, 0<32>, 0x90<32>, out r6_94, out r7_95, out r8_96, out r10_97)
	Mem45[&tLocA0 + 32<i32>:word32] = 0x00409B90<p32>
	Mem49[&tLocA0 + 44<i32>:word32] = r4
	Mem50[&tLocA0 + 84<i32>:word32] = r4
	Mem51[&tLocA0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	r3_67 = __isoc99_vfscanf(r0, &tLocA0, r5, &tLocB0, r19, r20, out r4_68)
	r4Out = r4_68
	return r3_67
__isoc99_vsscanf_exit:


word32 atoi(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00400832
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__synccall
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
atoi_entry:
l00409BD0:
	r7_11 = r4
	goto l00409BFE
l00409BD4:
	r5_12 = 1<32>
l00409BD6:
	r7_11 = r7_11 + 1<32>
l00409BD8:
	r4_17 = 0<32>
	goto l00409BEA
l00409BDC:
	r5_12 = 0<32>
	goto l00409BD6
l00409BE0:
	r7_11 = r7_11 + 1<32>
	r4_17 = r4_17 *s 0xA<32> - (r6_20 + 0xFFFFFFD0<32>)
l00409BEA:
	r6_20 = CONVERT(Mem0[r7_11:byte], byte, word32)
	branch r6_20 <u 0x3A<32> l00409BE0
l00409BF4:
	branch r5_12 != 0<32> l00409C18
l00409BF6:
	return -r4_17
l00409BFC:
	r7_11 = r7_11 + 1<32>
l00409BFE:
	r6_8 = CONVERT(Mem0[r7_11:byte], byte, word32)
	branch r6_8 == 0x20<32> l00409BFC
l00409C04:
	branch r6_8 <u 0xE<32> l00409BFC
l00409C0C:
	branch r6_8 == 0x2B<32> l00409BDC
l00409C10:
	branch r6_8 == 0x2D<32> l00409BD4
l00409C14:
	r5_12 = 0<32>
	goto l00409BD8
l00409C18:
	return r4_17
atoi_exit:


word32 shl(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      qsort
//      fn00409F48
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7:[0..31]-fn00409F48
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
shl_entry:
l00409C20:
	branch r5 <u 0x20<32> l00409C2E
l00409C24:
	r5 = r5 + 0xFFFFFFE0<32>
l00409C2E:
	return Mem14[r4 + 4<i32>:word32] << r5 | Mem14[r4:word32] >>u -r5
shl_exit:


word32 shr(word32 r4, word32 r5, word32 & r7Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      trinkle
//      fn00409F4C
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5:[0..31]-trinkle r7:[0..31]-trinkle r8:[0..31]-trinkle
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
shr_entry:
l00409C4C:
	branch r5 <u 0x20<32> l00409C5A
l00409C50:
	r5 = r5 + 0xFFFFFFE0<32>
l00409C5A:
	r6_13 = Mem12[r4 + 4<i32>:word32]
	r8_17 = r6_13 << -r5
	r7Out = Mem12[r4:word32] >>u r5 | r8_17
	r8Out = r8_17
	return r6_13 >>u r5
shr_exit:


word32 cycle(word32 r4, word32 r5, word32 r6, word32 & r4Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sift
//      trinkle
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-sift r12:[0..31]-sift r2:[0..31]-sift r4:[0..31]-sift r7:[0..31]-sift r8:[0..31]-sift
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
cycle_entry:
l00409C78:
	r18_22 = r4
	branch r6 < 2<32> l00409C8E
l00409C84:
	r22_27 = r5 + (r6 << 2<8>)
	Mem28[r22_27:word32] = fp - 288<i32>
l00409C8C:
	branch r18_22 != 0<32> l00409C92
l00409C8E:
	r4Out = r4
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l00409C92:
	r7_31 = 0x100<32>
	branch r18_22 >=u 0x101<32> l00409C9E
l00409C9A_1:
	r7_31 = r18_22
l00409C9E:
	memcpy(Mem36[r22_27:word32], Mem36[r5:word32], r7_31, out r3_200, out r5_201, out r6_202, out r7_203, out r8_204, out r9_205, out r11_206, out r12_207, out r13_208, out r14_209)
	r17_44 = r5
	r21_45 = 0<32>
l00409CAE:
	r4 = Mem64[r17_44:word32]
	r2 = memcpy(r4, Mem64[r17_44 + 4<i32>:word32], r7_31, out r3_210, out r5_211, out r6_212, out r7_213, out r8, out r9_214, out r11, out r12, out r13_215, out r14_216)
	r21_45 = r21_45 + 1<32>
	r7 = Mem64[r17_44:word32] + r7_31
	r17_44 = r17_44 + 4<32>
	branch r6 != r21_45 l00409CAE
l00409CC6:
	r18_22 = r18_22 - r7_31
	goto l00409C8C
cycle_exit:


word32 sift(word32 r4, word32 r5, word32 r7, word32 r8, word32 & r4Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      trinkle
//      qsort
// MayUse:  r4:[0..31] r5:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-trinkle r12:[0..31]-trinkle r2:[0..31]-trinkle r4:[0..31]-trinkle r7:[0..31]-trinkle r8:[0..31]-trinkle
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
sift_entry:
l00409CCA:
	Mem32[&tLoc0104:word32] = r4
	r16_106 = r4
	r17_100 = r7
	r18_108 = 1<32>
	goto l00409CFA
l00409CDA:
	r17_44 = Mem41[&tLoc0104:word32]
	branch addrcmp(r4_50, r19_39, out r7_165) < 0<32> l00409D1E
l00409CE4:
	r2_71 = cycle(r5, &tLoc0104, r18_108, out r4_74, out r7_77, out r8_78, out r11_66, out r12_67)
	r4Out = r4_74
	r7Out = r7_77
	r8Out = r8_78
	r11Out = r11_66
	r12Out = r12_67
	return r2_71
l00409CF0:
	Mem102[&tLoc0104 + r18_108 * 4<32>:word32] = r16_106
	r17_100 = r17_44 + 0xFFFFFFFF<32>
l00409CF8:
	r18_108 = r18_108 + 1<32>
l00409CFA:
	branch r17_100 < 2<32> l00409CE4
l00409CFE:
	r7_36 = -r5
	r17_44 = Mem41[&tLoc0104:word32]
	r16_106 = r16_106 + (r7_36 - Mem41[r8 + (r17_100 + 0x3FFFFFFE<32>) * 4<32>:word32])
	r19_39 = r16_106 + r7_36
	r4_50 = addrcmp(r4, r16_106, out r7_164)
	branch r4_50 >= 0<32> l00409CDA
l00409D1E:
	r4 = addrcmp(r16_106, r19_39, out r7_166)
	branch r4 >= 0<32> l00409CF0
l00409D26:
	Mem105[&tLoc0104 + r18_108 * 4<32>:word32] = r19_39
	r17_100 = r17_44 + 0xFFFFFFFE<32>
	r16_106 = r19_39
	goto l00409CF8
sift_exit:


word32 pntz(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      trinkle
//      qsort
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-trinkle
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
pntz_entry:
l00409D32:
	r5_6 = Mem0[r4:word32]
	r6_15 = CONVERT(Mem0[0x00413220<p32> + ((r5_6 + 0xFFFFFFFF<32> & 1<32> - r5_6) *s 0x76BE629<32> >>u 0x1B<32>):byte], byte, word32)
	branch r6_15 != 0<32> l00409D70
l00409D54:
	r6_16 = Mem0[r4 + 4<i32>:word32]
	r6_21 = CONVERT(Mem0[0x00413220<p32> + ((-r6_16 & r6_16) *s 0x76BE629<32> >>u 0x1B<32>):byte], byte, word32)
	r4_22 = r6_21 + 0x20<32>
	branch r6_21 != 0<32> l00409D6E
l00409D6A_1:
	r4_22 = 0<32>
l00409D6E:
	r6_15 = r4_22
l00409D70:
	return r6_15
pntz_exit:


word32 trinkle(word32 r4, word32 r5, word32 r7, word32 r8, word32 r9, word32 r10, word32 & r4Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      qsort
// MayUse:  r10:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-qsort r12:[0..31]-qsort r2:[0..31]-qsort r4:[0..31]-qsort r7:[0..31]-qsort r8:[0..31]-qsort
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
trinkle_entry:
l00409D74:
	r7_108 = Mem23[r7 + 4<i32>:word32]
	Mem41[&tLoc011C:word32] = Mem23[r7:word32]
	Mem42[&tLoc011C + 4<i32>:word32] = r7_108
	Mem43[&tLoc0114:word32] = r4
	r18_104 = r8
	r19_37 = r9
	r20_40 = 1<32>
	r5_106 = r5
	goto l00409DC6
l00409D92:
	r17_150 = Mem45[&tLoc0114:word32]
	r16_58 = r17_150 - Mem45[r10 + r18_104 * 4<32>:word32]
	r30_55 = r18_104 << 2<32>
	r4 = addrcmp(r16_58, r5_106, out r7_108)
	branch r4 <= 0<32> l00409DD0
l00409DA6:
	branch r19_37 == 0<32> l00409DE6
l00409DA8:
	Mem91[&tLoc0114 + r20_40 * 4<32>:word32] = r16_58
	r4_94 = pntz(&tLoc011C)
	r19_37 = 0<32>
	r20_40 = r20_40 + 1<32>
	r4 = &tLoc011C
	r18_104 = r18_104 + r4_94
	r5_106 = shr(&tLoc011C, r4_94, out r7_108, out r8)
l00409DC6:
	branch r7_108 != 1<32> l00409D92
l00409DCC:
	r17_150 = Mem45[&tLoc011C + 4<i32>:word32]
	branch r7_108 != 0<32> l00409D92
l00409DD0:
	branch r19_37 != 0<32> l00409DE2
l00409DD2:
	cycle(r5, &tLoc0114, r20_40, out r4_339, out r7_340, out r8_341, out r11_342, out r12_343)
	r2 = sift(r17_150, r5, r18_104, r10, out r4, out r7_108, out r8, out r11, out r12)
l00409DE2:
	r4Out = r4
	r7Out = r7_108
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l00409DE6:
	branch r18_104 < 2<32> l00409DA8
l00409DEA:
	r4_70 = -r5
	r19_75 = r17_150 + (r4_70 - Mem45[(r10 + r30_55) - 8<i32>:word32])
	branch addrcmp(r17_150 + r4_70, r16_58, out r7_344) >= 0<32> l00409DD2
l00409E04:
	branch addrcmp(r19_75, r16_58, out r7_345) < 0<32> l00409DA8
l00409E0C:
	goto l00409DD2
trinkle_exit:


word32 qsort(word32 r4, word32 r5, word32 r6, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_name r12:[0..31]-__lookup_name r2:[0..31]-__lookup_name r4:[0..31]-__lookup_name r8:[0..31]-__lookup_name
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
qsort_entry:
l00409E0E:
	Mem32[&tLocF8:word32] = 1<32>
	Mem33[&tLocF8 + 4<i32>:word32] = 0<32>
	r17_166 = r6
	r5_30 = r5 *s r6
	branch r5_30 == 0<32> l00409EEC
l00409E20:
	r19_172 = r5_30 - r6
	Mem39[&dwLocF0:word32] = r6
	r6_35 = &dwLocF0
	r22_37 = r4 + r19_172
l00409E2E:
	r7_174 = Mem42[r6_35:word32] + Mem42[r6_35 + 4<i32>:word32] + r6
	Mem49[&tLocF8:word32] = r7_174
	r6_35 = r6_35 + 4<32>
	branch r7_174 <u r5_30 l00409E2E
l00409E3E:
	r23_52 = -r6
	r18_169 = r4
	r16_125 = 1<32>
l00409E46:
	branch r18_169 <u r22_37 l00409E5A
l00409E4A:
	r2 = trinkle(r18_169, r17_166, &tLocF8, r16_125, 0<32>, &dwLocF0, out r4, out r7_187, out r8, out r11, out r12)
	goto l00409EDE
l00409E5A:
	r17_60 = Mem59[&tLocF8:word32]
	branch (r7_174 & 3<32>) != 3<32> l00409E80
l00409E62:
	sift(r18_169, r17_60, r16_125, &dwLocF0, out r4_513, out r7_514, out r8_515, out r11_516, out r12_517)
	r16_125 = r16_125 + 2<32>
	r7_123 = fn00409F4C(&tLocF8, 2<32>, out r8_518)
l00409E72:
	r17_166 = Mem59[&tLocF8:word32]
	r7_174 = r7_123 | 1<32>
	Mem175[&tLocF8:word32] = r7_174
	r18_169 = r18_169 + r17_166
	r19_172 = r19_172 - r17_166
	goto l00409E46
l00409E80:
	r30_64 = r16_125 + 0xFFFFFFFF<32>
	branch Mem59[fp - 0x30<32> + (r30_64 << 2<8>) - 192<i32>:word32] <u r19_172 l00409EAE
l00409E92:
	trinkle(r18_169, r17_60, &tLocF8, r16_125, 0<32>, &dwLocF0, out r4_530, out r7_531, out r8_532, out r11_533, out r12_534)
l00409EA0:
	branch r16_125 != 1<32> l00409EB8
l00409EA4:
	r7_123 = shl(&tLocF8, r16_125)
	r16_125 = 0<32>
	goto l00409E72
l00409EAE:
	sift(r18_169, r17_60, r16_125, &dwLocF0, out r4_525, out r7_526, out r8_527, out r11_528, out r12_529)
	goto l00409EA0
l00409EB8:
	r7_123 = fn00409F48(&tLocF8, r30_64)
	r16_125 = 1<32>
	goto l00409E72
l00409EC2:
	r22_203 = r18_169 + r23_52
	branch r16_125 >= 2<32> l00409EF0
l00409ECA:
	r4_292 = pntz(&tLocF8)
	r4 = &tLocF8
	r19_217 = r16_125 + r4_292
	r7_187 = fn00409F4C(&tLocF8, r4_292, out r8)
l00409EDA:
	r18_169 = r18_169 + r23_52
	r16_125 = r19_217
l00409EDE:
	branch r16_125 != 1<32> l00409EC2
l00409EE2:
	branch r7_187 != 1<32> l00409ECA
l00409EE8:
	branch r7_187 != 0<32> l00409ECA
l00409EEC:
	r4Out = r4
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l00409EF0:
	r7_210 = fn00409F48(&tLocF8, 2<32>)
	r17_213 = Mem212[&tLocF8:word32]
	Mem218[&tLocF8:word32] = r7_210 ^ 7<32>
	fn00409F4C(&tLocF8, 1<32>, out r8_519)
	r19_217 = r16_125 + 0xFFFFFFFE<32>
	trinkle(r18_169 - (r17_213 + Mem218[((fp - 0x30<32>) + (r19_217 << 2<8>)) - 192<i32>:word32]), r17_213, &tLocF8, r16_125 + 0xFFFFFFFF<32>, 1<32>, &dwLocF0, out r4_520, out r7_521, out r8_522, out r11_523, out r12_524)
	r7_258 = fn00409F48(&tLocF8, 1<32>)
	r17_260 = Mem218[&tLocF8:word32]
	Mem265[&tLocF8:word32] = r7_258 | 1<32>
	r2 = trinkle(r22_203, r17_260, &tLocF8, r19_217, 1<32>, &dwLocF0, out r4, out r7_187, out r8, out r11, out r12)
	goto l00409EDA
qsort_exit:


word32 fn00409F48(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      qsort
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7:[0..31]-qsort
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
fn00409F48_entry:
l00409F48:
l00409F48_thunk_shl:
	return shl(r4, r5)
fn00409F48_exit:


word32 fn00409F4C(word32 r4, word32 r5, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      qsort
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7:[0..31]-qsort r8:[0..31]-qsort
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
fn00409F4C_entry:
l00409F4C:
l00409F4C_thunk_shr:
	shr(r4, r5, out r7_9, out r8_10)
	r8Out = r8_10
	return r7_9
fn00409F4C_exit:


word32 strtox(word32 r0, word32 r2, word32 r4, word32 r6, word32 r12, word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strtof_l
//      strtod_l
//      strtold_l
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-strtof_l r5:[0..31]-strtof_l
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
strtox_entry:
l00409F50:
	memset(&tLocA0, 0<32>, 0x90<32>, out r6_131, out r7_132, out r8_133, out r10_134)
	Mem31[&tLocA0 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem32[&tLocA0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	Mem35[&tLocA0 + 4<i32>:word32] = r4
	Mem36[&tLocA0 + 44<i32>:word32] = r4
	__shlim(&tLocA0, 0<32>, 0<32>, out r9_135, out r11_136)
	__floatscan(r0, r2, &tLocA0, r6, 1<32>, r12, out r3_137, out r4_58, out r5_59, out r6_60, out r7_61, out r11_138, out r12_139)
	r7_68 = r7_61 - r6_60
	r6_72 = r7_68 + r6_60
	r16_14 = r4
	r17_70 = Mem36[&tLocA0 + 124<i32>:word32]
	r7_75 = CONVERT(r6_72 <u r7_68, bool, word32) + ((r7_68 >> 0x1F<32>) + r4_58)
	branch r17_70 == 0<32> l00409FA0
l00409F98:
	branch (r7_75 | r6_72) == 0<32> l00409F9E
l00409F9C:
	r16_14 = r4 + r6_72
l00409F9E:
	Mem80[r17_70:word32] = r16_14
l00409FA0:
	r5Out = r5_59
	return r4_58
strtox_exit:


void strtof_l(word32 r0, word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
strtof_l_entry:
l00409FA4:
	__truncdfsf2(strtox(r0, r2, r4, 0<32>, r12, out r5_22), r5_22)
	return
strtof_l_exit:


void strtod_l(word32 r0, word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
strtod_l_entry:
l00409FB2:
l00409FB4_thunk_strtox:
	strtox(r0, r2, r4, 1<32>, r12, out r5_24)
	return
strtod_l_exit:


void strtold_l(word32 r0, word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
strtold_l_entry:
l00409FB8:
l00409FBA_thunk_strtox:
	strtox(r0, r2, r4, 2<32>, r12, out r5_24)
	return
strtold_l_exit:


word32 strtox(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __strtoull_internal
//      __strtoul_internal
//      __strtol_internal
//      __strtoimax_internal
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-__strtoul_internal r12:[0..31]-__strtoul_internal r2:[0..31]-__strtoul_internal r3:[0..31]-__strtoul_internal r4:[0..31]-__strtoul_internal r5:[0..31]-__strtoull_internal r6:[0..31]-__strtoul_internal r7:[0..31]-__strtoul_internal r8:[0..31]-__strtoul_internal r9:[0..31]-__strtoul_internal
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
strtox_entry:
l00409FC0:
	Mem19[&tLocA0:word32] = 0<32>
	Mem20[&tLocA0 + 4<i32>:word32] = r4
	Mem22[&tLocA0 + 44<i32>:word32] = r4
	r7_21 = 0xFFFFFFFF<32>
	branch r4 < 0<32> l00409FDA
l00409FD2:
	r7_21 = r4 + 0x7FFFFFFF<32>
l00409FDA:
	Mem27[&tLocA0 + 8<i32>:word32] = r7_21
	Mem30[&tLocA0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	__shlim(&tLocA0, 0<32>, 0<32>, out r9_127, out r11_128)
	r2_65 = __intscan(r2, r3, &tLocA0, r6, 1<32>, r8, r9, r12, out r3_58, out r4_59, out r5_60, out r6_114, out r7_115, out r8_67, out r9_68, out r11_63, out r12_64)
	branch r5 == 0<32> l0040A00A
l00409FFA:
	r6_114 = Mem38[&tLocA0 + 120<i32>:word32]
	r7_115 = r7_115 - r6_114 + r6_114
	Mem80[Mem38[&tLocA0 + 4<i32>:word32]:word32] = r4 + r7_115
l0040A00A:
	r3Out = r3_58
	r4Out = r4_59
	r5Out = r5_60
	r6Out = r6_114
	r7Out = r7_115
	r8Out = r8_67
	r9Out = r9_68
	r11Out = r11_63
	r12Out = r12_64
	return r2_65
strtox_exit:


word32 __strtoull_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_ipliteral
//      __strtoumax_internal
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_ipliteral r12:[0..31]-__lookup_ipliteral r2:[0..31]-__lookup_ipliteral r5:[0..31]-__lookup_ipliteral r6:[0..31]-__lookup_ipliteral r7:[0..31]-__lookup_ipliteral r8:[0..31]-__lookup_ipliteral r9:[0..31]-__lookup_ipliteral
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoull_internal_entry:
l0040A00C:
l0040A014_thunk_strtox:
	r2_18 = strtox(r2, r3, r4, r5, r6, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, r12, out r3_34, out r4_35, out r5_22, out r6_23, out r7_24, out r8_25, out r9_26, out r11_15, out r12_16)
	r5Out = r5_22
	r6Out = r6_23
	r7Out = r7_24
	r8Out = r8_25
	r9Out = r9_26
	r11Out = r11_15
	r12Out = r12_16
	return r2_18
__strtoull_internal_exit:


void __strtoll_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __strtoimax_internal
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoll_internal_entry:
l0040A018:
l0040A01E_thunk_strtox:
	strtox(r2, r3, r4, r5, r6, 0<32>, 0<32>, r12, out r3_27, out r4_28, out r5_29, out r6_30, out r7_31, out r8_32, out r9_33, out r11_34, out r12_35)
	return
__strtoll_internal_exit:


word32 __strtoul_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      hextoui
//      getnameinfo
//      __inet_aton
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__lookup_serv r12:[0..31]-__lookup_serv r2:[0..31]-__lookup_serv r3:[0..31]-__lookup_serv r4:[0..31]-__lookup_serv r6:[0..31]-__inet_aton r7:[0..31]-__lookup_serv r8:[0..31]-__lookup_serv r9:[0..31]-__inet_aton
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__strtoul_internal_entry:
l0040A022:
	r2_21 = strtox(r2, r3, r4, r5, r6, 0xFFFFFFFF<32>, 0<32>, r12, out r3_23, out r4_24, out r5_41, out r6_26, out r7_27, out r8_28, out r9_29, out r11_18, out r12_19)
	r3Out = r3_23
	r4Out = r4_24
	r6Out = r6_26
	r7Out = r7_27
	r8Out = r8_28
	r9Out = r9_29
	r11Out = r11_18
	r12Out = r12_19
	return r2_21
__strtoul_internal_exit:


void __strtol_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__strtol_internal_entry:
l0040A030:
	strtox(r2, r3, r4, r5, r6, 0<32>, 0<32>, r12, out r3_33, out r4_34, out r5_35, out r6_36, out r7_37, out r8_38, out r9_39, out r11_40, out r12_41)
	return
__strtol_internal_exit:


void __strtoimax_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoimax_internal_entry:
l0040A03E:
l0040A03E_thunk___strtoll_internal:
	__strtoll_internal(r2, r3, r4, r5, r6, r12)
	return
__strtoimax_internal_exit:


void __strtoumax_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoumax_internal_entry:
l0040A042:
l0040A042_thunk___strtoull_internal:
	__strtoull_internal(r2, r3, r4, r5, r6, r12, out r5_25, out r6_26, out r7_27, out r8_28, out r9_29, out r11_30, out r12_31)
	return
__strtoumax_internal_exit:


word32 memchr(word32 r4, word32 r5, word32 r6, word32 & r5Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping6_run
//      fgets_unlocked
//      strnlen
//      strstr
//      __string_read
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-strnlen r5:[0..31]-strnlen r6:[0..31]-strnlen r8:[0..31]-strnlen
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
memchr_entry:
l0040A050:
	branch (r4 & 3<32>) == 0<32> l0040A072
l0040A056:
	branch r6 == 0<32> l0040A0F8
l0040A05A:
	branch (r5 & 0xFF<32>) != CONVERT(Mem0[r4:byte], byte, word32) l0040A06A
l0040A05E:
	goto l0040A0FC
l0040A060:
	branch r6 == 0<32> l0040A0F8
l0040A064:
	branch (r5 & 0xFF<32>) == CONVERT(Mem0[r4:byte], byte, word32) l0040A0FC
l0040A06A:
	r4 = r4 + 1<32>
	r6 = r6 + 0xFFFFFFFF<32>
	branch (r4 & 3<32>) != 0<32> l0040A060
l0040A072:
	branch r6 == 0<32> l0040A0F8
l0040A076:
	branch (r5 & 0xFF<32>) == CONVERT(Mem0[r4:byte], byte, word32) l0040A0FC
l0040A07C:
	r9_25 = ((r5 & 0xFF<32>) << 8<32>) + (r5 & 0xFF<32>)
	branch r6 <u 4<32> l0040A0E0
l0040A08C:
	r7_29 = r9_25 * 0x10001<32> ^ Mem0[r4:word32]
	r8 = 0x80808080<32>
	branch (~r7_29 & r7_29 + 0xFEFEFEFF<32> & 0x80808080<32>) != 0<32> l0040A0E0
l0040A0AC:
	r8 = r4
	goto l0040A0CE
l0040A0B0:
	r7_43 = r9_25 * 0x10001<32> ^ Mem0[r8:word32]
	branch (~r7_43 & r7_43 + 0xFEFEFEFF<32> & 0x80808080<32>) != 0<32> l0040A0D8
l0040A0CE:
	r6 = r6 + 0xFFFFFFFC<32>
	r8 = r8 + 4<32>
	branch r6 >=u 4<32> l0040A0B0
l0040A0D6:
	branch r6 == 0<32> l0040A0F8
l0040A0D8:
	r4 = r8
	branch (r5 & 0xFF<32>) == CONVERT(Mem0[r8:byte], byte, word32) l0040A0FC
l0040A0E0:
	r7_57 = r4 + 1<32>
	r6 = r4 + r6
	goto l0040A0F2
l0040A0E8:
	r8 = CONVERT(Mem0[r7_57:byte], byte, word32)
	r7_57 = r7_57 + 1<32>
	branch (r5 & 0xFF<32>) == r8 l0040A0FC
l0040A0F2:
	r4 = r7_57
	branch r7_57 != r6 l0040A0E8
l0040A0F8:
	r5Out = <invalid>
	r6Out = r6
	r8Out = r8
	return 0<32>
l0040A0FC:
	r5Out = <invalid>
	r6Out = r6
	r8Out = r8
	return r4
memchr_exit:


word32 memcmp(word32 r4, word32 r5, word32 r6, word32 & r7Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      pr_addr
//      pr_options
//      ping6_receive_error_msg
//      ping6_parse_reply
//      getnameinfo
//      inet_ntop
//      policyof
//      __res_msend_rc
//      strstr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-twoway_strstr r7:[0..31]-__res_msend_rc r8:[0..31]-__res_msend_rc r9:[0..31]-__res_msend_rc
// Trashed: r25 r4 r7 r8 r9
// Preserved: sp
memcmp_entry:
l0040A100:
	branch r6 == 0<32> l0040A12A
l0040A102:
	r8 = CONVERT(Mem0[r4:byte], byte, word32)
	r9 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r9 != r8 l0040A124
l0040A10E:
	r7 = 1<32>
l0040A110:
	branch r6 == r7 l0040A12A
l0040A112:
	r7 = r7 + 1<32>
	r8 = CONVERT(Mem0[r4 + r7:byte], byte, word32)
	r9 = CONVERT(Mem0[r5 + r7 - 1<i32>:byte], byte, word32)
	branch r8 == r9 l0040A110
l0040A124:
	r7Out = r7
	r8Out = r8
	r9Out = r9
	return r8 - r9
l0040A12A:
	r7Out = r7
	r8Out = r8
	r9Out = r9
	return 0<32>
memcmp_exit:


word32 memcpy(word32 r4, word32 r5, word32 r6, word32 & r3Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out, word32 & r13Out, word32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      fn00400B52
//      fn00401608
//      gather_statistics
//      fn004034E2
//      ping6_run
//      realloc
//      getaddrinfo
//      copy_addr
//      netlink_msg_to_ifaddr
//      fn0040628E
//      getnameinfo
//      fn004066AA
//      fn00406C24
//      name_from_hosts
//      dns_parse_callback
//      __lookup_name
//      fn0040738E
//      res_mkquery
//      __res_msend_rc
//      __get_resolv_conf
//      __get_handler_set
//      __libc_sigaction
//      fgets_unlocked
//      __fwritex
//      vfprintf
//      sn_write
//      vsnprintf
//      vsprintf
//      __isoc99_vsscanf
//      cycle
//      memmove
//      __strdup
//      __copy_tls
//      __string_read
//      arg_n
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__fwritex r12:[0..31]-__fwritex r13:[0..31]-__fwritex r14:[0..31]-__fwritex r2:[0..31]-__fwritex r3:[0..31]-__fwritex r5:[0..31]-__fwritex r6:[0..31]-__fwritex r7:[0..31]-fn0040738E r8:[0..31]-__fwritex r9:[0..31]-fgets_unlocked
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: r16 r17 sp
memcpy_entry:
l0040A130:
	r7_201 = r5 & 3<32>
	branch (r5 & 3<32>) == 0<32> l0040A4F2
l0040A136:
	branch r6 == 0<32> l0040A1EE
l0040A13A:
	r13 = r4
	goto l0040A142
l0040A13E:
	branch r6 == 0<32> l0040A286
l0040A142:
	r5 = r5 + 1<32>
	r13 = r13 + 1<32>
	r8_15 = CONVERT(Mem14[r5 - 1<i32>:byte], byte, word32)
	Mem19[r13 - 1<i32>:int8] = SLICE(r8_15, int8, 0)
	r6 = r6 + 0xFFFFFFFF<32>
	branch (r5 & 3<32>) != 0<32> l0040A13E
l0040A154:
	r8 = r13 & 3<32>
	branch r8 != 0<32> l0040A1F0
l0040A160:
	branch r6 <u 0x10<32> l0040A506
l0040A164:
	r12 = r6 + 0xFFFFFFF0<32>
	r8 = r5
	r7_307 = r13
	r3 = r13 + (__ins<word32,word32>(r12, 0<32>, 0<32>, 1<32>) + 0x10<32>)
l0040A17A:
	r2 = Mem312[r8:word32]
	r11 = Mem312[r8 + 1<i32>:word32]
	r10_315 = Mem312[r8 + 2<i32>:word32]
	r9 = Mem312[r8 + 3<i32>:word32]
	Mem319[r7_307:word32] = r2
	Mem320[r7_307 + 4<i32>:word32] = r11
	Mem321[r7_307 + 2<i32>:word32] = r10_315
	Mem322[r7_307 + 3<i32>:word32] = r9
	r8 = r8 + 0x10<32>
	r7_307 = r7_307 + 0x10<32>
	branch r7_307 != r3 l0040A17A
l0040A19A:
	r7_329 = __ins<word32,word32>(r12, 0<32>, 0<32>, 1<32>)
	r17_300 = r6 & 8<32>
	r16_301 = r6 & 4<32>
	r5 = r5 + (r7_329 + 0x10<32>)
	r13 = r13 + (r7_329 + 0x10<32>)
	r7_201 = r6 & 2<32>
	r6 = r6 & 1<32>
l0040A1B0:
	branch r17_300 == 0<32> l0040A1C4
l0040A1B2:
	r8 = Mem340[r5:word32]
	r17_342 = Mem340[r5 + 4<i32>:word32]
	Mem345[r13:word32] = r8
	Mem346[r13 + 4<i32>:word32] = r17_342
	r5 = r5 + 8<32>
	r13 = r13 + 8<32>
l0040A1C4:
	branch r16_301 == 0<32> l0040A1D0
l0040A1C6:
	Mem355[r13:word32] = Mem351[r5:word32]
	r5 = r5 + 4<32>
	r13 = r13 + 4<32>
l0040A1D0:
	branch r7_201 == 0<32> l0040A1E2
l0040A1D2:
	r7_201 = CONVERT(Mem361[r5 + 1<i32>:byte], byte, word32)
	Mem366[r13:byte] = Mem361[r5:byte]
	Mem367[r13 + 1<i32>:byte] = SLICE(r7_201, byte, 0)
	r5 = r5 + 2<32>
	r13 = r13 + 2<32>
l0040A1E2:
	branch r6 == 0<32> l0040A1EA
l0040A1E4:
	r7_201 = CONVERT(Mem374[r5:byte], byte, word32)
	Mem377[r13:byte] = SLICE(r7_201, byte, 0)
l0040A1EA:
l0040A1EE:
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7_201
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	r13Out = r13
	r14Out = r14
	return r2
l0040A1F0:
	branch r6 <u 0x20<32> l0040A322
l0040A1F4:
	r9_35 = CONVERT(Mem29[r5:byte], byte, word32)
	r7_103 = Mem29[r5:word32]
	branch r8 == 2<32> l0040A288
l0040A1FE:
	branch r8 != 3<32> l0040A44A
l0040A202:
	r16_135 = r6 + 0xFFFFFFEC<32>
	r25_143 = r13 + (__align(r16_135, 16<i32>) + 0x11<32>)
	Mem144[r13:byte] = SLICE(r9_35, byte, 0)
	r5_138 = r5 + 1<32>
	r24_136 = r13 + 1<32>
	r2 = r5_138
	r8_142 = r24_136
l0040A222:
	r11_147 = Mem146[r2 + 3<i32>:word32]
	r10_150 = Mem146[r2 + 7<i32>:word32]
	r7_103 = Mem146[r2 + 15<i32>:word32]
	r9_151 = Mem146[r2 + 11<i32>:word32]
	r3 = r7_103 >>u 8<32> | r11_147 << 0x18<32>
	Mem165[r8_142:word32] = r3
	r11 = r11_147 >>u 8<32> | r10_150 << 0x18<32>
	Mem166[r8_142 + 4<i32>:word32] = r11
	Mem168[r8_142 + 2<i32>:word32] = r10_150 >>u 8<32> | r9_151 << 0x18<32>
	Mem169[r8_142 + 3<i32>:word32] = r9_151 >>u 8<32> | r7_103 << 0x18<32>
	r14 = r10_150 << 0x18<32>
	r12 = r7_103 << 0x18<32>
	r2 = r2 + 0x10<32>
	r8_142 = r8_142 + 0x10<32>
	branch r8_142 != r25_143 l0040A222
l0040A27A:
	r6_175 = r6 + 0xFFFFFFEF<32>
	r13_176 = __ins<word32,word32>(r16_135, 0<32>, 0<32>, 1<32>)
	goto l0040A312
l0040A286:
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r5 & 3<32>
	r8Out = r8_15
	r9Out = r9
	r11Out = r11
	r12Out = r12
	r13Out = r13
	r14Out = r14
	return r2
l0040A288:
	Mem44[r13 + 1<i32>:byte] = Mem29[r5 + 1<i32>:byte]
	Mem47[r13:byte] = SLICE(r9_35, byte, 0)
	r16_37 = r6 + 0xFFFFFFEC<32>
	r24_136 = r13 + 2<32>
	r5_138 = r5 + 2<32>
	r25_45 = r24_136 + ((r16_37 >>u 4<32>) + 1<32> << 4<32>)
	r2 = r5_138
	r8_48 = r24_136
l0040A2B0:
	r11_51 = Mem50[r2 + 2<i32>:word32]
	r10_54 = Mem50[r2 + 6<i32>:word32]
	r7_103 = Mem50[r2 + 14<i32>:word32]
	r9_55 = Mem50[r2 + 10<i32>:word32]
	r3 = r7_103 >>u 0x10<32> | r11_51 << 0x10<32>
	Mem69[r8_48:word32] = r3
	r11 = r11_51 >>u 0x10<32> | r10_54 << 0x10<32>
	Mem70[r8_48 + 4<i32>:word32] = r11
	Mem72[r8_48 + 2<i32>:word32] = r10_54 >>u 0x10<32> | r9_55 << 0x10<32>
	Mem73[r8_48 + 3<i32>:word32] = r9_55 >>u 0x10<32> | r7_103 << 0x10<32>
	r14 = r10_54 << 0x10<32>
	r12 = r7_103 << 0x10<32>
	r2 = r2 + 0x10<32>
	r8_48 = r8_48 + 0x10<32>
	branch r8_48 != r25_45 l0040A2B0
l0040A308:
	r6_175 = r6 + 0xFFFFFFEE<32>
	r13_176 = __ins<word32,word32>(r16_37, 0<32>, 0<32>, 1<32>)
l0040A312:
	r13_178 = r13_176 + 0x10<32>
	r5 = r5_138 + r13_178
	r6 = r6_175 - __align(r6 + 0xFFFFFFEC<32>, 16<i32>)
	r13 = r24_136 + r13_178
l0040A322:
	r8_194 = r6 & 8<32>
	r10_195 = r6 & 4<32>
	r17_196 = r6 & 2<32>
	r16_197 = r6 & 1<32>
	branch __bit<word32,word32>(r6, 4<32>) l0040A4F6
l0040A332:
	r6_205 = CONVERT(Mem202[r5 + 1<i32>:byte], byte, word32)
	Mem206[r13 + 2<i32>:byte] = Mem202[r5 + 2<i32>:byte]
	r7_208 = CONVERT(Mem206[r5:byte], byte, word32)
	Mem209[r13 + 3<i32>:byte] = Mem206[r5 + 3<i32>:byte]
	r25_211 = CONVERT(Mem209[r5 + 6<i32>:byte], byte, word32)
	Mem212[r13 + 4<i32>:byte] = Mem209[r5 + 4<i32>:byte]
	r9_213 = CONVERT(Mem212[r5 + 5<i32>:byte], byte, word32)
	r24_214 = CONVERT(Mem212[r5 + 7<i32>:byte], byte, word32)
	r15_215 = CONVERT(Mem212[r5 + 8<i32>:byte], byte, word32)
	r14 = CONVERT(Mem212[r5 + 9<i32>:byte], byte, word32)
	r12 = CONVERT(Mem212[r5 + 10<i32>:byte], byte, word32)
	r3 = CONVERT(Mem212[r5 + 11<i32>:byte], byte, word32)
	r2 = CONVERT(Mem212[r5 + 12<i32>:byte], byte, word32)
	r11 = CONVERT(Mem212[r5 + 13<i32>:byte], byte, word32)
	Mem221[r13 + 1<i32>:byte] = SLICE(r6_205, byte, 0)
	Mem223[r13 + 5<i32>:byte] = SLICE(r9_213, byte, 0)
	r9_224 = CONVERT(Mem223[r5 + 14<i32>:byte], byte, word32)
	r5_225 = CONVERT(Mem223[r5 + 15<i32>:byte], byte, word32)
	Mem226[r13:byte] = SLICE(r7_208, byte, 0)
	Mem228[r13 + 6<i32>:byte] = SLICE(r25_211, byte, 0)
	Mem229[r13 + 7<i32>:byte] = SLICE(r24_214, byte, 0)
	Mem230[r13 + 8<i32>:byte] = SLICE(r15_215, byte, 0)
	Mem231[r13 + 9<i32>:byte] = SLICE(r14, byte, 0)
	Mem232[r13 + 10<i32>:byte] = SLICE(r12, byte, 0)
	Mem233[r13 + 11<i32>:byte] = SLICE(r3, byte, 0)
	Mem234[r13 + 12<i32>:byte] = SLICE(r2, byte, 0)
	Mem235[r13 + 13<i32>:byte] = SLICE(r11, byte, 0)
	Mem236[r13 + 14<i32>:byte] = SLICE(r9_224, byte, 0)
	Mem237[r13 + 15<i32>:byte] = SLICE(r5_225, byte, 0)
	r6 = r5 + 0x10<32>
	r7_201 = r13 + 0x10<32>
l0040A3B4:
	branch r8_194 == 0<32> l0040A4FC
l0040A3B8:
	r14 = CONVERT(Mem243[r6:byte], byte, word32)
	r13_246 = CONVERT(Mem243[r6 + 1<i32>:byte], byte, word32)
	r12 = CONVERT(Mem243[r6 + 2<i32>:byte], byte, word32)
	r3 = CONVERT(Mem243[r6 + 3<i32>:byte], byte, word32)
	r2 = CONVERT(Mem243[r6 + 4<i32>:byte], byte, word32)
	r11 = CONVERT(Mem243[r6 + 5<i32>:byte], byte, word32)
	r5_252 = CONVERT(Mem243[r6 + 6<i32>:byte], byte, word32)
	r6 = CONVERT(Mem243[r6 + 7<i32>:byte], byte, word32)
	Mem254[r7_201:byte] = SLICE(r14, byte, 0)
	Mem255[r7_201 + 1<i32>:byte] = SLICE(r13_246, byte, 0)
	Mem256[r7_201 + 2<i32>:byte] = SLICE(r12, byte, 0)
	Mem257[r7_201 + 3<i32>:byte] = SLICE(r3, byte, 0)
	Mem258[r7_201 + 4<i32>:byte] = SLICE(r2, byte, 0)
	Mem259[r7_201 + 5<i32>:byte] = SLICE(r11, byte, 0)
	Mem260[r7_201 + 6<i32>:byte] = SLICE(r5_252, byte, 0)
	Mem261[r7_201 + 7<i32>:byte] = SLICE(r6, byte, 0)
	r9 = r6 + 8<32>
	r8 = r7_201 + 8<32>
l0040A400:
	branch r10_195 == 0<32> l0040A500
l0040A404:
	r11 = CONVERT(Mem268[r9:byte], byte, word32)
	r10_271 = CONVERT(Mem268[r9 + 1<i32>:byte], byte, word32)
	r6 = CONVERT(Mem268[r9 + 2<i32>:byte], byte, word32)
	r7_201 = CONVERT(Mem268[r9 + 3<i32>:byte], byte, word32)
	Mem275[r8:byte] = SLICE(r11, byte, 0)
	Mem276[r8 + 1<i32>:byte] = SLICE(r10_271, byte, 0)
	Mem277[r8 + 2<i32>:byte] = SLICE(r6, byte, 0)
	Mem278[r8 + 3<i32>:byte] = SLICE(r7_201, byte, 0)
	r13 = r8 + 4<32>
	r5 = r9 + 4<32>
l0040A42C:
	branch r17_196 == 0<32> l0040A43E
l0040A42E:
	r6 = CONVERT(Mem283[r5:byte], byte, word32)
	r7_201 = CONVERT(Mem283[r5 + 1<i32>:byte], byte, word32)
	Mem288[r13:byte] = SLICE(r6, byte, 0)
	Mem289[r13 + 1<i32>:byte] = SLICE(r7_201, byte, 0)
	r5 = r5 + 2<32>
	r13 = r13 + 2<32>
l0040A43E:
	branch r16_197 == 0<32> l0040A1EA
l0040A442:
	r7_201 = CONVERT(Mem296[r5:byte], byte, word32)
	Mem299[r13:byte] = SLICE(r7_201, byte, 0)
	goto l0040A1EA
l0040A44A:
	r17_84 = CONVERT(Mem29[r5 + 2<i32>:byte], byte, word32)
	Mem89[r13 + 1<i32>:byte] = Mem29[r5 + 1<i32>:byte]
	Mem92[r13:byte] = SLICE(r9_35, byte, 0)
	Mem93[r13 + 2<i32>:byte] = SLICE(r17_84, byte, 0)
	r24_81 = r6 + 0xFFFFFFEC<32>
	r16_86 = r13 + 3<32>
	r5_87 = r5 + 3<32>
	r15_90 = r16_86 + ((r24_81 >>u 4<32>) + 1<32> << 4<32>)
	r2 = r5_87
	r8_114 = r16_86
l0040A47A:
	r11_97 = Mem96[r2 + 1<i32>:word32]
	r10_100 = Mem96[r2 + 5<i32>:word32]
	r7_103 = Mem96[r2 + 13<i32>:word32]
	r9_101 = Mem96[r2 + 9<i32>:word32]
	r3 = r7_103 >>u 0x18<32> | r11_97 << 8<32>
	Mem115[r8_114:word32] = r3
	r11 = r11_97 >>u 0x18<32> | r10_100 << 8<32>
	Mem116[r8_114 + 4<i32>:word32] = r11
	Mem118[r8_114 + 2<i32>:word32] = r10_100 >>u 0x18<32> | r9_101 << 8<32>
	Mem119[r8_114 + 3<i32>:word32] = r9_101 >>u 0x18<32> | r7_103 << 8<32>
	r14 = r10_100 << 8<32>
	r12 = r7_103 << 8<32>
	r2 = r2 + 0x10<32>
	r8_114 = r8_114 + 0x10<32>
	branch r8_114 != r15_90 l0040A47A
l0040A4D2:
	r13_126 = __ins<word32,word32>(r24_81, 0<32>, 0<32>, 1<32>)
	r6 = r6 + 0xFFFFFFED<32> - __align(r24_81, 16<i32>)
	r5 = r5_87 + (r13_126 + 0x10<32>)
	r13 = r16_86 + (r13_126 + 0x10<32>)
	goto l0040A322
l0040A4F2:
	r13 = r4
	goto l0040A154
l0040A4F6:
	r6 = r5
	r7_201 = r13
	goto l0040A3B4
l0040A4FC:
	r9 = r6
	r8 = r7_201
	goto l0040A400
l0040A500:
	r5 = r9
	r13 = r8
	goto l0040A42C
l0040A506:
	r17_300 = r6 & 8<32>
	r16_301 = r6 & 4<32>
	r7_201 = r6 & 2<32>
	r6 = r6 & 1<32>
	goto l0040A1B0
memcpy_exit:


word32 memmove(word32 r4, word32 r5, word32 r6, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      inet_ntop
//      inet_pton
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-inet_pton r12:[0..31]-inet_pton r2:[0..31]-inet_pton r8:[0..31]-inet_pton r9:[0..31]-inet_pton
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
memmove_entry:
l0040A510:
	branch r4 == r5 l0040A688
l0040A514:
	branch r4 >=u r5 + r6 l0040A616
l0040A51A:
	r7_8 = r4 + r6
	branch r5 >=u r7_8 l0040A616
l0040A520:
	r8_27 = r5 ^ r4
	r8 = r8_27 & 3<32>
	branch r4 >=u r5 l0040A61A
l0040A52C:
	branch (r8_27 & 3<32>) != 0<32> l0040A666
l0040A530:
	branch (r4 & 3<32>) == 0<32> l0040A67C
l0040A536:
	r8 = r6 + 0xFFFFFFFF<32>
	r7_103 = r4
	branch r6 != 0<32> l0040A546
l0040A53E:
	goto l0040A688
l0040A540:
	r8 = r8 + 0xFFFFFFFF<32>
	branch r8 == 0xFFFFFFFF<32> l0040A688
l0040A546:
	r5 = r5 + 1<32>
	r7_103 = r7_103 + 1<32>
	r9 = CONVERT(Mem70[r5 - 1<i32>:byte], byte, word32)
	Mem74[r7_103 - 1<i32>:int8] = SLICE(r9, int8, 0)
	branch (r7_103 & 3<32>) != 0<32> l0040A540
l0040A55A:
	branch r8 <u 4<32> l0040A684
l0040A55E:
	r11_79 = r8 + 0xFFFFFFFC<32>
	r6_80 = 0<32>
	r10_82 = __ins<word32,word32>(r11_79, 0<32>, 0<32>, 1<32>)
l0040A56C:
	r9 = Mem86[r5 + r6_80:word32]
	Mem89[r7_103 + r6_80:word32] = r9
	r6_80 = r6_80 + 4<32>
	branch r6_80 != r10_82 + 4<32> l0040A56C
l0040A57A:
	r11 = __ins<word32,word32>(r11_79, 0<32>, 0<32>, 1<32>)
	r6 = r8 & 3<32>
	r8 = r11 + 4<32>
	r7_103 = r7_103 + (r11 + 4<32>)
	r5 = r5 + (r11 + 4<32>)
l0040A58A:
	branch r6 == 0<32> l0040A688
l0040A58E:
	branch ((CONVERT(r6 <u 0xA<32>, bool, word32) ^ 1<32>) & (CONVERT(r7_103 <u r5 + 4<32>, bool, word32) ^ 1<32> | CONVERT(r5 <u r7_103 + 4<32>, bool, word32) ^ 1<32>)) == 0<32> l0040A66A
l0040A5BA:
	branch ((r5 | r7_103) & 3<32>) != 0<32> l0040A66A
l0040A5C6:
	r9_126 = 0<32>
	r8_128 = (r6 + 0xFFFFFFFC<32> >>u 2<32>) + 1<32>
l0040A5D6:
	Mem135[r7_103 + r9_126 * 4<32>:word32] = Mem132[r5 + r9_126 * 4<32>:word32]
	r9_126 = r9_126 + 1<32>
	branch r9_126 <u r8_128 l0040A5D6
l0040A5E4:
	r8 = r6 - (r8_128 << 2<32>)
	r9 = r7_103 + (r8_128 << 2<32>)
	r11 = r5 + (r8_128 << 2<32>)
	branch r6 == r8_128 << 2<32> l0040A688
l0040A5F4:
	Mem144[(r8_128 << 2<32>) + r7_103:byte] = Mem135[r5 + (r8_128 << 2<32>):byte]
	branch r8 == 1<32> l0040A688
l0040A600:
	Mem146[r9 + 1<i32>:byte] = Mem144[r11 + 1<i32>:byte]
	branch r8 == 2<32> l0040A688
l0040A60C:
	Mem148[r9 + 2<i32>:byte] = Mem146[r11 + 2<i32>:byte]
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040A616:
l0040A616_thunk_memcpy:
	r2_24 = memcpy(r4, r5, r6, out r3_333, out r5_334, out r6_335, out r7_336, out r8_17, out r9_18, out r11_20, out r12_21, out r13_337, out r14_338)
	r8Out = r8_17
	r9Out = r9_18
	r11Out = r11_20
	r12Out = r12_21
	return r2_24
l0040A61A:
	branch (r8_27 & 3<32>) != 0<32> l0040A658
l0040A61E:
	branch (r7_8 & 3<32>) == 0<32> l0040A680
l0040A622:
	r7_30 = r6 + 0xFFFFFFFF<32>
	branch r6 != 0<32> l0040A630
l0040A628:
	goto l0040A688
l0040A62A:
	r7_30 = r7_30 + 0xFFFFFFFF<32>
	branch r7_30 == 0xFFFFFFFF<32> l0040A688
l0040A630:
	r8 = CONVERT(Mem34[r5 + r7_30:byte], byte, word32)
	Mem40[r7_30 + r4:byte] = SLICE(r8, byte, 0)
	r9 = 0xFFFFFFFF<32>
	branch (r4 + r7_30 & 3<32>) != 0<32> l0040A62A
l0040A642:
	r6 = r7_30
	branch r7_30 <u 4<32> l0040A658
l0040A648:
	r6 = r6 + 0xFFFFFFFC<32>
	r8 = Mem47[r5 + r6:word32]
	Mem50[r4 + r6:word32] = r8
	branch r6 >=u 4<32> l0040A648
l0040A656:
	r6 = r7_30 & 3<32>
l0040A658:
	branch r6 == 0<32> l0040A688
l0040A65A:
	r6 = r6 + 0xFFFFFFFF<32>
	Mem59[r6 + r4:byte] = Mem56[r5 + r6:byte]
	goto l0040A658
l0040A666:
	r7_103 = r4
	goto l0040A58A
l0040A66A:
	r8_116 = 0<32>
l0040A66C:
	r9_120 = CONVERT(Mem119[r5 + r8_116:byte], byte, word32)
	Mem122[r8_116 + r7_103:byte] = SLICE(r9_120, byte, 0)
	r8_116 = r8_116 + 1<32>
	branch r6 != r8_116 l0040A66C
l0040A67A:
	r8Out = r8_116
	r9Out = r9_120
	r11Out = r11
	r12Out = r12
	return r2
l0040A67C:
	r7_103 = r4
	r8 = r6
	goto l0040A55A
l0040A680:
	r7_30 = r6
	goto l0040A642
l0040A684:
	r6 = r8
	goto l0040A58A
l0040A688:
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
memmove_exit:


word32 memset(word32 r4, word32 r5, word32 r6, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      fn00400B4E
//      fn00401366
//      fn0040271C
//      fn00402CEE
//      niquery_option_subject_addr_handler
//      ping6_run
//      __init_libc
//      getaddrinfo
//      netlink_msg_to_ifaddr
//      getifaddrs
//      __netlink_enumerate
//      res_mkquery
//      __res_msend_rc
//      __fopen_rb_ca
//      pad
//      vfprintf
//      vsnprintf
//      __isoc99_vsscanf
//      strtold_l
//      __isoc99_vfscanf
//      stpncpy
//      fn0040E008
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r10:[0..31]-getaddrinfo r5:[0..31]-fn00401366 r6:[0..31]-fn00401366 r7:[0..31]-__isoc99_vfscanf r8:[0..31]-getaddrinfo
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
memset_entry:
l0040A690:
	branch r6 == 0<32> l0040A74C
l0040A694:
	r8 = r4 + r6
	Mem9[r8 - 1<i32>:int8] = SLICE(r5, int8, 0)
	Mem10[r4:byte] = SLICE(r5, byte, 0)
	r7 = r5 & 0xFF<32>
	branch r6 <u 3<32> l0040A74C
l0040A6A4:
	Mem11[r8 - 2<i32>:int8] = SLICE(r5, int8, 0)
	Mem12[r4 + 1<i32>:byte] = SLICE(r5, byte, 0)
	Mem13[r8 - 3<i32>:int8] = SLICE(r5, int8, 0)
	Mem14[r4 + 2<i32>:byte] = SLICE(r5, byte, 0)
	branch r6 <u 7<32> l0040A74C
l0040A6B4:
	Mem15[r8 - 4<i32>:int8] = SLICE(r5, int8, 0)
	Mem16[r4 + 3<i32>:byte] = SLICE(r5, byte, 0)
	branch r6 <u 9<32> l0040A74C
l0040A6BE:
	r9_17 = -r4
	r6_23 = __ins<word32,word32>(r6 - (r9_17 & 3<32>), 0<32>, 0<32>, 1<32>)
	r5 = ((r5 & 0xFF<32>) << 8<32>) + (r5 & 0xFF<32>)
	Mem29[r4 + (r9_17 & 3<32>):word32] = r5 * 0x10001<32>
	r7 = r4 + (r9_17 & 3<32>)
	r10 = r7 + r6_23
	Mem30[r10 - 4<i32>:word32] = r5 * 0x10001<32>
	r8 = r6_23
	r6 = r5 * 0x10001<32>
	branch r6_23 <u 9<32> l0040A74C
l0040A6F0:
	Mem33[r10 - 12<i32>:word32] = r5 * 0x10001<32>
	Mem34[r10 - 8<i32>:word32] = r5 * 0x10001<32>
	branch r6_23 <u 0x19<32> l0040A74C
l0040A700:
	r5 = (r7 & 4<32>) + 0x18<32>
	Mem43[r10 - 28<i32>:word32] = r5 * 0x10001<32>
	Mem44[r10 - 24<i32>:word32] = r5 * 0x10001<32>
	Mem45[r10 - 20<i32>:word32] = r5 * 0x10001<32>
	Mem46[r10 - 16<i32>:word32] = r5 * 0x10001<32>
	r8 = r6_23 - r5
	r7 = r7 + r5
	branch r8 <u 0x20<32> l0040A74C
l0040A726:
	r5 = r7 + (__ins<word32,word32>(r8 + 0xFFFFFFE0<32>, 0<32>, 0<32>, 1<32>) + 0x20<32>)
l0040A734:
	r7 = r7 + 0x20<32>
	branch r7 != r5 l0040A734
l0040A74C:
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r10Out = r10
	return r5
memset_exit:


void strcat(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r17 r25 r5 r6 r7 r8 r9
// Preserved: r16 r4 ra sp
strcat_entry:
l0040A750:
	strcpy(r4 + strlen(r4, out r5_15, out r6_34, out r7_35), r5_15, out r6_36, out r7_37, out r8_38)
	return
strcat_exit:


word32 strchr(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      __lookup_ipliteral
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
//      strstr
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-__lookup_serv
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
strchr_entry:
l0040A770:
	r4_16 = strchrnul(r4, r5)
	branch (CONVERT(Mem7[r4_16:byte], byte, word32) ^ r5 & 0xFF<32>) == 0<32> l0040A782
l0040A77E_1:
	r4_16 = 0<32>
l0040A782:
	return r4_16
strchr_exit:


word32 strchrnul(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strchr
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-strchr
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
strchrnul_entry:
l0040A790:
	r16_12 = r4
	branch (r5 & 0xFF<32>) != 0<32> l0040A7A6
l0040A798:
	goto l0040A824
l0040A79A:
	r7_16 = CONVERT(Mem7[r16_12:byte], byte, word32)
	branch r7_16 == 0<32> l0040A820
l0040A7A0:
	branch (r5 & 0xFF<32>) == r7_16 l0040A820
l0040A7A4:
	r16_12 = r16_12 + 1<32>
l0040A7A6:
	branch (r16_12 & 3<32>) != 0<32> l0040A79A
l0040A7AA:
	r7_20 = Mem7[r16_12:word32]
	r10_21 = ((r5 & 0xFF<32>) << 8<32>) + (r5 & 0xFF<32>)
	r7_27 = r10_21 * 0x10001<32> ^ r7_20
	branch ((~r7_27 & r7_27 + 0xFEFEFEFF<32> | r7_20 + 0xFEFEFEFF<32> & ~r7_20) & 0x80808080<32>) != 0<32> l0040A814
l0040A7E0:
	r4_35 = r16_12
l0040A7E2:
	r4_35 = r4_35 + 4<32>
	r8_40 = Mem7[r4_35:word32]
	r9_42 = r10_21 * 0x10001<32> ^ r8_40
	branch ((r8_40 + 0xFEFEFEFF<32> & ~r8_40 | r9_42 + 0xFEFEFEFF<32> & ~r9_42) & 0x80808080<32>) == 0<32> l0040A7E2
l0040A812:
	r16_12 = r4_35
l0040A814:
	r7_55 = CONVERT(Mem7[r16_12:byte], byte, word32)
	branch r7_55 == 0<32> l0040A820
l0040A818:
	branch (r5 & 0xFF<32>) == r7_55 l0040A820
l0040A81A:
	r16_12 = r16_12 + 1<32>
	r7_55 = CONVERT(Mem7[r16_12:byte], byte, word32)
	branch r7_55 != 0<32> l0040A818
l0040A820:
	return r16_12
l0040A824:
	return r4 + strlen(r4, out r5_134, out r6_135, out r7_136)
strchrnul_exit:


word32 strcmp(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __vdsosym
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-__vdsosym
// Trashed: r25 r4 r6 r7 r8
// Preserved: sp
strcmp_entry:
l0040A830:
	r7_6 = CONVERT(Mem0[r4:byte], byte, word32)
	r6_8 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r7_6 != r6_8 l0040A858
l0040A838:
	branch r6_8 == 0<32> l0040A854
l0040A83A:
	r7_10 = 1<32>
	goto l0040A840
l0040A83E:
	branch r6_14 == 0<32> l0040A854
l0040A840:
	r6_14 = CONVERT(Mem0[r4 + r7_10:byte], byte, word32)
	r8_16 = CONVERT(Mem0[r5 + r7_10:byte], byte, word32)
	r7_10 = r7_10 + 1<32>
	branch r6_14 == r8_16 l0040A83E
l0040A84E:
	return r6_14 - r8_16
l0040A854:
	return 0<32>
l0040A858:
	return r7_6 - r6_8
strcmp_exit:


word32 strcpy(word32 r4, word32 r5, word32 & r6Out, word32 & r7Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      inet_ntop
//      dns_parse_callback
//      strcat
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5:[0..31]-dns_parse_callback r6:[0..31]-dns_parse_callback r7:[0..31]-dns_parse_callback r8:[0..31]-dns_parse_callback
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: r16 r4 ra sp
strcpy_entry:
l0040A860:
	r5_14 = stpcpy(r4, r5, out r6_17, out r7_15, out r8_18)
	r6Out = r6_17
	r7Out = r7_15
	r8Out = r8_18
	return r5_14
strcpy_exit:


void __strdup(word32 r0, word32 r4, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__strdup_entry:
l0040A870:
	r4_14 = strlen(r4, out r5_86, out r6_87, out r7_88)
	malloc(r0, r4_14 + 1<32>, r11, out r3_89, out r4_27, out r6_90, out r8_91, out r11_92)
	branch r4_27 == 0<32> l0040A88C
l0040A882:
l0040A888_thunk_memcpy:
	memcpy(r4_27, r4, r4_14 + 1<32>, out r3_93, out r5_94, out r6_95, out r7_96, out r8_97, out r9_98, out r11_99, out r12_100, out r13_101, out r14_102)
	return
l0040A88C:
	return
__strdup_exit:


word32 strlen(word32 r4, word32 & r5Out, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      main
//      ping4_run
//      fn00401E7A
//      ping6_run
//      __getopt_msg
//      getaddrinfo
//      getnameinfo
//      inet_ntop
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
//      fputs_unlocked
//      strcat
//      strchrnul
//      __strdup
//      mbsrtowcs
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-perror r5:[0..31]-mbsrtowcs r6:[0..31]-mbsrtowcs r7:[0..31]-getnameinfo
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
strlen_entry:
l0040A890:
	r7_10 = r4
	branch (r4 & 3<32>) == 0<32> l0040A8D8
l0040A896:
	r6_9 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r6_9 != 0<32> l0040A8A0
l0040A89A:
	goto l0040A8DC
l0040A89C:
	r6_14 = CONVERT(Mem0[r7_10:byte], byte, word32)
	branch r6_14 == 0<32> l0040A8D4
l0040A8A0:
	r7_10 = r7_10 + 1<32>
	branch (r7_10 & 3<32>) != 0<32> l0040A89C
l0040A8A6:
	goto l0040A8AA
l0040A8A8:
	r7_10 = r7_10 + 4<32>
l0040A8AA:
	r5_19 = Mem0[r7_10:word32]
	r5_24 = 0x80808080<32>
	branch (r5_19 + 0xFEFEFEFF<32> & ~r5_19 & 0x80808080<32>) == 0<32> l0040A8A8
l0040A8C4:
	r6_27 = r7_10
	r7_28 = CONVERT(Mem0[r7_10:byte], byte, word32)
	branch r7_28 == 0<32> l0040A8D0
l0040A8CA:
	r6_27 = r6_27 + 1<32>
	r5_24 = CONVERT(Mem0[r6_27:byte], byte, word32)
	branch r5_24 != 0<32> l0040A8CA
l0040A8D0:
	r5Out = r5_24
	r6Out = r6_27
	r7Out = r7_28
	return r6_27 - r4
l0040A8D4:
	r5Out = r5
	r6Out = r6_14
	r7Out = r7_10
	return r7_10 - r4
l0040A8D8:
	r7_10 = r4
	goto l0040A8AA
l0040A8DC:
	r5Out = r5
	r6Out = r6_9
	r7Out = r4
	return 0<32>
strlen_exit:


word32 strncmp(word32 r4, word32 r5, word32 r6, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      niquery_option_handler
//      ping6_run
//      getnameinfo
//      __lookup_serv
//      fn00407D00
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-__lookup_serv r6:[0..31]-fn00407D00
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
strncmp_entry:
l0040A8E0:
	branch r6 == 0<32> l0040A91E
l0040A8E2:
	r7_8 = CONVERT(Mem0[r4:byte], byte, word32)
	r9_10 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r7_8 == 0<32> l0040A926
l0040A8EA:
	branch r9_10 == 0<32> l0040A922
l0040A8EE:
	r6 = r6 + 0xFFFFFFFF<32>
	branch r6 == 1<32> l0040A922
l0040A8F2:
	branch r9_10 != r7_8 l0040A922
l0040A8F6:
	r7_15 = 1<32>
	goto l0040A908
l0040A8FA:
	r5 = r10_21
	branch r9_10 == 0<32> l0040A918
l0040A900:
	branch r6 + 0xFFFFFFFF<32> == r7_15 l0040A918
l0040A902:
	r7_15 = r7_15 + 1<32>
	branch r8_11 != r9_10 l0040A918
l0040A908:
	r8_11 = CONVERT(Mem0[r4 + r7_15:byte], byte, word32)
	r10_21 = r5 + 1<32>
	r9_10 = CONVERT(Mem0[r5 + 1<i32>:byte], byte, word32)
	branch r8_11 != 0<32> l0040A8FA
l0040A918:
	r6Out = r6
	return r8_11 - r9_10
l0040A91E:
	r6Out = r6
	return 0<32>
l0040A922:
	r8_11 = r7_8
	goto l0040A918
l0040A926:
	r8_11 = 0<32>
	goto l0040A918
strncmp_exit:


void strncpy(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      if_indextoname
//      if_nametoindex
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: r16 r4 ra sp
strncpy_entry:
l0040A930:
	stpncpy(r4, r5, r6)
	return
strncpy_exit:


word32 strnlen(word32 r4, word32 r5, word32 & r5Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      is_valid_hostname
//      __lookup_name
//      res_mkquery
//      printf_core
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-printf_core r5:[0..31]-printf_core r6:[0..31]-is_valid_hostname r8:[0..31]-__lookup_name
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
strnlen_entry:
l0040A940:
	r4_18 = memchr(r4, 0<32>, r5, out r5_19, out r6_21, out r8_22)
	branch r4_18 == 0<32> l0040A950
l0040A94C:
	r5Out = <invalid>
	r6Out = <invalid>
	r8Out = <invalid>
	return r4_18 - r4
l0040A950:
	r5Out = <invalid>
	r6Out = <invalid>
	r8Out = <invalid>
	return r5
strnlen_exit:


word32 strspn(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      inet_ntop
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-inet_ntop
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 sp
strspn_entry:
l0040A960:
	r7_8 = CONVERT(Mem5[r5:byte], byte, word32)
	branch r7_8 == 0<32> l0040AA18
l0040A97A:
	r6_18 = r4
	r9_21 = CONVERT(Mem16[r4:byte], byte, word32)
	branch Mem16[r5 + 1<i32>:byte] == 0<8> l0040AA0A
l0040A988:
	Mem32[fp - 0x10<32> + ((r7_8 >>u 5<32>) << 2<8>) - 32<i32>:word32] = 1<32> << r7_8
	goto l0040A9B2
l0040A99E:
	r4_42 = fp - 0x10<32> + ((r8_37 >>u 5<32>) << 2<8>)
	r7_44 = r7_39 | Mem36[r4_42 - 32<i32>:word32]
	Mem45[r4_42 - 32<i32>:word32] = r7_44
	branch r7_44 == 0<32> l0040A9C6
l0040A9B2:
	r5 = r5 + 1<32>
	r8_37 = CONVERT(Mem36[r5:byte], byte, word32)
	r7_39 = 1<32> << r8_37
	branch r8_37 != 0<32> l0040A99E
l0040A9C6:
	branch r9_21 == 0<32> l0040AA18
l0040A9CA:
	r4_120 = 1<32> << r9_21 & Mem52[((fp - 0x10<32>) + ((r9_21 >>u 5<32>) << 2<8>)) - 32<i32>:word32]
	branch r4_120 != 0<32> l0040A9F4
l0040A9E4:
	goto l0040AA06
l0040A9E6:
	branch (r7_68 & Mem52[((fp - 0x10<32>) + ((r5_66 >>u 5<32>) << 2<8>)) - 32<i32>:word32]) == 0<32> l0040AA02
l0040A9F4:
	r6_18 = r6_18 + 1<32>
	r5_66 = CONVERT(Mem52[r6_18:byte], byte, word32)
	r7_68 = 1<32> << r5_66
	branch r5_66 != 0<32> l0040A9E6
l0040AA02:
	r4_120 = r6_18 - r4
l0040AA06:
	return r4_120
l0040AA0A:
	branch r9_21 != r7_8 l0040AA18
l0040AA0E:
	r6_18 = r6_18 + 1<32>
	branch CONVERT(Mem16[r6_18:byte], byte, word32) == r9_21 l0040AA0E
l0040AA16:
	goto l0040AA02
l0040AA18:
	return 0<32>
strspn_exit:


word32 twoway_strstr(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strstr
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-strstr
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
twoway_strstr_entry:
l0040AA20:
	r6_26 = CONVERT(Mem23[r5:byte], byte, word32)
	r22_207 = r4
	branch r6_26 == 0<32> l0040AC1C
l0040AA3C:
	r20_173 = 0<32>
	branch Mem37[r4:byte] != 0<8> l0040AA4E
l0040AA44:
	goto l0040AB86
l0040AA46:
	branch Mem61[r4 + r20_173:byte] == 0<8> l0040AB86
l0040AA4E:
	r20_173 = r20_173 + 1<32>
	r5_48 = fp + 0xFFFFEFD0<32> + ((r6_26 >>u 5<32>) << 2<8>)
	r6_26 = CONVERT(Mem53[r5 + r20_173:byte], byte, word32)
	r7_59 = 1<32> << r6_26 | Mem53[r5_48 + 3040<i32>:word32]
	Mem60[fp + 0xFFFFEFD0<32> + (r6_26 << 2<8>) + 3072<i32>:word32] = r20_173
	Mem61[r5_48 + 3040<i32>:word32] = r7_59
	branch r6_26 != 0<32> l0040AA46
l0040AA7C:
	r21_152 = 1<32>
	r6_65 = 1<32>
	r16_66 = 0<32>
	r18_67 = 0xFFFFFFFF<32>
l0040AA86:
	r7_70 = r16_66 + r6_65
	r5_73 = r5 + r18_67
	branch r7_70 >=u r20_173 l0040AAAE
l0040AA8E:
	r5_78 = CONVERT(Mem61[r5_73 + r6_65:byte], byte, word32)
	r4_81 = CONVERT(Mem61[r5 + r7_70:byte], byte, word32)
	branch r4_81 == r5_78 l0040AB9A
l0040AA9A:
	branch r4_81 >=u r5_78 l0040AB8E
l0040AA9E:
	r21_152 = r7_70 - r18_67
l0040AAA2:
	r16_66 = r7_70
	r6_65 = 1<32>
	r7_70 = r7_70 + 1<32>
	r5_73 = r5 + r18_67
	branch r7_70 <u r20_173 l0040AA8E
l0040AAAE:
	r8_101 = r18_67 + 1<32>
	r17_102 = 1<32>
	r6_103 = 1<32>
	r16_104 = 0<32>
	r23_105 = 0xFFFFFFFF<32>
l0040AABC:
	r7_108 = r16_104 + r6_103
	r5_111 = r5 + r23_105
	branch r7_108 >=u r20_173 l0040AAE8
l0040AAC6:
	r4_116 = CONVERT(Mem61[r5_111 + r6_103:byte], byte, word32)
	r5_119 = CONVERT(Mem61[r5 + r7_108:byte], byte, word32)
	branch r4_116 == r5_119 l0040ABAC
l0040AAD2:
	branch r4_116 >=u r5_119 l0040ABA2
l0040AAD6:
	r17_102 = r7_108 - r23_105
l0040AADA:
	r16_104 = r7_108
	r6_103 = 1<32>
	r7_108 = r7_108 + 1<32>
	r5_111 = r5 + r23_105
	branch r7_108 <u r20_173 l0040AAC6
l0040AAE8:
	r30_139 = r23_105 + 1<32>
	branch r8_101 <u r30_139 l0040AAF6
l0040AAF0:
	r30_139 = r8_101
	r23_105 = r18_67
	r17_102 = r21_152
l0040AAF6:
	branch memcmp(r5, r5 + r17_102, r30_139, out r7_706, out r8_707, out r9_708) == 0<32> l0040AC14
l0040AB02:
	r7_189 = r20_173 + 0xFFFFFFFF<32> - r23_105
	dwLoc0454_410 = 0<32>
	branch r7_189 >=u r23_105 l0040AB14
l0040AB10_1:
	r7_189 = r23_105
l0040AB14:
	r17_102 = r7_189 + 1<32>
l0040AB18:
	r16_205 = r4
	r21_206 = 0<32>
l0040AB1C:
	branch r22_207 - r16_205 <u r20_173 l0040AB6E
l0040AB24:
	Mem216 = Mem333 (alias)
	r4_213 = r16_205 + r20_173
	r6_217 = CONVERT(Mem216[r4_213 - 1<i32>:byte], byte, word32)
	branch (1<32> << r6_217 & Mem216[((fp + 0xFFFFEFD0<32>) + ((r6_217 >>u 5<32>) << 2<8>)) + 3040<i32>:word32]) == 0<32> l0040ABB4
l0040AB44:
	r6_226 = fp + 0xFFFFEFD0<32> + (r6_217 << 2<8>)
	r7_228 = r20_173 - Mem216[r6_226 + 3072<i32>:word32]
	branch r7_228 == 0<32> l0040ABBA
l0040AB52:
	r17_102 = dwLoc0454_410
	branch r6_226 == 0<32> l0040AB62
l0040AB56:
	branch r21_206 == 0<32> l0040AB62
l0040AB5A:
	branch r7_228 >=u dwLoc0454_410 l0040AB62
l0040AB5E:
	r7_228 = r20_173 - dwLoc0454_410
l0040AB62:
	r16_205 = r16_205 + r7_228
	r21_206 = 0<32>
	branch r22_207 - r16_205 >=u r20_173 l0040AB24
l0040AB6E:
	r18_302 = r20_173 | 0x3F<32>
	r4_308 = memchr(r22_207, 0<32>, r18_302, out r5_709, out r6_710, out r8_711)
	branch r4_308 == 0<32> l0040AC10
l0040AB7C:
	branch r4_308 - r16_205 <u r20_173 l0040AB86
l0040AB82:
	r22_207 = r4_308
	goto l0040AB24
l0040AB86:
	r16_205 = 0<32>
l0040AB88:
	return r16_205
l0040AB8E:
	r18_67 = r16_66
	r21_152 = 1<32>
	r16_66 = r16_66 + 1<32>
	r6_65 = 1<32>
	goto l0040AA86
l0040AB9A:
	branch r6_65 == r21_152 l0040AAA2
l0040AB9E:
	r6_65 = r6_65 + 1<32>
	goto l0040AA86
l0040ABA2:
	r23_105 = r16_104
	r17_102 = 1<32>
	r16_104 = r16_104 + 1<32>
	r6_103 = 1<32>
	goto l0040AABC
l0040ABAC:
	branch r17_102 == r6_103 l0040AADA
l0040ABB0:
	r6_103 = r6_103 + 1<32>
	goto l0040AABC
l0040ABB4:
	r16_205 = r4_213
	r21_206 = 0<32>
	goto l0040AB1C
l0040ABBA:
	r6_232 = r30_139
	branch r21_206 <u r30_139 l0040ABC4
l0040ABC0_1:
	r6_232 = r21_206
l0040ABC4:
	r7_235 = r6_232
	r6_239 = CONVERT(Mem216[r5 + r6_232:byte], byte, word32)
	branch r6_239 != 0<32> l0040ABD6
l0040ABCC:
	goto l0040ABE8
l0040ABCE:
	r7_235 = r7_235 + 1<32>
	r6_239 = CONVERT(Mem216[r5 + r7_235:byte], byte, word32)
	branch r6_239 == 0<32> l0040ABE8
l0040ABD6:
	branch CONVERT(Mem216[r16_205 + r7_235:byte], byte, word32) == r6_239 l0040ABCE
l0040ABDE:
	r21_206 = 0<32>
	r16_205 = r16_205 + (r7_235 - r23_105)
	goto l0040AB1C
l0040ABE8:
	branch r21_206 >=u r30_139 l0040AB88
l0040ABEC:
	r7_265 = r23_105
	branch CONVERT(Mem216[r16_205 + r23_105:byte], byte, word32) != CONVERT(Mem216[r5 + r23_105:byte], byte, word32) l0040AC0A
l0040ABF8:
	branch r21_206 >=u r7_265 l0040AB88
l0040ABFC:
	r7_265 = r7_265 + 0xFFFFFFFF<32>
	branch CONVERT(Mem216[r5 + r7_265:byte], byte, word32) == CONVERT(Mem216[r16_205 + r7_265:byte], byte, word32) l0040ABF8
l0040AC0A:
	r16_205 = r16_205 + r17_102
	goto l0040AB1C
l0040AC10:
	r22_207 = r22_207 + r18_302
	goto l0040AB24
l0040AC14:
	dwLoc0454_410 = r20_173 - r17_102
	goto l0040AB18
l0040AC1C:
	r20_173 = 0<32>
	r30_139 = 0<32>
	r23_105 = 0xFFFFFFFF<32>
	r17_102 = 1<32>
	goto l0040AAF6
twoway_strstr_exit:


word32 strstr(word32 r4, word32 r5, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      name_from_hosts
//      __lookup_serv
//      fn00407D04
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2:[0..31]-__lookup_serv r4:[0..31]-__lookup_serv
// Trashed: r10 r11 r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
strstr_entry:
l0040AC28:
	r6_6 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r6_6 != 0<32> l0040AC2E
l0040AC2C:
	r4Out = r4
	return r2
l0040AC2E:
	r4_17 = strchr(r4, r6_6)
	branch r4_17 == 0<32> l0040ACB2
l0040AC3A:
	r5_24 = CONVERT(Mem10[r5 + 1<i32>:byte], byte, word32)
	branch r5_24 == 0<32> l0040ACB6
l0040AC3E:
	r8_28 = CONVERT(Mem10[r4_17 + 1<i32>:byte], byte, word32)
	branch r8_28 == 0<32> l0040ACB2
l0040AC46:
	r9_29 = CONVERT(Mem10[r5 + 2<i32>:byte], byte, word32)
	branch r9_29 == 0<32> l0040ACB8
l0040AC4E:
	r10_55 = CONVERT(Mem10[r4_17 + 2<i32>:byte], byte, word32)
	branch r10_55 == 0<32> l0040ACB2
l0040AC56:
	r11_56 = CONVERT(Mem10[r5 + 3<i32>:byte], byte, word32)
	branch r11_56 == 0<32> l0040AC76
l0040AC5E:
	r2 = CONVERT(Mem10[r4_17 + 3<i32>:byte], byte, word32)
	branch r2 == 0<32> l0040ACB2
l0040AC66:
	branch Mem10[r5 + 4<i32>:byte] == 0<8> l0040ACDC
l0040AC6C:
l0040AC72_thunk_twoway_strstr:
	r4Out = twoway_strstr(r4_17, r5)
	return r2
l0040AC76:
	r9_67 = r5_24 << 0x10<32> | CONVERT(Mem10[r5:byte], byte, word32) << 0x18<32> | r9_29 << 8<32>
	r6_68 = CONVERT(Mem10[r4_17:byte], byte, word32) << 0x18<32> | r8_28 << 0x10<32> | r10_55 << 8<32>
	r4_69 = r4_17 + 2<32> + 0xFFFFFFFE<32>
l0040ACA4:
	branch r9_67 == r6_68 l0040AD2A
l0040ACA8:
	r4_69 = r4_69 + 1<32>
	r7_80 = CONVERT(Mem10[r4_69:byte], byte, word32)
	r6_68 = (r6_68 | r7_80) << 8<32>
	branch r7_80 != 0<32> l0040ACA4
l0040ACB2:
	r4Out = 0<32>
	return r2
l0040ACB6:
	r4Out = r4_17
	return r2
l0040ACB8:
	r4_31 = r4_17 + 1<32> + 0xFFFFFFFF<32>
	r5_35 = r5_24 | CONVERT(Mem10[r5:byte], byte, word32) << 8<32>
	r7_36 = CONVERT(Mem10[r4_17:byte], byte, word32) << 8<32> | r8_28
l0040ACC8:
	branch r5_35 == r7_36 l0040AD22
l0040ACCC:
	r4_31 = r4_31 + 1<32>
	r6_48 = CONVERT(Mem10[r4_31:byte], byte, word32)
	r7_36 = (r7_36 << 8<32> | r6_48) & 0xFFFF<32>
	branch r6_48 != 0<32> l0040ACC8
l0040ACD8:
	r4Out = 0<32>
	return r2
l0040ACDC:
	r5_103 = r5_24 << 0x10<32> | CONVERT(Mem10[r5:byte], byte, word32) << 0x18<32> | r11_56 | r9_29 << 8<32>
	r6_104 = CONVERT(Mem10[r4_17:byte], byte, word32) << 0x18<32> | r8_28 << 0x10<32> | r2 | r10_55 << 8<32>
	r4_105 = r4_17 + 3<32> + 0xFFFFFFFD<32>
l0040AD12:
	branch r5_103 == r6_104 l0040AD26
l0040AD14:
	r4_105 = r4_105 + 1<32>
	r7_117 = CONVERT(Mem10[r4_105:byte], byte, word32)
	r6_104 = r6_104 << 8<32> | r7_117
	branch r7_117 != 0<32> l0040AD12
l0040AD1E:
	r4Out = 0<32>
	return r2
l0040AD22:
	r4Out = r4_31 + 0<32>
	return r2
l0040AD26:
	r4Out = r4_105 + 0<32>
	return r2
l0040AD2A:
	r4Out = r4_69 + 0<32>
	return r2
strstr_exit:


void __lock(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __simple_malloc
//      __ofl_lock
//      __synccall
//      rewinddir
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__lock_entry:
l0040AD30:
	branch Mem7[0x0045443C<p32>:word32] != 0<32> l0040AD46
l0040AD3C:
	return
l0040AD3E:
	__wait(r4, r4 + 4<32>, 1<32>, 1<32>, out r4_72, out r5_73, out r8_74, out r9_75)
l0040AD46:
	__sync(0<32>)
l0040AD4A:
	r5_15 = __load_linked<word32>(&Mem7[r4:word32])
	branch __store_conditional<word32>(&Mem7[r4:word32], 1<32>) == 0<32> l0040AD4A
l0040AD58:
	__sync(0<32>)
	branch r5_15 != 0<32> l0040AD3E
l0040AD5E:
	return
__lock_exit:


void __unlock(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __simple_malloc
//      __ofl_unlock
//      __synccall
//      rewinddir
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__unlock_entry:
l0040AD60:
	branch Mem7[r4:word32] == 0<32> l0040AD98
l0040AD68:
	__sync(0<32>)
	__sync(0<32>)
	branch Mem12[r4 + 4<i32>:word32] == 0<32> l0040AD98
l0040AD76:
	__syscall(out r4_20, out r5_76, out r6_77, out r7_78, out r8_79, out r9_80)
	branch r4_20 != 0xFFFFFFDA<32> l0040AD98
l0040AD8A:
l0040AD94_thunk___syscall:
	__syscall(out r4_81, out r5_82, out r6_83, out r7_84, out r8_85, out r9_86)
	return
l0040AD98:
	return
__unlock_exit:


word32 __syscall_cp_c(word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __syscall_cp
// MayUse: 
// LiveOut: r2:[0..31]-__syscall_cp r4:[0..31]-__syscall_cp r5:[0..31]-__syscall_cp r6:[0..31]-__syscall_cp r8:[0..31]-__syscall_cp
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__syscall_cp_c_entry:
l0040ADA0:
l0040ADA0_thunk___syscall:
	r2_4 = __syscall(out r4_6, out r5_7, out r6_8, out r7_16, out r8_10, out r9_17)
	r4Out = r4_6
	r5Out = r5_7
	r6Out = r6_8
	r8Out = r8_10
	return r2_4
__syscall_cp_c_exit:


word32 __syscall_cp(word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      connect
//      recvfrom
//      recvmsg
//      sendmsg
//      sendto
//      poll
//      close
//      write
//      open64
//      __timedwait_cp
// MayUse: 
// LiveOut: r2:[0..31]-close r4:[0..31]-open64 r5:[0..31]-connect r6:[0..31]-close r8:[0..31]-close
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__syscall_cp_entry:
l0040ADA4:
l0040ADA4_thunk___syscall_cp_c:
	r2_4 = __syscall_cp_c(out r4_6, out r5_7, out r6_8, out r8_10)
	r4Out = r4_6
	r5Out = r5_7
	r6Out = r6_8
	r8Out = r8_10
	return r2_4
__syscall_cp_exit:


word32 __wait(word32 r4, word32 r5, word32 r6, word32 r7, word32 & r4Out, word32 & r5Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      alloc_fwd
//      alloc_rev
//      free
//      malloc
//      flockfile
//      __lock
//      __lockfile
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r2:[0..31]-__lockfile r4:[0..31]-malloc r5:[0..31]-__lockfile r8:[0..31]-__lockfile r9:[0..31]-__lockfile
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
__wait_entry:
l0040ADB0:
	branch r7 != 0<32> l0040ADBC
l0040ADB8_1:
l0040ADBC:
	r7_20 = 0x65<32>
	goto l0040ADCC
l0040ADC2:
	branch Mem13[r4:word32] != r6 l0040AE08
l0040ADC8:
	__sync(0<32>)
l0040ADCC:
	r7_20 = r7_20 + 0xFFFFFFFF<32>
	branch r7_20 == 0<32> l0040ADEC
l0040ADD0:
	branch r5 == 0<32> l0040ADC2
l0040ADD2:
	branch Mem13[r5:word32] == 0<32> l0040ADC2
l0040ADD6:
	__sync(0<32>)
l0040ADDA:
	branch __store_conditional<word32>(&Mem13[r5:word32], __load_linked<word32>(&Mem13[r5:word32]) + 1<32>) == 0<32> l0040ADDA
l0040ADE6:
	__sync(0<32>)
	goto l0040ADEE
l0040ADEC:
	branch r5 != 0<32> l0040ADD6
l0040ADEE:
	branch r6 == Mem13[r4:word32] l0040AE0A
l0040ADF2:
	branch r5 == 0<32> l0040AE08
l0040ADF4:
	__sync(0<32>)
l0040ADF8:
	branch __store_conditional<word32>(&Mem13[r5:word32], __load_linked<word32>(&Mem13[r5:word32]) + 0xFFFFFFFF<32>) == 0<32> l0040ADF8
l0040AE04:
	__sync(0<32>)
l0040AE08:
	r4Out = r4
	r5Out = r5
	r8Out = r8
	r9Out = r9
	return r2
l0040AE0A:
	r2 = __syscall(out r4, out r5, out r6_217, out r7_218, out r8, out r9)
	branch r4 != 0xFFFFFFDA<32> l0040ADEE
l0040AE1C:
	r2 = __syscall(out r4, out r5, out r6_219, out r7_220, out r8, out r9)
	goto l0040ADEE
__wait_exit:


void __do_cleanup_push()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      _pthread_cleanup_push
//      _pthread_cleanup_pop
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__do_cleanup_push_entry:
l0040AE30:
	return
__do_cleanup_push_exit:


void _pthread_cleanup_push(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __res_msend_rc
//      sem_wait
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r25
// Preserved: sp
_pthread_cleanup_push_entry:
l0040AE32:
	Mem6[r4:word32] = r5
	Mem8[r4 + 4<i32>:word32] = r6
l0040AE36_thunk___do_cleanup_push:
	__do_cleanup_push()
	return
_pthread_cleanup_push_exit:


void _pthread_cleanup_pop(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __res_msend_rc
//      sem_wait
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r25 r4 r5 r7
// Preserved: r16 r17 ra sp
_pthread_cleanup_pop_entry:
l0040AE3A:
	__do_cleanup_push()
	branch r5 == 0<32> l0040AE4E
l0040AE44:
	call Mem9[r4:word32] (retsize: 0;)
		uses: Mem:Mem9,r4:Mem9[r4 + 4<i32>:word32],r5:r5,r7:r7_28
		defs: r7:r7_28
	return
l0040AE4E:
	return
_pthread_cleanup_pop_exit:


word32 __pthread_setcancelstate(word32 r4, word32 r5, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __lookup_name
//      fn00407A82
//      __synccall
//      __timedwait
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-fn00407A82 r7:[0..31]-__timedwait
// Trashed: r25 r3 r4 r7
// Preserved: sp
__pthread_setcancelstate_entry:
l0040AE50:
	r7_11 = 0x16<32>
	branch r4 >=u 3<32> l0040AE68
l0040AE56:
	r3_6 = __read_user_local()
	branch r5 == 0<32> l0040AE62
l0040AE5C:
l0040AE62:
	Mem14[r3_6 - 128<i32>:word32] = r4
	r7_11 = 0<32>
l0040AE68:
	r7Out = r7_11
	return r7_11
__pthread_setcancelstate_exit:


word32 pthread_sigmask(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sigprocmask
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-sigprocmask
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
pthread_sigmask_entry:
l0040AE70:
	r4_13 = 0x16<32>
	branch r4 >=u 3<32> l0040AEA6
l0040AE7C:
	__syscall(out r4_22, out r5_72, out r6_73, out r7_74, out r8_75, out r9_76)
	branch r4_22 == 0<32> l0040AE92
l0040AE8C:
	return -r4_22
l0040AE92:
	r4_13 = 0<32>
	branch r6 == 0<32> l0040AEA6
l0040AE96:
	__ext<word32,word32>(Mem7[r6:word32], 0<32>, 0x1F<32>)
	__ins<word32,word32>(Mem31[r6 + 4<i32>:word32], 0<32>, 0<32>, 1<32>)
l0040AEA6:
	return r4_13
pthread_sigmask_exit:


void cgt_init(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
cgt_init_entry:
l0040AEB0:
	r4_19 = __vdsosym(0x00412044<p32>, 0x0041202C<p32>)
	__sync(0<32>)
l0040AECA:
	branch 0x0040AEB0<p32> != __load_linked<word32>(&Mem9[0x004303A0<p32>:word32]) l0040AEE0
l0040AED4:
	branch __store_conditional<word32>(&Mem9[0x004303A0<p32>:word32], r4_19) == 0<32> l0040AECA
l0040AEE0:
	__sync(0<32>)
	branch r4_19 != 0<32> l0040AEEC
l0040AEE6:
	return
l0040AEEC:
	call r4_19 (retsize: 0;)
		uses: Mem:Mem9,r4:r4,r5:r5
	return
cgt_init_exit:


word32 __clock_gettime(word32 r4, word32 r5, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn004021B0
//      res_mkquery
//      mtime
//      __synccall
//      __timedwait_cp
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2:[0..31]-mtime r3:[0..31]-gettimeofday r4:[0..31]-__timedwait_cp r5:[0..31]-mtime r6:[0..31]-__timedwait_cp r7:[0..31]-__timedwait_cp r8:[0..31]-mtime
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__clock_gettime_entry:
l0040AEF4:
	r7_11 = Mem9[0x004303A0<p32>:word32]
	branch r7_11 == 0<32> l0040AF12
l0040AF00:
	call r7_11 (retsize: 0;)
		uses: Mem:Mem9,r3:r3_78,r4:r4,r5:r5
		defs: r2:r2_75,r3:r3_78,r4:r4_17,r5:r5_18,r6:r6_19,r7:r7_16,r8:r8_76
	branch r4_17 == 0<32> l0040AF3C
l0040AF04:
	r6_105 = 0xFFFFFFEA<32>
	branch r4_17 != 0xFFFFFFEA<32> l0040AF12
l0040AF0A:
l0040AF0E_thunk___syscall_ret:
	r3Out = __syscall_ret(r4_17, out r4_70, out r7_71)
	r4Out = r4_70
	r5Out = r5_102
	r6Out = r6_105
	r7Out = r7_71
	r8Out = r8_110
	return r2_27
l0040AF12:
	r2_27 = __syscall(out r4_17, out r5_102, out r6_105, out r7_123, out r8_110, out r9_124)
	branch r4_17 != 0xFFFFFFDA<32> l0040AF0A
l0040AF22:
	r4_17 = 0xFFFFFFEA<32>
	branch r4 != 0<32> l0040AF0A
l0040AF28:
	r2_27 = __syscall(out r4_125, out r5_102, out r6_126, out r7_127, out r8_110, out r9_128)
	r6_106 = 0x3E8<32>
	r7_108 = Mem9[r5 + 4<i32>:word32] *s 0x3E8<32>
l0040AF3C:
	r3Out = r3
	r4Out = 0<32>
	r5Out = r5_102
	r6Out = r6_106
	r7Out = r7_108
	r8Out = r8_110
	return r2_27
__clock_gettime_exit:


word32 gettimeofday(word32 r4, word32 & r4Out, word32 & r6Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_send_probe
//      ping4_parse_reply
//      fn004021B0
//      main_loop
//      build_echo
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r17:[0..31]-fn004021B0 r3:[0..31]-fn004021B0 r4:[0..31]-fn004021B0 r6:[0..31]-fn004021B0
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
gettimeofday_entry:
l0040AF40:
	branch r4 == 0<32> l0040AF5E
l0040AF46:
	__clock_gettime(0<32>, &tLoc18, out r3, out r4_67, out r5_68, out r6_69, out r7_70, out r8_71)
	r6 = 0x3E8<32>
	r17 = Mem7[&tLoc18 + 4<i32>:word32]
l0040AF5E:
	r4Out = 0<32>
	r6Out = r6
	r17Out = r17
	return r3
gettimeofday_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l0040AF70:
	return
dummy_exit:


word32 close(word32 & r4Out, word32 & r6Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ping4_run
//      ping6_run
//      __lookup_name
//      __res_msend_rc
//      __synccall
// MayUse: 
// LiveOut: r2:[0..31]-__res_msend_rc r4:[0..31]-__res_msend_rc r6:[0..31]-__res_msend_rc r8:[0..31]-__res_msend_rc
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
close_entry:
l0040AF72:
	__aio_close()
	r2_16 = __syscall_cp(out r4_18, out r5_46, out r6_20, out r8_22)
	branch (r4_18 ^ 0xFFFFFFFC<32>) != 0<32> l0040AF94
l0040AF90_1:
	r4_18 = 0<32>
l0040AF94:
l0040AF94_thunk___syscall_ret:
	__syscall_ret(r4_18, out r4_32, out r7_47)
	r4Out = r4_32
	r6Out = r6_20
	r8Out = r8_22
	return r2_16
close_exit:


word32 geteuid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      limit_capabilities
// MayUse: 
// LiveOut: r4:[0..31]-limit_capabilities
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
geteuid_entry:
l0040AFA0:
l0040AFA4_thunk___syscall:
	__syscall(out r4_7, out r5_13, out r6_14, out r7_15, out r8_16, out r9_17)
	return r4_7
geteuid_exit:


word32 getpid(word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setup
//      ping6_run
// MayUse: 
// LiveOut: r2:[0..31]-ping6_run r4:[0..31]-setup
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
getpid_entry:
l0040AFB0:
l0040AFB4_thunk___syscall:
	r2_5 = __syscall(out r4_7, out r5_14, out r6_15, out r7_16, out r8_17, out r9_18)
	r4Out = r4_7
	return r2_5
getpid_exit:


word32 getuid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E82
// MayUse: 
// LiveOut: r4:[0..31]-fn00401E82
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
getuid_entry:
l0040AFC0:
l0040AFC4_thunk___syscall:
	__syscall(out r4_7, out r5_13, out r6_14, out r7_15, out r8_16, out r9_17)
	return r4_7
getuid_exit:


word32 isatty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      setup
// MayUse: 
// LiveOut: r4:[0..31]-setup
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
isatty_entry:
l0040AFD0:
	__syscall(out r4_14, out r5_24, out r6_25, out r7_26, out r8_27, out r9_28)
	return CONVERT(r4_14 <u 1<32>, bool, word32)
isatty_exit:


word32 seteuid(word32 r0, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      limit_capabilities
//      modify_capability
// MayUse:  r0:[0..31]
// LiveOut: r17:[0..31]-modify_capability r2:[0..31]-modify_capability r3:[0..31]-modify_capability r4:[0..31]-limit_capabilities r6:[0..31]-modify_capability r7:[0..31]-modify_capability r8:[0..31]-limit_capabilities
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
seteuid_entry:
l0040AFF0:
l0040AFF8_thunk___setxid:
	r2_12 = __setxid(r0, out r3_14, out r4_15, out r6_17, out r7_18, out r8_19, out r17_11)
	r3Out = r3_14
	r4Out = r4_15
	r6Out = r6_17
	r7Out = r7_18
	r8Out = r8_19
	r17Out = r17_11
	return r2_12
seteuid_exit:


word32 setuid(word32 r0, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      drop_capabilities
// MayUse:  r0:[0..31]
// LiveOut: r3:[0..31]-drop_capabilities r4:[0..31]-drop_capabilities
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
setuid_entry:
l0040B000:
l0040B008_thunk___setxid:
	__setxid(r0, out r3_14, out r4_15, out r6_22, out r7_23, out r8_24, out r17_25)
	r4Out = r4_15
	return r3_14
setuid_exit:


void do_setxid(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
do_setxid_entry:
l0040B010:
	branch Mem9[r4 + 16<i32>:word32] > 0<32> l0040B046
l0040B01A:
	branch fn0040B048() == 0<32> l0040B044
l0040B02A:
	branch Mem9[r4 + 16<i32>:word32] != 0<32> l0040B044
l0040B02E:
	__block_all_sigs()
	fn0040B048()
	fn0040B048()
l0040B044:
l0040B046:
	return
do_setxid_exit:


word32 fn0040B048()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      do_setxid
// MayUse: 
// LiveOut: r4:[0..31]-do_setxid
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040B048_entry:
l0040B048:
l0040B048_thunk___syscall:
	__syscall(out r4_6, out r5_12, out r6_13, out r7_14, out r8_15, out r9_16)
	return r4_6
fn0040B048_exit:


word32 __setxid(word32 r0, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      seteuid
//      setuid
// MayUse:  r0:[0..31]
// LiveOut: r17:[0..31]-seteuid r2:[0..31]-seteuid r3:[0..31]-setuid r4:[0..31]-setuid r6:[0..31]-seteuid r7:[0..31]-seteuid r8:[0..31]-seteuid
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__setxid_entry:
l0040B04C:
	r4_26 = __synccall(r0, 0x0040B010<p32>, fp - 0x24<32>)
	branch r4_26 == 0<32> l0040B076
l0040B068:
	branch r4_26 <= 0<32> l0040B074
l0040B06C:
	r3_25 = __errno_location(out r4_86)
l0040B074:
	r4_26 = 0xFFFFFFFF<32>
l0040B076:
	r3Out = r3_25
	r4Out = r4_26
	r6Out = r6_28
	r7Out = r7_29
	r8Out = r8_30
	r17Out = 0xFFFFFFFF<32>
	return r2_23
__setxid_exit:


word32 write()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401BA0
//      write_stdout
//      write_stdout
// MayUse: 
// LiveOut: r4:[0..31]-write_stdout
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
write_entry:
l0040B080:
	__syscall_cp(out r4_19, out r5_32, out r6_33, out r8_34)
l0040B096_thunk___syscall_ret:
	__syscall_ret(r4_19, out r4_29, out r7_35)
	return r4_29
write_exit:


word32 isalnum(word32 r4, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      is_valid_hostname
//      isalnum_l
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-is_valid_hostname r6:[0..31]-is_valid_hostname r7:[0..31]-is_valid_hostname
// Trashed: r25 r4 r6 r7
// Preserved: sp
isalnum_entry:
l0040B0A0:
	r6_10 = 1<32>
	r7_7 = (r4 | 0x20<32>) + 0xFFFFFF9F<32>
	branch r7_7 <u 0x1A<32> l0040B0B6
l0040B0AE:
	r6_10 = CONVERT(r4 <u 0x3A<32>, bool, word32)
l0040B0B6:
	r6Out = r6_10
	r7Out = r7_7
	return r6_10
isalnum_exit:


void isalnum_l(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: sp
isalnum_l_entry:
l0040B0BA:
l0040B0BA_thunk_isalnum:
	isalnum(r4, out r6_9, out r7_10)
	return
isalnum_l_exit:


word32 __init_tp(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __init_tls
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__init_tls
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__init_tp_entry:
l0040B0C0:
	Mem12[r4:word32] = r4
	r4_15 = __set_thread_area()
	r7_21 = 0xFFFFFFFF<32>
	branch r4_15 < 0<32> l0040B0FC
l0040B0D4:
	branch r4_15 != 0<32> l0040B0E0
l0040B0D6:
	Mem24[0x00454430<p32>:word32] = 1<32>
l0040B0E0:
	__syscall(out r4_63, out r5_64, out r6_65, out r7_66, out r8_67, out r9_68)
	Mem37[r4 + 120<i32>:word32] = 0x00454458<p32>
	Mem39[r4 + 100<i32>:word32] = r4 + 0x64<32>
	r7_21 = 0<32>
l0040B0FC:
	return r7_21
__init_tp_exit:


word32 __copy_tls(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __init_tls
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__init_tls
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__copy_tls_entry:
l0040B100:
	r16_28 = r4 + (Mem15[0x00454448<p32>:word32] + (~Mem15[0x00454450<p32>:word32] << 2<8>))
	r19_30 = Mem15[0x00454444<p32>:word32]
	r17_31 = r4 + (Mem15[0x0045444C<p32>:word32] + 0xFFFFFFFF<32> & 0xFFFFFF50<32> - r4)
	r20_32 = r16_28 + 4<32>
	goto l0040B142
l0040B12C:
	r6_36 = Mem34[r19_30 + 8<i32>:word32]
	r4_39 = r17_31 + (Mem34[r19_30 + 20<i32>:word32] + 0xB0<32>)
	Mem41[r20_32:word32] = r4_39
	memcpy(r4_39, Mem41[r19_30 + 4<i32>:word32], r6_36, out r3_114, out r5_115, out r6_116, out r7_117, out r8_118, out r9_119, out r11_120, out r12_121, out r13_122, out r14_123)
	r20_32 = r20_32 + 4<32>
	r19_30 = Mem41[r19_30:word32]
l0040B142:
	branch r19_30 != 0<32> l0040B12C
l0040B144:
	Mem66[r17_31 + 1<i32>:word32] = r16_28
	Mem67[r17_31 + 172<i32>:word32] = r16_28
	return r17_31
__copy_tls_exit:


void __init_tls(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __init_libc
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__init_tls_entry:
l0040B152:
	r6_10 = 0<32>
	r9_11 = Mem5[r4 + 20<i32>:word32]
	r7_110 = Mem5[r4 + 3<i32>:word32]
	goto l0040B17C
l0040B160:
	branch r8_111 != 2<32> l0040B18E
l0040B164:
	branch 0x00000000<p32> == 0<32> l0040B174
l0040B16E:
l0040B174:
	r9_11 = r9_11 + 0xFFFFFFFF<32>
	r7_110 = r7_110 + Mem5[r4 + 16<i32>:word32]
l0040B17C:
	branch r9_11 == 0<32> l0040B198
l0040B180:
	r8_111 = Mem5[r7_110:word32]
	branch r8_111 != 6<32> l0040B160
l0040B186:
	goto l0040B174
l0040B18E:
	branch (r8_111 ^ 7<32>) != 0<32> l0040B196
l0040B192_1:
	r6_10 = r7_110
l0040B196:
	goto l0040B174
l0040B198:
	branch r6_10 == 0<32> l0040B1BA
l0040B1A2:
	r6_26 = Mem24[r6_10 + 28<i32>:word32]
	Mem27[0x00432DEC<p32>:word32] = Mem24[r6_10 + 20<i32>:word32]
	Mem28[0x00432DF0<p32>:word32] = r6_26
l0040B1BA:
	r5_34 = Mem33[0x00432DEC<p32>:word32]
	r8_36 = Mem33[0x00432DF0<p32>:word32]
	r5_41 = (-(Mem33[0x00432DE4<p32>:word32] + r5_34) & r8_36 + 0xFFFFFFFF<32>) + r5_34
	branch r8_36 >=u 4<32> l0040B1DC
l0040B1D8:
l0040B1DC:
	r7_48 = Mem47[0x00432DF0<p32>:word32]
	r6_52 = __ins<word32,word32>(r7_48 + 0xBB<32> + r5_41, 0<32>, 0<32>, 1<32>)
	Mem55[0x00454448<p32>:word32] = r6_52
	Mem56[0x0045444C<p32>:word32] = r7_48
	r4_58 = 0x00432DF8<p32>
	branch r6_52 <=u 0xF4<32> l0040B20E
l0040B1F8:
	__syscall(out r4_58, out r5_173, out r6_174, out r7_175, out r8_176, out r9_177)
l0040B20E:
	branch __init_tp(__copy_tls(r4_58)) >= 0<32> l0040B222
l0040B21A:
	Mem102[r0:byte] = 0<8>
	__syscall<word32>(0<32>)
l0040B222:
	return
__init_tls_exit:


void _Exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7E
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_Exit_entry:
l0040B230:
l0040B238:
	__syscall(out r4_26, out r5_27, out r6_28, out r7_29, out r8_30, out r9_31)
	goto l0040B238
_Exit_exit:


word32 scanexp(word32 r4, word32 r5, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-decfloat r12:[0..31]-decfloat r2:[0..31]-decfloat r3:[0..31]-decfloat r4:[0..31]-decfloat r5:[0..31]-decfloat r6:[0..31]-decfloat r7:[0..31]-decfloat r8:[0..31]-__floatscan
// Trashed: r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
scanexp_entry:
l0040B250:
	r7_18 = Mem15[r4 + 4<i32>:word32]
	r9_110 = Mem15[r4 + 104<i32>:word32]
	branch r7_18 >=u r9_110 l0040B3BC
l0040B25E:
	r6_159 = r7_18 + 1<32>
	r17_106 = CONVERT(Mem38[r7_18:byte], byte, word32)
l0040B266:
	branch r17_106 == 0x2B<32> l0040B39E
l0040B26A:
	branch r17_106 == 0x2D<32> l0040B39E
l0040B26E:
	r7_157 = r17_106 + 0xFFFFFFD0<32>
	branch r7_157 >=u 0xA<32> l0040B334
l0040B276:
	r18_290 = 0<32>
l0040B278:
	r16_100 = 0<32>
	goto l0040B292
l0040B27C:
	r17_106 = CONVERT(Mem112[r7_105:byte], byte, word32)
	r10_115 = r17_106 + 0xFFFFFFD0<32>
	branch r17_106 >=u 0x3A<32> l0040B2C0
l0040B28E:
	branch r16_107 > 0xCCCCCFB<32> l0040B2C0
l0040B292:
	r16_107 = r17_106 + r16_100 * 0xA<32>
	r7_105 = Mem104[r4 + 4<i32>:word32]
	r16_100 = r16_107 + 0xFFFFFFD0<32>
	branch r7_105 <u r9_110 l0040B27C
l0040B2A8:
	r2 = __shgetc(r4, out r3, out r4_118, out r5_558, out r6_559, out r7_560, out r8_561, out r9_562, out r11, out r12)
	r9_110 = Mem104[r4 + 104<i32>:word32]
	r17_106 = r4_118
	r10_115 = r4_118 + 0xFFFFFFD0<32>
	branch r4_118 <u 0x3A<32> l0040B28E
l0040B2C0:
	r20_136 = r16_107 + 0xFFFFFFD0<32> >> 0x1F<32>
l0040B2C4:
	r6_138 = r16_100 << 2<32>
	r8_142 = r6_138 + r16_100
	r6_151 = (r8_142 << 1<32>) + r17_106
	r8 = r8_142 >>u 0x1F<32>
	r7_157 = CONVERT(r6_151 <u r8_142 << 1<32>, bool, word32) + ((CONVERT(r8_142 <u r6_138, bool, word32) + ((r20_136 << 2<32> | r16_100 >>u 0x1E<32>) + r20_136) << 1<32> | r8_142 >>u 0x1F<32>) + (r17_106 >> 0x1F<32>))
	r6_159 = CONVERT(r6_151 + 0xFFFFFFD0<32> <u r6_151, bool, word32)
	branch r10_115 >=u 0xA<32> l0040B37E
l0040B30C:
	branch r20_136 > 0x147AE14<32> l0040B356
l0040B310:
	branch r20_136 == 0x147AE14<32> l0040B3CC
l0040B314:
	r5_241 = Mem170[r4 + 4<i32>:word32]
	r16_100 = r6_151 + 0xFFFFFFD0<32>
	r20_136 = r6_159 + (r7_157 + 0xFFFFFFFF<32>)
	branch r5_241 >=u r9_110 l0040B36E
l0040B322:
	r17_106 = CONVERT(Mem267[r5_241:byte], byte, word32)
	r10_115 = r17_106 + 0xFFFFFFD0<32>
	goto l0040B2C4
l0040B330:
	branch r5 != 0<32> l0040B3D8
l0040B334:
	branch r9_110 == 0<32> l0040B3F2
l0040B338:
	r7_78 = Mem90[r4 + 4<i32>:word32]
l0040B33A:
	r7_157 = r7_78 + 0xFFFFFFFF<32>
	r16_100 = 0<32>
	r20_136 = 0<32>
l0040B344:
	r3Out = r3
	r4Out = r16_100
	r5Out = r20_136
	r6Out = r6_159
	r7Out = r7_157
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040B348:
	r2 = __shgetc(r4, out r3, out r4_221, out r5_568, out r6_159, out r7_157, out r8, out r9_569, out r11, out r12)
	r9_110 = Mem171[r4 + 104<i32>:word32]
	r10_115 = r4_221 + 0xFFFFFFD0<32>
l0040B356:
	branch r10_115 >=u 0xA<32> l0040B37E
l0040B35A:
	r7_157 = Mem171[r4 + 4<i32>:word32]
	branch r7_157 >=u r9_110 l0040B348
l0040B360:
	r6_159 = r7_157 + 1<32>
	r10_115 = CONVERT(Mem236[r7_157:byte], byte, word32) + 0xFFFFFFD0<32>
	goto l0040B356
l0040B36E:
	r2 = __shgetc(r4, out r3, out r4_251, out r5_563, out r6_564, out r7_565, out r8_566, out r9_567, out r11, out r12)
	r9_110 = Mem170[r4 + 104<i32>:word32]
	r17_106 = r4_251
	r10_115 = r4_251 + 0xFFFFFFD0<32>
	goto l0040B2C4
l0040B37E:
	branch r9_110 == 0<32> l0040B388
l0040B382:
	r7_157 = Mem169[r4 + 4<i32>:word32] + 0xFFFFFFFF<32>
l0040B388:
	branch r18_290 == 0<32> l0040B344
l0040B38A:
	r3Out = r3
	r16_205 = -r16_100
	r4Out = r16_205
	r7_206 = -r20_136
	r5Out = r7_206 - CONVERT(r16_205 >u 0<32>, bool, word32)
	r6Out = r6_159
	r7Out = r7_206
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040B39E:
	r7_45 = Mem44[r4 + 4<i32>:word32]
	branch r7_45 >=u r9_110 l0040B3E4
l0040B3A4:
	r6_159 = r7_45 + 1<32>
	r4_55 = CONVERT(Mem69[r7_45:byte], byte, word32)
l0040B3AC:
	r7_157 = r4_55 + 0xFFFFFFD0<32>
	branch r7_157 >=u 0xA<32> l0040B330
l0040B3B4:
	r18_290 = CONVERT(r17_106 == 0x2D<32>, bool, word32)
	r17_106 = r4_55
	goto l0040B278
l0040B3BC:
	r2 = __shgetc(r4, out r3, out r4_555, out r5, out r6_159, out r7_556, out r8, out r9_557, out r11, out r12)
	r9_110 = Mem22[r4 + 104<i32>:word32]
	r17_106 = r5
	goto l0040B266
l0040B3CC:
	branch r16_100 <=u 0x7AE147AD<32> l0040B314
l0040B3D6:
	goto l0040B356
l0040B3D8:
	branch r9_110 == 0<32> l0040B3F2
l0040B3DC:
	r7_78 = Mem76[r4 + 4<i32>:word32] + 0xFFFFFFFF<32>
	goto l0040B33A
l0040B3E4:
	r2 = __shgetc(r4, out r3, out r4_55, out r5, out r6_159, out r7_570, out r8, out r9_571, out r11, out r12)
	r9_110 = Mem52[r4 + 104<i32>:word32]
	r17_106 = r5
	goto l0040B3AC
l0040B3F2:
	r16_100 = 0<32>
	r20_136 = 0<32>
	goto l0040B344
scanexp_exit:


word32 decfloat(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-__floatscan r12:[0..31]-__floatscan r2:[0..31]-__floatscan r3:[0..31]-__floatscan r4:[0..31]-__floatscan r5:[0..31]-__floatscan r6:[0..31]-__floatscan r7:[0..31]-__floatscan
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
decfloat_entry:
l0040B3FA:
	dwLoc025C_1800 = r7
	branch r5 == 0x30<32> l0040B410
l0040B40C:
	goto l0040BAE8
l0040B410:
	r6_109 = Mem37[r4 + 104<i32>:word32]
l0040B414:
	r7_41 = Mem40[r4 + 4<i32>:word32]
	branch r7_41 >=u r6_109 l0040B62E
l0040B41A:
	dwLoc025C_1800 = r7_41 + 1<32>
	r5 = CONVERT(Mem61[r7_41:byte], byte, word32)
	branch r5 == 0x30<32> l0040B414
l0040B426:
	dwLoc0260_1804 = 1<32>
l0040B42A:
	branch r5 == 0x2E<32> l0040B836
l0040B42E:
	r21_128 = 0<32>
	r23_106 = 0<32>
	r18_104 = 0<32>
l0040B434:
	r19_1256 = 0<32>
	r22_137 = 0<32>
	r17_138 = 0<32>
	r30_1235 = 0<32>
	r20_140 = 0<32>
l0040B440:
	r7_144 = r5 + 0xFFFFFFD0<32>
	branch r7_144 <u 0xA<32> l0040B472
l0040B448:
	branch r5 != 0x2E<32> l0040B4CC
l0040B44C:
	branch r21_128 != 0<32> l0040B822
l0040B450:
	r23_106 = r22_137
	r18_104 = r17_138
	r21_128 = 1<32>
l0040B458:
	r7_1494 = Mem1493[r4 + 4<i32>:word32]
	branch r7_1494 >=u Mem1493[r4 + 104<i32>:word32] l0040B4C4
l0040B462:
	r6_109 = r7_1494 + 1<32>
	r5 = CONVERT(Mem1499[r7_1494:byte], byte, word32)
	dwLoc025C_1800 = r6_109
	r7_144 = r5 + 0xFFFFFFD0<32>
	branch r5 >=u 0x3A<32> l0040B448
l0040B472:
	branch r5 == 0x2E<32> l0040B44C
l0040B476:
	r6_1506 = r22_137 + 1<32>
	r22_137 = r6_1506
	r17_138 = CONVERT(r6_1506 <u r22_137, bool, word32) + r17_138
	branch r30_1235 >= 0x3D<32> l0040B602
l0040B486:
	r4_1528 = r20_140 + 1<32>
	branch (r5 ^ 0x30<32>) == 0<32> l0040B492
l0040B48E_1:
	r19_1256 = r6_1506
l0040B492:
	branch r20_140 == 0<32> l0040B618
l0040B496:
	r5_1542 = fp + 0xFFFFEFD0<32> + (r30_1235 << 2<8>)
	Mem1547[r5_1542 + 3584<i32>:word32] = r7_144 + Mem1518[r5_1542 + 3584<i32>:word32] * 0xA<32>
	branch r4_1528 != 9<32> l0040B63E
l0040B4B2:
	dwLoc0260_1804 = 1<32>
	r30_1235 = r30_1235 + 1<32>
	r7_1494 = Mem1558[r4 + 4<i32>:word32]
	r20_140 = 0<32>
	branch r7_1494 <u Mem1547[r4 + 104<i32>:word32] l0040B462
l0040B4C4:
	r2 = __shgetc(r4, out r3, out r4_1565, out r5_3685, out r6_109, out r7_3686, out r8_3687, out r9_3688, out r11, out r12)
	r5 = r4_1565
	goto l0040B440
l0040B4CC:
	branch r21_128 != 0<32> l0040B4D0
l0040B4CC_1:
	r23_106 = r22_137
l0040B4D0:
	branch r21_128 != 0<32> l0040B4D4
l0040B4D0_1:
	r18_104 = r17_138
l0040B4D4:
	r3_1252 = r3
	r11_1303 = r11
	r2_1278 = r2
	r12_1276 = r12
	r16_1236 = r4
	r17_163 = dwLoc0260_1804
	branch r7_144 == 0<32> l0040B646
l0040B4DA:
	r7_175 = r5 | 0x20<32>
	branch r7_175 == 0x25<32> l0040BAEE
l0040B4E2:
	branch r5 < 0<32> l0040B4F8
l0040B4E6:
	r7_175 = Mem159[r4 + 104<i32>:word32]
	branch r7_175 == 0<32> l0040B4F8
l0040B4EC:
	r7_218 = Mem159[r4 + 4<i32>:word32]
	r7_175 = r7_218 + 0xFFFFFFFF<32>
	dwLoc025C_1800 = r7_218 + 0xFFFFFFFF<32>
	r17_163 = dwLoc0260_1804
	branch r7_218 == 1<32> l0040B652
l0040B4F8:
	branch r4 == 0<32> l0040B826
l0040B4FE:
	branch r22_137 == r23_106 l0040BBA4
l0040B502:
	r7_330 = -((r6_109 >>u 0x1F<32>) + r6_109 >> 1<32>)
	branch r7_330 >> 0x1F<32> < r18_104 l0040BBF6
l0040B51A:
	branch r18_104 == r7_330 >> 0x1F<32> l0040BBF2
l0040B51E:
	r7_378 = r7_330 + 0xFFFFFF96<32> >> 0x1F<32>
	branch r18_104 < r7_378 l0040BB0C
l0040B52C:
	branch r18_104 == r7_378 l0040BB08
l0040B530:
	branch r20_140 == 0<32> l0040B59E
l0040B534:
	branch r20_140 >= 9<32> l0040B59C
l0040B538:
	r5_429 = r30_1235 << 2<32>
	r7_434 = Mem244[fp + 0xFFFFEFD0<32> + r5_429 + 3584<i32>:word32]
	r6_436 = r7_434 * 0xA<32>
	branch r20_140 == 8<32> l0040B592
l0040B550:
	r6_436 = r7_434 * 0x64<32>
	branch r20_140 == 7<32> l0040B592
l0040B55A:
	r6_436 = r7_434 * 0x3E8<32>
	branch r20_140 == 6<32> l0040B592
l0040B564:
	r6_436 = r7_434 * 0x2710<32>
	branch r20_140 == 5<32> l0040B592
l0040B56E:
	r6_436 = r7_434 * 0x186A0<32>
	branch r20_140 == 4<32> l0040B592
l0040B578:
	r6_436 = r7_434 * 0xF4240<32>
	branch r20_140 == 3<32> l0040B592
l0040B582:
	r6_436 = r7_434 * 0x989680<32>
	branch r20_140 != 1<32> l0040B592
l0040B58C:
	r6_436 = r7_434 * 0x5F5E100<32>
l0040B592:
	Mem456[fp + 0xFFFFEFD0<32> + r5_429 + 3584<i32>:word32] = r6_436
l0040B59C:
	r30_1235 = r30_1235 + 1<32>
l0040B59E:
	r4_r5_3635 = __floatsidf(0<32>, out r8_3689)
	r20_1353 = r23_106
	r4_477 = SLICE(r4_r5_3635, word32, 32) (alias)
	r5_478 = SLICE(r4_r5_3635, word32, 0) (alias)
	branch r19_1256 >= 9<32> l0040B668
l0040B5AE:
	branch r23_106 < r19_1256 l0040B668
l0040B5B2:
	branch r23_106 >= 0x12<32> l0040B668
l0040B5B6:
	branch r23_106 != 9<32> l0040B5C0
l0040B5BC:
	goto l0040BD24
l0040B5C0:
	branch r23_106 >= 9<32> l0040B5C8
l0040B5C4:
	goto l0040BCF8
l0040B5C8:
	r7_500 = r23_106 + 0xFFFFFFF7<32>
	r7_504 = r7_500 * 3<32> + (r7_500 << 2<32>)
	branch r7_504 >= 0x1F<32> l0040B5E0
l0040B5D8:
	branch r4 >>u r7_504 != 0<32> l0040B668
l0040B5E0:
	r4_r5_3691 = __floatsidf(Mem484[0x00413240<p32> + (r23_106 + 0xFFFFFFF6<32>) * 4<32>:word32], out r8_3692)
	r4_r5_1411 = __muldf3(__floatunsidf(r4), r4_r5_3635)
	r18_r19_3639 = r4_r5_3691 (alias)
	goto l0040BBD0
l0040B602:
	branch r5 == 0x30<32> l0040B458
l0040B606:
	r19_1256 = 0x45C<32>
	goto l0040B458
l0040B618:
	Mem1540[fp + 0xFFFFEFD0<32> + (r30_1235 << 2<8>) + 3584<i32>:word32] = r7_144
	r20_140 = 1<32>
	dwLoc0260_1804 = 1<32>
	goto l0040B458
l0040B62E:
	r2 = __shgetc(r4, out r3, out r4_45, out r5_3722, out r6_109, out r7_3723, out r8_3724, out r9_3725, out r11, out r12)
	r5 = r4_45
	branch r4_45 == 0x30<32> l0040B410
l0040B638:
	dwLoc0260_1804 = 1<32>
	goto l0040B42A
l0040B63E:
	r20_140 = r4_1528
	dwLoc0260_1804 = 1<32>
	goto l0040B458
l0040B646:
	branch r5 < 0<32> l0040B652
l0040B64A:
	branch Mem159[r4 + 104<i32>:word32] != 0<32> l0040B4EC
l0040B652:
	r3_1252 = __errno_location(out r4_3711)
l0040B65A:
	__shlim(r4, 0<32>, 0<32>, out r9_3712, out r11_1303)
	r6_1414 = 0<32>
	r7_1417 = 0<32>
	r4_240 = 0<32>
	r5_241 = 0<32>
l0040B662:
	r3Out = r3_1252
	r4Out = r4_240
	r5Out = r5_241
	r6Out = r6_1414
	r7Out = r7_1417
	r11Out = r11_1303
	r12Out = r12_1276
	return r2_1278
l0040B666:
	r30_1235 = r7_513
l0040B668:
	r7_513 = r30_1235 + 0xFFFFFFFF<32>
	branch Mem484[fp - 0x230<32> + r7_513 * 4<32>:word32] == 0<32> l0040B666
l0040B672:
	r7_1239 = r23_106 >> 0x1F<32>
	r17_1233 = r23_106 - ((SLICE(r23_106 *s64 0x38E38E39<32>, word32, 32) >> 1<32>) - r7_1239) * 9<32>
	branch r17_1233 == 0<32> l0040B70E
l0040B692:
	branch r23_106 < 0<32> l0040BCC6
l0040B696:
	r7_1239 = 8<32> - r17_1233
	r16_1236 = Mem484[0x00413240<p32> + r7_1239 * 4<32>:word32]
	branch r30_1235 == 0<32> l0040BD52
l0040B6A4:
	r5_537 = 0<32>
	r18_535 = 0<32>
	r7_1239 = 0<32>
	branch r16_1236 != r0 l0040B6B8
l0040B6B4_1:
	__syscall<word32>(7<32>)
l0040B6B8:
	goto l0040B6C0
l0040B6BA:
	r7_1239 = r7_1239 + 1<32>
	branch r30_1235 == r7_1239 l0040B6F4
l0040B6C0:
	r4_564 = Mem563[fp - 0x230<32> + r7_1239 * 4<32>:word32]
	branch r16_1236 != r0 l0040B6CC
l0040B6C8_1:
	__syscall<word32>(7<32>)
l0040B6CC:
	r6_572 = fp - 0x230<32> + r5_537
	r5_575 = r4_564 %u r16_1236
	branch r16_1236 != r0 l0040B6D6
l0040B6D2_1:
	__syscall<word32>(7<32>)
l0040B6D6:
	Mem588[fp - 0x230<32> + r7_1239 * 4<32>:word32] = r6_572
	r5_537 = r5_575 *s r19_1256
	branch r7_1239 != r18_535 l0040B6BA
l0040B6E2:
	branch r6_572 != 0<32> l0040B6BA
l0040B6E4:
	r7_1239 = r7_1239 + 1<32>
	r20_1353 = r20_1353 + 0xFFFFFFF7<32>
	r18_535 = r18_535 + 1<32> & 0x7F<32>
	branch r30_1235 != r7_1239 l0040B6C0
l0040B6F4:
	branch r5_537 == 0<32> l0040B704
l0040B6F6:
	r7_1239 = fp + 0xFFFFEFD0<32> + (r30_1235 << 2<8>)
	Mem613[r7_1239 + 3584<i32>:word32] = r5_537
	r30_1235 = r30_1235 + 1<32>
l0040B704:
	r17_1233 = r18_535
	r20_1353 = r20_1353 - r17_1233 + 9<32>
l0040B70E:
	dwLoc0260_1981 = 0<32>
l0040B710:
	branch r20_1353 < 0x12<32> l0040B72E
l0040B714:
	branch r20_1353 != 0x12<32> l0040B890
l0040B718:
	r7_1239 = Mem642[fp + 0xFFFFEFD0<32> + (r17_1233 << 2<8>) + 3584<i32>:word32]
	branch r7_1239 >u 0x89705E<32> l0040B890
l0040B72E:
	r16_1236 = r30_1235 + 0xFFFFFFFF<32>
	r17_1233 = dwLoc0260_1985
	r22_1237 = r16_1236 & 0x7F<32>
	r21_1238 = 0<32>
	dwLoc0260_1981 = r7_1239 + 0xFFFFFFE3<32>
l0040B740:
	r23_1244 = r22_1237 << 2<32>
	r5_1250 = Mem1249[fp + 0xFFFFEFD0<32> + r23_1244 + 3584<i32>:word32]
	r19_1256 = (r5_1250 << 0x1D<32>) + r21_1238
	r3_1252 = 0x3B9ACA00<32>
	r18_1259 = CONVERT(r19_1256 <u r5_1250 << 0x1D<32>, bool, word32) + (r5_1250 >>u 3<32>)
	branch r18_1259 != 0<32> l0040B774
l0040B770:
	branch r19_1256 <=u 0x3B9ACA00<32> l0040B7A8
l0040B774:
	__udivdi3(SEQ(r18_1259, r19_1256), 0x3B9ACA00<64>, r2_1278, 0x3B9ACA00<32>, r12_1276, out r3_3693, out r4_1283, out r5_3694, out r6_3695, out r7_3696, out r8_3697, out r9_3698, out r11_3699, out r13_1290)
	r2_1278 = __umoddi3(SEQ(r18_1259, r19_1256), 0x3B9ACA00<64>, r13_1290, out r3_1252, out r4_1261, out r8_3700, out r11_1303, out r12_1276)
	Mem1324[r23_1244 + (fp + 0xFFFFEFD0<32>) + 3584<i32>:word32] = r4_1261
	r21_1238 = r4_1283
	r7_1239 = r16_1236 & 0x7F<32>
	r6_1266 = r22_1237 + 0xFFFFFFFF<32>
	branch r22_1237 == r7_1239 l0040B7C2
l0040B79E:
	branch r22_1237 == dwLoc0260_1985 l0040B7D6
l0040B7A2:
	r22_1237 = r6_1266 & 0x7F<32>
	goto l0040B740
l0040B7A8:
	Mem1267[r23_1244 + (fp + 0xFFFFEFD0<32>) + 3584<i32>:word32] = r19_1256
	r4_1261 = r19_1256
	r7_1239 = r16_1236 & 0x7F<32>
	r21_1238 = 0<32>
	r6_1266 = r22_1237 + 0xFFFFFFFF<32>
	branch r22_1237 != r7_1239 l0040B79E
l0040B7C2:
	branch r22_1237 == dwLoc0260_1985 l0040B7D4
l0040B7C6:
	branch r4_1261 != 0<32> l0040B7CA
l0040B7C6_1:
	r30_1235 = r7_1239
l0040B7CA:
	r22_1237 = r6_1266 & 0x7F<32>
	r16_1236 = r30_1235 + 0xFFFFFFFF<32>
	goto l0040B740
l0040B7D4:
	r7_1239 = dwLoc0260_1985
l0040B7D6:
	dwLoc0260_1985 = dwLoc0260_1981
	branch r21_1238 == 0<32> l0040B710
l0040B7DA:
	r20_1353 = r20_1353 + 9<32>
	r17_1233 = dwLoc0260_1985 + 0xFFFFFFFF<32> & 0x7F<32>
	branch r30_1235 == r17_1233 l0040B7F8
l0040B7EA:
	r7_1239 = fp + 0xFFFFEFD0<32> + (r17_1233 << 2<8>)
	Mem1381[r7_1239 + 3584<i32>:word32] = r21_1238
	goto l0040B710
l0040B7F8:
	r7_1368 = fp + 0xFFFFEFD0<32> + ((r7_1239 + 0xFFFFFFFF<32> & 0x7F<32>) << 2<8>)
	Mem1375[r7_1368 + 3584<i32>:word32] = Mem1369[r7_1368 + 3584<i32>:word32] | Mem1369[((fp + 0xFFFFEFD0<32>) + (r7_1239 << 2<8>)) + 3584<i32>:word32]
	r30_1235 = r7_1239
	goto l0040B7EA
l0040B822:
	r5 = 0x2E<32>
	goto l0040B4D4
l0040B826:
	r4_r5_261 = __muldf3(__floatsidf(0<32>, out r8_3710), 0<64>)
	r3Out = r3_1252
	r4Out = SLICE(r4_r5_261, word32, 32)
	r5Out = SLICE(r4_r5_261, word32, 0)
	r6Out = 0<32>
	r7Out = 0<32>
	r11Out = r11_1303
	r12Out = r12_1276
	return r2_1278
l0040B836:
	r7_69 = Mem68[r4 + 4<i32>:word32]
	branch r7_69 >=u Mem68[r4 + 104<i32>:word32] l0040BC40
l0040B840:
	r6_109 = r7_69 + 1<32>
	dwLoc025C_1800 = r7_69 + 1<32>
	r5 = CONVERT(Mem87[r7_69:byte], byte, word32)
l0040B848:
	branch r5 != 0x30<32> l0040BCEC
l0040B84C:
	r6_109 = Mem94[r4 + 104<i32>:word32]
	r23_106 = 0<32>
	r18_104 = 0<32>
l0040B854:
	r5_99 = r23_106 + 0xFFFFFFFF<32>
	r7_102 = Mem101[r4 + 4<i32>:word32]
	r23_106 = r5_99
	r18_104 = CONVERT(r5_99 <u r23_106, bool, word32) + (r18_104 + 0xFFFFFFFF<32>)
	branch r7_102 >=u r6_109 l0040B880
l0040B86C:
	Mem125[r4 + 1<i32>:word32] = r7_102 + 1<32>
	r5 = CONVERT(Mem125[r7_102:byte], byte, word32)
	branch r5 == 0x30<32> l0040B854
l0040B874:
	r21_128 = 1<32>
	dwLoc0260_1804 = 1<32>
	goto l0040B434
l0040B880:
	r2 = __shgetc(r4, out r3, out r4_112, out r5_3714, out r6_109, out r7_3715, out r8_3716, out r9_3717, out r11, out r12)
	r5 = r4_112
	branch r4_112 != 0x30<32> l0040B874
l0040B88A:
	r6_109 = Mem101[r4 + 104<i32>:word32]
	goto l0040B854
l0040B890:
	r6_1653 = r17_1233 & 0x7F<32>
	r18_646 = r17_1233 + 1<32>
l0040B898:
	branch r30_1235 == r6_1653 l0040B97C
l0040B89C:
	r7_655 = Mem654[fp + 0xFFFFEFD0<32> + (r6_1653 << 2<8>) + 3584<i32>:word32]
	branch r7_655 <=u 0x89705E<32> l0040B97C
l0040B8B2:
	branch r7_655 != 0x89705F<32> l0040B8DA
l0040B8BC:
	r7_658 = r18_646 & 0x7F<32>
	branch r30_1235 == r7_658 l0040B97C
l0040B8C4:
	branch Mem654[fp + 0xFFFFEFD0<32> + (r7_658 << 2<8>) + 3584<i32>:word32] <=u 0xF2F09FF<32> l0040B97C
l0040B8DA:
	r23_665 = CONVERT(r20_1353 < 0x1C<32>, bool, word32)
	r2_1278 = 0x1DCD65<32>
	r7_668 = 1<32>
	branch r23_665 == 0<32> l0040B8F0
l0040B8EC_1:
	r2_1278 = 0x1DCD6500<32>
l0040B8F0:
	r11_1303 = 9<32>
	branch r23_665 == 0<32> l0040B8FC
l0040B8F8_1:
	r11_1303 = 1<32>
l0040B8FC:
	branch r23_665 != 0<32> l0040B900
l0040B8FC_1:
	r7_668 = 0x1FF<32>
l0040B900:
	r17_689 = dwLoc0260_1985
	dwLoc0260_1985 = r7_668 + r11_1303
	branch dwLoc0260_1985 == r30_1235 l0040B898
l0040B90C:
	r7_698 = dwLoc0260_1985
	r19_1256 = 0<32>
	goto l0040B91A
l0040B912:
	r7_698 = r22_703 & 0x7F<32>
	branch r30_1235 == (r22_703 & 0x7F<32>) l0040B956
l0040B91A:
	r4_704 = fp + 0xFFFFEFD0<32> + (r7_698 << 2<8>)
	r6_706 = Mem705[r4_704 + 3584<i32>:word32]
	r5_712 = (r6_706 >>u r11_1303) + r19_1256
	Mem715[r4_704 + 3584<i32>:word32] = r5_712
	r22_703 = r7_698 + 1<32>
	r19_1256 = (r6_706 & r7_668) *s r2_1278
	branch r7_698 != r17_689 l0040B912
l0040B940:
	branch r5_712 != 0<32> l0040B912
l0040B942:
	r17_689 = r18_646 & 0x7F<32>
	r7_698 = r22_703 & 0x7F<32>
	r20_1353 = r20_1353 + 0xFFFFFFF7<32>
	r18_646 = r17_689 + 1<32>
	branch r30_1235 != (r22_703 & 0x7F<32>) l0040B91A
l0040B956:
	branch r19_1256 == 0<32> l0040BAB6
l0040B95A:
	r6_733 = r30_1235 + 1<32>
	branch r17_689 == (r6_733 & 0x7F<32>) l0040BABC
l0040B966:
	Mem751[fp + 0xFFFFEFD0<32> + (r30_1235 << 2<8>) + 3584<i32>:word32] = r19_1256
	r6_1653 = r17_689 & 0x7F<32>
	r30_1235 = r6_733 & 0x7F<32>
	branch (r6_733 & 0x7F<32>) != r6_1653 l0040B89C
l0040B97C:
	r3_1193 = r3_1252 (alias)
	branch r20_1353 != 0x12<32> l0040B8DA
l0040B980:
	branch r30_1235 == r6_1653 l0040BBDC
l0040B984:
	r18_782 = r18_646 & 0x7F<32>
	r5_844 = SLICE(__adddf3(__floatunsidf(Mem785[fp + 0xFFFFEFD0<32> + (r6_1653 << 2<8>) + 3584<i32>:word32]), 0<64>), word32, 0) (alias)
	branch r18_782 == r30_1235 l0040BB8E
l0040B9A2:
	r16_827 = r16_1236 + 0x35<32>
	r4_r5_872 = __muldf3(__adddf3(__floatunsidf(Mem842[fp + 0xFFFFEFD0<32> + (r18_782 << 2<8>) + 3584<i32>:word32]), __muldf3(SEQ(dwLoc025C_1800, r5_844), SEQ(Mem808[0x4120278<32>:word32], Mem808[0x412027C<32>:word32]))), r4_r5_3635)
	r16_841 = r16_827 - r19_1256
	r7_868 = r5_478
	r5_876 = SLICE(r4_r5_872, word32, 0) (alias)
	branch r16_841 >= r5_478 l0040BADE
l0040B9E8:
	branch r16_841 < 0<32> l0040BCAA
l0040B9EC:
	r7_868 = r16_841
	branch r16_841 < 0x35<32> l0040BB3A
l0040B9F8:
	r18_r19_3650 = 0<64> (alias)
	r22_r23_3656 = r4_r5_872 (alias)
	qwLoc0240_3661 = 0<64> (alias)
l0040BA00:
	dwLoc023C_2110 = SLICE(qwLoc0240_3661, word32, 32) (alias)
	r7_982 = r6 + 2<32> & 0x7F<32>
	branch r30_1235 == r7_982 l0040BA7E
l0040BA0C:
	r6_1027 = 0x1DCD64FF<32>
	r7_993 = Mem992[fp + 0xFFFFEFD0<32> + (r7_982 << 2<8>) + 3584<i32>:word32]
	branch r7_993 >u 0x1DCD64FF<32> l0040BC24
l0040BA22:
	branch r7_993 != 0<32> l0040BA30
l0040BA24:
	branch r30_1235 == (r6 + 3<32> & 0x7F<32>) l0040BA4E
l0040BA30:
	r6_r7_3646 = SEQ(Mem992[0x4120288<32>:word32], Mem992[0x412028C<32>:word32]) (alias)
l0040BA40:
	r4_r5_1025 = __muldf3(r4_r5_3635, r6_r7_3646)
	r6_1027 = SLICE(r4_r5_1025, word32, 32)
	r18_r19_3650 = __adddf3(r18_r19_3650, r4_r5_1025) (alias)
l0040BA4E:
	branch 0x35<32> - r6_1027 < 2<32> l0040BA7E
l0040BA58:
	r20_1057 = Mem992[0x4120258<32>:word32]
	r21_1058 = Mem992[0x412025C<32>:word32]
	branch __nedf2(fmodl(r18_r19_3650, SEQ(r20_1057, r21_1058))) != 0<32> l0040BA7E
l0040BA74:
	r18_r19_3650 = __adddf3(r18_r19_3650, SEQ(r20_1057, r21_1058)) (alias)
l0040BA7E:
	r4_r5_1119 = __subdf3(SEQ(r6, SLICE(__adddf3(r22_r23_3656, r18_r19_3650), word32, 0)), qwLoc0240_3661)
	r30_1130 = r16_827 - r16_841
	r4_1133 = SLICE(r4_r5_1119, word32, 32) (alias)
	r5_1135 = SLICE(r4_r5_1119, word32, 0) (alias)
	r6_1131 = r30_1130 + 0xFFFFFFFF<32>
	r20_r21_3664 = r4_r5_1119 (alias)
	branch __ext<word32,word32>(dwLoc023C_2110, 0<32>, 0x1F<32>) >= r30_1130 + 0xFFFFFFFF<32> l0040BC48
l0040BAAA:
l0040BAB2_thunk_scalbnl:
	r4_1225 = scalbnl(r20_r21_3664, r6_1131, out r5_1226, out r6_1227, out r7_1228)
	r3Out = r3_1193
	r4Out = r4_1225
	r5Out = r5_1226
	r6Out = r6_1227
	r7Out = r7_1228
	r11Out = r11_1303
	r12Out = r12_1276
	return r2_1278
l0040BAB6:
	r6_1653 = r17_689 & 0x7F<32>
	goto l0040B898
l0040BABC:
	r7_741 = fp + 0xFFFFEFD0<32> + ((r30_1235 + 0xFFFFFFFF<32> & 0x7F<32>) << 2<8>)
	Mem746[r7_741 + 3584<i32>:word32] = Mem715[r7_741 + 3584<i32>:word32] | 1<32>
	r6_1653 = r6_733 & 0x7F<32>
	goto l0040B898
l0040BADE:
	branch r5_478 >= 0x35<32> l0040B9F8
l0040BAE6:
	goto l0040BB3A
l0040BAE8:
	dwLoc0260_1804 = 0<32>
	r6_109 = r6
	goto l0040B42A
l0040BAEE:
	r2_1278 = scanexp(r4, r5, out r3_1252, out r4_184, out r5_185, out r6_109, out r7_175, out r8_3713, out r11_1303, out r12_1276)
	branch r4_184 == 0<32> l0040BCCE
l0040BAF8:
	r4_204 = r4_184 + r23_106
	r17_163 = r9
	r23_106 = r4_204
	r18_104 = CONVERT(r4_204 <u r23_106, bool, word32) + (r18_104 + r5_185)
	goto l0040B4F8
l0040BB08:
	branch r23_106 >=u r7_330 + 0xFFFFFF96<32> l0040B530
l0040BB0C:
	r3_1252 = __errno_location(out r4_383)
	r4_r5_400 = __muldf3(__floatsidf(r4_383, out r8_3706), SEQ(Mem386[0x4120280<32>:word32], Mem386[0x4120284<32>:word32]))
	r6_1414 = Mem386[0x4120280<32>:word32]
	r7_1417 = Mem386[0x4120284<32>:word32]
	r4_r5_406 = __muldf3(r4_r5_400, SEQ(r6_1414, r7_1417))
	r4_240 = SLICE(r4_r5_406, word32, 32) (alias)
	r5_241 = SLICE(r4_r5_406, word32, 0) (alias)
	goto l0040B662
l0040BB3A:
	r6_882 = 0x69<32> - r7_868
	r10_881 = 0x35<32> - r7_868
l0040BB46:
	r19_900 = Mem898[0x412025C<32>:word32]
	r4_r5_3702 = scalbn(SEQ(Mem898[0x4120258<32>:word32], r19_900), r6_882, out r8_3703)
	r5_919 = copysignl(SLICE(r4_r5_3702, word32, 0), r5_876, out r8_3704)
	r4_r5_3670 = fmodl(r4_r5_872, scalbn(SEQ(r10_881, r19_900), r10_881, out r8_3705))
	r4_906 = SLICE(r4_r5_3702, word32, 32) (alias)
	r18_r19_3650 = r4_r5_3670 (alias)
	r22_r23_3656 = __adddf3(SEQ(r4_906, r5_919), __subdf3(r4_r5_872, r4_r5_3670)) (alias)
	qwLoc0240_3661 = SEQ(r4_906, r5_919) (alias)
	goto l0040BA00
l0040BB8E:
	r8_802 = r30_1235 + 1<32>
	Mem806[fp + 0xFFFFEFD0<32> + ((r8_802 & 0x7F<32>) << 2<8>) + 3580<i32>:word32] = 0<32>
	r30_1235 = r8_802 & 0x7F<32>
	goto l0040B9A2
l0040BBA4:
	branch r18_104 != r17_163 l0040B502
l0040BBA8:
	branch r18_104 > 0<32> l0040B502
l0040BBAC:
	branch r18_104 != 0<32> l0040BBB6
l0040BBAE:
	branch r23_106 <u 0xA<32> l0040BBB6
l0040BBB2:
	goto l0040B502
l0040BBB6:
	branch r7_175 >= 0x1F<32> l0040BBC4
l0040BBBC:
	branch r4 >>u r7_175 != 0<32> l0040B502
l0040BBC4:
	r18_r19_3639 = __floatsidf(0<32>, out r8_3709) (alias)
	r4_r5_1411 = __floatunsidf(r4) (alias)
l0040BBD0:
	r4_r5_1424 = __muldf3(r18_r19_3639, r4_r5_1411)
	r6_1414 = SLICE(r4_r5_1411, word32, 32)
	r7_1417 = SLICE(r4_r5_1411, word32, 0)
	r4_240 = SLICE(r4_r5_1424, word32, 32) (alias)
	r5_241 = SLICE(r4_r5_1424, word32, 0) (alias)
	goto l0040B662
l0040BBDC:
	r8_763 = r30_1235 + 1<32>
	Mem770[fp + 0xFFFFEFD0<32> + ((r8_763 & 0x7F<32>) << 2<8>) + 3580<i32>:word32] = 0<32>
	r30_1235 = r8_763 & 0x7F<32>
	goto l0040B984
l0040BBF2:
	branch r7_330 >=u r23_106 l0040B51E
l0040BBF6:
	r3_337 = __errno_location(out r4_338)
	r4_r5_355 = __muldf3(__floatsidf(r4_338, out r8_3707), SEQ(Mem341[0x4120220<32>:word32], Mem341[0x4120224<32>:word32]))
	r6_356 = Mem341[0x4120220<32>:word32]
	r7_357 = Mem341[0x4120224<32>:word32]
	r4_r5_361 = __muldf3(r4_r5_355, SEQ(r6_356, r7_357))
	r3Out = r3_337
	r4Out = SLICE(r4_r5_361, word32, 32)
	r5Out = SLICE(r4_r5_361, word32, 0)
	r6Out = r6_356
	r7Out = r7_357
	r11Out = r11_1303
	r12Out = r12_1276
	return r2_1278
l0040BC24:
	branch r7_993 == 0x1DCD6500<32> l0040BD34
l0040BC2E:
l0040BC32:
	r6_r7_3646 = SEQ(Mem992[0x4120290<32>:word32], Mem992[0x4120294<32>:word32]) (alias)
	goto l0040BA40
l0040BC40:
	r2 = __shgetc(r4, out r3, out r4_73, out r5_3718, out r6_109, out r7_3719, out r8_3720, out r9_3721, out r11, out r12)
	r5 = r4_73
	goto l0040B848
l0040BC48:
	r5_1138 = fabs(r5_1135)
	r6_1131 = Mem992[0x4120240<32>:word32]
	r7_1143 = Mem992[0x4120244<32>:word32]
	r20_r21_3675 = r4_r5_1119 (alias)
	branch __gtdf2(r4_1133, r5_1138) < 0<32> l0040BC82
l0040BC60:
	branch r7_1143 != 0<32> l0040BCB8
l0040BC64:
l0040BC66:
	r6_1131 = Mem992[0x4120250<32>:word32]
	r7_1143 = Mem992[0x4120254<32>:word32]
	r20_r21_3675 = __muldf3(r4_r5_1119, SEQ(r6_1131, r7_1143)) (alias)
l0040BC82:
	r7_1180 = r7_1143 + 0x34<32>
	branch r7_1180 >= r30_1130 + 3<32> l0040BCA0
l0040BC8E:
	r20_r21_3664 = r20_r21_3675 (alias)
	branch r7_1180 == 0<32> l0040BAAA
l0040BC94:
	r6_1131 = 0<32>
	r20_r21_3664 = r20_r21_3675 (alias)
	branch __nedf2(r18_r19_3650) == 0<32> l0040BAAA
l0040BCA0:
	r3_1193 = __errno_location(out r4_3701)
	r20_r21_3664 = r20_r21_3675 (alias)
	goto l0040BAAA
l0040BCAA:
	r10_881 = 0x35<32>
	r6_882 = 0x69<32>
	goto l0040BB46
l0040BCB8:
	goto l0040BC66
l0040BCC6:
	r17_1233 = r17_1233 + 9<32>
	goto l0040B696
l0040BCCE:
	r7_175 = 0<32>
	branch r5_185 != 0<32> l0040BAF8
l0040BCD6:
	branch true l0040B65A
l0040BCDC:
	r7_175 = Mem159[r4 + 104<i32>:word32]
	branch r7_175 == 0<32> l0040BD58
l0040BCE2:
	r7_194 = Mem159[r4 + 4<i32>:word32]
	r5_185 = 0<32>
	r7_175 = r7_194 + 0xFFFFFFFF<32>
	dwLoc025C_1800 = r7_194 + 0xFFFFFFFF<32>
	goto l0040BAF8
l0040BCEC:
	r21_128 = 1<32>
	r23_106 = 0<32>
	r18_104 = 0<32>
	goto l0040B434
l0040BCF8:
	r4_r5_1436 = __muldf3(__floatunsidf(r4), r4_r5_3635)
	r4_r5_3637 = __floatsidf(Mem484[0x00413240<p32> + (8<32> - r23_106) * 4<32>:word32], out r8_3690)
	r4_r5_1458 = __divdf3(r4_r5_1436, r4_r5_3637)
	r6_1414 = SLICE(r4_r5_3637, word32, 32)
	r7_1417 = SLICE(r4_r5_3637, word32, 0)
	r4_240 = SLICE(r4_r5_1458, word32, 32) (alias)
	r5_241 = SLICE(r4_r5_1458, word32, 0) (alias)
	goto l0040B662
l0040BD24:
	r4_r5_1470 = __muldf3(__floatunsidf(r4), r4_r5_3635)
	r6_1414 = r4_477
	r7_1417 = r5_478
	r4_240 = SLICE(r4_r5_1470, word32, 32) (alias)
	r5_241 = SLICE(r4_r5_1470, word32, 0) (alias)
	goto l0040B662
l0040BD34:
	branch r30_1235 != (r6 + 3<32> & 0x7F<32>) l0040BC32
l0040BD44:
	r6_r7_3646 = SEQ(Mem992[0x4120250<32>:word32], Mem992[0x4120254<32>:word32]) (alias)
	goto l0040BA40
l0040BD52:
	r18_535 = 0<32>
	goto l0040B704
l0040BD58:
	r5_185 = 0<32>
	goto l0040BAF8
decfloat_exit:


word32 __floatscan(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strtold_l
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11:[0..31]-__isoc99_vfscanf r12:[0..31]-__isoc99_vfscanf r2:[0..31]-__isoc99_vfscanf r3:[0..31]-__isoc99_vfscanf r4:[0..31]-__isoc99_vfscanf r5:[0..31]-__isoc99_vfscanf r6:[0..31]-strtox r7:[0..31]-strtox
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__floatscan_entry:
l0040BD5C:
	branch r5 == 0<32> l0040BEA8
l0040BD66:
	branch r5 < 0<32> l0040BEA0
l0040BD6A:
	branch r5 >= 3<32> l0040BEA0
l0040BD6E:
	r19_282 = 0xFFFFFBCE<32>
	dwLoc78_1862 = 0x35<32>
	r18_111 = 0xFFFFFBCE<32>
	r17_1264 = 0x35<32>
l0040BD90:
	r30_1798 = 0<32>
	r7_58 = Mem57[r4 + 1<i32>:word32]
	branch r7_58 >=u Mem57[r4 + 104<i32>:word32] l0040BE96
l0040BD9E:
	Mem74[r4 + 1<i32>:word32] = r7_58 + 1<32>
	r4_63 = CONVERT(Mem74[r7_58:byte], byte, word32)
	branch r4_63 == 0x20<32> l0040BD90
l0040BDA6:
	branch r4_63 <u 0xE<32> l0040BD90
l0040BDAE:
	r5_112 = r4_63
	branch r4_63 == 0x2B<32> l0040C00A
l0040BDB4:
	branch r4_63 == 0x2D<32> l0040BEEA
l0040BDB8:
	r8_109 = 1<32>
	r22_118 = Mem81[0x41202A0<32>:word32]
	r23_119 = Mem81[0x41202A4<32>:word32]
l0040BDC8:
	r7_121 = r5_112 | 0x20<32>
	branch r7_121 != 0x29<32> l0040BF0E
l0040BDD0:
	r6_1466 = Mem123[r4 + 1<i32>:word32]
	r7 = Mem123[r4 + 104<i32>:word32]
	branch r6_1466 >=u r7 l0040BED6
l0040BDDA:
	Mem1483[r4 + 1<i32>:word32] = r6_1466 + 1<32>
	r4_1470 = CONVERT(Mem1483[r6_1466:byte], byte, word32)
l0040BDE2:
	branch (r4_1470 | 0x20<32>) != 0x2E<32> l0040BE78
l0040BDEA:
	r6_1489 = Mem1488[r4 + 1<i32>:word32]
	branch r6_1489 >=u r7 l0040BEE0
l0040BDF0:
	Mem1506[r4 + 1<i32>:word32] = r6_1489 + 1<32>
	r4_1493 = CONVERT(Mem1506[r6_1489:byte], byte, word32)
l0040BDF8:
	branch (r4_1493 | 0x20<32>) != 0x26<32> l0040BE78
l0040BE00:
	r6 = Mem1511[r4 + 1<i32>:word32]
	branch r6 >=u r7 l0040BFB6
l0040BE06:
	Mem1529[r4 + 1<i32>:word32] = r6 + 1<32>
	r4_1516 = CONVERT(Mem1529[r6:byte], byte, word32)
l0040BE0E:
	branch (r4_1516 | 0x20<32>) != 0x29<32> l0040C048
l0040BE16:
	r6 = Mem1535[r4 + 1<i32>:word32]
	branch r6 >=u r7 l0040BFC0
l0040BE1C:
	Mem1553[r4 + 1<i32>:word32] = r6 + 1<32>
	r4_1540 = CONVERT(Mem1553[r6:byte], byte, word32)
l0040BE24:
	branch (r4_1540 | 0x20<32>) != 0x2E<32> l0040C0CC
l0040BE2C:
	r6 = Mem1563[r4 + 1<i32>:word32]
	branch r6 >=u r7 l0040C01C
l0040BE32:
	Mem1581[r4 + 1<i32>:word32] = r6 + 1<32>
	r4_1568 = CONVERT(Mem1581[r6:byte], byte, word32)
l0040BE3A:
	branch (r4_1568 | 0x20<32>) != 0x29<32> l0040C0D4
l0040BE42:
	r6 = Mem1588[r4 + 1<i32>:word32]
	branch r6 >=u r7 l0040BECC
l0040BE48:
	Mem1606[r4 + 1<i32>:word32] = r6 + 1<32>
	r4_1593 = CONVERT(Mem1606[r6:byte], byte, word32)
l0040BE50:
	branch (r4_1593 | 0x20<32>) != 0x34<32> l0040C0DC
l0040BE58:
	r6 = Mem1613[r4 + 1<i32>:word32]
	branch r6 >=u r7 l0040C026
l0040BE5E:
	Mem1630[r4 + 1<i32>:word32] = r6 + 1<32>
	r7 = r6 + 1<32>
	r4_1618 = CONVERT(Mem1630[r6:byte], byte, word32)
l0040BE66:
	branch (r4_1618 | 0x20<32>) == 0x39<32> l0040BEA4
l0040BE6E:
	r5_1533 = 7<32>
	r7 = Mem1636[r4 + 104<i32>:word32]
	branch r6 != 0<32> l0040C04A
l0040BE78:
	branch r7 == 0<32> l0040BE80
l0040BE7A:
	Mem1740[r4 + 1<i32>:word32] = Mem1737[r4 + 1<i32>:word32] + 0xFFFFFFFF<32>
l0040BE80:
	r3_1742 = __errno_location(out r4_3805)
	__shlim(r4, 0<32>, 0<32>, out r9_3806, out r11_1755)
	r3Out = r3_1742
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = 0<32>
	r7Out = 0<32>
	r11Out = r11_1755
	r12Out = r12
	return r2
l0040BE96:
	r2 = __shgetc(r4, out r3, out r4_63, out r5_3771, out r6_3772, out r7_3773, out r8_3774, out r9_3775, out r11, out r12)
	branch r4_63 == 0x20<32> l0040BD90
l0040BE9E:
	goto l0040BDA6
l0040BEA0:
	r22_118 = 0<32>
	r23_119 = 0<32>
l0040BEA4:
	r3Out = r3
	r4Out = r22_118
	r5Out = r23_119
	r6Out = r6
	r7Out = r7
	r11Out = r11
	r12Out = r12
	return r2
l0040BEA8:
	r19_282 = 0xFFFFFF6B<32>
	dwLoc78_1862 = 0x18<32>
	r18_111 = 0xFFFFFF6B<32>
	r17_1264 = 0x18<32>
	goto l0040BD90
l0040BECC:
	r2 = __shgetc(r4, out r3, out r4_1593, out r5_3798, out r6, out r7_3799, out r8_3800, out r9_3801, out r11, out r12)
	r7 = Mem1588[r4 + 104<i32>:word32]
	goto l0040BE50
l0040BED6:
	r2 = __shgetc(r4, out r3, out r4_1470, out r5_3776, out r6_3777, out r7_3778, out r8_3779, out r9_3780, out r11, out r12)
	r7 = Mem123[r4 + 104<i32>:word32]
	goto l0040BDE2
l0040BEE0:
	r2 = __shgetc(r4, out r3, out r4_1493, out r5_3781, out r6_3782, out r7_3783, out r8_3784, out r9_3785, out r11, out r12)
	r7 = Mem1488[r4 + 104<i32>:word32]
	goto l0040BDF8
l0040BEEA:
	r8_109 = 0xFFFFFFFF<32>
	r22_118 = Mem81[0x4120298<32>:word32]
	r23_119 = Mem81[0x412029C<32>:word32]
l0040BEFA:
	r7_91 = Mem81[r4 + 1<i32>:word32]
	branch r7_91 >=u Mem81[r4 + 104<i32>:word32] l0040BFFE
l0040BF04:
	Mem114[r4 + 1<i32>:word32] = r7_91 + 1<32>
	r5_112 = CONVERT(Mem114[r7_91:byte], byte, word32)
	goto l0040BDC8
l0040BF0E:
	branch r7_121 != 0x2E<32> l0040BFCA
l0040BF12:
	r6_1329 = Mem123[r4 + 1<i32>:word32]
	r7 = Mem123[r4 + 104<i32>:word32]
	branch r6_1329 >=u r7 l0040C0C2
l0040BF1C:
	Mem1346[r4 + 1<i32>:word32] = r6_1329 + 1<32>
	r4_1333 = CONVERT(Mem1346[r6_1329:byte], byte, word32)
l0040BF24:
	branch (r4_1333 | 0x20<32>) != 0x21<32> l0040BE78
l0040BF2C:
	r6_1352 = Mem1351[r4 + 1<i32>:word32]
	branch r6_1352 >=u r7 l0040C02C
l0040BF32:
	Mem1369[r4 + 1<i32>:word32] = r6_1352 + 1<32>
	r4_1356 = CONVERT(Mem1369[r6_1352:byte], byte, word32)
l0040BF3A:
	branch (r4_1356 | 0x20<32>) != 0x2E<32> l0040BE78
l0040BF42:
	r6_1375 = Mem1374[r4 + 1<i32>:word32]
	branch r6_1375 >=u r7 l0040C0B0
l0040BF48:
	Mem1394[r4 + 1<i32>:word32] = r6_1375 + 1<32>
	r6 = CONVERT((CONVERT(Mem1394[r6_1375:byte], byte, word32) ^ 0x28<32>) >u 0<32>, bool, word32)
l0040BF58:
	branch r6 != 0<32> l0040C098
l0040BF5C:
	r6_1408 = Mem1401[r4 + 1<i32>:word32]
	r17_1409 = 1<32>
	branch r6_1408 >=u r7 l0040C092
l0040BF64:
	Mem1413[r4 + 1<i32>:word32] = r6_1408 + 1<32>
	r4_1414 = CONVERT(Mem1413[r6_1408:byte], byte, word32)
l0040BF6C:
	r6 = r4_1414 + 0xFFFFFFD0<32>
	r7_1418 = __ins<word32,word32>(r4_1414, 0<32>, 5<32>, 1<32>)
	branch r6 <u 0xA<32> l0040C086
l0040BF7A:
	branch r7_1418 <u 0x5B<32> l0040C086
l0040BF82:
	branch r4_1414 == 0x1F<32> l0040C086
l0040BF86:
	branch r4_1414 == 0x29<32> l0040BFA8
l0040BF8A:
	branch Mem1423[r4 + 104<i32>:word32] == 0<32> l0040C0E4
l0040BF92:
	r7_1451 = Mem1423[r4 + 1<i32>:word32]
	Mem1453[r4 + 1<i32>:word32] = r7_1451 + 0xFFFFFFFF<32>
	r7_1452 = r7_1451 + 0xFFFFFFFF<32>
	branch r6 != 0<32> l0040BFA0
l0040BF9A:
	goto l0040BE80
l0040BF9C:
	r7_1452 = r7_1452 + 0xFFFFFFFF<32>
	Mem1460[r4 + 1<i32>:word32] = r7_1452
l0040BFA0:
	r17_1409 = r17_1409 + 0xFFFFFFFF<32>
	r6 = 0xFFFFFFFF<32>
	branch r17_1409 != 0xFFFFFFFF<32> l0040BF9C
l0040BFA8:
	r7 = 0x4120000<32>
	r22_118 = Mem1462[0x41202A8<32>:word32]
	r23_119 = Mem1462[0x41202AC<32>:word32]
	goto l0040BEA4
l0040BFB6:
	r2 = __shgetc(r4, out r3, out r4_1516, out r5_3786, out r6, out r7_3787, out r8_3788, out r9_3789, out r11, out r12)
	r7 = Mem1511[r4 + 104<i32>:word32]
	goto l0040BE0E
l0040BFC0:
	r2 = __shgetc(r4, out r3, out r4_1540, out r5_3790, out r6, out r7_3791, out r8_3792, out r9_3793, out r11, out r12)
	r7 = Mem1535[r4 + 104<i32>:word32]
	goto l0040BE24
l0040BFCA:
	branch r5_112 != 0x30<32> l0040BFF0
l0040BFCE:
	r6_124 = Mem123[r4 + 1<i32>:word32]
	r7_125 = Mem123[r4 + 104<i32>:word32]
	branch r6_124 >=u r7_125 l0040C036
l0040BFD8:
	Mem147[r4 + 1<i32>:word32] = r6_124 + 1<32>
	r4_132 = CONVERT(Mem147[r6_124:byte], byte, word32)
l0040BFE0:
	branch (r4_132 | 0x20<32>) == 0x38<32> l0040C0EA
l0040BFE8:
	branch r7_125 == 0<32> l0040BFF0
l0040BFEA:
	Mem1259[r4 + 1<i32>:word32] = Mem152[r4 + 1<i32>:word32] + 0xFFFFFFFF<32>
l0040BFF0:
l0040BFFA_thunk_decfloat:
	r2_1317 = decfloat(r0, r2, r4, r5_112, r17_1264, r18_111, r6, r12, out r3_1319, out r4_1320, out r5_1321, out r6_1322, out r7_1323, out r11_1315, out r12_1316)
	r3Out = r3_1319
	r4Out = r4_1320
	r5Out = r5_1321
	r6Out = r6_1322
	r7Out = r7_1323
	r11Out = r11_1315
	r12Out = r12_1316
	return r2_1317
l0040BFFE:
	r2 = __shgetc(r4, out r3, out r4_100, out r5_3827, out r6_3828, out r7_3829, out r8_109, out r9_3830, out r11, out r12)
	r18_111 = r8_109
	r5_112 = r4_100
	goto l0040BDC8
l0040C00A:
	r8_109 = 1<32>
	r22_118 = Mem81[0x41202A0<32>:word32]
	r23_119 = Mem81[0x41202A4<32>:word32]
	goto l0040BEFA
l0040C01C:
	r2 = __shgetc(r4, out r3, out r4_1568, out r5_3794, out r6, out r7_3795, out r8_3796, out r9_3797, out r11, out r12)
	r7 = Mem1563[r4 + 104<i32>:word32]
	goto l0040BE3A
l0040C026:
	r2 = __shgetc(r4, out r3, out r4_1618, out r5_3802, out r6, out r7, out r8_3803, out r9_3804, out r11, out r12)
	goto l0040BE66
l0040C02C:
	r2 = __shgetc(r4, out r3, out r4_1356, out r5_3812, out r6_3813, out r7_3814, out r8_3815, out r9_3816, out r11, out r12)
	r7 = Mem1351[r4 + 104<i32>:word32]
	goto l0040BF3A
l0040C036:
	r2 = __shgetc(r4, out r3_3831, out r4_132, out r5_112, out r6_3832, out r7_3833, out r8_109, out r9_3834, out r11_3835, out r12)
	r7_125 = Mem129[r4 + 104<i32>:word32]
	r17_1264 = r5_112
	r18_111 = r8_109
	goto l0040BFE0
l0040C048:
	r5_1533 = 3<32>
l0040C04A:
	branch r7 == 0<32> l0040C052
l0040C04C:
	r6_1642 = Mem1641[r4 + 1<i32>:word32]
	Mem1644[r4 + 1<i32>:word32] = r6_1642 + 0xFFFFFFFF<32>
	r6 = r6_1642 + 0xFFFFFFFF<32>
l0040C052:
	branch r6 == 0<32> l0040BEA4
l0040C056:
	branch r5_1533 == 3<32> l0040BEA4
l0040C05A:
	branch r7 == 0<32> l0040BEA4
l0040C05E:
	r7 = Mem1651[r4 + 1<i32>:word32]
	Mem1654[r4 + 1<i32>:word32] = r7 + 0xFFFFFFFF<32>
	r6 = r7 + 0xFFFFFFFF<32>
	branch r5_1533 == 4<32> l0040BEA4
l0040C06A:
	Mem1656[r4 + 1<i32>:word32] = r7 + 0xFFFFFFFE<32>
	r6 = r7 + 0xFFFFFFFE<32>
	branch r5_1533 == 5<32> l0040BEA4
l0040C074:
	Mem1658[r4 + 1<i32>:word32] = r7 + 0xFFFFFFFD<32>
	r6 = r7 + 0xFFFFFFFD<32>
	branch r5_1533 != 7<32> l0040BEA4
l0040C07E:
	Mem1721[r4 + 1<i32>:word32] = r7 + 0xFFFFFFFC<32>
	r3Out = r3
	r4Out = r22_118
	r5Out = r23_119
	r6Out = r7 + 0xFFFFFFFD<32>
	r7Out = r7 + 0xFFFFFFFC<32>
	r11Out = r11
	r12Out = r12
	return r2
l0040C086:
	r17_1409 = r17_1409 + 1<32>
	r6_1408 = Mem1423[r4 + 1<i32>:word32]
	branch r6_1408 <u Mem1423[r4 + 104<i32>:word32] l0040BF64
l0040C092:
	r2 = __shgetc(r4, out r3, out r4_1414, out r5_3822, out r6_3823, out r7_3824, out r8_3825, out r9_3826, out r11, out r12)
	goto l0040BF6C
l0040C098:
	branch r7 == 0<32> l0040BFA8
l0040C09C:
	r7_1402 = Mem1401[r4 + 1<i32>:word32]
	r22_118 = Mem1401[0x41202A8<32>:word32]
	r23_119 = Mem1401[0x41202AC<32>:word32]
	Mem1407[r4 + 1<i32>:word32] = r7_1402 + 0xFFFFFFFF<32>
	r6 = 0x4120000<32>
	r7 = r7_1402 + 0xFFFFFFFF<32>
	goto l0040BEA4
l0040C0B0:
	r2 = __shgetc(r4, out r3, out r4_1379, out r5_3817, out r6_3818, out r7_3819, out r8_3820, out r9_3821, out r11, out r12)
	r7 = Mem1374[r4 + 104<i32>:word32]
	r6 = CONVERT((r4_1379 ^ 0x28<32>) >u 0<32>, bool, word32)
	goto l0040BF58
l0040C0C2:
	r2 = __shgetc(r4, out r3, out r4_1333, out r5_3807, out r6_3808, out r7_3809, out r8_3810, out r9_3811, out r11, out r12)
	r7 = Mem123[r4 + 104<i32>:word32]
	goto l0040BF24
l0040C0CC:
	r5_1533 = 4<32>
	branch r6 != 0<32> l0040C04A
l0040C0D2:
	goto l0040BE78
l0040C0D4:
	r5_1533 = 5<32>
	branch r6 != 0<32> l0040C04A
l0040C0DA:
	goto l0040BE78
l0040C0DC:
	r5_1533 = 6<32>
	branch r6 != 0<32> l0040C04A
l0040C0E2:
	goto l0040BE78
l0040C0E4:
	branch r6 != 0<32> l0040BFA8
l0040C0E8:
	goto l0040BE80
l0040C0EA:
	r6_153 = Mem152[r4 + 1<i32>:word32]
	branch r6_153 >=u r7_125 l0040C4E2
l0040C0F0:
	Mem173[r4 + 1<i32>:word32] = r6_153 + 1<32>
	r4_1117 = CONVERT(Mem173[r6_153:byte], byte, word32)
l0040C0F8:
	branch r4_1117 != 0x30<32> l0040C4EC
l0040C0FC:
	r7_179 = Mem178[r4 + 104<i32>:word32]
l0040C102:
	r6_184 = Mem183[r4 + 1<i32>:word32]
	branch r6_184 >=u r7_179 l0040C242
l0040C108:
	Mem201[r4 + 1<i32>:word32] = r6_184 + 1<32>
	r4_1117 = CONVERT(Mem201[r6_184:byte], byte, word32)
	branch r4_1117 == 0x30<32> l0040C102
l0040C114:
	r6_1111 = 1<32>
l0040C118:
	r8_1108 = r8_109
	branch r4_1117 == 0x2E<32> l0040C464
l0040C11C:
	dwLoc50_1877 = 0<32>
l0040C122:
	r2_1124 = Mem363[0x4120258<32>:word32]
	r3_1125 = Mem363[0x412025C<32>:word32]
	r7_1106 = 0x4120000<32>
	r11 = 0<32>
	qwLoc58_3671 = SEQ(r2_1124, r3_1125) (alias)
	qwLoc60_3680 = 0<64> (alias)
	r22_r23_3747 = 0<64> (alias)
l0040C140:
	r9_1134 = r4_1117 + 0xFFFFFFD0<32>
	qwLoc58_3630 = qwLoc58_3671 (alias)
	qwLoc60_3635 = qwLoc60_3680 (alias)
	qwLoc58_3665 = SEQ(SLICE(qwLoc58_3671, word32, 0), SLICE(qwLoc58_3671, word32, 32)) (alias)
	qwLoc60_3674 = SEQ(SLICE(qwLoc60_3680, word32, 0), SLICE(qwLoc60_3680, word32, 32)) (alias)
	r22_r23_3750 = r22_r23_3747 (alias)
	r22_r23_3750 = r22_r23_3747 (alias)
	branch r9_1134 <u 0xA<32> l0040C180
l0040C148:
	r5_371 = r4_1117 | 0x20<32>
	dwLoc54_2374 = SLICE(qwLoc58_3665, word32, 32) (alias)
	dwLoc58_2368 = SLICE(qwLoc58_3665, word32, 0) (alias)
	dwLoc5C_2003 = SLICE(qwLoc60_3674, word32, 32) (alias)
	dwLoc60_1985 = SLICE(qwLoc60_3674, word32, 0) (alias)
	r23_439 = SLICE(r22_r23_3750, word32, 0) (alias)
	r22_378 = SLICE(r22_r23_3750, word32, 32) (alias)
	r7_1106 = r5_371 + 0xFFFFFF9F<32>
	qwLoc58_3630 = qwLoc58_3665 (alias)
	qwLoc60_3635 = qwLoc60_3674 (alias)
	branch r5_371 <u 0x67<32> l0040C180
l0040C154:
	qwLoc58_3695 = SEQ(dwLoc58_2368, dwLoc54_2374) (alias)
	qwLoc60_3704 = SEQ(dwLoc60_1985, dwLoc5C_2003) (alias)
	r22_r23_3747 = r22_r23_3750 (alias)
	branch r4_1117 != 0x2E<32> l0040C442
l0040C158:
	dwLoc5C_1991 = SLICE(qwLoc60_3704, word32, 32) (alias)
	dwLoc60_1973 = SLICE(qwLoc60_3704, word32, 0) (alias)
	r23_439 = SLICE(r22_r23_3747, word32, 0) (alias)
	r22_378 = SLICE(r22_r23_3747, word32, 32) (alias)
	branch r7_1106 != 0<32> l0040C250
l0040C15E:
	dwLoc50_1877 = 1<32>
	qwLoc58_3668 = qwLoc58_3695 (alias)
	qwLoc60_3677 = qwLoc60_3704 (alias)
l0040C166:
	dwLoc5C_2387 = SLICE(qwLoc60_3677, word32, 32) (alias)
	dwLoc60_2382 = SLICE(qwLoc60_3677, word32, 0) (alias)
	dwLoc54_2375 = SLICE(qwLoc58_3668, word32, 32) (alias)
	dwLoc58_2369 = SLICE(qwLoc58_3668, word32, 0) (alias)
	r7_1106 = Mem1105[r4 + 1<i32>:word32]
	branch r7_1106 >=u Mem1105[r4 + 104<i32>:word32] l0040C230
l0040C170:
	Mem1132[r4 + 1<i32>:word32] = r7_1106 + 1<32>
	r4_1117 = CONVERT(Mem1132[r7_1106:byte], byte, word32)
	r9_1134 = r4_1117 + 0xFFFFFFD0<32>
	qwLoc58_3630 = qwLoc58_3668 (alias)
	qwLoc60_3635 = qwLoc60_3677 (alias)
	qwLoc58_3665 = SEQ(dwLoc58_2369, dwLoc54_2375) (alias)
	qwLoc60_3674 = SEQ(dwLoc60_2382, dwLoc5C_2387) (alias)
	r22_r23_3750 = r22_r23_3747 (alias)
	r22_r23_3750 = r22_r23_3747 (alias)
	branch r4_1117 >=u 0x3A<32> l0040C148
l0040C180:
	dwLoc54_2373 = SLICE(qwLoc58_3630, word32, 32) (alias)
	dwLoc58_2367 = SLICE(qwLoc58_3630, word32, 0) (alias)
	dwLoc5C_2386 = SLICE(qwLoc60_3635, word32, 32) (alias)
	dwLoc60_2381 = SLICE(qwLoc60_3635, word32, 0) (alias)
	r23_1147 = SLICE(r22_r23_3750, word32, 0) (alias)
	r22_1142 = SLICE(r22_r23_3750, word32, 32) (alias)
	qwLoc58_3695 = SEQ(dwLoc58_2367, dwLoc54_2373) (alias)
	qwLoc60_3704 = SEQ(dwLoc60_2381, dwLoc5C_2386) (alias)
	r22_r23_3747 = r22_r23_3750 (alias)
	branch r4_1117 == 0x2E<32> l0040C158
l0040C184:
	branch r4_1117 < 0x3A<32> l0040C190
l0040C188:
	r9_1134 = (r4_1117 | 0x20<32>) + 0xFFFFFFA9<32>
l0040C190:
	branch r11 > 0<32> l0040C1EE
l0040C194:
	branch r11 != 0<32> l0040C228
l0040C198:
	branch r22_1142 <u 8<32> l0040C228
l0040C19C:
	branch r22_1142 >=u 0xE<32> l0040C1EE
l0040C1A0:
	r4_r5_1213 = __muldf3(qwLoc58_3630, SEQ(Mem1204[0x41202B0<32>:word32], Mem1204[0x41202B4<32>:word32]))
	r18_111 = r11
	qwLoc58_3698 = r4_r5_1213 (alias)
	qwLoc60_3707 = __adddf3(qwLoc60_3635, __muldf3(__floatsidf(r9_1134, out r8_1108), r4_r5_1213)) (alias)
l0040C1DE:
	r6_1111 = 1<32>
	r11 = r11 + CONVERT(r22_1142 + 1<32> <u r22_1142, bool, word32)
	qwLoc58_3668 = qwLoc58_3698 (alias)
	qwLoc60_3677 = qwLoc60_3707 (alias)
	r22_r23_3747 = SEQ(r22_1142 + 1<32>, r23_1147) (alias)
	goto l0040C166
l0040C1EE:
	qwLoc58_3698 = SEQ(dwLoc58_2367, dwLoc54_2373) (alias)
	qwLoc60_3707 = SEQ(dwLoc60_2381, dwLoc5C_2386) (alias)
	branch r9_1134 == 0<32> l0040C1DE
l0040C1F2:
	qwLoc58_3698 = SEQ(dwLoc58_2367, dwLoc54_2373) (alias)
	qwLoc60_3707 = SEQ(dwLoc60_2381, dwLoc5C_2386) (alias)
	branch r7_1106 != 0<32> l0040C1DE
l0040C1F6:
	r8_1108 = 1<32>
	r18_111 = r11
	qwLoc58_3698 = SEQ(dwLoc58_2367, dwLoc54_2373) (alias)
	qwLoc60_3707 = __adddf3(SEQ(dwLoc60_2381, dwLoc5C_2386), __muldf3(SEQ(dwLoc58_2367, dwLoc54_2373), SEQ(Mem1176[0x4120250<32>:word32], Mem1176[0x4120254<32>:word32]))) (alias)
	goto l0040C1DE
l0040C228:
	r23_1147 = (r23_1147 << 4<32>) + r9_1134
	qwLoc58_3698 = SEQ(dwLoc58_2367, dwLoc54_2373) (alias)
	qwLoc60_3707 = SEQ(dwLoc60_2381, dwLoc5C_2386) (alias)
	goto l0040C1DE
l0040C230:
	r2_1124 = __shgetc(r4, out r3_1125, out r4_1117, out r5_3849, out r6_1111, out r7_1106, out r8_1108, out r9_3850, out r11, out r12)
	r18_111 = r11
	qwLoc58_3671 = SEQ(dwLoc58_2369, dwLoc54_2375) (alias)
	qwLoc60_3680 = SEQ(dwLoc60_2382, dwLoc5C_2387) (alias)
	goto l0040C140
l0040C242:
	__shgetc(r4, out r3_3842, out r4_1117, out r5_3843, out r6_3844, out r7_3845, out r8_3846, out r9_3847, out r11_3848, out r12)
	branch r4_1117 != 0x30<32> l0040C114
l0040C24A:
	r7_179 = Mem183[r4 + 104<i32>:word32]
	goto l0040C102
l0040C250:
	branch r6_1111 == 0<32> l0040C410
l0040C254:
	r22_r23_3713 = r22_r23_3747 (alias)
	qwLoc60_3729 = SEQ(dwLoc60_1973, dwLoc5C_1991) (alias)
	branch r11 > 0<32> l0040C2DE
l0040C258:
	branch r11 == 0<32> l0040C62C
l0040C25C:
	r5_371 = 0x2E<32>
	qwLoc60_3753 = SEQ(dwLoc60_1973, dwLoc5C_1991) (alias)
l0040C25E:
	r7_438 = r22_378 + 1<32>
	dwLoc5C_1999 = SLICE(qwLoc60_3753, word32, 32) (alias)
	dwLoc60_1981 = SLICE(qwLoc60_3753, word32, 0) (alias)
	r23_445 = r23_439 << 4<32>
	r6_1111 = CONVERT(r7_438 <u r22_378, bool, word32) + r11
	branch r7_438 == 8<32> l0040C600
l0040C270:
	r7_451 = r22_378 + 2<32>
	r6_1111 = CONVERT(r7_451 <u r22_378, bool, word32) + r11
	branch r7_451 == 8<32> l0040C626
l0040C282:
	r7_458 = r22_378 + 3<32>
	r6_1111 = CONVERT(r7_458 <u r22_378, bool, word32) + r11
	branch r7_458 == 8<32> l0040C620
l0040C294:
	r7_465 = r22_378 + 4<32>
	r6_1111 = CONVERT(r7_465 <u r22_378, bool, word32) + r11
	branch r7_465 == 8<32> l0040C61A
l0040C2A6:
	r7_472 = r22_378 + 5<32>
	r6_1111 = CONVERT(r7_472 <u r22_378, bool, word32) + r11
	branch r7_472 == 8<32> l0040C614
l0040C2B8:
	r7_479 = r22_378 + 6<32>
	r6_1111 = CONVERT(r7_479 <u r22_378, bool, word32) + r11
	branch r7_479 == 8<32> l0040C5FA
l0040C2CA:
	r11 = r22_378 | r11
	r22_r23_3713 = SEQ(r22_378, r23_445 << 0x18<32>) (alias)
	qwLoc60_3733 = qwLoc60_3753 (alias)
	branch r11 != 0<32> l0040C2DA
l0040C2D6:
	r22_r23_3713 = SEQ(r22_378, r23_445 << 0x1C<32>) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
l0040C2DA:
	dwLoc5C_1992 = SLICE(qwLoc60_3733, word32, 32) (alias)
	dwLoc60_1974 = SLICE(qwLoc60_3733, word32, 0) (alias)
	qwLoc60_3729 = SEQ(dwLoc60_1974, dwLoc5C_1992) (alias)
	branch r5_371 == 0x30<32> l0040C5D2
l0040C2DE:
	r3 = r3_1125
	r2 = r2_1124
	dwLoc5C_1990 = SLICE(qwLoc60_3729, word32, 32) (alias)
	dwLoc60_1972 = SLICE(qwLoc60_3729, word32, 0) (alias)
	r7_555 = Mem577[r4 + 104<i32>:word32]
	branch r7_555 == 0<32> l0040C5CC
l0040C2E6:
	r7_590 = Mem577[r4 + 1<i32>:word32]
	Mem594[r4 + 1<i32>:word32] = r7_590 + 0xFFFFFFFF<32>
	r4_552 = 0<32>
	r5_553 = 0<32>
	r7_555 = r7_590 + 0xFFFFFFFF<32>
	r22_r23_3683 = r22_r23_3713 (alias)
	qwLoc60_3689 = qwLoc60_3729 (alias)
l0040C2EE:
	r23_1022 = SLICE(r22_r23_3683, word32, 0) (alias)
	branch r23_1022 == 0<32> l0040C432
l0040C2F2:
	r16_629 = r7_555 + 0xFFFFFFF8<32>
	r4_644 = (r16_629 << 2<32>) + r4_552
	r6_648 = (CONVERT(r16_629 <u r7_555, bool, word32) + (r6_1111 + 0xFFFFFFFF<32>) << 2<32> | r16_629 >>u 0x1E<32>) + r5_553
	r7_649 = CONVERT(r4_644 <u r16_629 << 2<32>, bool, word32) + r6_648
	r16_650 = r4_644
	r21_651 = r7_649
	branch r30_1798 < r7_649 l0040C59A
l0040C320:
	branch r7_649 == 0<32> l0040C594
l0040C324:
	branch r7_649 < 0xFFFFFFFF<32> l0040C51E
l0040C328:
	branch r7_649 == 0xFFFFFFFF<32> l0040C518
l0040C32C:
	qwLoc60_3648 = qwLoc60_3689 (alias)
	branch r23_1022 < 0<32> l0040C390
l0040C330:
	r17_766 = r4_644
	r16_768 = r23_1022
	r22_r23_3642 = r22_r23_3683 (alias)
l0040C340:
	r23_781 = SLICE(r22_r23_3642, word32, 0) (alias)
	r16_768 = r16_768 << 1<32>
	r6_r7_3645 = r22_r23_3642 (alias)
	branch __gtdf2(SLICE(r22_r23_3642, word32, 32), r23_781) < 0<32> l0040C36A
l0040C356:
	r17_766 = 0x4120000<32>
	r16_768 = r16_768 + 1<32>
	r6_r7_3645 = __subdf3(r22_r23_3642, SEQ(Mem763[r23_781 + 600<i32>:word32], Mem763[r23_781 + 604<i32>:word32])) (alias)
l0040C36A:
	r7_811 = r17_766 + 0xFFFFFFFF<32>
	r4_r5_808 = __adddf3(r22_r23_3642, r6_r7_3645)
	r17_766 = r7_811
	r21_651 = r21_651 + 0xFFFFFFFF<32> + CONVERT(r7_811 <u r17_766, bool, word32)
	r22_r23_3642 = r4_r5_808 (alias)
	branch r16_768 >= 0<32> l0040C340
l0040C384:
	r23_1022 = r16_768
	r16_650 = r7_811
	qwLoc60_3648 = r4_r5_808 (alias)
l0040C390:
	r6_834 = r16_650 + 0x20<32>
	r19_857 = r6_834 - r19_282
	r6_862 = CONVERT(r6_834 <u r19_857, bool, word32)
	dwLoc5C_2082 = SLICE(qwLoc60_3648, word32, 32) (alias)
	dwLoc60_2078 = SLICE(qwLoc60_3648, word32, 0) (alias)
	r8_900 = r8_1108
	r7_864 = CONVERT(r6_834 <u r16_650, bool, word32) + r21_651 + 1<32> - r6_862
	branch r7_864 < 0<32> l0040C3B2
l0040C3A8:
	r17_868 = 0<32>
	branch r6_862 != r7_864 l0040C3BC
l0040C3AC:
	r17_868 = dwLoc78_1862
	branch r19_857 >=u r7_864 l0040C3BC
l0040C3B2:
	r17_893 = r16_650 - r18_111
	r17_868 = r17_893 + 0x20<32>
	branch r17_893 < 0xFFFFFFE0<32> l0040C550
l0040C3BC:
	branch r17_868 < 0x35<32> l0040C63C
l0040C3C0:
	qwLoc60_3652 = SEQ(dwLoc60_2078, dwLoc5C_2082) (alias)
	r18_r19_3659 = 0<64> (alias)
l0040C3C4:
	r4_r5_3651 = __floatsidf(r8_900, out r8_3863)
	r4_r5_1057 = __subdf3(__adddf3(__adddf3(__muldf3(__floatunsidf(r23_1022), r4_r5_3651), r18_r19_3659), __muldf3(r4_r5_3651, qwLoc60_3652)), r18_r19_3659)
	branch __nedf2(r4_r5_1057) == 0<32> l0040C632
l0040C404:
l0040C40C_thunk_scalbnl:
	r4_1094 = scalbnl(r4_r5_1057, r16_650, out r5_1095, out r6_1096, out r7_1097)
	r3Out = r3
	r4Out = r4_1094
	r5Out = r5_1095
	r6Out = r6_1096
	r7Out = r7_1097
	r11Out = r11
	r12Out = r12
	return r2
l0040C410:
	r3 = r3_1125
	r2 = r2_1124
	branch Mem402[r4 + 104<i32>:word32] == 0<32> l0040C4F0
l0040C418:
	r7_407 = Mem402[r4 + 1<i32>:word32]
	Mem409[r4 + 1<i32>:word32] = r7_407 + 0xFFFFFFFF<32>
	branch r6 == 0<32> l0040C4F4
l0040C424:
	Mem429[r4 + 1<i32>:word32] = r7_407 + 0xFFFFFFFE<32>
	branch r7_407 == 2<32> l0040C432
l0040C42E:
	Mem432[r4 + 1<i32>:word32] = r7_407 + 0xFFFFFFFD<32>
l0040C432:
	r4_r5_615 = __muldf3(__floatsidf(r8_1108, out r8_3851), 0<64>)
	r6 = 0<32>
	r7 = 0<32>
	r22_118 = SLICE(r4_r5_615, word32, 32)
	r23_119 = SLICE(r4_r5_615, word32, 0)
	goto l0040BEA4
l0040C442:
	branch r6_1111 == 0<32> l0040C410
l0040C444:
	r6_1111 = dwLoc50_1877
	branch dwLoc50_1877 != 0<32> l0040C44C
l0040C448_1:
l0040C44C:
	branch dwLoc50_1877 != 0<32> l0040C454
l0040C450_1:
l0040C454:
	r22_r23_3713 = r22_r23_3750 (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1985, dwLoc5C_2003) (alias)
	branch r11 > 0<32> l0040C2DA
l0040C45A:
	qwLoc60_3753 = SEQ(dwLoc60_1985, dwLoc5C_2003) (alias)
	branch r11 != 0<32> l0040C25E
l0040C45E:
	qwLoc60_3753 = SEQ(dwLoc60_1985, dwLoc5C_2003) (alias)
	branch r22_378 <u 8<32> l0040C25E
l0040C462:
	r22_r23_3713 = r22_r23_3750 (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1985, dwLoc5C_2003) (alias)
	goto l0040C2DA
l0040C464:
	r5_213 = Mem211[r4 + 1<i32>:word32]
	branch r5_213 >=u Mem211[r4 + 104<i32>:word32] l0040C50A
l0040C46E:
	Mem239[r4 + 1<i32>:word32] = r5_213 + 1<32>
	r4_1117 = CONVERT(Mem239[r5_213:byte], byte, word32)
l0040C476:
	branch r4_1117 != 0x30<32> l0040C500
l0040C47A:
	r7_249 = Mem248[r4 + 104<i32>:word32]
	r30_1798 = 0xFFFFFFFF<32>
l0040C48C:
	r6_300 = Mem299[r4 + 1<i32>:word32]
	branch r6_300 >=u r7_249 l0040C4C6
l0040C49E:
	Mem328[r4 + 1<i32>:word32] = r6_300 + 1<32>
	r4_1117 = CONVERT(Mem328[r6_300:byte], byte, word32)
	branch r4_1117 == 0x30<32> l0040C48C
l0040C4B0:
	r6_1111 = 1<32>
	dwLoc50_1877 = 0<32>
	goto l0040C122
l0040C4C6:
	__shgetc(r4, out r3_3871, out r4_1117, out r5_3872, out r6_3873, out r7_3874, out r8_3875, out r9_3876, out r11_3877, out r12)
	branch r4_1117 != 0x30<32> l0040C4B0
l0040C4DC:
	r7_249 = Mem299[r4 + 104<i32>:word32]
	goto l0040C48C
l0040C4E2:
	__shgetc(r4, out r3_3836, out r4_1117, out r5_3837, out r6_3838, out r7_3839, out r8_109, out r9_3840, out r11_3841, out r12)
	r18_111 = r8_109
	goto l0040C0F8
l0040C4EC:
	r6_1111 = 0<32>
	goto l0040C118
l0040C4F0:
	branch r6 != 0<32> l0040C432
l0040C4F4:
	r8_1108 = __shlim(r4, 0<32>, 0<32>, out r9_3865, out r11)
	goto l0040C432
l0040C500:
	dwLoc50_1877 = 1<32>
	goto l0040C122
l0040C50A:
	__shgetc(r4, out r3_3866, out r4_1117, out r5_3867, out r6_1111, out r7_3868, out r8_1108, out r9_3869, out r11_3870, out r12)
	r18_111 = r8_109
	goto l0040C476
l0040C518:
	branch r4_644 >=u r7_649 l0040C32C
l0040C51E:
	r3 = __errno_location(out r4_3854)
	r4_r5_747 = __muldf3(__floatsidf(r8_1108, out r8_3855), SEQ(Mem734[0x4120280<32>:word32], Mem734[0x4120284<32>:word32]))
	r6 = Mem734[0x4120280<32>:word32]
	r7 = Mem734[0x4120284<32>:word32]
	r4_r5_753 = __muldf3(r4_r5_747, SEQ(r6, r7))
	r22_118 = SLICE(r4_r5_753, word32, 32)
	r23_119 = SLICE(r4_r5_753, word32, 0)
	goto l0040BEA4
l0040C550:
	r19_1040 = copysignl(SLICE(scalbn(SEQ(Mem901[r7_864 + 600<i32>:word32], Mem901[r7_864 + 604<i32>:word32]), 0x54<32>, out r8_911), word32, 0), SLICE(__floatsidf(r8_911, out r8_3858), word32, 0), out r8_900)
l0040C576:
	qwLoc60_3652 = SEQ(dwLoc60_2078, dwLoc5C_2082) (alias)
	r18_r19_3659 = SEQ(r8_900, r19_1040) (alias)
	branch __nedf2(qwLoc60_3648) == 0<32> l0040C3C4
l0040C588:
	qwLoc60_3652 = SEQ(dwLoc60_2078, dwLoc5C_2082) (alias)
	r18_r19_3659 = SEQ(r8_900, r19_1040) (alias)
	branch !__bit<word32,word32>(r23_1022, 0<32>) l0040C3C4
l0040C58C:
	r23_1022 = r23_1022 + 1<32>
	qwLoc60_3652 = 0<64> (alias)
	r18_r19_3659 = SEQ(r8_900, r19_1040) (alias)
	goto l0040C3C4
l0040C594:
	branch r6_648 >=u r4_644 l0040C324
l0040C59A:
	r3 = __errno_location(out r4_3852)
	r4_r5_691 = __muldf3(__floatsidf(r8_1108, out r8_3853), SEQ(Mem678[0x4120220<32>:word32], Mem678[0x4120224<32>:word32]))
	r6 = Mem678[0x4120220<32>:word32]
	r7 = Mem678[0x4120224<32>:word32]
	r4_r5_697 = __muldf3(r4_r5_691, SEQ(r6, r7))
	r22_118 = SLICE(r4_r5_697, word32, 32)
	r23_119 = SLICE(r4_r5_697, word32, 0)
	goto l0040BEA4
l0040C5CC:
	r4_552 = 0<32>
	qwLoc60_3744 = SEQ(dwLoc60_1972, dwLoc5C_1990) (alias)
l0040C5CE:
	r5_553 = 0<32>
	r22_r23_3683 = r22_r23_3713 (alias)
	qwLoc60_3689 = qwLoc60_3744 (alias)
	goto l0040C2EE
l0040C5D2:
	r2 = scanexp(r4, r6, out r3, out r4_552, out r5_553, out r6_1111, out r7_555, out r8_1108, out r11, out r12)
	r18_111 = r8_1108
	r22_r23_3683 = r22_r23_3713 (alias)
	qwLoc60_3689 = qwLoc60_3733 (alias)
	branch r4_552 != 0<32> l0040C2EE
l0040C5E0:
	r7_555 = 0<32>
	r22_r23_3683 = r22_r23_3713 (alias)
	qwLoc60_3689 = SEQ(dwLoc60_1974, dwLoc5C_1992) (alias)
	branch r5_553 != 0<32> l0040C2EE
l0040C5E8:
	branch r6 == 0<32> l0040C606
l0040C5EA:
	r7_555 = Mem545[r4 + 104<i32>:word32]
	qwLoc60_3744 = SEQ(dwLoc60_1974, dwLoc5C_1992) (alias)
	branch r7_555 == 0<32> l0040C5CE
l0040C5F0:
	r7_572 = Mem545[r4 + 1<i32>:word32]
	Mem575[r4 + 1<i32>:word32] = r7_572 + 0xFFFFFFFF<32>
	r5_553 = 0<32>
	r7_555 = r7_572 + 0xFFFFFFFF<32>
	r22_r23_3683 = r22_r23_3713 (alias)
	qwLoc60_3689 = SEQ(dwLoc60_1974, dwLoc5C_1992) (alias)
	goto l0040C2EE
l0040C5FA:
	branch r6_1111 != 0<32> l0040C2CA
l0040C5FE:
	r22_r23_3713 = SEQ(r22_378, r23_445 << 0x14<32>) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
	goto l0040C2DA
l0040C600:
	branch r6_1111 != 0<32> l0040C270
l0040C604:
	r22_r23_3713 = SEQ(r22_378, r23_445) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
	goto l0040C2DA
l0040C606:
	__shlim(r4, 0<32>, 0<32>, out r9_3864, out r11)
	r6 = 0<32>
	r7 = 0<32>
	r22_118 = 0<32>
	r23_119 = 0<32>
	goto l0040BEA4
l0040C614:
	branch r6_1111 != 0<32> l0040C2B8
l0040C618:
	r22_r23_3713 = SEQ(r22_378, r23_445 << 0x10<32>) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
	goto l0040C2DA
l0040C61A:
	branch r6_1111 != 0<32> l0040C2A6
l0040C61E:
	r22_r23_3713 = SEQ(r22_378, r23_445 << 0xC<32>) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
	goto l0040C2DA
l0040C620:
	branch r6_1111 != 0<32> l0040C294
l0040C624:
	r22_r23_3713 = SEQ(r22_378, r23_445 << 8<32>) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
	goto l0040C2DA
l0040C626:
	branch r6_1111 != 0<32> l0040C282
l0040C62A:
	r22_r23_3713 = SEQ(r22_378, r23_445 << 4<32>) (alias)
	qwLoc60_3733 = SEQ(dwLoc60_1981, dwLoc5C_1999) (alias)
	goto l0040C2DA
l0040C62C:
	branch r22_378 <u 8<32> l0040C25C
l0040C630:
	r22_r23_3713 = r22_r23_3747 (alias)
	qwLoc60_3729 = SEQ(dwLoc60_1973, dwLoc5C_1991) (alias)
	goto l0040C2DE
l0040C632:
	r3 = __errno_location(out r4_3862)
	goto l0040C404
l0040C63C:
	r4_r5_3859 = scalbn(SEQ(Mem943[r7_864 + 600<i32>:word32], Mem943[r7_864 + 604<i32>:word32]), 0xFBEE0054<32>, out r8_953)
	r5_971 = copysignl(SLICE(r4_r5_3859, word32, 0), SLICE(__floatsidf(r8_953, out r8_3861), word32, 0), out r8_900)
	r4_949 = SLICE(r4_r5_3859, word32, 32) (alias)
	r19_1040 = r5_971
	branch false l0040C576
l0040C668:
	qwLoc60_3652 = SEQ(dwLoc60_2078, dwLoc5C_2082) (alias)
	r18_r19_3659 = SEQ(r4_949, r5_971) (alias)
	goto l0040C3C4
__floatscan_exit:


word32 __intscan(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strtox
//      __isoc99_vfscanf
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..63] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:[0..31]-strtox r12:[0..31]-strtox r2:[0..31]-strtox r3:[0..31]-strtox r4:[0..31]-strtox r5:[0..31]-strtox r6:[0..31]-strtox r7:[0..31]-strtox r8:[0..31]-strtox r9:[0..31]-strtox
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__intscan_entry:
l0040C670:
	dwLoc4C_1006 = r9
	branch r5 >=u 0x25<32> l0040C736
l0040C67A:
	r30_154 = r5
	branch r5 == 1<32> l0040C736
l0040C680:
	r19_105 = Mem28[r4 + 104<i32>:word32]
	r16_33 = r4
	r5_109 = r5
l0040C688:
	r7_38 = Mem37[r4 + 4<i32>:word32]
	branch r7_38 >=u r19_105 l0040C708
l0040C68E:
	dwLoc4C_1006 = r7_38 + 1<32>
	r4_108 = CONVERT(Mem56[r7_38:byte], byte, word32)
	branch r4_108 == 0x20<32> l0040C688
l0040C69A:
	branch r4_108 <u 0xE<32> l0040C688
l0040C6A2:
	branch r4_108 == 0x2B<32> l0040C742
l0040C6A6:
	branch r4_108 == 0x2D<32> l0040C742
l0040C6AA:
	r23_664 = 0<32>
l0040C6AC:
	branch r5 == 0<32> l0040C716
l0040C6B0:
	branch r5 == 0x10<32> l0040C95A
l0040C6B4:
	branch CONVERT(Mem96[0x0041326D<p32> + r4_108:byte], byte, word32) >=u r5 l0040C728
l0040C6C2:
	branch r5 == 0xA<32> l0040C75A
l0040C6CC:
	r20_152 = CONVERT(Mem372[0x0041326D<p32> + r4_108:byte], byte, word32)
	branch (r5 + 0xFFFFFFFF<32> & r5) == 0<32> l0040C9A2
l0040C6DC:
	r17_548 = 0<32>
l0040C6DE:
	r6_551 = r17_548 *s r5
	branch r20_152 >=u r5 l0040C8A2
l0040C6EC:
	branch r17_548 >u 0x71C71C6<32> l0040C8A2
l0040C6F0:
	r7_860 = Mem859[r4 + 4<i32>:word32]
	r17_548 = r20_152 + r6_551
	r5_109 = r7_860 + 1<32>
	branch r7_860 >=u r19_105 l0040C808
l0040C6FE:
	dwLoc4C_1006 = r7_860 + 1<32>
	r20_152 = CONVERT(Mem881[0x0041326D<p32> + CONVERT(Mem881[r7_860:byte], byte, word32):byte], byte, word32)
	goto l0040C6DE
l0040C708:
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2122, out r7_2123, out r8, out r9, out r11, out r12)
	r19_105 = Mem37[r4 + 104<i32>:word32]
	branch r4_108 == 0x20<32> l0040C688
l0040C714:
	goto l0040C69A
l0040C716:
	branch r4_108 == 0x30<32> l0040C95E
l0040C71A:
	branch Mem96[r4_108 + 0x0041326D<p32>:byte] <u 0xA<8> l0040C75A
l0040C728:
	branch r19_105 == 0<32> l0040C730
l0040C72A:
l0040C730:
	r6 = 0<32>
	r8 = __shlim(r4, 0<32>, 0<32>, out r9, out r11)
l0040C736:
	r3 = __errno_location(out r4_2121)
	r7_129 = 0x16<32>
l0040C73E:
	r3Out = r3
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = r6
	r7Out = r7_129
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040C742:
	r7_64 = Mem63[r4 + 4<i32>:word32]
	r23_664 = -CONVERT(r4_108 == 0x2D<32>, bool, word32)
	branch r7_64 >=u r19_105 l0040C98A
l0040C750:
	dwLoc4C_1006 = r7_64 + 1<32>
	r4_108 = CONVERT(Mem87[r7_64:byte], byte, word32)
	goto l0040C6AC
l0040C75A:
	r17_257 = 0<32>
l0040C75C:
	r6_2007 = r4_108 + 0xFFFFFFD0<32>
	r7_2014 = r4_108 + r17_257 * 0xA<32>
	branch r6_2007 >=u 0xA<32> l0040C79E
l0040C772:
	branch r17_257 >u 0x19999998<32> l0040C79E
l0040C776:
	r6_268 = Mem267[r4 + 4<i32>:word32]
	r17_257 = r7_2014 + 0xFFFFFFD0<32>
	branch r6_268 >=u r19_105 l0040C824
l0040C780:
	r4_108 = CONVERT(Mem289[r6_268:byte], byte, word32)
	dwLoc4C_1006 = r6_268 + 1<32>
	r6_2007 = r4_108 + 0xFFFFFFD0<32>
	r7_2014 = r4_108 + r17_257 * 0xA<32>
	branch r4_108 <u 0x3A<32> l0040C772
l0040C79E:
	r5_109 = 0x19999998<32>
	r18_294 = 0<32>
l0040C7A0:
	branch r6_2007 >=u 0xA<32> l0040C846
l0040C7A4:
	branch r18_294 >u 0x19999999<32> l0040C838
l0040C7AE:
	branch r18_294 == 0x19999999<32> l0040C82E
l0040C7B2:
	r7_301 = r17_257 << 2<32>
	r20_312 = r6_2007 >> 0x1F<32>
	r5_305 = r7_301 + r17_257
	r30_314 = ~r20_312
	r7_315 = CONVERT(r5_305 <u r7_301, bool, word32) + ((r18_294 << 2<32> | r17_257 >>u 0x1E<32>) + r18_294) << 1<32> | r5_305 >>u 0x1F<32>
	r5_109 = r5_305 << 1<32>
	r8 = ~r6_2007
	branch r30_314 <u r7_315 l0040C838
l0040C7E6:
	branch r7_315 == r30_314 l0040CADC
l0040C7EA:
	r17_257 = (r5_305 << 1<32>) + r6_2007
	r5_109 = CONVERT(r17_257 <u r5_305 << 1<32>, bool, word32)
	r4_336 = Mem323[r4 + 4<i32>:word32]
	r18_294 = r5_109 + (r7_315 + r20_312)
	branch r4_336 >=u r19_105 l0040C816
l0040C7FA:
	r4_108 = CONVERT(Mem364[r4_336:byte], byte, word32)
	r7_2014 = r4_336 + 1<32>
	dwLoc4C_1006 = r4_336 + 1<32>
	r6_2007 = r4_108 + 0xFFFFFFD0<32>
	goto l0040C7A0
l0040C808:
	r2 = __shgetc(r4, out r3, out r4_866, out r5_109, out r6_2124, out r7_2125, out r8, out r9, out r11, out r12)
	r19_105 = Mem859[r4 + 104<i32>:word32]
	r20_152 = CONVERT(Mem859[0x0041326D<p32> + r4_866:byte], byte, word32)
	goto l0040C6DE
l0040C816:
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2138, out r7_2014, out r8, out r9, out r11, out r12)
	r19_105 = Mem323[r4 + 104<i32>:word32]
	r6_2007 = r4_108 + 0xFFFFFFD0<32>
	goto l0040C7A0
l0040C824:
	r2 = __shgetc(r4, out r3, out r4_108, out r5_2135, out r6_2136, out r7_2137, out r8, out r9, out r11, out r12)
	r19_105 = Mem267[r4 + 104<i32>:word32]
	goto l0040C75C
l0040C82E:
	branch r17_257 <=u 0x99999999<32> l0040C7B2
l0040C838:
	r7_2014 = CONVERT(Mem323[0x0041326D<p32> + r4_108:byte], byte, word32)
	branch r7_2014 <u 0xA<32> l0040C8F8
l0040C846:
	branch r19_105 == 0<32> l0040C84E
l0040C848:
	r7_708 = Mem706[r16_33 + 4<i32>:word32]
	r7_2014 = r7_708 + 0xFFFFFFFF<32>
	dwLoc4C_1006 = r7_708 + 0xFFFFFFFF<32>
l0040C84E:
	r17_661 = dwLoc4C_1006
	branch r18_294 >=u r7_2014 l0040C86E
l0040C854:
	r17_805 = r23_664 ^ r17_661
	r3Out = r3
	r4_808 = r17_805 - r23_664
	r4Out = r4_808
	r5Out = (r23_664 ^ r18_294) - r23_664 - CONVERT(r17_805 <u r4_808, bool, word32)
	r6Out = r6_2007
	r7Out = r7_2014
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040C86E:
	branch r18_294 != r7_2014 l0040C876
l0040C870:
	r17_661 = r8
	branch r8 <u r7_2014 l0040C854
l0040C876:
	branch !__bit<word32,word32>(r7_2014, 0<32>) l0040C884
l0040C87C:
	branch r23_664 == 0<32> l0040CAE2
l0040C880:
	r23_664 = 0xFFFFFFFF<32>
l0040C884:
	r17_661 = dwLoc4C_1006
	branch r7_2014 <u r18_294 l0040C894
l0040C88A:
	branch r7_2014 != r18_294 l0040C854
l0040C88E:
	r17_661 = r8
	branch r7_2014 >=u r8 l0040C854
l0040C894:
	r3Out = __errno_location(out r4_785)
	r4Out = r4_785
	r5Out = r5_109
	r6Out = r6_2007
	r7Out = 0x22<32>
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040C8A2:
	r18_294 = 0<32>
l0040C8A4:
	r6_2007 = r5
	r7_2014 = 0<32>
	branch r20_152 >=u r5 l0040C846
l0040C8AC:
	__udivdi3(0xFFFFFFFFFFFFFFFF<64>, CONVERT(r5, uint32, uint64), r2, r3, r12, out r3, out r4_572, out r5_109, out r6_2007, out r7_2126, out r8, out r9, out r11_2127, out r13_2128)
	r21_329 = Mem584[r4 + 1<i32>:word32]
	r7_587 = r18_294 *s r5
	r11 = SLICE(r17_548 *u64 r5, word32, 32)
	r2 = r21_329 + 1<32>
	branch r5_109 <u r18_294 l0040C8FE
l0040C8CA:
	branch r18_294 == r5_109 l0040CA98
l0040C8CE:
	r7_594 = r7_587 + r11
	r6_2007 = r17_548 *s r5
	r5_109 = ~r20_152
	branch r7_594 == 0xFFFFFFFF<32> l0040CA9E
l0040C8DC:
	r17_548 = r6_2007 + r20_152
	r18_294 = CONVERT(r17_548 <u r6_2007, bool, word32) + r7_594
	branch r21_329 >=u r19_105 l0040C94C
l0040C8EA:
	Mem855[r4 + 4<i32>:word32] = r21_329 + 1<32>
	r20_152 = CONVERT(Mem855[0x0041326D<p32> + CONVERT(Mem855[r21_329:byte], byte, word32):byte], byte, word32)
	goto l0040C8A4
l0040C8F8:
	r21_329 = Mem323[r4 + 1<i32>:word32]
	r30_154 = 0xA<32>
l0040C8FE:
	branch r21_329 >=u r19_105 l0040C91A
l0040C902:
	branch CONVERT(Mem608[0x0041326D<p32> + CONVERT(Mem608[r21_329:byte], byte, word32):byte], byte, word32) >=u r30_154 l0040C92E
l0040C914:
	r21_329 = Mem608[r16_33 + 1<i32>:word32]
l0040C916:
	branch r21_329 <u r19_105 l0040C902
l0040C91A:
	r2 = __shgetc(r16_33, out r3_2140, out r4_623, out r5_109, out r6_2007, out r7_2141, out r8, out r9, out r11, out r12)
	branch CONVERT(Mem639[0x0041326D<p32> + r4_623:byte], byte, word32) >=u r30_154 l0040C92E
l0040C926:
	r19_105 = Mem639[r16_33 + 104<i32>:word32]
	r21_329 = Mem639[r16_33 + 1<i32>:word32]
	goto l0040C916
l0040C92E:
	r3 = __errno_location(out r4_2142)
	r17_661 = r8
	branch __bit<word32,word32>(0x22<32>, 0<32>) l0040C994
l0040C93C:
	r7_2014 = Mem660[r16_33 + 104<i32>:word32]
	r23_664 = 0<32>
	branch r7_2014 != 0<32> l0040C848
l0040C94A:
	goto l0040C854
l0040C94C:
	r2 = __shgetc(r4, out r3, out r4_838, out r5_109, out r6_2129, out r7_2130, out r8, out r9, out r11, out r12)
	r19_105 = Mem584[r4 + 104<i32>:word32]
	r20_152 = CONVERT(Mem584[0x0041326D<p32> + r4_838:byte], byte, word32)
	goto l0040C8A4
l0040C95A:
	branch r4_108 != 0x30<32> l0040CA88
l0040C95E:
	r7_103 = Mem96[r4 + 4<i32>:word32]
	branch r7_103 >=u r19_105 l0040CAA4
l0040C964:
	dwLoc4C_1006 = r7_103 + 1<32>
	r4_108 = CONVERT(Mem123[r7_103:byte], byte, word32)
l0040C96C:
	branch (r4_108 | 0x20<32>) == 0x38<32> l0040CAAE
l0040C974:
	branch r5 != 0<32> l0040C6C2
l0040C978:
	r7_153 = 5<32>
	r20_152 = CONVERT(Mem128[0x0041326D<p32> + r4_108:byte], byte, word32)
	r30_154 = 8<32>
	goto l0040C9B0
l0040C98A:
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2149, out r7_2150, out r8, out r9, out r11, out r12)
	r19_105 = Mem63[r4 + 104<i32>:word32]
	goto l0040C6AC
l0040C994:
	r7_2014 = Mem660[r16_33 + 104<i32>:word32]
	branch r7_2014 == 0<32> l0040CB08
l0040C99C:
	goto l0040C848
l0040C9A2:
	r7_153 = __ext<word32,word32>(r5 * 0x17<32>, 5<32>, 3<32>)
l0040C9B0:
	r17_381 = 0<32>
	r5_109 = CONVERT(Mem383[r7_153 + 0x00413260<p32>:byte], byte, word32)
l0040C9BA:
	r6_388 = r17_381 << r5_109
	branch r20_152 >=u r30_154 l0040C9F6
l0040C9C8:
	branch r17_381 >u 0x7FFFFFF<32> l0040C9F6
l0040C9CC:
	r7_522 = Mem521[r4 + 4<i32>:word32]
	r17_381 = r20_152 | r6_388
	branch r7_522 >=u r19_105 l0040C9E4
l0040C9D6:
	dwLoc4C_1006 = r7_522 + 1<32>
	r20_152 = CONVERT(Mem545[0x0041326D<p32> + CONVERT(Mem545[r7_522:byte], byte, word32):byte], byte, word32)
	goto l0040C9BA
l0040C9E4:
	__shgetc(r4, out r3_2131, out r4_529, out r5_109, out r6_2132, out r7_2133, out r8, out r9, out r11_2134, out r12)
	r19_105 = Mem526[r4 + 104<i32>:word32]
	r17_381 = r5_109
	r20_152 = CONVERT(Mem526[0x0041326D<p32> + r4_529:byte], byte, word32)
	goto l0040C9BA
l0040C9F6:
	r2 = -r5_109
	r7_394 = 0xFFFFFFFF<32> << r2
	r3_395 = 0xFFFFFFFF<32> >>u r5_109
	branch r5_109 != 0<32> l0040CA0A
l0040CA06_1:
	r7_394 = 0<32>
l0040CA0A:
	r10_398 = r3_395
	r11_400 = CONVERT(r5_109 < 0x20<32>, bool, word32)
	r3 = r3_395 | r7_394
	branch r11_400 != 0<32> l0040CA18
l0040CA14_1:
	r3 = r3_395
l0040CA18:
	r18_294 = 0<32>
	branch r11_400 != 0<32> l0040CA1E
l0040CA1A_1:
	r10_398 = 0<32>
l0040CA1E:
	r11 = r11_400
	r4_409 = r17_381 >>u r2
	r7_2014 = r18_294 << r5_109
	branch r5_109 != 0<32> l0040CA2A
l0040CA26_1:
	r4_409 = 0<32>
l0040CA2A:
	r6_2007 = r17_381 << r5_109
	branch r20_152 >=u r30_154 l0040C846
l0040CA32:
	r7_423 = r7_2014 | r4_409
	r21_329 = Mem427[r16_33 + 1<i32>:word32]
	branch r10_398 <u r18_294 l0040C8FE
l0040CA3A:
	branch r11_400 != 0<32> l0040CA42
l0040CA3E_1:
	r7_423 = r6_2007
l0040CA42:
	branch r18_294 == r10_398 l0040CA82
l0040CA46:
	branch r11_400 != 0<32> l0040CA4A
l0040CA46_1:
	r6_2007 = 0<32>
l0040CA4A:
	r18_294 = r7_423
	r17_381 = r20_152 | r6_2007
	branch r21_329 >=u r19_105 l0040CA60
l0040CA54:
	dwLoc4C_1006 = r21_329 + 1<32>
	r20_152 = CONVERT(Mem517[0x0041326D<p32> + CONVERT(Mem517[r21_329:byte], byte, word32):byte], byte, word32)
	goto l0040CA1E
l0040CA60:
	r2 = __shgetc(r16_33, out r3, out r4_491, out r5_109, out r6_2143, out r7_2144, out r8, out r9, out r11_2145, out r12)
	r20_152 = CONVERT(Mem485[0x0041326D<p32> + r4_491:byte], byte, word32)
	r19_105 = Mem485[r16_33 + 104<i32>:word32]
	r17_381 = r5_109
	r16_33 = r2
	goto l0040CA1E
l0040CA82:
	branch r3 >=u r17_381 l0040CA46
l0040CA86:
	goto l0040C8FE
l0040CA88:
	branch Mem96[0x0041326D<p32> + r4_108:byte] <u 0x10<8> l0040C6CC
l0040CA96:
	goto l0040C728
l0040CA98:
	branch r4_572 >=u r17_548 l0040C8CE
l0040CA9C:
	goto l0040C8FE
l0040CA9E:
	branch r5_109 >=u r6_2007 l0040C8DC
l0040CAA2:
	goto l0040C8FE
l0040CAA4:
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2146, out r7_2147, out r8, out r9, out r11, out r12)
	r19_105 = Mem96[r4 + 104<i32>:word32]
	goto l0040C96C
l0040CAAE:
	r7_129 = Mem128[r4 + 4<i32>:word32]
	branch r7_129 >=u r19_105 l0040CB16
l0040CAB4:
	r6 = r7_129 + 1<32>
	dwLoc4C_1006 = r7_129 + 1<32>
	r4_133 = CONVERT(Mem147[r7_129:byte], byte, word32)
l0040CABC:
	r20_152 = CONVERT(Mem151[0x0041326D<p32> + r4_133:byte], byte, word32)
	branch r20_152 <u 0x10<32> l0040CB00
l0040CACA:
	branch r19_105 == 0<32> l0040CB2C
l0040CACC:
	r7_164 = Mem151[r4 + 4<i32>:word32]
	branch r6 == 0<32> l0040CB20
l0040CAD4:
	r3Out = r3
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = r7_164 + 0xFFFFFFFF<32>
	r7Out = r7_164 + 0xFFFFFFFE<32>
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040CADC:
	branch r8 >=u r5_305 << 1<32> l0040C7EA
l0040CAE0:
	goto l0040C838
l0040CAE2:
	r3Out = __errno_location(out r4_2139)
	r7_756 = r6_2007 + 0xFFFFFFFF<32>
	r4Out = r7_756
	r5Out = CONVERT(r7_756 <u r6_2007, bool, word32) + (r6_2007 + 0xFFFFFFFF<32>)
	r6Out = 0x22<32>
	r7Out = r7_756
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040CB00:
	r7_153 = 3<32>
	r30_154 = 0x10<32>
	goto l0040C9B0
l0040CB08:
	branch r23_664 == 0<32> l0040CAE2
l0040CB0C:
	r23_664 = 0xFFFFFFFF<32>
	goto l0040C854
l0040CB16:
	r2 = __shgetc(r4, out r3, out r4_133, out r5_2148, out r6, out r7_129, out r8, out r9, out r11, out r12)
	r19_105 = Mem128[r4 + 104<i32>:word32]
	goto l0040CABC
l0040CB20:
l0040CB22:
	r8_176 = __shlim(r4, 0<32>, 0<32>, out r9_177, out r11_173)
	r3Out = r3
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = 0<32>
	r7Out = 0<32>
	r8Out = r8_176
	r9Out = r9_177
	r11Out = r11_173
	r12Out = r12
	return r2
l0040CB2C:
	branch r6 != 0<32> l0040C73E
l0040CB30:
	goto l0040CB22
__intscan_exit:


word32 __shlim(word32 r4, word32 r6, word32 r7, word32 & r9Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strtold_l
//      strtox
//      __floatscan
//      __intscan
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-__intscan r8:[0..31]-__intscan r9:[0..31]-__intscan
// Trashed: r10 r11 r25 r5 r8 r9
// Preserved: sp
__shlim_entry:
l0040CB40:
	r10_6 = Mem0[r4 + 1<i32>:word32]
	r5_10 = Mem0[r4 + 8<i32>:word32]
	Mem11[r4 + 112<i32>:word32] = r6
	Mem12[r4 + 116<i32>:word32] = r7
	r8_13 = r5_10 - r10_6
	Mem15[r4 + 120<i32>:word32] = r8_13
	Mem16[r4 + 124<i32>:word32] = r8_13 >> 0x1F<32>
	branch (r6 | r7) == 0<32> l0040CB64
l0040CB5C:
	branch r7 < r8_13 >> 0x1F<32> l0040CB6E
l0040CB60:
	branch r8_13 >> 0x1F<32> == r7 l0040CB6A
l0040CB64:
	Mem24[r4 + 104<i32>:word32] = r5_10
	return
l0040CB6A:
	branch r6 >=u r8_13 l0040CB64
l0040CB6E:
	Mem21[r4 + 104<i32>:word32] = r10_6 + r6
	return
__shlim_exit:


word32 __shgetc(word32 r4, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      scanexp
//      __floatscan
//      __intscan
//      __isoc99_vfscanf
//      fn0040DC0C
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-__intscan r12:[0..31]-__intscan r2:[0..31]-__intscan r3:[0..31]-__intscan r4:[0..31]-__intscan r5:[0..31]-__intscan r6:[0..31]-__intscan r7:[0..31]-__intscan r8:[0..31]-__intscan r9:[0..31]-__intscan
// Trashed: r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__shgetc_entry:
l0040CB78:
	r6_10 = Mem7[r4 + 112<i32>:word32]
	r7_11 = Mem7[r4 + 116<i32>:word32]
	branch (r6_10 | r7_11) == 0<32> l0040CB8E
l0040CB86:
	r5_14 = Mem7[r4 + 124<i32>:word32]
	branch r5_14 >= r7_11 l0040CC1C
l0040CB8E:
	r4_19 = __uflow(r4, out r5_14, out r6_10, out r7_11)
	branch r4_19 < 0<32> l0040CC26
l0040CB96:
	r6_32 = Mem7[r4 + 112<i32>:word32]
	r5_164 = Mem7[r4 + 116<i32>:word32]
	r8_34 = Mem7[r4 + 1<i32>:word32]
	r9_185 = r6_32 | r5_164
	r7_36 = Mem7[r4 + 8<i32>:word32]
	branch r9_185 != 0<32> l0040CBE4
l0040CBAA:
	r6_171 = r7_36
l0040CBAC:
	Mem57[r4 + 104<i32>:word32] = r6_171
	branch r7_36 == 0<32> l0040CBD8
l0040CBB2:
	r6_60 = Mem57[r4 + 120<i32>:word32]
	r7_63 = r7_36 - r8_34
	r9_185 = r6_60 + (r7_63 + 1<32>)
	r5_164 = Mem57[r4 + 124<i32>:word32]
	Mem71[r4 + 120<i32>:word32] = r9_185
	r6_171 = CONVERT(r9_185 <u r6_60, bool, word32)
	Mem72[r4 + 124<i32>:word32] = r6_171 + (r5_164 + (r7_63 + 1<32> >> 0x1F<32>))
l0040CBD8:
	r7_75 = CONVERT(Mem74[r8_34 - 1<i32>:byte], byte, word32)
	branch r4_19 == r7_75 l0040CBE2
l0040CBDE:
	Mem80[r8_34 - 1<i32>:int8] = SLICE(r4_19, int8, 0)
l0040CBE2:
	r3Out = r3
	r4Out = r4_19
	r5Out = r5_164
	r6Out = r6_171
	r7Out = r7_75
	r8Out = r8_34
	r9Out = r9_185
	r11Out = r11
	r12Out = r12
	return r2
l0040CBE4:
	r9_185 = Mem7[r4 + 120<i32>:word32]
	r11 = r6_32 - r9_185
	r12 = Mem7[r4 + 124<i32>:word32]
	r3 = CONVERT(r6_32 <u r11, bool, word32)
	r2 = r7_36 - r8_34
	r5_164 = r5_164 - r12 - r3
	branch r2 >> 0x1F<32> < r5_164 l0040CBAA
l0040CC08:
	branch r5_164 == r2 >> 0x1F<32> l0040CC16
l0040CC0C:
	r6_171 = r6_32 + 0xFFFFFFFF<32> - r9_185 + r8_34
	goto l0040CBAC
l0040CC16:
	branch r2 <u r11 l0040CBAA
l0040CC1A:
	goto l0040CC0C
l0040CC1C:
	branch r5_14 != r7_11 l0040CC26
l0040CC1E:
	r7_11 = Mem7[r4 + 120<i32>:word32]
	branch r7_11 <u r6_10 l0040CB8E
l0040CC26:
	Mem25[r4 + 104<i32>:word32] = 0<32>
	r3Out = r3
	r4Out = 0xFFFFFFFF<32>
	r5Out = r5_14
	r6Out = r6_10
	r7Out = r7_11
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
__shgetc_exit:


word32 __syscall_ret(word32 r4, word32 & r4Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sysinfo
//      free
//      getrlimit64
//      ioctl
//      madvise
//      mmap64
//      mremap
//      bind
//      connect
//      getsockname
//      getsockopt
//      recvfrom
//      recvmsg
//      sendmsg
//      sendto
//      setsockopt
//      socket
//      sched_yield
//      poll
//      raise
//      setitimer
//      __libc_sigaction
//      __fopen_rb_ca
//      __stdio_close
//      __stdio_read
//      __stdio_seek
//      __clock_gettime
//      close
//      write
//      __stdio_write
//      open64
//      lseek64
// MayUse:  r4:[0..31]
// LiveOut: r3:[0..31]-__clock_gettime r4:[0..31]-__libc_sigaction r7:[0..31]-__clock_gettime
// Trashed: r25 r3 r4 r7
// Preserved: r16 ra sp
__syscall_ret_entry:
l0040CC30:
	branch r4 >u 0xFFFF0000<32> l0040CC3A
l0040CC38:
	r4Out = r4
	r7Out = 0xFFFF0000<32>
	return r3
l0040CC3A:
	r3_13 = __errno_location(out r4_34)
	r4Out = 0xFFFFFFFF<32>
	r7Out = -r4
	return r3_13
__syscall_ret_exit:


word32 __vdsosym(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      cgt_init
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-cgt_init
// Trashed: r10 r11 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__vdsosym_entry:
l0040CC50:
	r17_26 = Mem23[0x00454440<p32>:word32]
	r7_27 = Mem23[r17_26:word32]
	branch r7_27 == 0x21<32> l0040CDA2
l0040CC5E:
	r16_29 = 3<32>
	branch r7_27 != 0<32> l0040CC6A
l0040CC62:
	goto l0040CD20
l0040CC64:
	r16_29 = r6_31
	branch r7_34 == 0<32> l0040CD20
l0040CC6A:
	r6_31 = r16_29 + 2<32>
	r7_34 = Mem23[r17_26 + r6_31 * 4<32>:word32]
	branch r7_34 != 0x21<32> l0040CC64
l0040CC74:
	r16_28 = r16_29 + 0<32> << 2<32>
l0040CC78:
	r11_41 = Mem23[r17_26 + r16_28:word32]
	branch r11_41 == 0<32> l0040CD20
l0040CC80:
	r9_43 = CONVERT(Mem23[r11_41 + 44<i32>:uint16], uint16, word32)
	r6_44 = Mem23[r11_41 + 28<i32>:word32] + r11_41
	branch r9_43 == 0<32> l0040CD20
l0040CC8E:
	r10_45 = CONVERT(Mem23[r11_41 + 42<i32>:uint16], uint16, word32)
	r17_46 = 0xFFFFFFFF<32>
	r7_47 = 0<32>
	r16_48 = 0<32>
	goto l0040CCA6
l0040CC9A:
	branch r8_51 == 2<32> l0040CD24
l0040CC9E:
	r16_48 = r16_48 + 1<32>
	r6_44 = r6_44 + r10_45
	branch r16_48 == r9_43 l0040CCBC
l0040CCA6:
	r8_51 = Mem23[r6_44:word32]
	branch r8_51 != 1<32> l0040CC9A
l0040CCAC:
	r16_48 = r16_48 + 1<32>
	r6_44 = r6_44 + r10_45
	r17_46 = Mem23[r6_44 + 4<i32>:word32] + r11_41 - Mem23[r6_44 + 8<i32>:word32]
	branch r16_48 != r9_43 l0040CCA6
l0040CCBC:
	branch r7_47 == 0<32> l0040CD20
l0040CCBE:
	branch r17_46 == 0xFFFFFFFF<32> l0040CD20
l0040CCC4:
	r16_101 = Mem23[r7_47:word32]
	branch r16_101 == 0<32> l0040CD20
l0040CCC8:
	r7_103 = r7_47 + 4<32>
	r22_105 = 0<32>
	r30_127 = 0<32>
	r23_117 = 0<32>
	r18_113 = 0<32>
	r21_109 = 0<32>
	goto l0040CCEA
l0040CCD6:
	branch r16_101 == 4<32> l0040CD2E
l0040CCDA:
	branch (r16_101 ^ 5<32>) != 0<32> l0040CCE2
l0040CCDE_1:
	r21_109 = r6_91
l0040CCE2:
	r7_103 = r7_103 + 8<32>
	r16_101 = Mem23[r7_103 - 4<i32>:word32]
	branch r16_101 == 0<32> l0040CD16
l0040CCEA:
	r6_91 = r17_46 + Mem23[r7_103:word32]
	branch r16_101 == 6<32> l0040CD2A
l0040CCF8:
	branch r16_101 <u 7<32> l0040CCD6
l0040CCFC:
	branch r16_101 == 0x6FFFFFF0<32> l0040CD32
l0040CD00:
	r7_103 = r7_103 + 8<32>
	branch (r16_101 ^ 0x6FFFFFFC<32>) != 0<32> l0040CD10
l0040CD0C_1:
	r22_105 = r6_91
l0040CD10:
	r16_101 = Mem23[r7_103 - 4<i32>:word32]
	branch r16_101 != 0<32> l0040CCEA
l0040CD16:
	branch r21_109 == 0<32> l0040CD20
l0040CD1A:
	branch r18_113 == 0<32> l0040CD20
l0040CD1C:
	branch r23_117 != 0<32> l0040CD36
l0040CD20:
	return 0<32>
l0040CD24:
	r7_47 = Mem23[r6_44 + 4<i32>:word32] + r11_41
	goto l0040CC9E
l0040CD2A:
	r18_113 = r6_91
	goto l0040CCE2
l0040CD2E:
	r23_117 = r6_91
	goto l0040CCE2
l0040CD32:
	r30_127 = r6_91
	goto l0040CCE2
l0040CD36:
	r8_122 = Mem23[r23_117 + 1<i32>:word32]
	branch r22_105 != 0<32> l0040CD3C
l0040CD38_1:
	r30_127 = 0<32>
l0040CD3C:
	branch r8_122 == 0<32> l0040CD20
l0040CD40:
	goto l0040CD4C
l0040CD44:
	r16_101 = r16_101 + 1<32>
	r18_113 = r18_113 + 0x10<32>
	branch r16_101 >=u r8_122 l0040CD20
l0040CD4C:
	r6_155 = CONVERT(Mem23[r18_113 + 12<i32>:byte], byte, word32)
	branch __bit<word32,word32>(0x27<32> >> (r6_155 & 0xF<32>), 0<32>) l0040CD44
l0040CD5C:
	branch __bit<word32,word32>(0x406<32> >> (r6_155 >>u 4<32>), 0<32>) l0040CD44
l0040CD6A:
	branch Mem23[r18_113 + 14<i32>:uint16] == 0<u16> l0040CD44
l0040CD70:
	branch strcmp(r5, Mem23[r18_113:word32] + r21_109) != 0<32> l0040CD9E
l0040CD7A:
	branch r30_127 == 0<32> l0040CDB4
l0040CD7E:
	r7_177 = r22_105
	r5_178 = __ext<word32,word32>(CONVERT(Mem23[r30_127 + r16_101 * 2<32>:word16], word16, word32), 0<32>, 0xF<32>)
	goto l0040CD8C
l0040CD8A:
	r7_177 = r7_177 + r6_220
l0040CD8C:
	branch !__bit<word32,word32>(CONVERT(Mem23[r7_177 + 2<i32>:uint16], uint16, word32), 0<32>) l0040CD9A
l0040CD92:
	branch r5_178 == __ext<word32,word32>(CONVERT(Mem23[r7_177 + 4<i32>:uint16], uint16, word32), 0<32>, 0xF<32>) l0040CDA6
l0040CD9A:
	r6_220 = Mem23[r7_177 + 16<i32>:word32]
	branch r6_220 != 0<32> l0040CD8A
l0040CD9E:
	r8_122 = Mem23[r23_117 + 1<i32>:word32]
	goto l0040CD44
l0040CDA2:
	r16_28 = 4<32>
	goto l0040CC78
l0040CDA6:
	branch strcmp(r4, Mem23[r7_177 + Mem23[r7_177 + 12<i32>:word32]:word32] + r21_109) != 0<32> l0040CD9E
l0040CDB4:
	return r17_46 + Mem23[r18_113 + 4<i32>:word32]
__vdsosym_exit:


word32 calloc(word32 r0, word32 r4, word32 r5, word32 r7, word32 r11, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getaddrinfo
//      netlink_msg_to_ifaddr
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-getaddrinfo r2:[0..31]-getaddrinfo r4:[0..31]-getaddrinfo r6:[0..31]-getaddrinfo r8:[0..31]-getaddrinfo
// Trashed: hi lo r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
calloc_entry:
l0040CDC0:
	branch r5 == 0<32> l0040CDD0
l0040CDC2:
	branch r5 != r0 l0040CDCC
l0040CDC8_1:
	__syscall<word32>(7<32>)
l0040CDCC:
	branch r7 <u r4 l0040CDD6
l0040CDD0:
	r4_29 = r4 *s r5
l0040CDD2_thunk___malloc0:
	r2_37 = __malloc0(r0, r4_29, r11, out r4_40, out r6_42, out r8_44, out r11_36)
	r4Out = r4_40
	r6Out = r6_42
	r8Out = r8_44
	r11Out = r11_36
	return r2_37
l0040CDD6:
	__errno_location(out r4_84)
	r4Out = 0<32>
	r6Out = 0xFFFFFFFF<32>
	r8Out = r8
	r11Out = r11
	return r2
calloc_exit:


word32 __expand_heap(word32 r4, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __simple_malloc
//      malloc
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-malloc r2:[0..31]-malloc r3:[0..31]-malloc r4:[0..31]-malloc r6:[0..31]-malloc r7:[0..31]-malloc r8:[0..31]-malloc
// Trashed: r10 r11 r2 r22 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__expand_heap_entry:
l0040CDF0:
	r6_119 = Mem11[0x00454454<p32>:word32]
	r16_17 = Mem11[r4:word32]
	branch 0x7FFFFFFF<32> - r6_119 <u r16_17 l0040CEDC
l0040CE06:
	r4_34 = Mem11[0x00432EF4<p32>:word32]
	r16_135 = r16_17 + (-r16_17 & r6_119 + 0xFFFFFFFF<32>)
	branch r4_34 == 0<32> l0040CEB4
l0040CE1E:
	branch r16_135 >=u ~r4_34 l0040CE42
l0040CE26:
	r7_57 = Mem56[0x00454440<p32>:word32]
	r5_59 = r16_135 + r4_34
	branch r7_57 <=u 0x8000000<32> l0040CED4
l0040CE32:
	r8_60 = r7_57 + 0xFF800000<32>
l0040CE3A:
	branch r8_60 >=u r5_59 l0040CE82
l0040CE3E:
	branch r4_34 >=u r7_57 l0040CE82
l0040CE42:
	r5_130 = r6_119 << (Mem56[0x00432EF0<p32>:word32] >>u 1<32>)
	branch r5_130 <u r16_135 l0040CE62
l0040CE5E_1:
	r16_135 = r5_130
l0040CE62:
	r2_144 = mmap64(r16_135, 0x802<32>, 0<32>, 0<32>, out r3_146, out r4_147, out r6_149, out r8_151)
	branch r4_147 == 0xFFFFFFFF<32> l0040CEF4
l0040CE70:
	r7_164 = Mem56[0x00432EF0<p32>:word32]
	Mem167[r4:word32] = r16_135
	Mem169[0x00432EF0<p32>:word32] = r7_164 + 1<32>
	r3Out = r3_146
	r4Out = r4_147
	r6Out = r6_149
	r7Out = r7_164 + 1<32>
	r8Out = r8_151
	r11Out = 0<32>
	return r2_144
l0040CE82:
	branch fp <=u 0x8000014<32> l0040CED8
l0040CE8C:
	r8_72 = fp + 0xFF7FFFEC<32>
l0040CE94:
	branch r8_72 >=u r5_59 l0040CE9C
l0040CE98:
	branch r4_34 <u fp - 0x14<32> l0040CE42
l0040CE9C:
	r2_82 = __syscall(out r4_84, out r5_265, out r6_266, out r7_267, out r8_88, out r9_268)
	r7_94 = Mem56[0x00432EF4<p32>:word32]
	r6_99 = r16_135 + r7_94
	branch r4_84 == r6_99 l0040CEE8
l0040CEB0:
	r6_119 = Mem56[0x00454454<p32>:word32]
	goto l0040CE42
l0040CEB4:
	__syscall(out r4_40, out r5_260, out r6_261, out r7_262, out r8_263, out r9_264)
	r6_119 = Mem11[0x00454454<p32>:word32]
	r4_34 = (-r4_40 & r6_119 + 0xFFFFFFFF<32>) + r4_40
	Mem51[0x00432EF4<p32>:word32] = r4_34
	goto l0040CE1E
l0040CED4:
	r8_60 = 0<32>
	goto l0040CE3A
l0040CED8:
	r8_72 = 0<32>
	goto l0040CE94
l0040CEDC:
	r3Out = __errno_location(out r4_259)
	r4Out = 0<32>
	r6Out = r6_119
	r7Out = 0xC<32>
	r8Out = r8
	r11Out = r11
	return r2
l0040CEE8:
	Mem100[0x00432EF4<p32>:word32] = r4_84
	Mem106[r4:word32] = r16_135
	r3Out = r3
	r4Out = r7_94
	r6Out = r6_99
	r7Out = r7_94
	r8Out = r8_88
	r11Out = r11
	return r2_82
l0040CEF4:
	r3Out = r3_146
	r4Out = 0<32>
	r6Out = r6_149
	r7Out = 0xFFFFFFFF<32>
	r8Out = r8_151
	r11Out = 0<32>
	return r2_144
__expand_heap_exit:


word32 copysignl(word32 r5, word32 r7, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r5:[0..31] r7:[0..31]
// LiveOut: r5:[0..31]-decfloat r8:[0..31]-__floatscan
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
copysignl_entry:
l0040CF00:
l0040CF00_thunk_copysign:
	r5_7 = copysign(r5, r7, out r8_10)
	r8Out = r8_10
	return r5_7
copysignl_exit:


word32 fabs(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r5:[0..31]
// LiveOut: r5:[0..31]-decfloat
// Trashed: r25 r5 r6 r7
// Preserved: r4 sp
fabs_entry:
l0040CF10:
	return __ext<word32,word32>(r5, 0<32>, 0x1F<32>)
fabs_exit:


word64 fmodl(word64 r4_r5, word64 r6_r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  Sequence r4:r5:[0..63] Sequence r6:r7:[0..63]
// LiveOut: Sequence r4:r5:[0..63]-decfloat
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
fmodl_entry:
l0040CF20:
l0040CF20_thunk_fmod:
	return SEQ(fmod(r4_r5, r6_r7, out r5_12), r5_12)
fmodl_exit:


word64 frexpl(word64 r4_r5, word32 r6, word32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r6:[0..31] Sequence r4:r5:[0..63]
// LiveOut: r18:[0..31]-printf_core Sequence r4:r5:[0..63]-printf_core
// Trashed: r18 r25 r4 r5 r6 r7
// Preserved: sp
frexpl_entry:
l0040CF30:
l0040CF30_thunk_frexp:
	r4_13 = frexp(r4_r5, r6, out r5_12, out r18_11)
	r18Out = r18_11
	return SEQ(r4_13, r5_12)
frexpl_exit:


word64 scalbn(word64 r4_r5, word32 r6, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r6:[0..31] Sequence r4:r5:[0..63]
// LiveOut: Sequence r4:r5:[0..63]-decfloat r8:[0..31]-__floatscan
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
scalbn_entry:
l0040CF40:
	branch r6 <= 0x3FF<32> l0040CF90
l0040CF4E:
	r4_r5_121 = fn0040CFCC(r4_r5, SEQ(Mem13[0x41202B8<32>:word32], Mem13[0x41202BC<32>:word32]))
	r16_23 = r6 + 0xFFFFFC01<32>
	r8_r9_114 = r4_r5_121 (alias)
	branch r6 <= 0x7FE<32> l0040CF7E
l0040CF66:
	r4_r5_125 = fn0040CFCC(r4_r5_121, SEQ(Mem13[0x41202B8<32>:word32], Mem13[0x41202BC<32>:word32]))
	r16_23 = r6 + 0xFFFFF802<32>
	r8_r9_114 = r4_r5_125 (alias)
	branch r6 < 0xBFE<32> l0040CF7E
l0040CF7A_1:
	r16_23 = 0x3FF<32>
	r8_r9_114 = r4_r5_125 (alias)
l0040CF7E:
	r4_r5_124 = fn0040CFCC(r8_r9_114, CONVERT(r16_23 + 0x3FF<32> << 0x14<32>, uint32, uint64))
	r8Out = SLICE(r8_r9_114, word32, 32)
	return r4_r5_124
l0040CF90:
	r16_23 = r6
	r8_r9_114 = r4_r5 (alias)
	branch r6 >= 0xFFFFFC02<32> l0040CF7E
l0040CF9A:
	r4_r5_122 = fn0040CFCC(r4_r5, SEQ(Mem13[0x41202C0<32>:word32], Mem13[0x41202C4<32>:word32]))
	r16_23 = r6 + 0x3C9<32>
	r8_r9_114 = r4_r5_122 (alias)
	branch r6 >= 0xFFFFF839<32> l0040CF7E
l0040CFB2:
	r16_23 = r6 + 0x792<32>
	r4_r5_126 = fn0040CFCC(r4_r5_122, SEQ(Mem13[0x41202C0<32>:word32], Mem13[0x41202C4<32>:word32]))
	branch r6 >= 0xFFFFF470<32> l0040CFCA
l0040CFC6_1:
	r16_23 = 0xFFFFFC02<32>
l0040CFCA:
	r8_r9_114 = r4_r5_126 (alias)
	goto l0040CF7E
scalbn_exit:


word64 fn0040CFCC(word64 r4_r5, word64 r6_r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      scalbn
// MayUse:  Sequence r4:r5:[0..63] Sequence r6:r7:[0..63]
// LiveOut: Sequence r4:r5:[0..63]-scalbn
// Trashed: r25 r4 r5
// Preserved: r6 r7 sp
fn0040CFCC_entry:
l0040CFCC:
l0040CFCC_thunk___muldf3:
	return __muldf3(r4_r5, r6_r7)
fn0040CFCC_exit:


word32 scalbnl(word64 r4_r5, word32 r6, word32 & r5Out, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
// MayUse:  r6:[0..31] Sequence r4:r5:[0..63]
// LiveOut: r4:[0..31]-decfloat r5:[0..31]-decfloat r6:[0..31]-decfloat r7:[0..31]-decfloat
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
scalbnl_entry:
l0040CFD0:
l0040CFD0_thunk_scalbn:
	r4_r5_19 = scalbn(r4_r5, r6, out r8_20)
	r5Out = SLICE(r4_r5_19, word32, 0)
	r6Out = r6_11
	r7Out = r7_12
	return SLICE(r4_r5_19, word32, 32)
scalbnl_exit:


word32 mbstowcs(word32 r4, word32 r5, word32 r6, word32 & r5Out, word32 & r6Out, word32 & r8Out, word32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      is_valid_hostname
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r18:[0..31]-is_valid_hostname r4:[0..31]-is_valid_hostname r5:[0..31]-is_valid_hostname r6:[0..31]-is_valid_hostname r8:[0..31]-is_valid_hostname
// Trashed: r18 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
mbstowcs_entry:
l0040CFE0:
	Mem9[&tLoc14:word32] = r5
	r4_16 = mbsrtowcs(r4, &tLoc14, r6, 0<32>, out r5_17, out r6_18, out r8_20, out r18_13)
	r5Out = r5_17
	r6Out = r6_18
	r8Out = r8_20
	r18Out = r18_13
	return r4_16
mbstowcs_exit:


word32 wctomb(word32 r4, word32 r5, word32 & r4Out, word32 & r5Out, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r3:[0..31]-printf_core r4:[0..31]-printf_core r5:[0..31]-printf_core r6:[0..31]-printf_core
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: sp
wctomb_entry:
l0040CFF0:
	branch r4 == 0<32> l0040CFF8
l0040CFF2:
l0040CFF4_thunk_wcrtomb:
	r3_10 = wcrtomb(r4, r5, out r4_8, out r5_11, out r6_12)
	r4Out = r4_8
	r5Out = r5_11
	r6Out = r6_12
	return r3_10
l0040CFF8:
	r4Out = r4
	r5Out = r5
	r6Out = r6
	return r3
wctomb_exit:


word32 dn_expand(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      dns_parse_callback
//      dns_parse_callback
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11:[0..31]-dns_parse_callback r12:[0..31]-dns_parse_callback r2:[0..31]-dns_parse_callback r4:[0..31]-dns_parse_callback r8:[0..31]-dns_parse_callback
// Trashed: r10 r11 r12 r13 r14 r2 r25 r3 r4 r8 r9
// Preserved: sp
dn_expand_entry:
l0040D000:
	branch r5 != r6 l0040D00A
l0040D002:
	r9_18 = 0xFFFFFFFF<32>
l0040D006:
	r4Out = r9_18
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040D00A:
	branch r8 <= 0<32> l0040D002
l0040D00E:
	branch r8 < 0xFF<32> l0040D01A
l0040D016_1:
	r8 = 0xFE<32>
l0040D01A:
	r13_11 = r6
	r8 = r8 + r7
	r11 = r7
	r14_17 = 0<32>
	r9_18 = 0xFFFFFFFF<32>
l0040D026:
	r2 = r5 - r4
	branch r14_17 >= r2 l0040D002
l0040D02E:
	r10_25 = CONVERT(Mem24[r13_11:byte], byte, word32)
	branch (r10_25 & 0xC0<32>) == 0<32> l0040D06E
l0040D03A:
	branch r5 == r13_11 + 1<32> l0040D002
l0040D042:
	r10_66 = r10_25 << 8<32> & 0x3F00<32> | CONVERT(Mem24[r13_11 + 1<i32>:byte], byte, word32)
	branch r9_18 >= 0<32> l0040D062
l0040D05A:
	r9_18 = r13_11 + 2<32> - r6
l0040D062:
	branch r10_66 >= r2 l0040D002
l0040D066:
	r13_11 = r4 + r10_66
l0040D06A:
	r14_17 = r14_17 + 2<32>
	goto l0040D026
l0040D06E:
	branch r10_25 == 0<32> l0040D0BC
l0040D072:
	r2 = r7
	branch r11 == r7 l0040D084
l0040D078:
	Mem37[r11:byte] = 0x2E<8>
	r2 = r11 + 1<32>
l0040D084:
	r3_39 = r13_11 + 1<32>
	r10_41 = CONVERT(Mem40[r13_11:byte], byte, word32)
	r11 = r5 - r3_39
	branch r10_41 >= r11 l0040D002
l0040D094:
	r11 = r8 - r2
	branch r10_41 >= r11 l0040D002
l0040D09C:
	r11_48 = 0<32>
	goto l0040D0AE
l0040D0A0:
	r12 = CONVERT(Mem53[r13_11 + r11_48 + 1<i32>:byte], byte, word32)
	Mem56[r11_48 + r2:byte] = SLICE(r12, byte, 0)
	r11_48 = r11_48 + 1<32>
l0040D0AE:
	branch r10_41 != r11_48 l0040D0A0
l0040D0B2:
	r11 = r2 + r10_41
	r13_11 = r3_39 + r10_41
	goto l0040D06A
l0040D0BC:
	Mem28[r11:byte] = 0<8>
	branch r9_18 >= 0<32> l0040D006
l0040D0C4:
	r9_18 = r13_11 + 1<32> - r6
	goto l0040D006
dn_expand_exit:


word32 __dns_parse(word32 r4, word32 r5, word32 r7, word32 r11, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getnameinfo
//      name_from_dns
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-name_from_dns r12:[0..31]-name_from_dns r2:[0..31]-name_from_dns r5:[0..31]-getnameinfo r6:[0..31]-name_from_dns r7:[0..31]-name_from_dns r8:[0..31]-name_from_dns
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
__dns_parse_entry:
l0040D0D0:
	r18_141 = r4
	branch r5 >= 0xC<32> l0040D0DE
l0040D0DA:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040D0DE:
	r7_29 = CONVERT(Mem19[r4 + 3<i32>:byte], byte, word32)
	r7 = r7_29 & 0xF<32>
	branch (r7_29 & 0xF<32>) == 0<32> l0040D0E8
l0040D0E4:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040D0E8:
	r6 = (CONVERT(Mem19[r4 + 4<i32>:byte], byte, word32) << 8<32>) + CONVERT(Mem19[r4 + 5<i32>:byte], byte, word32)
	r19_39 = (CONVERT(Mem19[r4 + 6<i32>:byte], byte, word32) << 8<32>) + CONVERT(Mem19[r4 + 7<i32>:byte], byte, word32)
	r7 = r4 + 0xC<32>
	r5 = r6 + r19_39
	branch r5 >= 1<32> l0040D0DA
l0040D108:
	r6 = r6 + 0xFFFFFFFF<32>
	r5 = 0xFFFFFFFF<32>
	branch r6 != 0xFFFFFFFF<32> l0040D11A
l0040D10E:
	r19_39 = r19_39 + 0xFFFFFFFF<32>
	r6 = 0xFFFFFFFF<32>
	branch r19_39 != 0xFFFFFFFF<32> l0040D156
l0040D116:
	goto l0040D0E4
l0040D118:
	r7 = r7 + 1<32>
l0040D11A:
	r5 = CONVERT(Mem19[r7:byte], byte, word32)
	branch r7 - r4 >= r5 l0040D12A
l0040D122:
	branch r5 <u 0x40<32> l0040D118
l0040D12A:
	branch r5 >u 0xC1<32> l0040D0DA
l0040D132:
	branch r5 != 0xC1<32> l0040D13E
l0040D134:
	branch Mem19[r7 + 1<i32>:byte] == 0xFF<8> l0040D0DA
l0040D13E:
	branch r4 + (r5 + 0xFFFFFFFA<32>) <u r7 l0040D0DA
l0040D148:
	r4_65 = 6<32>
	branch r5 != 0<32> l0040D150
l0040D14C_1:
	r4_65 = 5<32>
l0040D150:
	r7 = r7 + r4_65
	goto l0040D108
l0040D154:
	r7 = r7 + 1<32>
l0040D156:
	r16_79 = CONVERT(Mem19[r7:byte], byte, word32)
	branch r7 - r18_141 >= r5 l0040D166
l0040D15E:
	branch r16_79 <u 0x40<32> l0040D154
l0040D166:
	r6 = 0xC1<32>
	branch r16_79 >u 0xC1<32> l0040D0DA
l0040D16E:
	branch r16_79 != 0xC1<32> l0040D17A
l0040D170:
	r5 = CONVERT(Mem19[r7 + 1<i32>:byte], byte, word32)
	r6 = 0xFF<32>
	branch r5 == 0xFF<32> l0040D0DA
l0040D17A:
	r6 = r18_141 + (r5 + 0xFFFFFFFA<32>)
	branch r6 <u r7 l0040D0DA
l0040D184:
	r6_101 = 2<32>
	r5 = 1<32>
	branch r16_79 != 0<32> l0040D18C
l0040D188_1:
	r6_101 = 1<32>
l0040D18C:
	r16_102 = r7 + r6_101
	r17_111 = (CONVERT(Mem19[r16_102 + 8<i32>:byte], byte, word32) << 8<32>) + CONVERT(Mem19[r16_102 + 9<i32>:byte], byte, word32)
	r6 = r18_141 + r5
	r7 = r16_102 + r17_111
	branch r6 <u r7 l0040D0DA
l0040D1A4:
	r2 = dns_parse_callback(r7, CONVERT(Mem19[r16_102 + 1<i32>:byte], byte, word32), r16_102 + 0xA<32>, r17_111, r18_141, r11, out r4_136, out r5, out r6, out r7, out r8, out r11, out r12, out r18_141)
	branch r4_136 < 0<32> l0040D0DA
l0040D1B4:
	r7 = r16_102 + (r17_111 + 0xA<32>)
	goto l0040D10E
__dns_parse_exit:


void __restore(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__restore_entry:
l0040D1C0:
	__syscall<word32>(0<32>)
l0040D1CC_thunk___lockfile:
	__lockfile(r4, out r3_15, out r4_16, out r5_17, out r8_18, out r9_19)
	return
__restore_exit:


word32 __lockfile(word32 r4, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7A
//      fflush_unlocked
//      fgets_unlocked
//      fputc
//      fwrite_unlocked
//      _IO_getc
//      _IO_putc
//      puts
//      vfprintf
//      __restore
//      __isoc99_vfscanf
//      close_file
// MayUse:  r4:[0..31]
// LiveOut: r2:[0..31]-fputc r3:[0..31]-fputc r4:[0..31]-perror r5:[0..31]-fputc r8:[0..31]-fputc r9:[0..31]-fgets_unlocked
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__lockfile_entry:
l0040D1D0:
	r17_16 = Mem9[__read_user_local() - 148<i32>:word32]
	branch r17_16 != Mem9[r4 + 76<i32>:word32] l0040D1F0
l0040D1E4:
	r3Out = <invalid>
	r4Out = 0<32>
	r5Out = r5
	r8Out = r8
	r9Out = r9
	return r2
l0040D1E6:
	r2 = __wait(r4 + 0x4C<32>, r4 + 0x50<32>, r6_21, 1<32>, out r4_111, out r5, out r8, out r9)
l0040D1F0:
	__sync(0<32>)
l0040D1F8:
	r6_21 = __load_linked<word32>(&Mem9[r4 + 0x4C<32>:word32])
	branch r6_21 != 0<32> l0040D206
l0040D1FE:
	branch __store_conditional<word32>(&Mem9[r4 + 0x4C<32>:word32], r17_16) == 0<32> l0040D1F8
l0040D206:
	__sync(0<32>)
	branch r6_21 != 0<32> l0040D1E6
l0040D20C:
	r3Out = <invalid>
	r4Out = 1<32>
	r5Out = r5
	r8Out = r8
	r9Out = r9
	return r2
__lockfile_exit:


word32 __unlockfile(word32 r4, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7A
//      __getopt_msg
//      fflush_unlocked
//      fgets_unlocked
//      fputc
//      fwrite_unlocked
//      _IO_getc
//      _IO_putc
//      puts
//      vfprintf
//      __isoc99_vfscanf
// MayUse:  r4:[0..31]
// LiveOut: r2:[0..31]-fwrite_unlocked r4:[0..31]-__isoc99_vfscanf r5:[0..31]-fwrite_unlocked r6:[0..31]-fwrite_unlocked r7:[0..31]-fputc r8:[0..31]-fwrite_unlocked r9:[0..31]-fgets_unlocked
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__unlockfile_entry:
l0040D210:
	__sync(0<32>)
	Mem10[r4 + 76<i32>:word32] = 0<32>
	__sync(0<32>)
	r7_11 = Mem10[r4 + 80<i32>:word32]
	branch r7_11 == 0<32> l0040D248
l0040D224:
	r2 = __syscall(out r4, out r5, out r6, out r7_80, out r8, out r9)
	r7_11 = 0xFFFFFFDA<32>
	branch r4 != 0xFFFFFFDA<32> l0040D248
l0040D23A:
l0040D244_thunk___syscall:
	r2_38 = __syscall(out r4_40, out r5_41, out r6_42, out r7_43, out r8_44, out r9_45)
	r4Out = r4_40
	r5Out = r5_41
	r6Out = r6_42
	r7Out = r7_43
	r8Out = r8_44
	r9Out = r9_45
	return r2_38
l0040D248:
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7_11
	r8Out = r8
	r9Out = r9
	return r2
__unlockfile_exit:


word32 __overflow(word32 r4, word32 r5, word32 & r5Out, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fputc
//      _IO_putc
//      puts
// MayUse:  r4:[0..31] r5:[0..7]
// LiveOut: r4:[0..31]-puts r5:[0..31]-fputc r6:[0..31]-fputc r7:[0..31]-fputc
// Trashed: r25 r4 r5 r6 r7
// Preserved: r16 ra sp
__overflow_entry:
l0040D250:
	bLoc11_57 = SLICE(r5, byte, 0)
	branch Mem7[r4 + 16<i32>:word32] == 0<32> l0040D27A
l0040D25C:
	r7_21 = Mem13[r4 + 20<i32>:word32]
	branch r7_21 <u Mem13[r4 + 16<i32>:word32] l0040D284
l0040D264:
	call Mem13[r4 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem13,r4:r4,r5:fp - 0x11<32>,r6:1<32>
		defs: r4:r4_40,r5:r5_42,r6:r6_43,r7:r7_41
	branch r4_40 != 1<32> l0040D280
l0040D274:
	r5Out = r5
	r6Out = r6_16
	r7Out = r7_17
	return CONVERT(bLoc11_57, byte, word32)
l0040D27A:
	branch __towrite(r4, out r6_16, out r7_17) == 0<32> l0040D25C
l0040D280:
	r5Out = r5
	r6Out = r6_16
	r7Out = r7_17
	return 0xFFFFFFFF<32>
l0040D284:
	r4_23 = CONVERT(bLoc11_57, byte, word32)
	branch r4_23 == CONVERT(Mem13[r4 + 75<i32>:int8], int8, word32) l0040D264
l0040D290:
	Mem27[r7_21:byte] = bLoc11_57
	r5Out = r5
	r6Out = r7_21 + 1<32>
	r7Out = r7_21
	return r4_23
__overflow_exit:


void __stdio_write(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __stdout_write
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r19 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r20 ra sp
__stdio_write_entry:
l0040D2A0:
	r20_23 = 2<32>
	r17_24 = fp - 48<i32>
	r18_28 = Mem15[r4 + 20<i32>:word32] - Mem15[r4 + 28<i32>:word32] + r6
	goto l0040D2F2
l0040D2BE:
	r7_53 = Mem33[r4 + 44<i32>:word32]
	Mem58[r4 + 16<i32>:word32] = r7_53 + Mem33[r4 + 48<i32>:word32]
	Mem59[r4 + 20<i32>:word32] = r7_53
l0040D2CA:
	return
l0040D2CE:
	branch r20_23 == 2<32> l0040D318
l0040D2E0:
	goto l0040D2CA
l0040D2E6:
l0040D2F2:
	__syscall(out r4_42, out r5_141, out r6_142, out r7_143, out r8_144, out r9_145)
	__syscall_ret(r4_42, out r4_50, out r7_146)
	branch r18_28 == r4_50 l0040D2BE
l0040D304:
	branch r4_50 < 0<32> l0040D2CE
l0040D308:
	r18_28 = r18_28 - r4_50
	branch Mem33[r17_24 + 4<i32>:word32] >=u r4_50 l0040D2E6
l0040D310:
	r17_24 = r17_24 + 8<32>
	r20_23 = r20_23 + 0xFFFFFFFF<32>
	goto l0040D2E6
l0040D318:
	goto l0040D2CA
__stdio_write_exit:


void __stdout_write(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r19 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__stdout_write_entry:
l0040D320:
	branch !__bit<word32,word32>(Mem20[r4:word32], 6<32>) l0040D34A
l0040D332:
	__syscall(out r4_28, out r5_68, out r6_69, out r7_70, out r8_71, out r9_72)
	branch r4_28 == 0<32> l0040D34A
l0040D344:
	Mem35[r4 + 75<i32>:byte] = 0xFF<8>
l0040D34A:
	__stdio_write(r4, r6)
	return
__stdout_write_exit:


void __string_read(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      do_read
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
__string_read_entry:
l0040D360:
	r16_26 = Mem17[r4 + 84<i32>:word32]
	r18_24 = r6 + 0x100<32>
	r20_25 = r6
	r4_31 = memchr(r16_26, 0<32>, r6 + 0x100<32>, out r5_107, out r6_108, out r8_109)
	branch r4_31 == 0<32> l0040D378
l0040D376:
	r18_24 = r4_31 - r16_26
l0040D378:
	branch r6 <u r18_24 l0040D380
l0040D37C_1:
	r20_25 = r18_24
l0040D380:
	memcpy(r5, r16_26, r20_25, out r3_110, out r5_111, out r6_112, out r7_113, out r8_114, out r9_115, out r11_116, out r12_117, out r13_118, out r14_119)
	r16_68 = r16_26 + r18_24
	Mem75[r4 + 2<i32>:word32] = r16_68
	Mem76[r4 + 84<i32>:word32] = r16_68
	return
__string_read_exit:


word32 __towrite(word32 r4, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fputc
//      __fwritex
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__fwritex r6:[0..31]-__fwritex r7:[0..31]-__fwritex
// Trashed: r25 r4 r6 r7
// Preserved: sp
__towrite_entry:
l0040D3A0:
	r7_6 = CONVERT(Mem0[r4 + 74<i32>:int8], int8, word32)
	Mem9[r4 + 74<i32>:byte] = SLICE(r7_6, byte, 0) | SLICE(r7_6, byte, 0) + 0xFF<8>
	r7_10 = Mem9[r4:word32]
	branch !__bit<word32,word32>(r7_10, 3<32>) l0040D3C8
l0040D3B4:
	r6_15 = Mem9[r4 + 48<i32>:word32]
	r7_18 = Mem9[r4 + 44<i32>:word32] + r6_15
	r6Out = r6_15
	r7Out = r7_18
	return 0<32>
l0040D3C8:
	r6Out = r7_6 + 0xFFFFFFFF<32>
	r7Out = r7_10 | 0x20<32>
	return 0xFFFFFFFF<32>
__towrite_exit:


void __towrite_needs_stdio_exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__towrite_needs_stdio_exit_entry:
l0040D3D2:
l0040D3D2_thunk___stdio_exit_needed:
	__stdio_exit_needed()
	return
__towrite_needs_stdio_exit_exit:


word32 __uflow(word32 r4, word32 & r5Out, word32 & r6Out, word32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fgets_unlocked
//      _IO_getc
//      __shgetc
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__shgetc r5:[0..31]-__shgetc r6:[0..31]-__shgetc r7:[0..31]-__shgetc
// Trashed: r25 r4 r5 r6 r7
// Preserved: r16 ra sp
__uflow_entry:
l0040D3E0:
	branch __toread(r4, out r6_13, out r7_14, out r16_15) != 0<32> l0040D400
l0040D3EA:
	call Mem7[r16_15 + 32<i32>:word32] (retsize: 0;)
		uses: Mem:Mem7,r4:r16_15,r5:fp - 0x11<32>,r6:1<32>,Stack +000F:bLoc11
		defs: r4:r4_20,r5:r5_23,r6:r6_22,r7:r7_21
	branch r4_20 != 1<32> l0040D400
l0040D3FA:
	r5Out = r5
	r6Out = r6_13
	r7Out = r7_14
	return CONVERT(bLoc11, byte, word32)
l0040D400:
	r5Out = r5
	r6Out = r6_13
	r7Out = r7_14
	return 0xFFFFFFFF<32>
__uflow_exit:


void store_int(word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r25 r5 r8
// Preserved: sp
store_int_entry:
l0040D410:
	branch r4 == 0<32> l0040D432
l0040D412:
	branch r5 >=u 4<32> l0040D432
l0040D418:
	switch (r5 + 2<32>) { l0040D422 l0040D426 l0040D42A l0040D42A l0040D432 l0040D42E }
l0040D422:
	Mem19[r4:byte] = SLICE(r6, byte, 0)
	return
l0040D426:
	Mem18[r4:word16] = SLICE(r6, word16, 0)
	return
l0040D42A:
	return
l0040D42E:
	Mem12[r4:word32] = r6
	Mem14[r4 + 4<i32>:word32] = r7
l0040D432:
	return
store_int_exit:


word32 arg_n(word32 r4, word32 r5, word32 & r3Out, word32 & r4Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11:[0..31]-__isoc99_vfscanf r12:[0..31]-__isoc99_vfscanf r2:[0..31]-__isoc99_vfscanf r3:[0..31]-__isoc99_vfscanf r4:[0..31]-__isoc99_vfscanf
// Trashed: r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
arg_n_entry:
l0040D434:
	memcpy(fp - 0x20<32>, r4, 0x10<32>, out r3_235, out r5_236, out r6_237, out r7_238, out r8_239, out r9_240, out r11_241, out r12_242, out r13_243, out r14_244)
	r16_11 = r5
	r2_45 = memcpy(fp - 48<i32>, fp - 0x20<32>, 0x10<32>, out r3_47, out r5_245, out r6_246, out r7_247, out r8_248, out r9_249, out r11_41, out r12_42, out r13_250, out r14_251)
	r7_103 = CONVERT(bLoc24, int8, word32)
	r6_101 = 0<32>
	r4_50 = 0<32>
	goto l0040D462
l0040D45C:
	r4_50 = 1<32>
l0040D460:
	r16_11 = r16_11 + 0xFFFFFFFF<32>
l0040D462:
	branch r16_11 <u 2<32> l0040D478
l0040D466:
	branch r7_103 <= 0<32> l0040D45C
l0040D46A:
	r6_101 = 1<32>
	r7_103 = CONVERT(SLICE(r7_103, byte, 0) + 0xFC<8>, byte, int32)
	branch r7_103 >= 0<32> l0040D460
l0040D476:
	goto l0040D45C
l0040D478:
	branch r4_50 == 0<32> l0040D47C
l0040D47A:
l0040D47C:
	branch r6_101 == 0<32> l0040D482
l0040D47E:
l0040D482:
	branch r7_103 <= 0<32> l0040D49E
l0040D486:
	r6_66 = CONVERT(SLICE(r7_103, byte, 0) + 0xFC<8>, byte, int32)
	branch r6_66 < 0<32> l0040D49E
l0040D496:
	r7_103 = r6_66 - r7_103
l0040D49A:
	r4_82 = Mem81[r7_103:word32]
	r3Out = r3_47
	r4Out = r4_82
	r11Out = r11_41
	r12Out = r12_42
	return r2_45
l0040D49E:
	goto l0040D49A
arg_n_exit:


word32 __isoc99_vfscanf(word32 r0, word32 r4, word32 r5, word32 r6, word32 r19, word32 r20, word32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vsscanf
// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r3:[0..31]-__isoc99_vsscanf r4:[0..31]-__isoc99_vsscanf
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__isoc99_vfscanf_entry:
l0040D4A6:
	r2_1061 = memcpy(fp - 0x144<32>, r6, 0x10<32>, out r3_1063, out r5_3759, out r6_3760, out r7_3761, out r8_3762, out r9_3763, out r11_1058, out r12_1059, out r13_3764, out r14_3765)
	r16_1031 = r5
	r4_1064 = fp - 0x144<32>
	dwLoc0178_1769 = CONVERT(Mem53[r6 + 12<i32>:int8], int8, word32)
	branch Mem55[r4 + 76<i32>:word32] < 0<32> l0040D4D6
l0040D4CE:
	r2_1061 = __lockfile(r4, out r3_1063, out r4_1064, out r5_3766, out r8_3767, out r9_3768)
l0040D4D6:
	r23_1271 = 0<32>
l0040D4DC:
	r7_1013 = CONVERT(Mem73[r16_1031:byte], byte, word32)
	branch r7_1013 != 0<32> l0040D4F0
l0040D4E0:
	branch r7_1013 == 0<32> l0040D4EA
l0040D4E4:
	__unlockfile(r4, out r4_1064, out r5_3769, out r6_3770, out r7_3771, out r8_3772, out r9_3773)
l0040D4EA:
	r4Out = r4_1064
	return r3_1063
l0040D4F0:
	branch r7_1013 != 0x20<32> l0040D4F8
l0040D4F4:
	goto l0040DB50
l0040D4F8:
	branch r7_1013 >=u 0xE<32> l0040D504
l0040D500:
	goto l0040DB50
l0040D504:
	branch r7_1013 != 0x25<32> l0040D50E
l0040D508:
	r5_76 = CONVERT(Mem73[r16_1031 + 1<i32>:byte], byte, word32)
	branch r5_76 != 0x25<32> l0040D57C
l0040D50E:
	__shlim(r4, 0<32>, 0<32>, out r9_3780, out r11_1058)
	r16_1031 = r16_1031 + CONVERT(r7_1013 == 0x25<32>, bool, word32)
	r7_1332 = Mem73[r4 + 4<i32>:word32]
	branch r7_1332 >=u Mem73[r4 + 104<i32>:word32] l0040D562
l0040D528:
	Mem1348[r4 + 4<i32>:word32] = r7_1332 + 1<32>
	r6_1338 = r7_1332 + 1<32>
	r4_1064 = CONVERT(Mem1348[r7_1332:byte], byte, word32)
l0040D532:
	branch r4_1064 == CONVERT(Mem1351[r16_1031:byte], byte, word32) l0040D56A
l0040D538:
	r7_1013 = Mem1351[r4 + 104<i32>:word32]
	branch r7_1013 == 0<32> l0040D548
l0040D53E:
	r7_1365 = Mem1351[r4 + 4<i32>:word32]
	Mem1367[r4 + 4<i32>:word32] = r7_1365 + 0xFFFFFFFF<32>
	r7_1013 = r7_1365 + 0xFFFFFFFF<32>
l0040D548:
	branch r4_1064 >= 0<32> l0040D4E0
l0040D54C:
	r7_1013 = 0xFFFFFFFF<32>
	branch r6_1338 != 0<32> l0040D554
l0040D550_1:
l0040D554:
	goto l0040D4E0
l0040D558:
	r2_1061 = __shgetc(r4, out r3_1063, out r4_1402, out r5_3775, out r6_3776, out r7_3777, out r8_3778, out r9_3779, out r11_1058, out r12_1059)
	goto l0040DB7C
l0040D562:
	r2_1061 = __shgetc(r4, out r3_1063, out r4_1064, out r5_3781, out r6_1338, out r7_3782, out r8_3783, out r9_3784, out r11_1058, out r12_1059)
	goto l0040D532
l0040D56A:
	r23_1271 = r23_1271 + 1<32>
	goto l0040DBC6
l0040D57C:
	branch r5_76 != 0x2A<32> l0040D5C0
l0040D580:
	r7_104 = r16_1031 + 2<32>
	r18_113 = 0<32>
l0040D586:
	dwLoc0184_1790 = 0<32>
l0040D588:
	r6_146 = CONVERT(Mem145[r7_104:byte], byte, word32)
	r5_147 = r7_104 + 1<32>
	r4_1064 = r6_146 + 0xFFFFFFD0<32>
	branch r6_146 <u 0x3A<32> l0040D620
l0040D596:
	dwLoc017C_1793 = 0<32>
	branch r6_146 != 0x2D<32> l0040D5A8
l0040D59C:
	r20 = 0<32>
	dwLoc017C_1793 = CONVERT(r18_113 >u 0<32>, bool, word32)
	r19 = 0<32>
	r7_104 = r5_147
l0040D5A8:
	r16_1031 = r7_104 + 1<32>
	r6_1014 = CONVERT(Mem166[r7_104:byte], byte, word32) + 0xFFFFFFBF<32> & 0xFF<32>
	branch r6_1014 >=u 0x3A<32> l0040D7B4
l0040D5B8:
	r5_172 = 0x00413454<p32>
	r6_1014 = Mem166[0x00413454<p32> + r6_1014 * 4<32>:word32]
	switch (r6_1014) { l0040D70C l0040D7B4 l0040D70C l0040D7B4 l0040D70C l0040D70C l0040D70C l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D706 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D70C l0040D70C l0040D70C l0040D70C l0040D70C l0040D632 l0040D70C l0040D700 l0040D7B4 l0040D6F2 l0040D7B4 l0040D70C l0040D70C l0040D70C l0040D7B4 l0040D7B4 l0040D70C l0040D712 l0040D70C l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D712 }
l0040D5C0:
	branch r5_76 >=u 0x3A<32> l0040D5EC
l0040D5C8:
	r7_1013 = CONVERT(Mem73[r16_1031 + 2<i32>:byte], byte, word32)
	branch r7_1013 != 0x24<32> l0040D5EC
l0040D5CE:
	r2_1061 = arg_n(fp - 0x144<32>, r5_76 + 0xFFFFFFD0<32>, out r3_1063, out r4_132, out r11_1058, out r12_1059)
	r18_113 = r4_132
	r7_104 = r16_1031 + 3<32>
	goto l0040D586
l0040D5EC:
	branch r7_1013 <= 0<32> l0040D618
l0040D5F2:
	r6_105 = CONVERT(SLICE(r7_1013, byte, 0) + 0xFC<8>, byte, int32)
	branch r6_105 < 0<32> l0040D616
l0040D5FE:
	r4_1064 = dwLoc0178_1769
l0040D608:
	r7_104 = r16_1031 + 1<32>
	dwLoc0178_1769 = r6_105
	r18_113 = Mem108[r4_1064:word32]
	goto l0040D586
l0040D616:
	dwLoc0178_1769 = r6_105
l0040D618:
	r6_105 = dwLoc0178_1769
	goto l0040D608
l0040D620:
	dwLoc0184_1790 = (r6_146 + 0xFFFFFFD0<32>) *s 0xA<32> + r6_146 + 0xFFFFFFD0<32>
	r7_104 = r5_147
	goto l0040D588
l0040D632:
	r6_1014 = CONVERT(Mem166[r7_104 + 1<i32>:byte], byte, word32)
	r21_174 = 0xFFFFFFFF<32>
	branch r6_1014 != 0x28<32> l0040D644
l0040D63C:
	r16_1031 = r7_104 + 2<32>
	r21_174 = 0xFFFFFFFE<32>
l0040D644:
	r17_194 = CONVERT(Mem166[r16_1031:byte], byte, word32)
	r7_195 = r17_194 & 0x2F<32>
	r17_196 = r17_194
	branch (r17_194 & 0x2F<32>) != 3<32> l0040D656
l0040D64E:
	r17_196 = r17_194 | 0x20<32>
	r21_174 = 1<32>
l0040D656:
	branch r17_196 == 0x23<32> l0040D718
l0040D65A:
	branch r17_196 == 0x2E<32> l0040D72A
l0040D65E:
	branch r17_196 != 0x1B<32> l0040D736
l0040D662:
	__shlim(r4, r6_1014, r7_195 >> 0x1F<32>, out r9_3787, out r11_1058)
	r7_345 = Mem331[r4 + 4<i32>:word32]
	branch r7_345 >=u Mem331[r4 + 104<i32>:word32] l0040D7AA
l0040D67E:
	Mem361[r4 + 4<i32>:word32] = r7_345 + 1<32>
l0040D684:
	branch Mem363[r4 + 104<i32>:word32] == 0<32> l0040D694
l0040D68A:
	Mem367[r4 + 4<i32>:word32] = Mem363[r4 + 4<i32>:word32] + 0xFFFFFFFF<32>
l0040D694:
	branch dwLoc0184_1790 == 0x24<32> l0040DAE6
l0040D698:
	branch dwLoc0184_1790 >= 0x25<32> l0040D83A
l0040D69C:
	branch dwLoc0184_1790 == 0x18<32> l0040D8A0
l0040D6A0:
	branch dwLoc0184_1790 >= 0x19<32> l0040D7C0
l0040D6A4:
	branch dwLoc0184_1790 == 1<32> l0040DAF8
l0040D6A8:
	branch dwLoc0184_1790 < 1<32> l0040D6B4
l0040D6AC:
	branch dwLoc0184_1790 <u 0x48<32> l0040DAF8
l0040D6B4:
	r4_1064 = Mem1246[r4 + 124<i32>:word32]
	r23_1271 = Mem1246[r4 + 4<i32>:word32] - Mem1246[r4 + 8<i32>:word32] + Mem1246[r4 + 120<i32>:word32] + r23_1271
	branch r18_113 == 0<32> l0040DBC8
l0040D6E8:
	goto l0040DBC8
l0040D6F2:
	r6_1014 = CONVERT(Mem166[r7_104 + 1<i32>:byte], byte, word32)
	r21_174 = 1<32>
	branch r6_1014 != 0x2C<32> l0040D644
l0040D6FC:
	r16_1031 = r7_104 + 2<32>
l0040D700:
	r21_174 = 3<32>
	goto l0040D644
l0040D706:
	r21_174 = 2<32>
	goto l0040D644
l0040D70C:
	r16_1031 = r7_104
	r21_174 = 0<32>
	goto l0040D644
l0040D712:
	r21_174 = 1<32>
	goto l0040D644
l0040D718:
	r6_1014 = CONVERT((r17_194 & 0x2F<32>) > 0<32>, bool, word32)
	r7_195 = 1<32>
	branch r6_1014 != 0<32> l0040D726
l0040D722_1:
	r5_172 = 1<32>
l0040D726:
	dwLoc0184_1790 = r5_172
	goto l0040D662
l0040D72A:
	store_int(r18_113, r21_174, r23_1271, r17_194 & 0x2F<32>)
	r4_1064 = r18_113
	goto l0040DBC8
l0040D736:
	__shlim(r4, 0<32>, 0<32>, out r9_3785, out r11_3786)
l0040D73E:
	r7_270 = Mem269[r4 + 4<i32>:word32]
	branch r7_270 >=u Mem269[r4 + 104<i32>:word32] l0040D7A2
l0040D74A:
	Mem286[r4 + 4<i32>:word32] = r7_270 + 1<32>
	r4_274 = CONVERT(Mem286[r7_270:byte], byte, word32)
l0040D754:
	branch r4_274 == 0x20<32> l0040D73E
l0040D758:
	branch r4_274 <u 0xE<32> l0040D73E
l0040D760:
	branch Mem291[r4 + 104<i32>:word32] == 0<32> l0040D770
l0040D766:
	Mem295[r4 + 4<i32>:word32] = Mem291[r4 + 4<i32>:word32] + 0xFFFFFFFF<32>
l0040D770:
	r7_301 = Mem297[r4 + 4<i32>:word32] - Mem297[r4 + 8<i32>:word32]
	r6_304 = r7_301 + Mem297[r4 + 120<i32>:word32]
	r4_300 = Mem297[r4 + 124<i32>:word32]
	r6_1014 = r6_304 + r23_1271
	r7_195 = CONVERT(r6_1014 <u r23_1271, bool, word32) + (r4_300 + (CONVERT(r6_304 <u r7_301, bool, word32) + ((r7_301 >> 0x1F<32>) + r4_300)))
	r23_1271 = r6_1014
	goto l0040D662
l0040D7A2:
	r2_1061 = __shgetc(r4, out r3_1063, out r4_274, out r5_3821, out r6_3822, out r7_3823, out r8_3824, out r9_3825, out r11_3826, out r12_1059)
	goto l0040D754
l0040D7AA:
	r2_1061 = __shgetc(r4, out r3_1063, out r4_1064, out r5_3788, out r6_1014, out r7_3789, out r8_3790, out r9_3791, out r11_1058, out r12_1059)
	branch r4_1064 >= 0<32> l0040D684
l0040D7B4:
	r7_1013 = 0xFFFFFFFF<32>
	branch r6_1014 != 0<32> l0040D7BC
l0040D7B8_1:
l0040D7BC:
	goto l0040D974
l0040D7C0:
	branch dwLoc0184_1790 == 0x21<32> l0040DAF8
l0040D7C4:
	branch dwLoc0184_1790 == 0x23<32> l0040D8AE
l0040D7C8:
	branch dwLoc0184_1790 != 0x1B<32> l0040D6B4
l0040D7CC:
	branch Mem466[r16_1031 + 1<i32>:byte] == 0x1E<8> l0040D986
l0040D7D2:
	r16_1031 = r16_1031 + 1<32>
	r22_551 = 0<32>
l0040D7D6:
	memset(&tLoc0134, r22_551, 0x101<32>, out r6_3812, out r7_3813, out r8_563, out r10_3814)
	r6_1014 = CONVERT(Mem560[r16_1031:byte], byte, word32)
	Mem572[&tLoc0134:byte] = 0<8>
	r4_1064 = &tLoc0134
	r18_113 = &tLoc0134
	branch r6_1014 != 0x2D<32> l0040D98E
l0040D7F6:
	r16_1031 = r16_1031 + 1<32>
	r6_1014 = 1<32> - r22_551
l0040D802:
	r7_524 = CONVERT(Mem582[r16_1031:byte], byte, word32)
	branch r7_524 == 0x1D<32> l0040D8DA
l0040D808:
	branch r7_524 == 0<32> l0040D7B4
l0040D80A:
	branch r7_524 != 0x2D<32> l0040D824
l0040D80E:
	r6_1021 = CONVERT(Mem582[r16_1031 + 1<i32>:byte], byte, word32)
	branch r6_1021 == 0<32> l0040D824
l0040D812:
	branch r6_1021 == 0x1D<32> l0040D824
l0040D816:
	r7_1022 = CONVERT(Mem582[r16_1031 - 1<i32>:byte], byte, word32)
l0040D81A:
	r5_1024 = r22_551 ^ 1<32>
	branch r7_1022 < r6_1021 l0040D9A0
l0040D822:
	r16_1031 = r16_1031 + 1<32>
l0040D824:
	r6_1014 = 1<32> - r22_551
	Mem1045[fp + 0xFFFFEFD0<32> + CONVERT(Mem1033[r16_1031:byte], byte, word32) + 3837<i32>:byte] = SLICE(r6_1014, byte, 0)
	r16_1031 = r16_1031 + 1<32>
	goto l0040D802
l0040D83A:
	branch dwLoc0184_1790 == 0x2F<32> l0040DAEA
l0040D83E:
	branch dwLoc0184_1790 >= 0x30<32> l0040D894
l0040D842:
	branch dwLoc0184_1790 < 0x28<32> l0040DAF8
l0040D846:
	r5_370 = 0<32>
	branch dwLoc0184_1790 != 0x29<32> l0040D6B4
l0040D84C:
	r2_1061 = __intscan(r2_1061, r3_1063, r4, r5_370, 0<32>, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, r12_1059, out r3_1063, out r4_1064, out r5_452, out r6_3807, out r7_3808, out r8_3809, out r9_3810, out r11_1058, out r12_1059)
	r22_473 = Mem466[r4 + 4<i32>:word32] - Mem466[r4 + 8<i32>:word32]
	r8_476 = Mem466[r4 + 120<i32>:word32] + r22_473
	r7_1013 = r5_452
	branch (r8_476 | CONVERT(r8_476 <u r22_473, bool, word32) + ((r22_473 >> 0x1F<32>) + Mem466[r4 + 124<i32>:word32])) == 0<32> l0040D974
l0040D888:
	branch dwLoc0184_1790 != 0x30<32> l0040DAEE
l0040D88C:
	branch r18_113 == 0<32> l0040DAEE
l0040D890:
	goto l0040D6B4
l0040D894:
	branch dwLoc0184_1790 == 0x33<32> l0040D8AE
l0040D898:
	branch dwLoc0184_1790 >= 0x34<32> l0040D8A4
l0040D89C:
	branch dwLoc0184_1790 != 0x30<32> l0040D6B4
l0040D8A0:
	r5_370 = 0x10<32>
	goto l0040D84C
l0040D8A4:
	branch dwLoc0184_1790 == 0x35<32> l0040DAE6
l0040D8A8:
	branch dwLoc0184_1790 == 0x38<32> l0040D8A0
l0040D8AC:
	goto l0040D6B4
l0040D8AE:
	memset(&tLoc0134, 0xFFFFFFFF<32>, 0x101<32>, out r6_3804, out r7_524, out r8_3805, out r10_3806)
	Mem530[&tLoc0134:byte] = 0<8>
	branch dwLoc0184_1790 != 0x33<32> l0040D9A8
l0040D8C2:
l0040D8DA:
	r22_1697 = 0x1F<32>
l0040D8DE:
	branch r21_174 != 1<32> l0040DA14
l0040D8E2:
	r20 = r18_113
	branch r7_524 == 0<32> l0040D8F6
l0040D8E8:
	r2_1061 = malloc(r0, r22_1697 << 2<32>, r11_1058, out r3_1063, out r4_788, out r6_707, out r8_3811, out r11_1058)
	r20 = r4_788
	branch r4_788 == 0<32> l0040DBF8
l0040D8F6:
	Mem798[&tLoc014C:word32] = 0<32>
	r8_1000 = 0<32>
l0040D8FC:
	r7_802 = Mem801[r4 + 4<i32>:word32]
	branch r7_802 >=u Mem801[r4 + 104<i32>:word32] l0040DA0A
l0040D908:
	Mem822[r4 + 4<i32>:word32] = r7_802 + 1<32>
	r6_1014 = r7_802 + 1<32>
	r4_814 = CONVERT(Mem822[r7_802:byte], byte, word32)
l0040D912:
	branch Mem827[fp + 0xFFFFEFD0<32> + r4_814 + 3837<i32>:byte] != 0<8> l0040D9B8
l0040D922:
	r19 = 0<32>
	r4_1064 = mbsinit(&tLoc014C)
	branch r4_1064 == 0<32> l0040D7B4
l0040D92E:
	r18_113 = r8_1000
l0040D930:
	r7_923 = Mem920[r4 + 4<i32>:word32]
	branch Mem920[r4 + 104<i32>:word32] == 0<32> l0040D940
l0040D93A:
	Mem925[r4 + 4<i32>:word32] = r7_923 + 0xFFFFFFFF<32>
l0040D940:
	r7_931 = Mem927[r4 + 4<i32>:word32] - Mem927[r4 + 8<i32>:word32]
	r4_1064 = Mem927[r4 + 124<i32>:word32]
	r6_934 = r7_931 + Mem927[r4 + 120<i32>:word32]
	r7_1013 = CONVERT(r6_934 <u r7_931, bool, word32) + ((r7_931 >> 0x1F<32>) + r4_1064)
	r5_938 = r6_934 | r7_1013
	branch r5_938 == 0<32> l0040D974
l0040D966:
	branch dwLoc017C_1793 != 0x23<32> l0040DBCE
l0040D96A:
	branch r5_938 != r6_934 l0040D974
l0040D96E:
	branch r6_934 == r7_1013 l0040DBF0
l0040D974:
	branch r7_1013 == 0<32> l0040D4E0
l0040D97A:
	free(r0, r19, r11_1058, out r3_3792, out r4_3793, out r6_3794, out r7_3795, out r8_3796, out r9_3797, out r11_1169)
	free(r0, r20, r11_1169, out r3_1063, out r4_1064, out r6_3798, out r7_1013, out r8_3799, out r9_3800, out r11_3801)
	goto l0040D4E0
l0040D986:
	r16_1031 = r16_1031 + 2<32>
	r22_551 = 1<32>
	goto l0040D7D6
l0040D98E:
	branch r6_1014 != 0x1D<32> l0040D802
l0040D992:
	r16_1031 = r16_1031 + 1<32>
	r6_1014 = 1<32> - r22_551
	goto l0040D802
l0040D9A0:
	r7_1022 = r7_1022 + 1<32>
	Mem1029[r7_1022 + r8_563:byte] = SLICE(r5_1024, byte, 0)
	goto l0040D81A
l0040D9A8:
	r22_1697 = 0x1F<32>
	branch dwLoc0184_1790 != 0x23<32> l0040D8DE
l0040D9B0:
	r22_1697 = r7_524 + 1<32>
	goto l0040D8DE
l0040D9B8:
	Mem832[&tLoc0151:byte] = SLICE(r4_814, byte, 0)
	r2_1061 = mbrtowc(fp - 0x150<32>, &tLoc0151, 1<32>, &tLoc014C, out r3_1063, out r4_1064, out r6_1014, out r8_1000, out r11_1058)
	branch r4_1064 == 0xFFFFFFFE<32> l0040D8FC
l0040D9D4:
	branch r4_1064 == 0xFFFFFFFF<32> l0040DB4A
l0040D9DA:
	branch r20 == 0<32> l0040D9E6
l0040D9DE:
	Mem854[r20 + r8_1000 * 4<32>:word32] = 0xFFFFFFFF<32>
	r8_1000 = r8_1000 + 1<32>
l0040D9E6:
	branch false l0040D8FC
l0040D9EC:
	branch r8_1000 != r22_1697 l0040D8FC
l0040D9F0:
	r22_864 = r8_1000 << 1<32>
	r22_1697 = r22_864 + 1<32>
	r2_1061 = realloc(r0, r20, r22_864 + 1<32> << 2<32>, r11_1058, out r3_1063, out r4_879, out r6_707, out r8_1000, out r11_1058, out r12_1059)
	branch r4_879 == 0<32> l0040DBFA
l0040DA04:
	r20 = r4_879
	goto l0040D8FC
l0040DA0A:
	r2_1061 = fn0040DC0C(r4, out r3_1063, out r4_814, out r6_1014, out r8_1000, out r11_1058, out r12_1059)
	goto l0040D912
l0040DA14:
	branch r7_524 == 0<32> l0040DA76
l0040DA18:
	r2_1061 = malloc(r0, r22_1697, r11_1058, out r3_1063, out r4_705, out r6_707, out r8_3815, out r11_1058)
	r19 = r4_705
	branch r4_705 == 0<32> l0040DBF8
l0040DA22:
	r8_1000 = 0<32>
l0040DA24:
	r7_715 = Mem714[r4 + 4<i32>:word32]
	branch r7_715 >=u Mem714[r4 + 104<i32>:word32] l0040DA6C
l0040DA30:
	Mem735[r4 + 4<i32>:word32] = r7_715 + 1<32>
	r4_727 = CONVERT(Mem735[r7_715:byte], byte, word32)
l0040DA3A:
	branch Mem741[fp + 0xFFFFEFD0<32> + r4_727 + 3837<i32>:byte] != 0<8> l0040DA4A
l0040DA46:
	r20 = 0<32>
	goto l0040D930
l0040DA4A:
	Mem747[r8_1000 + r19:byte] = SLICE(r4_727, byte, 0)
	r20_744 = r8_1000 + 1<32>
	r4_748 = r19
	branch r22_1697 != r20_744 l0040DA66
l0040DA58:
	r22_751 = r22_1697 << 1<32>
	r22_1697 = r22_751 + 1<32>
	r2_1061 = realloc(r0, r19, r22_751 + 1<32>, r11_1058, out r3_1063, out r4_748, out r6_707, out r8_3817, out r11_1058, out r12_1059)
	branch r4_748 == 0<32> l0040DC08
l0040DA66:
	r8_1000 = r20_744
	r19 = r4_748
	goto l0040DA24
l0040DA6C:
	r2_1061 = fn0040DC0C(r4, out r3_1063, out r4_727, out r6_3816, out r8_1000, out r11_1058, out r12_1059)
	r18_113 = r8_1000
	goto l0040DA3A
l0040DA76:
	r19_597 = 0<32>
	branch r18_113 != 0<32> l0040DAAA
l0040DA7A:
	r7_641 = Mem640[r4 + 4<i32>:word32]
	branch r7_641 >=u Mem640[r4 + 104<i32>:word32] l0040DADC
l0040DA86:
	Mem657[r4 + 4<i32>:word32] = r7_641 + 1<32>
	r4_650 = CONVERT(Mem657[r7_641:byte], byte, word32)
l0040DA90:
	branch Mem664[fp + 0xFFFFEFD0<32> + r4_650 + 3837<i32>:byte] != 0<8> l0040DA7A
l0040DA9C:
	r8_1000 = 0<32>
	r20 = 0<32>
	r19 = 0<32>
	goto l0040D930
l0040DAA4:
	Mem636[r19_597 + r18_113:byte] = SLICE(r4_617, byte, 0)
	r19_597 = r19_597 + 1<32>
l0040DAAA:
	r7_604 = Mem603[r4 + 4<i32>:word32]
	r8_1000 = r19_597
	branch r7_604 >=u Mem603[r4 + 104<i32>:word32] l0040DAD2
l0040DAB8:
	Mem625[r4 + 4<i32>:word32] = r7_604 + 1<32>
	r4_617 = CONVERT(Mem625[r7_604:byte], byte, word32)
l0040DAC2:
	branch Mem631[fp + 0xFFFFEFD0<32> + r4_617 + 3837<i32>:byte] != 0<8> l0040DAA4
l0040DACE:
	r19 = r18_113
	goto l0040DA46
l0040DAD2:
	r2_1061 = fn0040DC0C(r4, out r3_1063, out r4_617, out r6_3820, out r8_1000, out r11_1058, out r12_1059)
	r18_113 = r19_597
	goto l0040DAC2
l0040DADC:
	r2_1061 = fn0040DC0C(r4, out r3_1063, out r4_650, out r6_3818, out r8_3819, out r11_1058, out r12_1059)
	goto l0040DA90
l0040DAE2:
	goto l0040DBD8
l0040DAE6:
	r5_370 = 0xA<32>
	goto l0040D84C
l0040DAEA:
	r5_370 = 8<32>
	goto l0040D84C
l0040DAEE:
	store_int(r18_113, r21_174, r4_1064, r5_452)
	goto l0040D6B4
l0040DAF8:
	r2_1061 = __floatscan(r0, r2_1061, r4, r21_174, 0<32>, r12_1059, out r3_1063, out r4_1064, out r5_1065, out r6_3802, out r7_3803, out r11_1058, out r12_1059)
	r7_1074 = Mem466[r4 + 4<i32>:word32] - Mem466[r4 + 8<i32>:word32]
	r6_1077 = r7_1074 + Mem466[r4 + 120<i32>:word32]
	r7_1013 = CONVERT(r6_1077 <u r7_1074, bool, word32) + ((r7_1074 >> 0x1F<32>) + Mem466[r4 + 124<i32>:word32]) | r6_1077
	branch r7_1013 == 0<32> l0040D974
l0040DB28:
	branch r18_113 == 0<32> l0040D6B4
l0040DB2C:
	branch r21_174 == 1<32> l0040DB42
l0040DB30:
	branch r21_174 == 2<32> l0040DB42
l0040DB34:
	branch r21_174 != 0<32> l0040D6B4
l0040DB38:
	__truncdfsf2(r4_1064, r5_1065)
	goto l0040D6B4
l0040DB42:
	Mem1227[r18_113:word32] = r4_1064
	Mem1229[r18_113 + 4<i32>:word32] = r5_1065
	goto l0040D6B4
l0040DB4A:
	r19 = 0<32>
	goto l0040D7B4
l0040DB4E:
	r16_1031 = r16_1031 + 1<32>
l0040DB50:
	r7_1381 = CONVERT(Mem73[r16_1031 + 1<i32>:byte], byte, word32)
	branch r7_1381 == 0x20<32> l0040DB4E
l0040DB56:
	branch r7_1381 <u 0xE<32> l0040DB4E
l0040DB5E:
	__shlim(r4, 0<32>, 0<32>, out r9_3774, out r11_1058)
l0040DB66:
	r7_1398 = Mem1397[r4 + 4<i32>:word32]
	branch r7_1398 >=u Mem1397[r4 + 104<i32>:word32] l0040D558
l0040DB72:
	Mem1414[r4 + 4<i32>:word32] = r7_1398 + 1<32>
	r4_1402 = CONVERT(Mem1414[r7_1398:byte], byte, word32)
l0040DB7C:
	branch r4_1402 == 0x20<32> l0040DB66
l0040DB80:
	branch r4_1402 <u 0xE<32> l0040DB66
l0040DB88:
	branch Mem1419[r4 + 104<i32>:word32] == 0<32> l0040DB98
l0040DB8E:
	Mem1423[r4 + 4<i32>:word32] = Mem1419[r4 + 4<i32>:word32] + 0xFFFFFFFF<32>
l0040DB98:
	r4_1064 = Mem1425[r4 + 124<i32>:word32]
	r23_1271 = Mem1425[r4 + 4<i32>:word32] - Mem1425[r4 + 8<i32>:word32] + Mem1425[r4 + 120<i32>:word32] + r23_1271
l0040DBC6:
l0040DBC8:
	r16_1031 = r16_1031 + 1<32>
	goto l0040D4DC
l0040DBCE:
	branch r7_1013 == 0<32> l0040DBDC
l0040DBD2:
	branch r21_174 != 1<32> l0040DAE2
l0040DBD6:
	Mem992[r18_113:word32] = r20
l0040DBD8:
	branch dwLoc017C_1793 == 0x23<32> l0040D6B4
l0040DBDC:
	branch r20 == 0<32> l0040DBE4
l0040DBE0:
	Mem1004[r20 + r8_1000 * 4<32>:word32] = 0<32>
l0040DBE4:
	branch r19 == 0<32> l0040D6B4
l0040DBE8:
	Mem1009[r19 + r8_1000:byte] = 0<8>
	goto l0040D6B4
l0040DBF0:
	branch r7_1013 == 0<32> l0040D6B4
l0040DBF6:
	goto l0040DBD2
l0040DBF8:
	r20 = 0<32>
l0040DBFA:
	r19 = 0<32>
l0040DBFC:
	branch r6_707 != 0<32> l0040DC04
l0040DC00_1:
l0040DC04:
	goto l0040D97A
l0040DC08:
	r20 = 0<32>
	goto l0040DBFC
__isoc99_vfscanf_exit:


word32 fn0040DC0C(word32 r4, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31]
// LiveOut: r11:[0..31]-__isoc99_vfscanf r12:[0..31]-__isoc99_vfscanf r2:[0..31]-__isoc99_vfscanf r3:[0..31]-__isoc99_vfscanf r4:[0..31]-__isoc99_vfscanf r6:[0..31]-__isoc99_vfscanf r8:[0..31]-__isoc99_vfscanf
// Trashed: r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040DC0C_entry:
l0040DC0C:
l0040DC0C_thunk___shgetc:
	r2_13 = __shgetc(r4, out r3_14, out r4_6, out r5_23, out r6_8, out r7_24, out r8_15, out r9_25, out r11_11, out r12_12)
	r3Out = r3_14
	r4Out = r4_6
	r6Out = r6_8
	r8Out = r8_15
	r11Out = r11_11
	r12Out = r12_12
	return r2_13
fn0040DC0C_exit:


word32 stpcpy(word32 r4, word32 r5, word32 & r6Out, word32 & r7Out, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strcpy
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5:[0..31]-strcpy r6:[0..31]-strcpy r7:[0..31]-strcpy r8:[0..31]-strcpy
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
stpcpy_entry:
l0040DC10:
	branch ((r4 ^ r5) & 3<32>) != 0<32> l0040DC80
l0040DC18:
	branch (r5 & 3<32>) == 0<32> l0040DC32
l0040DC1C:
	r7_10 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem11[r4:byte] = SLICE(r7_10, byte, 0)
	branch r7_10 != 0<32> l0040DC2A
l0040DC22:
	goto l0040DC88
l0040DC24:
	r7_10 = CONVERT(Mem17[r5:byte], byte, word32)
	Mem19[r4:byte] = SLICE(r7_10, byte, 0)
	branch r7_10 == 0<32> l0040DC88
l0040DC2A:
	r5 = r5 + 1<32>
	r4 = r4 + 1<32>
	branch (r5 & 3<32>) != 0<32> l0040DC24
l0040DC32:
	r6 = Mem21[r5:word32]
	r8 = r4
	r9_25 = r5
	branch (r6 + 0xFEFEFEFF<32> & ~r6 & 0x80808080<32>) != 0<32> l0040DC80
l0040DC52:
	r8 = r8 + 4<32>
	Mem37[r8 - 4<i32>:word32] = r6
	r9_25 = r9_25 + 4<32>
	r6 = Mem37[r9_25:word32]
	branch (r6 + 0xFEFEFEFF<32> & ~r6 & 0x80808080<32>) == 0<32> l0040DC52
l0040DC74:
	r7_10 = CONVERT(Mem37[r9_25:byte], byte, word32)
	Mem48[r8:byte] = SLICE(r7_10, byte, 0)
	r4 = r8
	r5 = r9_25
	branch r7_10 == 0<32> l0040DC88
l0040DC7C:
	r5 = r5 + 1<32>
	r4 = r4 + 1<32>
l0040DC80:
	r7_56 = CONVERT(Mem54[r5:byte], byte, word32)
	Mem58[r4:byte] = SLICE(r7_56, byte, 0)
	branch r7_56 != 0<32> l0040DC7C
l0040DC86:
	r6Out = r6
	r7Out = r7_56
	r8Out = r8
	return r5
l0040DC88:
	r6Out = r6
	r7Out = r7_10
	r8Out = r8
	return r5
stpcpy_exit:


void stpncpy(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      strncpy
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
stpncpy_entry:
l0040DC90:
	r16_12 = r4
	branch ((r4 ^ r5) & 3<32>) != 0<32> l0040DD0A
l0040DC9C:
	branch (r5 & 3<32>) == 0<32> l0040DCB2
l0040DCA0:
	branch r6 == 0<32> l0040DD1A
l0040DCA2:
	r7_18 = CONVERT(Mem17[r5:byte], byte, word32)
	Mem20[r16_12:byte] = SLICE(r7_18, byte, 0)
	branch r7_18 == 0<32> l0040DD1A
l0040DCA8:
	r5 = r5 + 1<32>
	r6 = r6 + 0xFFFFFFFF<32>
	r16_12 = r16_12 + 1<32>
	branch (r5 & 3<32>) != 0<32> l0040DCA0
l0040DCB2:
	branch r6 == 0<32> l0040DD1A
l0040DCB4:
	r9_29 = CONVERT(Mem28[r5:byte], byte, word32)
	branch r9_29 == 0<32> l0040DD1A
l0040DCBC:
	branch r6 <u 4<32> l0040DD24
l0040DCC0:
	r4_30 = Mem28[r5:word32]
	branch (~r4_30 & r4_30 + 0xFEFEFEFF<32> & 0x80808080<32>) == 0<32> l0040DCFE
l0040DCDE:
	goto l0040DD24
l0040DCE0:
	r4_46 = Mem41[r5:word32]
	branch (r4_46 + 0xFEFEFEFF<32> & ~r4_46 & 0x80808080<32>) != 0<32> l0040DD0C
l0040DCFE:
	r6 = r6 + 0xFFFFFFFC<32>
	r5 = r5 + 4<32>
	r16_12 = r16_12 + 4<32>
	branch r6 >=u 4<32> l0040DCE0
l0040DD0A:
	branch r6 == 0<32> l0040DD1A
l0040DD0C:
	r7_69 = CONVERT(Mem66[r5:byte], byte, word32)
	Mem72[r16_12:byte] = SLICE(r7_69, byte, 0)
	branch r7_69 == 0<32> l0040DD1A
l0040DD12:
	r6 = r6 + 0xFFFFFFFF<32>
	r5 = r5 + 1<32>
	r16_12 = r16_12 + 1<32>
	branch r6 != 0<32> l0040DD0C
l0040DD1A:
	memset(r16_12, 0<32>, r6, out r6_118, out r7_119, out r8_120, out r10_121)
	return
l0040DD24:
	Mem57[r16_12:byte] = SLICE(r9_29, byte, 0)
	goto l0040DD12
stpncpy_exit:


word32 __set_thread_area()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __init_tp
// MayUse: 
// LiveOut: r4:[0..31]-__init_tp
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__set_thread_area_entry:
l0040DD30:
l0040DD36_thunk___syscall:
	__syscall(out r4_9, out r5_15, out r6_16, out r7_17, out r8_18, out r9_19)
	return r4_9
__set_thread_area_exit:


void handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
handler_entry:
l0040DD40:
	__errno_location(out r4_11)
	r16_12 = Mem7[r4_11:word32]
	sem_init(0<32>)
	sem_init(0<32>)
	__syscall(out r4_180, out r5_181, out r6_182, out r7_183, out r8_184, out r9_185)
l0040DD62:
	r5_40 = Mem39[0x00432F18<p32>:word32]
	__sync(0<32>)
l0040DD6E:
	r7_43 = 0x00432F18<p32>
	r6_45 = __load_linked<word32>(&Mem42[0x00432F18<p32>:word32])
	branch r5_40 != r6_45 l0040DD84
l0040DD78:
	r7_43 = __store_conditional<word32>(&Mem42[0x00432F18<p32>:word32], fp - 0x38<32>)
	branch r7_43 == 0<32> l0040DD6E
l0040DD84:
	__sync(0<32>)
	branch r7_43 != r6_45 l0040DD62
l0040DD8E:
	__sync(0<32>)
l0040DD94:
	r7_57 = 0x00432F0C<p32>
	r6_59 = __load_linked<word32>(&Mem42[0x00432F0C<p32>:word32])
	branch r5_40 == r6_59 l0040DDE4
l0040DDA0:
	__sync(0<32>)
	branch r6_59 != r7_57 l0040DDBC
l0040DDAE:
	__syscall(out r4_186, out r5_187, out r6_188, out r7_189, out r8_190, out r9_191)
l0040DDBC:
	sem_wait(fp - 0x30<32>)
	call Mem42[0x00432F08<p32>:word32] (retsize: 0;)
		uses: Mem:Mem42,r4:Mem42[0x00432F04<p32>:word32],Stack +0020:tLoc20
	sem_post(&tLoc20)
	sem_wait(fp - 0x30<32>)
	__errno_location(out r4_143)
	Mem144[r4_143:word32] = r16_12
	return
l0040DDE4:
	r7_57 = __store_conditional<word32>(&Mem42[0x00432F0C<p32>:word32], 0<32>)
	branch r7_57 == 0<32> l0040DD94
l0040DDF0:
	goto l0040DDA0
handler_exit:


word32 __synccall(word32 r0, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      seteuid
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r4:[0..31]-__setxid
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r24 ra sp
__synccall_entry:
l0040DDF2:
	fn0040E008(&tLoc0840, 0<32>, 0x820<32>)
	fn0040E008(&tLoc08CC, 0<32>, 0x8C<32>)
	Mem48[&tLoc08CC:word32] = 0x0040DD40<p32>
	Mem50[&tLoc08CC + 132<i32>:word32] = 0<32>
	__block_app_sigs()
	__lock(0x00432F10<p32>)
	__block_all_sigs()
	__pthread_setcancelstate(1<32>, fp - 0x958<32>, out r7_566)
	r7_83 = Mem50[0x00454431<p32>:word32]
	Mem85[0x00432F18<p32>:word32] = r0
	branch r7_83 == 0<32> l0040DF7E
l0040DE50:
	Mem86[0x00432F08<p32>:word32] = r4
	Mem87[0x00432F04<p32>:word32] = r5
	__sync(0<32>)
	Mem89[0x00432F00<p32>:word32] = 1<32>
	__sync(0<32>)
	fn0040E008(&tLoc08CC + 4<i32>, 0xFFFFFFFF<32>, 0x80<32>)
	__libc_sigaction(0x22<32>, &tLoc08CC, 0<32>)
	fn0040E00C()
	r4_132 = fn0040E00C()
	r4_146 = open64(0x900000<32>)
	Mem152[&tLoc0840:word32] = r4_146
	branch r4_146 >= 0<32> l0040DEF8
l0040DEA4:
	__sync(0<32>)
	Mem364[0x00432F00<p32>:word32] = r0
	__sync(0<32>)
	r4_371 = fn0040E00C()
	branch r4_371 != 0xFFFFFFDA<32> l0040DEDE
l0040DECC:
	r4_371 = fn0040E00C()
l0040DEDE:
	__pthread_setcancelstate(r4_371, 0<32>, out r7_567)
	__unlock(0x00432F10<p32>)
	return __restore_sigs()
l0040DEF8:
	r16_153 = Mem152[0x00454433<p32>:word32]
l0040DEFA:
	branch r16_153 != 0<32> l0040DF14
l0040DEFC:
	r16_168 = 0<32>
l0040DEFE:
	r4_172 = readdir64(&tLoc0840)
	branch r4_172 != 0<32> l0040DF22
l0040DF08:
	branch r16_168 == 0<32> l0040DF5E
l0040DF0A:
	rewinddir(&tLoc0840)
	goto l0040DEFC
l0040DF14:
	__syscall(out r4_568, out r5_569, out r6_570, out r7_571, out r8_572, out r9_573)
	r16_153 = r16_153 + 0xFFFFFFFF<32>
	goto l0040DEFA
l0040DF22:
	branch Mem181[r4_172 + 19<i32>:byte] >=u 0x3A<8> l0040DEFE
l0040DF2E:
	r4_186 = atoi(r4_172 + 0x13<32>)
	branch r4_186 == r4_132 l0040DEFE
l0040DF3C:
	branch r4_186 == 0<32> l0040DEFE
l0040DF3E:
	__sync(0<32>)
	Mem193[0x00432F0C<p32>:word32] = r4_186
	__sync(0<32>)
	r7_194 = Mem193[0x00432F18<p32>:word32]
l0040DF52:
	branch r7_194 == 0<32> l0040DFA8
l0040DF54:
	branch Mem193[r7_194 + 4<i32>:word32] == r4_186 l0040DEFE
l0040DF5A:
	r7_194 = Mem193[r7_194:word32]
	goto l0040DF52
l0040DF5E:
	close(out r4_574, out r6_575, out r8_576)
	r16_267 = Mem181[0x00432F18<p32>:word32]
l0040DF6C:
	branch r16_267 != 0<32> l0040DF8A
l0040DF6E:
	Mem297[&tLoc08CC:word32] = 1<32>
	__libc_sigaction(0x22<32>, &tLoc08CC, 0<32>)
l0040DF7E:
	do_setxid(r5)
	r4_330 = Mem329[0x00432F18<p32>:word32]
	goto l0040DFA4
l0040DF8A:
	sem_post(r16_267 + 8<32>)
	sem_wait(r16_267 + 0x18<32>)
	r16_267 = Mem181[r16_267:word32]
	goto l0040DF6C
l0040DF9A:
	r16_333 = Mem329[r4_330:word32]
	sem_post(r4_330 + 8<32>)
	r4_330 = r16_333
l0040DFA4:
	branch r4_330 != 0<32> l0040DF9A
l0040DFA6:
	goto l0040DEA4
l0040DFA8:
	__syscall(out r4_202, out r5_577, out r6_578, out r7_579, out r8_580, out r9_581)
	branch r4_202 == 0xFFFFFFFD<32> l0040DEFE
l0040DFBA:
	__clock_gettime(0<32>, &tLoc0954, out r3_582, out r4_583, out r5_584, out r6_585, out r7_218, out r8_586)
	Mem227[&tLoc0954 + 4<i32>:word32] = r7_218 + 0x989680<32>
	branch r7_218 <= 0x3B02337F<32> l0040DFE6
l0040DFD8:
	Mem231[&tLoc0954:word32] = r7_218 + 0x989681<32>
	Mem232[&tLoc0954 + 4<i32>:word32] = r7_218 + 0xC4FDCC80<32>
l0040DFE6:
	r4_242 = fn0040E00C()
	branch r4_242 == 0<32> l0040DEFE
l0040DFFC:
	branch r4_242 == 0xFFFFFFFD<32> l0040DEFE
l0040E004:
	r16_168 = r16_168 + 1<32>
	goto l0040DEFE
__synccall_exit:


void fn0040E008(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __synccall
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
fn0040E008_entry:
l0040E008:
l0040E008_thunk_memset:
	memset(r4, r5, r6, out r6_14, out r7_15, out r8_16, out r10_17)
	return
fn0040E008_exit:


word32 fn0040E00C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __synccall
// MayUse: 
// LiveOut: r4:[0..31]-__synccall
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040E00C_entry:
l0040E00C:
l0040E00C_thunk___syscall:
	__syscall(out r4_6, out r5_12, out r6_13, out r7_14, out r8_15, out r9_16)
	return r4_6
fn0040E00C_exit:


word32 readdir64(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__synccall
// Trashed: r18 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
readdir64_entry:
l0040E010:
	branch Mem11[r4 + 16<i32>:word32] < Mem11[r4 + 20<i32>:word32] l0040E050
l0040E020:
	__syscall(out r4_24, out r5_98, out r6_99, out r7_100, out r8_101, out r9_102)
	branch r4_24 > 0<32> l0040E04C
l0040E034:
	r17_37 = 0<32>
	branch __ins<word32,word32>(r4_24 + 2<32>, 0<32>, 1<32>, 1<32>) == 0<32> l0040E064
l0040E040:
	__errno_location(out r4_103)
	goto l0040E064
l0040E04C:
l0040E050:
	r17_37 = r4 + 0x20<32> + Mem34[r4 + 16<i32>:word32]
	r7_43 = Mem42[r17_37 + 12<i32>:word32]
	Mem44[r4 + 8<i32>:word32] = Mem34[r17_37 + 8<i32>:word32]
	Mem45[r4 + 12<i32>:word32] = r7_43
l0040E064:
	return r17_37
readdir64_exit:


void rewinddir(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
rewinddir_entry:
l0040E070:
	__lock(r4 + 0x18<32>)
	lseek64()
	Mem39[r4 + 8<i32>:word32] = 0<32>
	Mem40[r4 + 12<i32>:word32] = 0<32>
l0040E094_thunk___unlock:
	__unlock(r4 + 0x18<32>)
	return
rewinddir_exit:


word32 open64(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __synccall
// MayUse:  r5:[0..31]
// LiveOut: r4:[0..31]-__synccall
// Trashed: r10 r18 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
open64_entry:
l0040E0A0:
	branch !__bit<word32,word32>(r5, 6<32>) l0040E0C4
l0040E0B8:
	branch (r5 & 0x4100000<32>) != 0x4100000<32> l0040E0DA
l0040E0C4:
l0040E0DA:
	__syscall_cp(out r4_54, out r5_121, out r6_122, out r8_123)
	branch r4_54 < 0<32> l0040E106
l0040E0F6:
	branch __bit<word32,word32>(r5, 0x13<32>) l0040E106
l0040E0FA:
	__syscall(out r4_125, out r5_126, out r6_127, out r7_128, out r8_129, out r9_130)
l0040E106:
	__syscall_ret(r4_54, out r4_77, out r7_124)
	return r4_77
open64_exit:


word32 copysign(word32 r5, word32 r7, word32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      copysignl
// MayUse:  r5:[0..31] r7:[0..31]
// LiveOut: r5:[0..31]-copysignl r8:[0..31]-copysignl
// Trashed: r25 r5 r6 r7 r8
// Preserved: r4 sp
copysign_entry:
l0040E120:
	r6_10 = __ext<word32,word32>(r5, 0<32>, 0x1F<32>) | __ins<word32,word32>(r7, 0<32>, 0<32>, 1<32>)
	r8Out = r4
	return r6_10
copysign_exit:


word32 fmod(word64 r4_r5, word64 r6_r7, word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fmodl
// MayUse:  Sequence r4:r5:[0..63] Sequence r6:r7:[0..63]
// LiveOut: r4:[0..31]-fmodl r5:[0..31]-fmodl
// Trashed: r25 r4 r5 r6 r7
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
fmod_entry:
	r6 = SLICE(r6_r7, word32, 32)
	r7 = SLICE(r6_r7, word32, 0)
	r4 = SLICE(r4_r5, word32, 32)
	r5 = SLICE(r4_r5, word32, 0)
l0040E140:
	r7_35 = r7 << 1<32> | r6 >>u 0x1F<32>
	r23_161 = r4
	r22_164 = r5
	branch (r6 << 1<32> | r7_35) == 0<32> l0040E178
l0040E15C:
	r16_40 = __ext<word32,word32>(r7, 0<32>, 0x1F<32>)
	branch r16_40 >u 0xFF000000<32> l0040E178
l0040E168:
	branch r16_40 != 0xFF000000<32> l0040E16E
l0040E16A:
	branch r6 != 0<32> l0040E178
l0040E16E:
	r16_132 = __ext<word32,word32>(r5, 4<32>, 0xB<32>)
	branch r16_132 != 0x7FF<32> l0040E18C
l0040E178:
	r4_r5_217 = __muldf3(r4_r5, r6_r7)
	r4_r5_223 = __divdf3(r4_r5_217, r4_r5_217)
	r4_224 = SLICE(r4_r5_223, word32, 32) (alias)
	r5_228 = SLICE(r4_r5_223, word32, 0) (alias)
l0040E186:
	r23_161 = r4_224
	r22_164 = r5_228
l0040E188:
	r5Out = r22_164
	return r23_161
l0040E18C:
	r6_48 = r5 << 1<32> | r4 >>u 0x1F<32>
	branch r7_35 <u r6_48 l0040E1B4
l0040E19C:
	branch r6_48 != r7_35 l0040E1A2
l0040E19E:
	branch r6 << 1<32> <u r4 << 1<32> l0040E1B4
l0040E1A2:
	branch r6 << 1<32> != r4 << 1<32> l0040E188
l0040E1A6:
	branch r7_35 != r6_48 l0040E188
l0040E1AA:
	r4_r5_206 = __muldf3(r4_r5, 0<64>)
	r4_224 = SLICE(r4_r5_206, word32, 32) (alias)
	r5_228 = SLICE(r4_r5_206, word32, 0) (alias)
	goto l0040E186
l0040E1B4:
	branch r16_132 != 0<32> l0040E20C
l0040E1B6:
	r7_61 = r5 << 0xC<32> | r4 >>u 0x14<32>
	r5_62 = r4 << 0xC<32>
l0040E1C4:
	branch r7_61 >= 0<32> l0040E1FC
l0040E1C8:
	r17_121 = __ashldi3(r4, r5, 1<32> - r16_132, out r5_78)
	r18_124 = r5_78
l0040E1D2:
	r30_104 = __ext<word32,word32>(r7, 4<32>, 0xB<32>)
	branch r30_104 != 0<32> l0040E22A
l0040E1DA:
	r7_100 = r7 << 0xC<32> | r6 >>u 0x14<32>
	r5_101 = r6 << 0xC<32>
l0040E1E8:
	branch r7_100 >= 0<32> l0040E21A
l0040E1EC:
	r4_115 = __ashldi3(r6, r7, 1<32> - r30_104, out r5_116)
l0040E1F8:
	goto l0040E244
l0040E1FC:
	r16_132 = r16_132 + 0xFFFFFFFF<32>
	r7_61 = r7_61 << 1<32> | r5_62 >>u 0x1F<32>
	r5_62 = r5_62 << 1<32>
	goto l0040E1C4
l0040E20C:
	r17_121 = r4
	r18_124 = __ext<word32,word32>(r5, 0<32>, 0x14<32>) | 0x1000000<32>
	goto l0040E1D2
l0040E21A:
	r30_104 = r30_104 + 0xFFFFFFFF<32>
	r7_100 = r7_100 << 1<32> | r5_101 >>u 0x1F<32>
	r5_101 = r5_101 << 1<32>
	goto l0040E1E8
l0040E22A:
	r4_115 = r6
	r5_116 = __ext<word32,word32>(r7, 0<32>, 0x14<32>) | 0x1000000<32>
	goto l0040E1F8
l0040E238:
	r18_124 = r18_124 << 1<32> | r17_121 >>u 0x1F<32>
	r17_121 = r17_121 << 1<32>
	r16_132 = r16_132 + 0xFFFFFFFF<32>
l0040E244:
	r20_123 = r17_121 - r4_115
	r6_129 = r18_124 - r5_116 - CONVERT(r17_121 <u r20_123, bool, word32)
	r4_128 = r20_123
	r7_130 = r6_129
	branch r30_104 >= r16_132 l0040E26A
l0040E258:
	branch r6_129 < 0<32> l0040E238
l0040E25C:
	branch (r20_123 | r6_129) == 0<32> l0040E1AA
l0040E264:
	r17_121 = r20_123
	r18_124 = r6_129
	goto l0040E238
l0040E26A:
	branch r6_129 < 0<32> l0040E29A
l0040E26E:
	branch (r20_123 | r6_129) == 0<32> l0040E1AA
l0040E276:
	branch r7_130 >>u 0x14<32> == 0<32> l0040E2A0
l0040E27C:
	branch r16_132 <= 0<32> l0040E2B0
l0040E280:
	r5_150 = r16_132 << 0x14<32> | r7_130 + 0xFFF00000<32>
l0040E28C:
	r23_161 = r4_128
	r22_164 = __ins<word32,word32>(r5, 0<32>, 0<32>, 1<32>) | r5_150
	goto l0040E188
l0040E29A:
	r4_128 = r17_121
	r7_130 = r18_124
	goto l0040E276
l0040E2A0:
	r7_130 = r7_130 << 1<32> | r4_128 >>u 0x1F<32>
	r4_128 = r4_128 << 1<32>
	r16_132 = r16_132 + 0xFFFFFFFF<32>
	goto l0040E276
l0040E2B0:
	r4_128 = __lshrdi3(r4_128, r7_130, 1<32> - r16_132, out r5_150)
	goto l0040E28C
fmod_exit:


word32 frexp(word64 r4_r5, word32 r6, word32 & r5Out, word32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      frexpl
//      frexp
// MayUse:  r6:[0..31] Sequence r4:r5:[0..63]
// LiveOut: r18:[0..31]-frexpl r4:[0..31]-frexpl r5:[0..31]-frexpl
// Trashed: r18 r25 r4 r5 r6 r7
// Preserved: r16 r17 ra sp
frexp_entry:
	r4 = SLICE(r4_r5, word32, 32)
	r5 = SLICE(r4_r5, word32, 0)
l0040E2C0:
	dwLoc10_67 = r18
	r17_14 = r4
	r16_16 = r5
	r7_17 = __ext<word32,word32>(r5, 4<32>, 0xB<32>)
	branch r7_17 != 0<32> l0040E2FE
l0040E2CE:
	branch __nedf2(r4_r5) == 0<32> l0040E2FA
l0040E2D6:
	__muldf3(r4_r5, SEQ(Mem11[0x41202C8<32>:word32], Mem11[0x41202CC<32>:word32]))
	r17_14 = frexp(r4_r5, r6, out r5_44, out r18_81)
	r16_16 = r5_44
	dwLoc10_67 = Mem11[r6:word32] + 0xFFFFFFC0<32>
l0040E2F6:
	r5Out = r16_16
	r18Out = dwLoc10_67
	return r17_14
l0040E2FA:
	dwLoc10_67 = 0<32>
	goto l0040E2F6
l0040E2FE:
	branch r7_17 == 0x7FF<32> l0040E2F6
l0040E306:
	dwLoc10_67 = r7_17 + 0xFFFFFC02<32>
	r16_16 = __ins<word32,word32>(r5, 0<32>, 4<32>, 1<32>) | 0xFE000000<32>
	goto l0040E2F6
frexp_exit:


word32 mbrtowc(word32 r4, word32 r5, word32 r6, word32 r7, word32 & r3Out, word32 & r4Out, word32 & r6Out, word32 & r8Out, word32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11:[0..31]-__isoc99_vfscanf r2:[0..31]-__isoc99_vfscanf r3:[0..31]-__isoc99_vfscanf r4:[0..31]-__isoc99_vfscanf r6:[0..31]-__isoc99_vfscanf r8:[0..31]-__isoc99_vfscanf
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
mbrtowc_entry:
l0040E320:
	r2_140 = r4
	branch r7 != 0<32> l0040E32C
l0040E328_1:
	r7 = 0x00432F20<p32>
l0040E32C:
	r9_14 = Mem5[r7:word32]
	branch r5 != 0<32> l0040E338
l0040E330:
	branch r9_14 != 0<32> l0040E3F2
l0040E334:
	r3Out = r3
	r4Out = 0<32>
	r6Out = r6
	r8Out = r8
	r11Out = r11
	return r4
l0040E338:
	branch r4 != 0<32> l0040E340
l0040E33C:
	r2_140 = fp - 0x14<32>
l0040E340:
	r4_102 = 0xFFFFFFFE<32>
	branch r6 == 0<32> l0040E3FE
l0040E348:
	branch r9_14 != 0<32> l0040E3A0
l0040E34C:
	branch true l0040E362
l0040E358:
	Mem92[r2_140:word32] = 254<i32>
	r3Out = r3
	r4Out = 1<32>
	r6Out = r6
	r8Out = 254<i32>
	r11Out = r11
	return r2_140
l0040E362:
	r3 = __read_user_local()
	branch Mem5[Mem5[r3 - 56<i32>:word32]:word32] != 0<32> l0040E37E
l0040E36E:
	Mem88[r2_140:word32] = CONVERT(Mem5[r5:int8], int8, word32) & 0xDFFF<32>
	r3Out = r3
	r4Out = 1<32>
	r6Out = 0xDFFF<32>
	r8Out = 254<i32>
	r11Out = r11
	return r2_140
l0040E37E:
	r8 = 0x3C<32>
	branch true l0040E3F2
l0040E386:
	r5 = r5 + 1<32>
	r9_14 = Mem5[0x00413460<p32>:word32]
	r8 = r6 + 0xFFFFFFFF<32>
	branch r6 != 1<32> l0040E3A2
l0040E398:
	Mem80[r7:word32] = r9_14
	r3Out = r3
	r4Out = 0xFFFFFFFE<32>
	r6Out = r6
	r8Out = r8
	r11Out = r11
	return r2_140
l0040E3A0:
	r8 = r6
l0040E3A2:
	r11_41 = CONVERT(Mem5[r5:byte], byte, word32)
	r11 = (r11_41 >>u 3<32>) + 0xFFFFFFF0<32>
	branch __ins<word32,word32>((r9_14 >> 0x1A<32>) + (r11_41 >>u 3<32>) | r11, 0<32>, 0<32>, 1<32>) != 0<32> l0040E3F2
l0040E3C0:
	r5 = r5 + 1<32>
	r8 = r8 + 0xFFFFFFFF<32>
	r9_14 = CONVERT(Mem5[r5 - 1<i32>:byte], byte, word32) + 0xFFFFFF80<32> | r9_14 << 6<32>
	branch r9_14 < 0<32> l0040E3E4
l0040E3D8:
	Mem67[r2_140:word32] = r9_14
	r3Out = r3
	r4Out = r6 - r8
	r6Out = r6
	r8Out = r8
	r11Out = r11
	return r2_140
l0040E3E4:
	branch r8 == 0<32> l0040E398
l0040E3E8:
	branch Mem5[r5:byte] <u 0x80<8> l0040E3C0
l0040E3F2:
	r3 = __errno_location(out r4_186)
	r4_102 = 0xFFFFFFFF<32>
l0040E3FE:
	r3Out = r3
	r4Out = r4_102
	r6Out = r6
	r8Out = r8
	r11Out = r11
	return r2_140
mbrtowc_exit:


word32 mbsinit(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-__isoc99_vfscanf
// Trashed: r25 r4 r7
// Preserved: sp
mbsinit_entry:
l0040E400:
	r7_4 = 1<32>
	branch r4 == 0<32> l0040E40A
l0040E404:
	r7_4 = CONVERT(Mem0[r4:word32] <u 1<32>, bool, word32)
l0040E40A:
	return r7_4
mbsinit_exit:


word32 mbsrtowcs(word32 r4, word32 r5, word32 r6, word32 r7, word32 & r5Out, word32 & r6Out, word32 & r8Out, word32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      mbstowcs
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r18:[0..31]-mbstowcs r4:[0..31]-mbstowcs r5:[0..31]-mbstowcs r6:[0..31]-mbstowcs r8:[0..31]-mbstowcs
// Trashed: r18 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
mbsrtowcs_entry:
l0040E410:
	dwLoc10_296 = r18
	r17_14 = r4
	r16_100 = Mem11[r5:word32]
	branch r7 == 0<32> l0040E458
l0040E418:
	r8 = Mem11[r7:word32]
	branch r8 == 0<32> l0040E458
l0040E41E:
	branch r4 == 0<32> l0040E544
l0040E422:
	r7_101 = r6
l0040E426:
	r9_116 = CONVERT(Mem115[r16_100:byte], byte, word32)
	r5_121 = (r9_116 >>u 3<32>) + 0xFFFFFFF0<32>
	branch __ins<word32,word32>((r8 >> 0x1A<32>) + (r9_116 >>u 3<32>) | r5_121, 0<32>, 0<32>, 1<32>) != 0<32> l0040E530
l0040E442:
	r8 = r9_116 + 0xFFFFFF80<32> | r8 << 6<32>
	branch r8 < 0<32> l0040E5CA
l0040E452:
	r16_100 = r16_100 + 1<32>
l0040E454:
	Mem146[r17_14:word32] = r8
	goto l0040E4BC
l0040E458:
	branch Mem11[Mem11[__read_user_local() - 56<i32>:word32]:word32] != 0<32> l0040E49A
l0040E464:
	r5_121 = r6
	branch r4 != 0<32> l0040E48A
l0040E468:
l0040E46E_thunk_strlen:
	r4_56 = strlen(r16_100, out r5_57, out r6_58, out r7_492)
	r5Out = r5_57
	r6Out = r6_58
	r8Out = r8
	r18Out = r18
	return r4_56
l0040E472:
	r7_32 = CONVERT(Mem31[r16_100:byte], byte, word32)
	branch r7_32 == 0<32> l0040E490
l0040E476:
	r17_14 = r17_14 + 4<32>
	Mem46[r17_14 - 4<i32>:word32] = CONVERT(SLICE(r7_32, byte, 0), byte, int32) & 0xDFFF<32>
	r16_100 = r16_100 + 1<32>
	r5_121 = r5_121 + 0xFFFFFFFF<32>
l0040E48A:
	branch r5_121 != 0<32> l0040E472
l0040E48C:
	Mem242[r5:word32] = r16_100
	goto l0040E496
l0040E490:
	r6 = r6 - r5_121
	dwLoc10_296 = 0<32>
l0040E496:
	r5Out = r5_121
	r6Out = r6
	r8Out = r8
	r18Out = dwLoc10_296
	return r6
l0040E49A:
	r7_101 = r6
	r5_121 = r5
	branch r4 == 0<32> l0040E4C2
l0040E49E:
	dwLoc10_296 = r18 (alias)
	branch r7_101 == 0<32> l0040E48C
l0040E4A0:
	branch Mem154[r16_100:byte] >=u 0x40<8> l0040E4AE
l0040E4A8:
	branch (r16_100 & 3<32>) == 0<32> l0040E596
l0040E4AE:
	r5_121 = CONVERT(Mem182[r16_100:byte], byte, word32)
	branch r5_121 >=u 0x40<32> l0040E5B6
l0040E4B8:
	r16_100 = r16_100 + 1<32>
l0040E4BC:
	r7_101 = r7_101 + 0xFFFFFFFF<32>
	r17_14 = r17_14 + 4<32>
	goto l0040E49E
l0040E4C2:
	Mem81 = Mem11 (alias)
	r17_14 = r4 (alias)
	branch Mem81[r16_100:byte] >=u 0x40<8> l0040E4F4
l0040E4CA:
	branch (r16_100 & 3<32>) != 0<32> l0040E4F4
l0040E4CE:
	r5_86 = r16_100
l0040E4D0:
	r9_89 = Mem81[r5_86:word32]
	r8 = r7_101 - r5_86 + r16_100
	branch ((r9_89 + 0xFEFEFEFF<32> | r9_89) & 0x80808080<32>) == 0<32> l0040E504
l0040E4F0:
	r16_100 = r5_86
	r7_101 = r8
l0040E4F4:
	r5_104 = CONVERT(Mem81[r16_100:byte], byte, word32)
	branch r5_104 >=u 0x40<32> l0040E508
l0040E4FE:
	r16_100 = r16_100 + 1<32>
l0040E500:
	r7_101 = r7_101 + 0xFFFFFFFF<32>
	goto l0040E4C2
l0040E504:
	r5_86 = r5_86 + 4<32>
	goto l0040E4D0
l0040E508:
	branch r5_104 >=u 0xF5<32> l0040E536
l0040E510:
	r16_100 = r16_100 + 1<32>
	r8 = Mem81[0x00413370<p32> + (r5_104 + 0xFFFFFF3E<32>) * 4<32>:word32]
l0040E51A:
	Mem62 = Mem11 (alias)
	r5_63 = CONVERT(Mem62[r16_100:byte], byte, word32)
	r5_121 = (r5_63 >>u 3<32>) + 0xFFFFFFF0<32>
	r17_14 = r4 (alias)
	branch __ins<word32,word32>((r8 >> 0x1A<32>) + (r5_63 >>u 3<32>) | r5_121, 0<32>, 0<32>, 1<32>) == 0<32> l0040E548
l0040E530:
	r16_100 = r16_100 + 0xFFFFFFFF<32>
	branch r8 != 0<32> l0040E558
l0040E536:
	dwLoc10_296 = r18
	r5_121 = CONVERT(Mem187[r16_100:byte], byte, word32)
	branch r5_121 != 0<32> l0040E558
l0040E53A:
	branch r17_14 == 0<32> l0040E540
l0040E53C:
	dwLoc10_296 = 0<32>
l0040E540:
	r6 = r6 - r7_101
	goto l0040E496
l0040E544:
	r7_101 = r6
	goto l0040E51A
l0040E548:
	branch __bit<word32,word32>(r8, 0x19<32>) l0040E4FE
l0040E54C:
	r5_71 = CONVERT(Mem62[r16_100 + 1<i32>:byte], byte, word32)
	r5_121 = r5_71 + 0xFFFFFF80<32>
	branch r5_71 <u 0x80<32> l0040E568
l0040E556:
	r16_100 = r16_100 + 0xFFFFFFFF<32>
l0040E558:
	__errno_location(out r4_493)
	r6 = 0xFFFFFFFF<32>
	dwLoc10_296 = 0x54<32>
	branch r17_14 != 0<32> l0040E48C
l0040E566:
	goto l0040E496
l0040E568:
	branch !__bit<word32,word32>(r8, 0x13<32>) l0040E570
l0040E56C:
	r16_100 = r16_100 + 2<32>
	goto l0040E500
l0040E570:
	r5_73 = CONVERT(Mem62[r16_100 + 2<i32>:byte], byte, word32)
	r5_121 = r5_73 + 0xFFFFFF80<32>
	branch r5_73 >=u 0x80<32> l0040E556
l0040E57A:
	r16_100 = r16_100 + 3<32>
	goto l0040E500
l0040E57E:
	Mem170[r17_14:word32] = r8
	r16_100 = r16_100 + 4<32>
	r17_14 = r17_14 + 0x10<32>
	Mem180[r17_14 - 4<i32>:word32] = CONVERT(Mem177[r16_100 - 1<i32>:byte], byte, word32)
	r7_101 = r7_101 + 0xFFFFFFFC<32>
l0040E596:
	r8 = CONVERT(Mem160[r16_100:byte], byte, word32)
	branch r7_101 <u 5<32> l0040E4AE
l0040E59E:
	r4_163 = Mem160[r16_100:word32]
	branch ((r4_163 + 0xFEFEFEFF<32> | r4_163) & 0x80808080<32>) == 0<32> l0040E57E
l0040E5B4:
	goto l0040E4AE
l0040E5B6:
	branch r5_121 >=u 0xF5<32> l0040E536
l0040E5BE:
	r16_100 = r16_100 + 1<32>
	r8 = Mem182[0x00413370<p32> + (r5_121 + 0xFFFFFF3E<32>) * 4<32>:word32]
	goto l0040E426
l0040E5CA:
	r5_130 = CONVERT(Mem115[r16_100 + 1<i32>:byte], byte, word32)
	r5_121 = r5_130 + 0xFFFFFF80<32>
	branch r5_130 >=u 0x80<32> l0040E556
l0040E5D4:
	r8 = r5_130 + 0xFFFFFF80<32> | r8 << 6<32>
	branch r8 < 0<32> l0040E5E4
l0040E5E0:
	r16_100 = r16_100 + 2<32>
	goto l0040E454
l0040E5E4:
	r5_134 = CONVERT(Mem115[r16_100 + 2<i32>:byte], byte, word32)
	r5_121 = r5_134 + 0xFFFFFF80<32>
	branch r5_134 >=u 0x80<32> l0040E556
l0040E5EE:
	r16_100 = r16_100 + 3<32>
	r8 = r5_134 + 0xFFFFFF80<32> | r8 << 6<32>
	goto l0040E454
mbsrtowcs_exit:


word32 wcrtomb(word32 r4, word32 r5, word32 & r4Out, word32 & r5Out, word32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      wctomb
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r3:[0..31]-wctomb r4:[0..31]-wctomb r5:[0..31]-wctomb r6:[0..31]-wctomb
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: ra sp
wcrtomb_entry:
l0040E600:
	r7_35 = 1<32>
	branch r4 == 0<32> l0040E612
l0040E606:
	branch r5 >=u 0x80<32> l0040E616
l0040E60E:
	Mem72[r4:byte] = SLICE(r5, byte, 0)
	r7_35 = 1<32>
l0040E612:
	r4Out = r7_35
	r5Out = r5
	r6Out = r6
	return r3
l0040E616:
	r3 = __read_user_local()
	branch Mem5[Mem5[r3 - 56<i32>:word32]:word32] != 0<32> l0040E63A
l0040E622:
	r6 = r5 + 0xFFFF2080<32>
	branch r5 <u 0xE000<32> l0040E60E
l0040E62E:
	r3 = __errno_location(out r4_103)
	r7_35 = 0xFFFFFFFF<32>
	goto l0040E612
l0040E63A:
	branch r5 >u 0x7FF<32> l0040E65E
l0040E642:
	Mem55[r4:byte] = SLICE(r5 >> 6<32>, byte, 0) | 0xC0<8>
	r5 = r5 & 0x3F<32> | 0xFFFFFF80<32>
	Mem59[r4 + 1<i32>:byte] = SLICE(r5, byte, 0)
	r6 = 0xFFFFFFC0<32>
	r7_35 = 2<32>
	goto l0040E612
l0040E65E:
	branch r5 <=u 0xD7FF<32> l0040E676
l0040E666:
	branch r5 >u 0xFFFF<32> l0040E69A
l0040E676:
	Mem43[r4:byte] = SLICE(r5 >> 0xC<32>, byte, 0) | 0xE0<8>
	Mem48[r4 + 1<i32>:byte] = SLICE(__ext<word32,word32>(r5, 6<32>, 6<32>), byte, 0) | 0x80<8>
	r5 = r5 & 0x3F<32> | 0xFFFFFF80<32>
	Mem49[r4 + 2<i32>:byte] = SLICE(r5, byte, 0)
	r6 = 0xFFFFFF80<32>
	r7_35 = 3<32>
	goto l0040E612
l0040E69A:
	r6 = 0xFFFFF<32>
	branch r5 >u 0x10FFFF<32> l0040E62E
l0040E6AC:
	r6_25 = __ext<word32,word32>(r5, 0xC<32>, 6<32>)
	Mem26[r4:byte] = SLICE(r5 >> 0x12<32>, byte, 0) | 0xF0<8>
	Mem29[r4 + 1<i32>:byte] = SLICE(r6_25, byte, 0) | 0x80<8>
	r6_30 = __ext<word32,word32>(r5, 6<32>, 6<32>)
	Mem34[r4 + 2<i32>:byte] = SLICE(r6_30, byte, 0) | 0x80<8>
	r5 = r5 & 0x3F<32> | 0xFFFFFF80<32>
	Mem36[r4 + 3<i32>:byte] = SLICE(r5, byte, 0)
	r6 = r6_30 | 0xFFFFFF80<32>
	r7_35 = 4<32>
	goto l0040E612
wcrtomb_exit:


void close_file(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __stdio_exit_needed
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
close_file_entry:
l0040E6E0:
	branch r4 == 0<32> l0040E71E
l0040E6E6:
	branch Mem7[r4 + 76<i32>:word32] < 0<32> l0040E6F2
l0040E6EE:
	__lockfile(r4, out r3_117, out r4_118, out r5_119, out r8_120, out r9_121)
l0040E6F2:
	branch Mem7[r4 + 28<i32>:word32] >=u Mem7[r4 + 20<i32>:word32] l0040E702
l0040E6FA:
	call Mem7[r4 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem7,r2:r2_37,r3:r3_38,r4:r4,r5:0<32>,r6:0<32>,r7:r7_32,r8:r8_35,r9:r9_39
		defs: r2:r2_37,r3:r3_38,r7:r7_32,r8:r8_35,r9:r9_39
l0040E702:
	r6_42 = Mem7[r4 + 4<i32>:word32]
	r7_43 = Mem7[r4 + 8<i32>:word32]
	branch r6_42 >=u r7_43 l0040E71E
l0040E70A:
	r6_50 = r6_42 - r7_43
	call Mem7[r4 + 40<i32>:word32] (retsize: 0;)
		uses: Mem:Mem7,r2:r2_64,r3:r3_65,r4:r4,r5:r5_61,r6:r6_50,r7:r6_50 >> 0x1F<32>,r8:1<32>,r9:r9_66
		defs: r2:r2_64,r3:r3_65,r5:r5_61,r9:r9_66
	return
l0040E71E:
	return
close_file_exit:


void __stdio_exit_needed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00401E7E
//      __towrite_needs_stdio_exit
//      __toread_needs_stdio_exit
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__stdio_exit_needed_entry:
l0040E720:
	r16_17 = Mem7[__ofl_lock():word32]
	goto l0040E730
l0040E72A:
	close_file(r16_17)
	r16_17 = Mem7[r16_17 + 56<i32>:word32]
l0040E730:
	branch r16_17 != 0<32> l0040E72A
l0040E732:
	close_file(Mem7[0x00432F30<p32>:word32])
	r4_41 = Mem7[0x00430300<p32>:word32]
l0040E746_thunk_close_file:
	close_file(r4_41)
	return
__stdio_exit_needed_exit:


word32 __toread(word32 r4, word32 & r6Out, word32 & r7Out, word32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __uflow
// MayUse:  r4:[0..31]
// LiveOut: r16:[0..31]-__uflow r4:[0..31]-__uflow r6:[0..31]-__uflow r7:[0..31]-__uflow
// Trashed: r16 r25 r4 r6 r7
// Preserved: r5 ra sp
__toread_entry:
l0040E750:
	r7_10 = CONVERT(Mem7[r4 + 74<i32>:int8], int8, word32)
	r6_14 = Mem7[r4 + 28<i32>:word32]
	Mem15[r4 + 74<i32>:byte] = SLICE(r7_10, byte, 0) | SLICE(r7_10, byte, 0) + 0xFF<8>
	r7_16 = Mem15[r4 + 20<i32>:word32]
	branch r6_14 >=u r7_16 l0040E770
l0040E76A:
	call Mem15[r4 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem15,r4:r4,r5:0<32>,r6:0<32>
		defs: r6:r6_22,r7:r7_21
l0040E770:
	r4_27 = Mem15[r4:word32]
	branch !__bit<word32,word32>(r4_27, 2<32>) l0040E790
l0040E77C:
	r7_38 = Mem31[r4 + 44<i32>:word32]
	r4_39 = __ext<word32,word32>(r4_27, 4<32>, 1<32>)
	r6_40 = Mem31[r4 + 48<i32>:word32]
	r6Out = r6_40
	r7_42 = r7_38 + r6_40
	r7Out = r7_42
	r16Out = r7_42
	return -r4_39
l0040E790:
	r6Out = r6_14
	r7Out = r7_16
	r16Out = r16
	return 0xFFFFFFFF<32>
__toread_exit:


void __toread_needs_stdio_exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__toread_needs_stdio_exit_entry:
l0040E79A:
l0040E79A_thunk___stdio_exit_needed:
	__stdio_exit_needed()
	return
__toread_needs_stdio_exit_exit:


void sem_init(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      handler
// MayUse:  r6:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r5 r7
// Preserved: ra sp
sem_init_entry:
l0040E7A0:
	branch r6 < 0<32> l0040E7B6
l0040E7A6:
	return
l0040E7B6:
	__errno_location(out r4_39)
	return
sem_init_exit:


void sem_post(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      handler
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
sem_post_entry:
l0040E7D0:
	r6_10 = Mem7[r4 + 8<i32>:word32]
l0040E7D6:
	r7_14 = Mem7[r4:word32]
	r9_16 = Mem7[r4 + 1<i32>:word32]
	branch r7_14 != 0x7FFFFFFF<32> l0040E7EE
l0040E7E2:
	__errno_location(out r4_140)
	return
l0040E7EE:
	__sync(0<32>)
	r5_19 = r7_14 + 1<32> + (r7_14 >>u 0x1F<32>)
l0040E7FC:
	r8_22 = __load_linked<word32>(&Mem7[r4:word32])
	branch r7_14 != r8_22 l0040E80C
l0040E804:
	branch __store_conditional<word32>(&Mem7[r4:word32], r5_19) == 0<32> l0040E7FC
l0040E80C:
	__sync(0<32>)
	branch r7_14 != r8_22 l0040E7D6
l0040E814:
	branch r7_14 < 0<32> l0040E820
l0040E818:
	branch r9_16 != 0<32> l0040E820
l0040E81C:
	return
l0040E820:
	branch r6_10 == 0<32> l0040E828
l0040E824_1:
l0040E828:
	__syscall(out r4_47, out r5_141, out r6_142, out r7_143, out r8_144, out r9_145)
	branch r4_47 != 0xFFFFFFDA<32> l0040E81C
l0040E83A:
	__syscall(out r4_146, out r5_147, out r6_148, out r7_149, out r8_150, out r9_151)
	goto l0040E81C
sem_post_exit:


void sem_wait(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      handler
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
sem_wait_entry:
l0040E850:
l0040E852_thunk_sem_timedwait:
	sem_timedwait(r4, 0<32>)
	return
sem_wait_exit:


void lseek64()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      rewinddir
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
lseek64_entry:
l0040E860:
	__syscall(out r4_20, out r5_51, out r6_52, out r7_53, out r8_54, out r9_55)
	__syscall_ret(r4_20, out r4_28, out r7_56)
	branch r4_28 != 0<32> l0040E882
l0040E87E:
l0040E882:
	return
lseek64_exit:


void cleanup(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r7
// Preserved: sp
cleanup_entry:
l0040E890:
	__sync(0<32>)
l0040E894:
	branch __store_conditional<word32>(&Mem0[r4:word32], __load_linked<word32>(&Mem0[r4:word32]) + 0xFFFFFFFF<32>) == 0<32> l0040E894
l0040E8A0:
	__sync(0<32>)
	return
cleanup_exit:


void sem_timedwait(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sem_wait
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
sem_timedwait_entry:
l0040E8A6:
	__pthread_testcancel()
	r7_26 = 0x65<32>
	branch sem_trywait(r4) != 0<32> l0040E8BE
l0040E8B6:
	return
l0040E8BA:
	__sync(0<32>)
l0040E8BE:
	r7_26 = r7_26 + 0xFFFFFFFF<32>
	branch r7_26 == 0<32> l0040E8CC
l0040E8C2:
	branch Mem11[r4:word32] > 0<32> l0040E8CC
l0040E8C8:
	branch Mem11[r4 + 4<i32>:word32] == 0<32> l0040E8BA
l0040E8CC:
	branch sem_trywait(r4) == 0<32> l0040E8B6
l0040E8D2:
	__sync(0<32>)
l0040E8D8:
	branch __store_conditional<word32>(&Mem11[r4 + 4<32>:word32], __load_linked<word32>(&Mem11[r4 + 4<32>:word32]) + 1<32>) == 0<32> l0040E8D8
l0040E8E4:
	__sync(0<32>)
	__sync(0<32>)
l0040E8EC:
	branch __load_linked<word32>(&Mem11[r4:word32]) != 0<32> l0040E8FA
l0040E8F2:
	branch __store_conditional<word32>(&Mem11[r4:word32], 0xFFFFFFFF<32>) == 0<32> l0040E8EC
l0040E8FA:
	__sync(0<32>)
	_pthread_cleanup_push(&tLoc1C, 0x0040E890<p32>, r4 + 4<32>)
	r4_76 = __timedwait_cp(0<32>, r5, Mem11[r4 + 2<i32>:word32])
	_pthread_cleanup_pop(&tLoc1C, 1<32>)
	branch __ins<word32,word32>(r4_76, 0<32>, 2<32>, 1<32>) == 0<32> l0040E8CC
l0040E924:
	__errno_location(out r4_177)
	return
sem_timedwait_exit:


word32 sem_trywait(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sem_wait
// MayUse:  r4:[0..31]
// LiveOut: r4:[0..31]-sem_timedwait
// Trashed: r25 r3 r4 r5 r6 r7 r8
// Preserved: ra sp
sem_trywait_entry:
l0040E930:
l0040E932:
	r7_9 = Mem5[r4:word32]
	branch r7_9 > 0<32> l0040E944
l0040E938:
	__errno_location(out r4_80)
	return 0xFFFFFFFF<32>
l0040E944:
	r6_11 = 0<32>
	branch r7_9 != 1<32> l0040E954
l0040E94E:
	r6_11 = CONVERT(Mem5[r4 + 4<i32>:word32] >u 0<32>, bool, word32)
l0040E954:
	__sync(0<32>)
	r5_16 = r7_9 + 0xFFFFFFFF<32> - r6_11
l0040E95A:
	r8_19 = __load_linked<word32>(&Mem5[r4:word32])
	branch r7_9 != r8_19 l0040E96A
l0040E962:
	branch __store_conditional<word32>(&Mem5[r4:word32], r5_16) == 0<32> l0040E95A
l0040E96A:
	__sync(0<32>)
	branch r7_9 != r8_19 l0040E932
l0040E972:
	return 0<32>
sem_trywait_exit:


word32 __timedwait_cp(word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sem_wait
//      __timedwait
// MayUse:  r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r4:[0..31]-sem_timedwait
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
__timedwait_cp_entry:
l0040E980:
	branch r8 != 0<32> l0040E98E
l0040E98A_1:
l0040E98E:
	branch r7 == 0<32> l0040E9D4
l0040E990:
	branch Mem13[r7 + 4<i32>:word32] <=u 0x3B9AC9FF<32> l0040E9A0
l0040E99C:
	return 0x16<32>
l0040E9A0:
	__clock_gettime(r6, &tLoc28, out r3_251, out r4_37, out r5_252, out r6_39, out r7_40, out r8_253)
	branch r4_37 != 0<32> l0040E99C
l0040E9A8:
	r5_48 = Mem13[r7:word32] - r7_40
	r7_49 = Mem13[r7 + 4<i32>:word32]
	Mem50[&tLoc28:word32] = r5_48
	r7_51 = r7_49 - r6_39
	Mem52[&tLoc28 + 4<i32>:word32] = r7_51
	branch r7_51 >= 0<32> l0040E9C8
l0040E9BC:
	Mem55[&tLoc28:word32] = r5_48 + 0xFFFFFFFF<32>
	Mem56[&tLoc28 + 4<i32>:word32] = r7_51 + 0x3B9ACA00<32>
	r7_51 = r7_51 + 0x3B9ACA00<32>
l0040E9C8:
	branch r7_51 >= 0<32> l0040E9D6
l0040E9D0:
	return 0x6E<32>
l0040E9D4:
l0040E9D6:
	__syscall_cp(out r4_80, out r5_257, out r6_258, out r8_259)
	r4_104 = -r4_80
	branch r4_80 != 0xFFFFFFDA<32> l0040EA02
l0040E9F0:
	__syscall_cp(out r4_98, out r5_254, out r6_255, out r8_256)
	r4_104 = -r4_98
l0040EA02:
	branch r4_104 == 4<32> l0040EA12
l0040EA06:
	branch r4_104 == 0x2E<32> l0040E9D0
l0040EA0A:
	branch (r4_104 ^ 0x7D<32>) == 0<32> l0040EA12
l0040EA0E_1:
	r4_104 = 0<32>
l0040EA12:
	return r4_104
__timedwait_cp_exit:


void __timedwait(word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r6:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r18 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__timedwait_entry:
l0040EA14:
	__pthread_setcancelstate(1<32>, fp - 0x14<32>, out r7_25)
	__pthread_setcancelstate(__timedwait_cp(r6, r7_25, r8), 0<32>, out r7_61)
	return
__timedwait_exit:


void __testcancel()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __pthread_testcancel
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__testcancel_entry:
l0040EA40:
	return
__testcancel_exit:


void __pthread_testcancel()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      sem_wait
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__pthread_testcancel_entry:
l0040EA42:
l0040EA42_thunk___testcancel:
	__testcancel()
	return
__pthread_testcancel_exit:


word32 __ashldi3(word32 r4, word32 r5, word32 r6, word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
//      fmod
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-printf_core r5:[0..31]-printf_core
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
__ashldi3_entry:
l0040EA50:
	r5_7 = r5 << r6
	r7_11 = r4 >>u -r6
	r4_10 = r4 << r6
	branch r6 != 0<32> l0040EA64
l0040EA60_1:
	r7_11 = 0<32>
l0040EA64:
	r6_13 = CONVERT(r6 < 0x20<32>, bool, word32)
	r5_16 = r5_7 | r7_11
	branch r6_13 != 0<32> l0040EA6E
l0040EA6A_1:
	r5_16 = r4_10
l0040EA6E:
	branch r6_13 != 0<32> l0040EA72
l0040EA6E_1:
	r4_10 = 0<32>
l0040EA72:
	r5Out = r5_16
	return r4_10
__ashldi3_exit:


word32 __lshrdi3(word32 r4, word32 r5, word32 r6, word32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fmod
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4:[0..31]-fmod r5:[0..31]-fmod
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
__lshrdi3_entry:
l0040EA80:
	r4_7 = r4 >>u r6
	r7_11 = r5 << -r6
	r5_10 = r5 >>u r6
	branch r6 != 0<32> l0040EA94
l0040EA90_1:
	r7_11 = 0<32>
l0040EA94:
	r6_13 = CONVERT(r6 < 0x20<32>, bool, word32)
	r4_16 = r4_7 | r7_11
	branch r6_13 != 0<32> l0040EA9E
l0040EA9A_1:
	r4_16 = r5_10
l0040EA9E:
	branch r6_13 != 0<32> l0040EAA2
l0040EA9E_1:
	r5_10 = 0<32>
l0040EAA2:
	r5Out = r5_10
	return r4_16
__lshrdi3_exit:


word32 __udivdi3(ui64 r5_r4, ui64 r7_r6, word32 r2, word32 r3, word32 r12, word32 & r3Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & r8Out, word32 & r9Out, word32 & r11Out, word32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00402CEE
//      fmt_u
//      printf_core
//      __floatscan
//      __intscan
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] Sequence r5:r4:[0..63] Sequence r7:r6:[0..63]
// LiveOut: r11:[0..31]-fmt_u r13:[0..31]-fmt_u r2:[0..31]-fmt_u r3:[0..31]-printf_core r4:[0..31]-fmt_u r5:[0..31]-fmt_u r6:[0..31]-__intscan r7:[0..31]-fmt_u r8:[0..31]-fmt_u r9:[0..31]-printf_core
// Trashed: hi lo r10 r11 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__udivdi3_entry:
	r5 = SLICE(r5_r4, word32, 32)
	r4 = SLICE(r5_r4, word32, 0)
	r6 = SLICE(r7_r6, word32, 0)
	r7 = SLICE(r7_r6, word32, 32)
l0040EAB0:
	r8_180 = r5
	r10_160 = r4
	r9_147 = r6
	r5_11 = r7
	r11_12 = r5
	branch r7 != 0<32> l0040EC5A
l0040EABC:
	branch r5 >=u r6 l0040EB4C
l0040EAC0:
	r7_192 = __count_leading_zeros<word32>(r6)
	branch r7_192 == 0<32> l0040EADE
l0040EAC6:
	r9_147 = r6 << r7_192
	r11_12 = r4 >>u -r7_192 | r5 << r7_192
	r10_160 = r4 << r7_192
l0040EADE:
	r8_200 = __ext<word32,word32>(r9_147, 0<32>, 0x10<32>)
	r2 = r9_147 >>u 0x10<32>
	r4_206 = r8_200 *s r3
	r6_211 = r11_12 %u r2 << 0x10<32> | r10_160 >>u 0x10<32>
	r7_168 = r3
	branch r6_211 >=u r4_206 l0040EB14
l0040EB02:
	r6_211 = r6_211 + r9_147
	r7_168 = r3 + 0xFFFFFFFF<32>
	branch r6_211 <u r9_147 l0040EB14
l0040EB0A:
	branch r6_211 >=u r4_206 l0040EB14
l0040EB0E:
	r7_168 = r3 + 0xFFFFFFFE<32>
	r6_211 = r6_211 + r9_147
l0040EB14:
	r4_226 = (r6_211 - r4_206) %u r2
	r8_180 = r8_200 *s r11_12
	r6 = r4_226 << 0x10<32>
	r10_230 = r4_226 << 0x10<32> | __ext<word32,word32>(r10_160, 0<32>, 0x10<32>)
	r4_187 = r11_12
	branch r10_230 >=u r8_180 l0040EB42
l0040EB32:
	r10_233 = r10_230 + r9_147
	r4_187 = r11_12 + 0xFFFFFFFF<32>
	branch r10_233 <u r9_147 l0040EB42
l0040EB3A:
	branch r10_233 >=u r8_180 l0040EB42
l0040EB3E:
	r4_187 = r11_12 + 0xFFFFFFFE<32>
l0040EB42:
	r7_14 = r7_168 << 0x10<32> | r4_187
l0040EB48:
	r3Out = r3
	r4Out = r7_14
	r5Out = r5_11
	r6Out = r6
	r7Out = r7_14
	r8Out = r8_180
	r9Out = r9_147
	r11Out = r11_12
	r13Out = r13
	return r2
l0040EB4C:
	branch r6 != 0<32> l0040EB56
l0040EB50:
l0040EB56:
	r6_90 = __count_leading_zeros<word32>(r6)
	branch r6_90 != 0<32> l0040EBCA
l0040EB5C:
	r8_142 = r5 - r6
	r5_11 = 1<32>
l0040EB62:
	r11_12 = __ext<word32,word32>(r9_147, 0<32>, 0x10<32>)
	r2 = r9_147 >>u 0x10<32>
	r4_159 = r11_12 *s r3
	r6_167 = r8_142 %u r2 << 0x10<32> | r10_160 >>u 0x10<32>
	r7_168 = r3
	branch r6_167 >=u r4_159 l0040EB98
l0040EB86:
	r6_167 = r6_167 + r9_147
	r7_168 = r3 + 0xFFFFFFFF<32>
	branch r6_167 <u r9_147 l0040EB98
l0040EB8E:
	branch r6_167 >=u r4_159 l0040EB98
l0040EB92:
	r7_168 = r3 + 0xFFFFFFFE<32>
	r6_167 = r6_167 + r9_147
l0040EB98:
	r4_182 = (r6_167 - r4_159) %u r2
	r8_180 = r11_12 *s r3
	r6 = r4_182 << 0x10<32>
	r10_186 = r4_182 << 0x10<32> | __ext<word32,word32>(r10_160, 0<32>, 0x10<32>)
	r4_187 = r3
	branch r10_186 >=u r8_180 l0040EB42
l0040EBB8:
	r10_189 = r10_186 + r9_147
	r4_187 = r3 + 0xFFFFFFFF<32>
	branch r10_189 <u r9_147 l0040EB42
l0040EBC0:
	branch r10_189 >=u r8_180 l0040EB42
l0040EBC4:
	r4_187 = r3 + 0xFFFFFFFE<32>
	goto l0040EB42
l0040EBCA:
	r9_147 = r6 << r6_90
	r5_94 = __ext<word32,word32>(r9_147, 0<32>, 0x10<32>)
	r3 = r5 >>u 0x20<32> - r6_90
	r8_107 = SLICE(r5_r4 >>u r6_90, word32, 32) (alias)
	r10_160 = r4 << r6_90
	r6_105 = r5_94 *s r2
	r7_111 = r3 %u (r9_147 >>u 0x10<32>) << 0x10<32> | r8_107 >>u 0x10<32>
	r4_112 = r2
	branch r7_111 >=u r6_105 l0040EC1C
l0040EC0A:
	r7_111 = r7_111 + r9_147
	r4_112 = r2 + 0xFFFFFFFF<32>
	branch r7_111 <u r9_147 l0040EC1C
l0040EC12:
	branch r7_111 >=u r6_105 l0040EC1C
l0040EC16:
	r4_112 = r2 + 0xFFFFFFFE<32>
	r7_111 = r7_111 + r9_147
l0040EC1C:
	r6_126 = r5_94 *s r2
	r8_130 = (r7_111 - r6_105) %u (r9_147 >>u 0x10<32>) << 0x10<32> | __ext<word32,word32>(r8_107, 0<32>, 0x10<32>)
	r7_131 = r2
	branch r8_130 >=u r6_126 l0040EC4E
l0040EC3C:
	r8_130 = r8_130 + r9_147
	r7_131 = r2 + 0xFFFFFFFF<32>
	branch r8_130 <u r9_147 l0040EC4E
l0040EC44:
	branch r8_130 >=u r6_126 l0040EC4E
l0040EC48:
	r7_131 = r2 + 0xFFFFFFFE<32>
	r8_130 = r8_130 + r9_147
l0040EC4E:
	r8_142 = r8_130 - r6_126
	r5_11 = r4_112 << 0x10<32> | r7_131
	goto l0040EB62
l0040EC5A:
	branch r5 <u r7 l0040ED3A
l0040EC5E:
	r3 = __count_leading_zeros<word32>(r7)
	branch r3 != 0<32> l0040EC76
l0040EC66:
	branch r7 <u r5 l0040ED40
l0040EC6A:
	r6 = CONVERT(r4 <u r6, bool, word32)
	r7_14 = r6 ^ 1<32>
l0040EC72:
	r5_11 = 0<32>
	goto l0040EB48
l0040EC76:
	r2 = SLICE(r7_r6 >>u r3, word32, 32) (alias)
	r9_24 = __ext<word32,word32>(r2, 0<32>, 0x10<32>)
	r13 = r5 >>u 0x20<32> - r3
	r11_25 = SLICE(r5_r4 >>u r3, word32, 32) (alias)
	r5_30 = r9_24 *s r12
	r6_34 = r6 << r3
	r10_35 = r13 %u (r2 >>u 0x10<32>) << 0x10<32> | r11_25 >>u 0x10<32>
	r8_36 = r12
	branch r10_35 >=u r5_30 l0040ECD8
l0040ECC2:
	r10_35 = r10_35 + r2
	r8_36 = r12 + 0xFFFFFFFF<32>
	branch r10_35 <u r2 l0040ECD8
l0040ECCC:
	branch r10_35 >=u r5_30 l0040ECD8
l0040ECD0:
	r8_36 = r12 + 0xFFFFFFFE<32>
	r10_35 = r10_35 + r2
l0040ECD8:
	r11_12 = __ext<word32,word32>(r11_25, 0<32>, 0x10<32>)
	r9_48 = r9_24 *s r12
	r5_54 = (r10_35 - r5_30) %u (r2 >>u 0x10<32>) << 0x10<32> | r11_12
	r7_55 = r12
	branch r5_54 >=u r9_48 l0040ED10
l0040ECFA:
	r5_54 = r5_54 + r2
	r7_55 = r12 + 0xFFFFFFFF<32>
	branch r5_54 <u r2 l0040ED10
l0040ED04:
	branch r5_54 >=u r9_48 l0040ED10
l0040ED08:
	r7_55 = r12 + 0xFFFFFFFE<32>
	r5_54 = r5_54 + r2
l0040ED10:
	r7_14 = r8_36 << 0x10<32> | r7_55
	r9_147 = r5_54 - r9_48
	r8_180 = r7_14 *s r6_34
	r6 = SLICE(r7_14 *u64 r6_34, word32, 32)
	branch r9_147 <u r6 l0040ED36
l0040ED28:
	r5_11 = 0<32>
	branch r9_147 != r6 l0040EB48
l0040ED2E:
	r6 = r4 << r3
	branch r6 >=u r8_180 l0040EB48
l0040ED36:
	r7_14 = r7_14 + 0xFFFFFFFF<32>
	goto l0040EC72
l0040ED3A:
	r5_11 = 0<32>
	r7_14 = 0<32>
	goto l0040EB48
l0040ED40:
	r5_11 = 0<32>
	r7_14 = 1<32>
	goto l0040EB48
__udivdi3_exit:


word32 __umoddi3(ui64 r5_r4, ui64 r7_r6, word32 r13, word32 & r3Out, word32 & r4Out, word32 & r8Out, word32 & r11Out, word32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fmt_u
//      printf_core
//      __floatscan
// MayUse:  r13:[0..31] Sequence r5:r4:[0..63] Sequence r7:r6:[0..63]
// LiveOut: r11:[0..31]-decfloat r12:[0..31]-fmt_u r2:[0..31]-fmt_u r3:[0..31]-fmt_u r4:[0..31]-fmt_u r8:[0..31]-printf_core
// Trashed: hi lo r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__umoddi3_entry:
	r6 = SLICE(r7_r6, word32, 0)
	r7 = SLICE(r7_r6, word32, 32)
	r4 = SLICE(r5_r4, word32, 0)
	r5 = SLICE(r5_r4, word32, 32)
l0040ED50:
	r9_124 = r6
	r11_122 = r7
	r8_103 = r4
	r10_11 = r5
	branch r7 != 0<32> l0040EEA8
l0040ED58:
	branch r5 >=u r6 l0040EDDE
l0040ED5C:
	r11_122 = __count_leading_zeros<word32>(r6)
	branch r11_122 == 0<32> l0040ED7C
l0040ED64:
	r9_124 = r6 << r11_122
	r10_11 = r4 >>u -r11_122 | r5 << r11_122
	r8_103 = r4 << r11_122
l0040ED7C:
	r4_204 = __ext<word32,word32>(r9_124, 0<32>, 0x10<32>)
	r5_205 = r9_124 >>u 0x10<32>
	r10_213 = r8_103 >>u 0x10<32>
	r6_210 = r6 *s r4_204
	r7_215 = r10_11 %u r5_205 << 0x10<32> | r10_213
	branch r7_215 >=u r6_210 l0040EDAA
l0040ED9E:
	r7_215 = r7_215 + r9_124
	branch r7_215 <u r9_124 l0040EDAA
l0040EDA4:
	branch r7_215 >=u r6_210 l0040EDAA
l0040EDA8:
	r7_215 = r7_215 + r9_124
l0040EDAA:
	r4_195 = r4_204 *s r10_213
	r6_193 = (r7_215 - r6_210) %u r5_205
l0040EDB6:
	r8_234 = r6_193 << 0x10<32> | __ext<word32,word32>(r8_103, 0<32>, 0x10<32>)
	branch r8_234 >=u r4_195 l0040EDD2
l0040EDC6:
	r8_234 = r8_234 + r9_124
	branch r8_234 <u r9_124 l0040EDD2
l0040EDCC:
	branch r8_234 >=u r4_195 l0040EDD2
l0040EDD0:
	r8_234 = r8_234 + r9_124
l0040EDD2:
	r8_103 = r8_234 - r4_195
	r4 = r8_103 >>u r11_122
l0040EDDC:
	r3Out = r3
	r4Out = r4
	r8Out = r8_103
	r11Out = r11_122
	r12Out = r12
	return r2
l0040EDDE:
	branch r6 != 0<32> l0040EDE8
l0040EDE2:
l0040EDE8:
	r11_122 = __count_leading_zeros<word32>(r6)
	branch r11_122 != 0<32> l0040EE2E
l0040EDF0:
	r5_164 = r5 - r6
l0040EDF4:
	r4_168 = __ext<word32,word32>(r9_124, 0<32>, 0x10<32>)
	r10_169 = r9_124 >>u 0x10<32>
	r5_181 = r8_103 >>u 0x10<32>
	r6_175 = r6 *s r4_168
	r7_183 = r5_164 %u r10_169 << 0x10<32> | r5_181
	branch r7_183 >=u r6_175 l0040EE20
l0040EE14:
	r7_183 = r7_183 + r9_124
	branch r7_183 <u r9_124 l0040EE20
l0040EE1A:
	branch r7_183 >=u r6_175 l0040EE20
l0040EE1E:
	r7_183 = r7_183 + r9_124
l0040EE20:
	r6_193 = (r7_183 - r6_175) %u r10_169
	r4_195 = r4_168 *s r5_181
	goto l0040EDB6
l0040EE2E:
	r9_124 = r6 << r11_122
	r5_134 = __ext<word32,word32>(r9_124, 0<32>, 0x10<32>)
	r3 = r5 >>u 0x20<32> - r11_122
	r2 = SLICE(r5_r4 >>u r11_122, word32, 32) (alias)
	r8_103 = r4 << r11_122
	r6_138 = r6 *s r5_134
	r7_142 = r3 %u (r9_124 >>u 0x10<32>) << 0x10<32> | r2 >>u 0x10<32>
	branch r7_142 >=u r6_138 l0040EE7C
l0040EE70:
	r7_142 = r7_142 + r9_124
	branch r7_142 <u r9_124 l0040EE7C
l0040EE76:
	branch r7_142 >=u r6_138 l0040EE7C
l0040EE7A:
	r7_142 = r7_142 + r9_124
l0040EE7C:
	r6 = r7_142 - r6_138
	r10_152 = (r2 >>u 0x10<32>) *s r5_134
	r5_158 = __ext<word32,word32>(r2, 0<32>, 0x10<32>) | r6 %u (r9_124 >>u 0x10<32>) << 0x10<32>
	branch r5_158 >=u r10_152 l0040EEA2
l0040EE96:
	r5_158 = r5_158 + r9_124
	branch r5_158 <u r9_124 l0040EEA2
l0040EE9C:
	branch r5_158 >=u r10_152 l0040EEA2
l0040EEA0:
	r5_158 = r5_158 + r9_124
l0040EEA2:
	r5_164 = r5_158 - r10_152
	goto l0040EDF4
l0040EEA8:
	branch r5 <u r7 l0040EDDC
l0040EEAC:
	r12 = __count_leading_zeros<word32>(r7)
	branch r12 != 0<32> l0040EECE
l0040EEB4:
	branch r7 <u r5 l0040EEBC
l0040EEB8:
	branch r4 <u r6 l0040EECA
l0040EEBC:
	r8_103 = r4 - r6
l0040EECA:
	r4 = r8_103
	goto l0040EDDC
l0040EECE:
	r8_18 = SLICE(r7_r6 >>u r12, word32, 32) (alias)
	r10_23 = __ext<word32,word32>(r8_18, 0<32>, 0x10<32>)
	r9_15 = 0x20<32> - r12
	r5_22 = SLICE(r5_r4 >>u r12, word32, 32) (alias)
	r11_28 = r10_23 *s r13
	r6_31 = r6 << r12
	r3_32 = (r5 >>u r9_15) %u (r8_18 >>u 0x10<32>) << 0x10<32> | r5_22 >>u 0x10<32>
	r4_33 = r4 << r12
	r2_34 = r13
	branch r3_32 >=u r11_28 l0040EF36
l0040EF20:
	r3_32 = r3_32 + r8_18
	r2_34 = r13 + 0xFFFFFFFF<32>
	branch r3_32 <u r8_18 l0040EF36
l0040EF2A:
	branch r3_32 >=u r11_28 l0040EF36
l0040EF2E:
	r2_34 = r13 + 0xFFFFFFFE<32>
	r3_32 = r3_32 + r8_18
l0040EF36:
	r3 = r3_32 - r11_28
	r7_48 = r10_23 *s r13
	r10_52 = r3 %u (r8_18 >>u 0x10<32>) << 0x10<32> | r5_22 & 0xFFFF<32>
	r5_53 = r13
	branch r10_52 >=u r7_48 l0040EF68
l0040EF56:
	r10_52 = r10_52 + r8_18
	r5_53 = r13 + 0xFFFFFFFF<32>
	branch r10_52 <u r8_18 l0040EF68
l0040EF5E:
	branch r10_52 >=u r7_48 l0040EF68
l0040EF62:
	r5_53 = r13 + 0xFFFFFFFE<32>
	r10_52 = r10_52 + r8_18
l0040EF68:
	r11_66 = r2_34 << 0x10<32> | r5_53
	r2 = r11_66 *s r6_31
	r11_122 = SLICE(r11_66 *u64 r6_31, word32, 32)
	r10_64 = r10_52 - r7_48
	r7_71 = r2
	r5_72 = r11_122
	branch r10_64 <u r11_122 l0040EF8C
l0040EF84:
	branch r10_64 != r11_122 l0040EF9C
l0040EF88:
	branch r4_33 >=u r2 l0040EF9C
l0040EF8C:
	r7_71 = r2 - r6_31
	r11_122 = r11_122 - r8_18
	r2 = CONVERT(r2 <u r7_71, bool, word32)
	r5_72 = r11_122 - r2
l0040EF9C:
	r7_87 = r4_33 - r7_71
	r8_103 = r10_64 - r5_72 - CONVERT(r4_33 <u r7_87, bool, word32) << r9_15
	r4 = r8_103 | r7_87 >>u r12
	goto l0040EDDC
__umoddi3_exit:


real64 __adddf3(real64 r4:r5, real64 r6:r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
//      __floatscan
// MayUse:  Sequence r4:r5:[0..63] Sequence r6:r7:[0..63]
// LiveOut: Sequence r4:r5:[0..63]-__adddf3
// Trashed: r4:r5
// Preserved: sp
__adddf3_entry:
	r5_5 = SLICE(r4:r5, word32, 0)
	r7_8 = SLICE(r6:r7, word32, 0)
	r4_11 = SLICE(r4:r5, word32, 32)
	r6_19 = SLICE(r6:r7, word32, 32)
l0040EFC0:
	r10_6 = __ext<word32,word32>(r5_5, 0<32>, 0x14<32>)
	r9_9 = __ext<word32,word32>(r7_8, 0<32>, 0x14<32>)
	r13_13 = __ext<word32,word32>(r5_5, 4<32>, 0xB<32>)
	r10_16 = __ext<word32,word32>(r7_8, 4<32>, 0xB<32>)
	r8_137 = r4_11 >>u 0x1D<32> | r10_6 << 3<32>
	r3_15 = r7_8 >>u 0x1F<32>
	r5_135 = r5_5 >>u 0x1F<32>
	r12_118 = r4_11 << 3<32>
	r9_152 = r6_19 >>u 0x1D<32> | r9_9 << 3<32>
	r11_24 = r13_13 - r10_16
	branch r5_5 >>u 0x1F<32> != r7_8 >>u 0x1F<32> l0040F2C4
l0040F002:
	r3_15 = r11_24
	branch r11_24 <= 0<32> l0040F152
l0040F008:
	branch r10_16 != 0<32> l0040F0CE
l0040F00C:
	branch (r9_152 | r6_19 << 3<32>) != 0<32> l0040F074
l0040F012:
	r10_16 = r11_24
	branch r11_24 != 0x7FF<32> l0040F23A
l0040F018:
	branch (r8_137 | r4_11 << 3<32>) != 0<32> l0040F23A
l0040F020:
	r8_137 = 0<32>
	r12_118 = 0<32>
l0040F024:
	branch __bit<word32,word32>(r8_137, 0x17<32>) l0040F03A
l0040F028:
	r10_16 = r10_16 + 1<32>
	r8_137 = __ins<word32,word32>(r8_137, 0<32>, 7<32>, 1<32>)
	branch r10_16 != 0x7FF<32> l0040F03A
l0040F036:
	r8_137 = 0<32>
	r12_118 = 0<32>
l0040F03A:
	r7_507 = r12_118 >>u 3<32> | r8_137 << 0x1D<32>
	r8_509 = r8_137 >>u 3<32>
	branch r10_16 != 0x7FF<32> l0040F060
l0040F050:
	branch (r7_507 | r8_509) == 0<32> l0040F5D2
l0040F058:
	r8_509 = r8_509 | 0x800000<32>
l0040F060:
	return SEQ(r7_507, __ins<word32,word32>(__ins<word32,word32>(__ins<word32,word32>(0<32>, r8_509, 0<32>, 1<32>), r10_16, 4<32>, 1<32>), r5_135, 0xF<32>, 1<32>))
l0040F074:
	r7_373 = r11_24 + 0xFFFFFFFF<32>
	branch r11_24 != 1<32> l0040F0BA
l0040F07A:
	r6_437 = (r4_11 << 3<32>) + (r6_19 << 3<32>)
	r10_16 = 1<32>
	r8_137 = r8_137 + r9_152 + CONVERT(r6_437 <u r4_11 << 3<32>, bool, word32)
	r12_118 = r6_437
l0040F08C:
	branch __bit<word32,word32>(r8_137, 0x17<32>) l0040F23A
l0040F090:
	r10_16 = r10_16 + 1<32>
	branch r10_16 == 0x7FF<32> l0040F020
l0040F09A:
	r6_455 = __ins<word32,word32>(r8_137, 0<32>, 7<32>, 1<32>)
	r12_118 = r6_455 << 0x1F<32> | (r12_118 >>u 1<32> | r12_118 & 1<32>)
	r8_137 = r6_455 >>u 1<32>
	goto l0040F23A
l0040F0BA:
	branch r11_24 != 0x7FF<32> l0040F0EC
l0040F0BE:
	branch (r8_137 | r4_11 << 3<32>) != 0<32> l0040F292
l0040F0C6:
	r8_137 = 0<32>
	r12_118 = 0<32>
	r10_16 = r11_24
	goto l0040F024
l0040F0CE:
	branch r13_13 != 0x7FF<32> l0040F0E2
l0040F0D2:
	branch (r8_137 | r4_11 << 3<32>) != 0<32> l0040F292
l0040F0DA:
	r8_137 = 0<32>
	r12_118 = 0<32>
	r10_16 = r13_13
	goto l0040F024
l0040F0E2:
	r9_152 = r9_152 | 0x8000000<32>
	r7_373 = r11_24
l0040F0EC:
	branch r7_373 >= 0x39<32> l0040F148
l0040F0F0:
	branch r7_373 >= 0x20<32> l0040F128
l0040F0F4:
	r7_398 = r9_152 >>u r7_373
	r6_387 = CONVERT(r6_19 << 3<32> << 0x20<32> - r7_373 >u 0<32>, bool, word32) | r4_405
l0040F116:
	r6_414 = r6_387 + (r4_11 << 3<32>)
	r10_16 = r13_13
	r8_137 = CONVERT(r6_414 <u r4_11 << 3<32>, bool, word32) + (r7_398 + r8_137)
	r12_118 = r6_414
	goto l0040F08C
l0040F128:
	r4_388 = r9_152 >>u r7_373
	r10_389 = 0<32>
	branch r7_373 == 0x20<32> l0040F13A
l0040F132:
	r10_r4_559 = SEQ(r9_152, r6_19 << 3<32>) >>u r7_373
	r4_405 = SLICE(r10_r4_559, word32, 0) (alias)
	r10_389 = SLICE(r10_r4_559, word32, 32) (alias)
l0040F13A:
	r6_387 = CONVERT((r10_389 | r6_19 << 3<32>) >u 0<32>, bool, word32) | r4_388
l0040F144:
	r7_398 = 0<32>
	goto l0040F116
l0040F148:
	r6_387 = CONVERT((r9_152 | r6_19 << 3<32>) >u 0<32>, bool, word32)
	goto l0040F144
l0040F152:
	branch r11_24 == 0<32> l0040F200
l0040F156:
	branch r13_13 != 0<32> l0040F1C2
l0040F15A:
	branch (r8_137 | r4_11 << 3<32>) != 0<32> l0040F174
l0040F160:
	branch r10_16 != 0x7FF<32> l0040F16E
l0040F164:
	r12_118 = r9_152 | r6_19 << 3<32>
	r8_137 = 0<32>
	branch r12_118 == 0<32> l0040F024
l0040F16E:
	r8_137 = r9_152
	r12_118 = r6_19 << 3<32>
	goto l0040F23A
l0040F174:
	r11_314 = ~r11_24
	branch r11_314 != 0<32> l0040F18A
l0040F17C:
	r12_118 = (r4_11 << 3<32>) + (r6_19 << 3<32>)
	r8_355 = r8_137 + r9_152
l0040F182:
	r8_137 = r8_355 + CONVERT(r12_118 <u r6_19 << 3<32>, bool, word32)
	goto l0040F08C
l0040F18A:
	branch r10_16 == 0x7FF<32> l0040F164
l0040F18E:
	branch r11_314 >= 0x39<32> l0040F1F6
l0040F192:
	branch r11_314 >= 0x20<32> l0040F1D4
l0040F196:
	r11_333 = r8_137 >>u r11_314
	r12_322 = r4_340 | CONVERT((r4_11 << 3<32>) << 0x20<32> - r11_314 >u 0<32>, bool, word32)
l0040F1B8:
	r12_118 = r12_322 + (r6_19 << 3<32>)
	r8_355 = r11_333 + r9_152
	goto l0040F182
l0040F1C2:
	branch r10_16 == 0x7FF<32> l0040F164
l0040F1C6:
	r11_314 = -r11_24
	r8_137 = r8_137 | 0x8000000<32>
	goto l0040F18E
l0040F1D4:
	r4_323 = r8_137 >>u r11_314
	r7_324 = 0<32>
	branch r11_314 == 0x20<32> l0040F1E6
l0040F1DE:
	r7_r4_560 = SEQ(r8_137, r4_11 << 3<32>) >>u r11_314
	r4_340 = SLICE(r7_r4_560, word32, 0) (alias)
	r7_324 = SLICE(r7_r4_560, word32, 32) (alias)
l0040F1E6:
	r12_322 = r4_323 | CONVERT((r7_324 | r4_11 << 3<32>) >u 0<32>, bool, word32)
l0040F1F2:
	r11_333 = 0<32>
	goto l0040F1B8
l0040F1F6:
	r12_322 = CONVERT((r8_137 | r4_11 << 3<32>) >u 0<32>, bool, word32)
	goto l0040F1F2
l0040F200:
	r10_16 = r13_13 + 1<32>
	branch (r13_13 + 1<32> & 0x7FF<32>) >= 2<32> l0040F2A2
l0040F20C:
	r7_278 = r8_137 | r4_11 << 3<32>
	branch r13_13 != 0<32> l0040F258
l0040F214:
	branch r7_278 == 0<32> l0040F5AC
l0040F218:
	r10_16 = 0<32>
	branch (r9_152 | r6_19 << 3<32>) == 0<32> l0040F23A
l0040F220:
	r6_306 = (r4_11 << 3<32>) + (r6_19 << 3<32>)
	r12_118 = r6_306
	r8_137 = r8_137 + r9_152 + CONVERT(r6_306 <u r4_11 << 3<32>, bool, word32)
	branch __bit<word32,word32>(r8_137, 0x17<32>) l0040F23A
l0040F232:
	r8_137 = __ins<word32,word32>(r8_137, 0<32>, 7<32>, 1<32>)
	r10_16 = 1<32>
l0040F23A:
	branch (r12_118 & 7<32>) == 0<32> l0040F024
l0040F242:
	branch (r12_118 & 0xF<32>) == 4<32> l0040F024
l0040F24A:
	r6_474 = r12_118 + 4<32>
	r12_118 = r6_474
	r8_137 = r8_137 + CONVERT(r6_474 <u r12_118, bool, word32)
	goto l0040F024
l0040F258:
	branch r7_278 == 0<32> l0040F5B2
l0040F25C:
	r10_16 = 0x7FF<32>
	branch (r9_152 | r6_19 << 3<32>) == 0<32> l0040F23A
l0040F264:
	r10_283 = r8_137 >>u 3<32>
	branch !__bit<word32,word32>(r9_152 >>u 3<32> | r8_137 >>u 3<32>, 0x13<32>) l0040F298
l0040F274:
	r7_287 = r8_137 << 0x1D<32> | __ext<word32,word32>(r4_11, 0<32>, 0x1D<32>)
	r3_15 = r5_5 >>u 0x1F<32>
l0040F280:
	r8_137 = r7_287 >>u 0x1D<32> | r10_283 << 3<32>
	r12_118 = r7_287 << 3<32>
l0040F290:
	r5_135 = r3_15
l0040F292:
	r10_16 = 0x7FF<32>
	goto l0040F23A
l0040F298:
	r10_283 = 0xFFFFF<32>
	r7_287 = 0xFFFFFFFF<32>
	goto l0040F280
l0040F2A2:
	branch r13_13 == 0x7FE<32> l0040F020
l0040F2A6:
	r6_270 = (r4_11 << 3<32>) + (r6_19 << 3<32>)
	r2_274 = r8_137 + r9_152 + CONVERT(r6_270 <u r4_11 << 3<32>, bool, word32)
	r12_118 = r2_274 << 0x1F<32> | r6_270 >>u 1<32>
	r8_137 = r2_274 >>u 1<32>
	goto l0040F23A
l0040F2C4:
	r14_26 = r11_24
	branch r11_24 <= 0<32> l0040F37E
l0040F2CA:
	branch r10_16 != 0<32> l0040F344
l0040F2CE:
	branch (r9_152 | r6_19 << 3<32>) == 0<32> l0040F012
l0040F2D6:
	r7_153 = r11_24 + 0xFFFFFFFF<32>
	branch r11_24 != 1<32> l0040F300
l0040F2DC:
	r6_202 = (r4_11 << 3<32>) - (r6_19 << 3<32>)
	r10_16 = 1<32>
	r8_137 = r8_137 - r9_152 - CONVERT(r4_11 << 3<32> <u r6_202, bool, word32)
	r12_118 = r6_202
l0040F2F2:
	branch __bit<word32,word32>(r8_137, 0x17<32>) l0040F23A
l0040F2F6:
	r4_209 = __ext<word32,word32>(r8_137, 0<32>, 0x17<32>)
	r11_211 = r12_118
	r13_13 = r10_16
	goto l0040F508
l0040F300:
	branch r11_24 == 0x7FF<32> l0040F0BE
l0040F304:
	branch r7_153 >= 0x39<32> l0040F374
l0040F308:
	branch r7_153 >= 0x20<32> l0040F354
l0040F30C:
	r7_171 = r9_152 >>u r7_153
	r6_160 = CONVERT(r6_19 << 3<32> << 0x20<32> - r7_153 >u 0<32>, bool, word32) | r4_178
l0040F32E:
	r6_187 = (r4_11 << 3<32>) - r6_160
	r10_16 = r13_13
	r8_137 = r8_137 - r7_171 - CONVERT(r4_11 << 3<32> <u r6_187, bool, word32)
	r12_118 = r6_187
	goto l0040F2F2
l0040F344:
	branch r13_13 == 0x7FF<32> l0040F0D2
l0040F348:
	r9_152 = r9_152 | 0x8000000<32>
	r7_153 = r11_24
	goto l0040F304
l0040F354:
	r4_161 = r9_152 >>u r7_153
	r10_162 = 0<32>
	branch r7_153 == 0x20<32> l0040F366
l0040F35E:
	r10_r4_557 = SEQ(r9_152, r6_19 << 3<32>) >>u r7_153
	r4_178 = SLICE(r10_r4_557, word32, 0) (alias)
	r10_162 = SLICE(r10_r4_557, word32, 32) (alias)
l0040F366:
	r6_160 = CONVERT((r10_162 | r6_19 << 3<32>) >u 0<32>, bool, word32) | r4_161
l0040F370:
	r7_171 = 0<32>
	goto l0040F32E
l0040F374:
	r6_160 = CONVERT((r9_152 | r6_19 << 3<32>) >u 0<32>, bool, word32)
	goto l0040F370
l0040F37E:
	branch r11_24 == 0<32> l0040F42E
l0040F382:
	branch r13_13 != 0<32> l0040F3F0
l0040F386:
	branch (r8_137 | r4_11 << 3<32>) != 0<32> l0040F39E
l0040F38C:
	branch r10_16 != 0x7FF<32> l0040F398
l0040F390:
	r12_118 = r9_152 | r6_19 << 3<32>
	branch r12_118 == 0<32> l0040F5B8
l0040F398:
	r8_137 = r9_152
	r12_118 = r6_19 << 3<32>
	goto l0040F482
l0040F39E:
	r11_83 = ~r11_24
	branch r11_83 != 0<32> l0040F3BA
l0040F3A6:
	r12_118 = (r6_19 << 3<32>) - (r4_11 << 3<32>)
	r8_124 = r9_152 - r8_137
l0040F3AE:
	r5_135 = r7_8 >>u 0x1F<32>
	r8_137 = r8_124 - CONVERT(r6_19 << 3<32> <u r12_118, bool, word32)
	goto l0040F2F2
l0040F3BA:
	branch r10_16 == 0x7FF<32> l0040F390
l0040F3BE:
	branch r11_83 >= 0x39<32> l0040F424
l0040F3C2:
	branch r11_83 >= 0x20<32> l0040F402
l0040F3C6:
	r11_102 = r8_137 >>u r11_83
	r12_101 = r5_109 | CONVERT((r4_11 << 3<32>) << 0x20<32> - r11_83 >u 0<32>, bool, word32)
l0040F3E6:
	r12_118 = (r6_19 << 3<32>) - r12_101
	r8_124 = r9_152 - r11_102
	goto l0040F3AE
l0040F3F0:
	branch r10_16 == 0x7FF<32> l0040F390
l0040F3F4:
	r11_83 = -r11_24
	r8_137 = r8_137 | 0x8000000<32>
	goto l0040F3BE
l0040F402:
	r5_92 = r8_137 >>u r11_83
	r7_93 = 0<32>
	branch r11_83 == 0x20<32> l0040F414
l0040F40C:
	r7_r5_558 = SEQ(r8_137, r4_11 << 3<32>) >>u r11_83
	r5_109 = SLICE(r7_r5_558, word32, 0) (alias)
	r7_93 = SLICE(r7_r5_558, word32, 32) (alias)
l0040F414:
	r12_101 = r5_92 | CONVERT((r7_93 | r4_11 << 3<32>) >u 0<32>, bool, word32)
l0040F420:
	r11_102 = 0<32>
	goto l0040F3E6
l0040F424:
	r12_101 = CONVERT((r8_137 | r4_11 << 3<32>) >u 0<32>, bool, word32)
	goto l0040F420
l0040F42E:
	branch (r13_13 + 1<32> & 0x7FF<32>) >= 2<32> l0040F4E4
l0040F43A:
	r10_16 = r8_137 | r4_11 << 3<32>
	r7_40 = r9_152 | r6_19 << 3<32>
	branch r13_13 != 0<32> l0040F496
l0040F446:
	branch r10_16 != 0<32> l0040F45A
l0040F44A:
	branch r7_40 != 0<32> l0040F398
l0040F44E:
	r12_118 = 0<32>
l0040F452:
	r8_137 = 0<32>
	r10_16 = 0<32>
	r5_135 = 0<32>
	goto l0040F024
l0040F45A:
	branch r7_40 == 0<32> l0040F492
l0040F45C:
	r4_65 = (r4_11 << 3<32>) - (r6_19 << 3<32>)
	r7_68 = r8_137 - r9_152 - CONVERT(r4_11 << 3<32> <u r4_65, bool, word32)
	branch __bit<word32,word32>(r7_68, 0x17<32>) l0040F486
l0040F470:
	r12_118 = (r6_19 << 3<32>) - (r4_11 << 3<32>)
	r10_16 = 0<32>
	r8_137 = r9_152 - r8_137 - CONVERT(r6_19 << 3<32> <u r12_118, bool, word32)
l0040F482:
	r5_135 = r7_8 >>u 0x1F<32>
	goto l0040F23A
l0040F486:
	r12_118 = r4_65 | r7_68
	branch r12_118 == 0<32> l0040F56C
l0040F48E:
	r8_137 = r7_68
	r12_118 = r4_65
l0040F492:
	r10_16 = 0<32>
	goto l0040F23A
l0040F496:
	branch r10_16 != 0<32> l0040F4A4
l0040F49A:
	branch r7_40 == 0<32> l0040F5C0
l0040F49E:
	r8_137 = r9_152
	r12_118 = r6_19 << 3<32>
	goto l0040F290
l0040F4A4:
	r10_16 = 0x7FF<32>
	branch r7_40 == 0<32> l0040F23A
l0040F4AA:
	r7_42 = r8_137 >>u 3<32>
	branch !__bit<word32,word32>(r9_152 >>u 3<32> | r8_137 >>u 3<32>, 0x13<32>) l0040F4DA
l0040F4BA:
	r4_46 = r8_137 << 0x1D<32> | __ext<word32,word32>(r4_11, 0<32>, 0x1D<32>)
	r14_26 = r5_5 >>u 0x1F<32>
l0040F4C8:
	r8_137 = r4_46 >>u 0x1D<32> | r7_42 << 3<32>
	r12_118 = r4_46 << 3<32>
	r5_135 = r14_26
	goto l0040F292
l0040F4DA:
	r7_42 = 0xFFFFF<32>
	r4_46 = 0xFFFFFFFF<32>
	goto l0040F4C8
l0040F4E4:
	r11_211 = (r4_11 << 3<32>) - (r6_19 << 3<32>)
	r4_209 = r8_137 - r9_152 - CONVERT(r4_11 << 3<32> <u r11_211, bool, word32)
	branch __bit<word32,word32>(r4_209, 0x17<32>) l0040F564
l0040F4F6:
	r11_211 = (r6_19 << 3<32>) - (r4_11 << 3<32>)
	r5_135 = r7_8 >>u 0x1F<32>
	r4_209 = r9_152 - r8_137 - CONVERT(r6_19 << 3<32> <u r11_211, bool, word32)
l0040F508:
	r7_220 = __count_leading_zeros<word32>(r4_209)
	branch r4_209 != 0<32> l0040F516
l0040F50E:
	r7_220 = __count_leading_zeros<word32>(r11_211) + 0x20<32>
l0040F516:
	r10_225 = r7_220 + 0xFFFFFFF8<32>
	branch r10_225 >= 0x20<32> l0040F570
l0040F51E:
	r12_118 = r11_211 << r10_225
	r8_229 = r11_211 >>u -r10_225 | r4_209 << r10_225
l0040F532:
	branch r10_225 < r13_13 l0040F5A2
l0040F536:
	r10_243 = r10_225 - r13_13
	branch r10_243 >= 0x1F<32> l0040F57C
l0040F542:
	r7_260 = 0x20<32> - (r10_243 + 1<32>)
	r12_118 = r8_229 << r7_260 | r12_118 >>u r10_243 + 1<32> | CONVERT(r12_118 << r7_260 >u 0<32>, bool, word32)
	r8_137 = r8_229 >>u r10_243 + 1<32>
	goto l0040F492
l0040F564:
	r12_118 = r11_211 | r4_209
	branch r12_118 != 0<32> l0040F508
l0040F56C:
	goto l0040F452
l0040F570:
	r12_118 = 0<32>
	r8_229 = r11_211 << r7_220 + 0xFFFFFFD8<32>
	goto l0040F532
l0040F57C:
	r7_246 = 0<32>
	r10_247 = r8_229 >>u r10_243 + 0xFFFFFFE1<32>
	branch r10_243 == 0x1F<32> l0040F592
l0040F58A:
	r7_246 = r8_229 << -(r10_243 + 1<32>)
l0040F592:
	r12_118 = r10_247 | CONVERT((r12_118 | r7_246) >u 0<32>, bool, word32)
	r8_137 = 0<32>
	goto l0040F492
l0040F5A2:
	r10_16 = r13_13 - r10_225
	r8_137 = __ins<word32,word32>(r8_229, 0<32>, 7<32>, 1<32>)
	goto l0040F23A
l0040F5AC:
	r8_137 = r9_152
	r12_118 = r6_19 << 3<32>
	goto l0040F492
l0040F5B2:
	r8_137 = r9_152
	r12_118 = r6_19 << 3<32>
	goto l0040F292
l0040F5B8:
	r8_137 = 0<32>
	r5_135 = r7_8 >>u 0x1F<32>
	goto l0040F024
l0040F5C0:
	r5_135 = 0<32>
	r8_137 = 0x7FFFFF<32>
	r12_118 = 0xFFFFFFF8<32>
	r10_16 = 0x7FF<32>
	goto l0040F024
l0040F5D2:
	r8_509 = 0<32>
	goto l0040F060
__adddf3_exit:


real64 __divdf3(real64 r4:r5, real64 r6:r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      __floatscan
//      fmod
// MayUse:  r14:[0..31] Sequence r4:r5:[0..63] Sequence r6:r7:[0..63]
// LiveOut: Sequence r4:r5:[0..63]-__divdf3
// Trashed: r4:r5
// Preserved: sp
__divdf3_entry:
	r5_5 = SLICE(r4:r5, word32, 0)
	r4_8 = SLICE(r4:r5, word32, 32)
	r7_53 = SLICE(r6:r7, word32, 0)
	r6_61 = SLICE(r6:r7, word32, 32)
l0040F5E0:
	r11_6 = __ext<word32,word32>(r5_5, 4<32>, 0xB<32>)
	r10_7 = __ext<word32,word32>(r5_5, 0<32>, 0x14<32>)
	r9_12 = r4_8
	r5_10 = r5_5 >>u 0x1F<32>
	branch r11_6 == 0<32> l0040F66A
l0040F5F2:
	branch r11_6 == 0x7FF<32> l0040F6BC
l0040F5FA:
	r8_11 = r4_8 >>u 0x1D<32> | 0x8000000<32> | r10_7 << 3<32>
	r9_12 = r4_8 << 3<32>
	r2_106 = r11_6 + 0xFFFFFC01<32>
l0040F616:
	r12_115 = 0<32>
l0040F618:
	r11_57 = __ext<word32,word32>(r7_53, 4<32>, 0xB<32>)
	r4_102 = __ext<word32,word32>(r7_53, 0<32>, 0x14<32>)
	branch r11_57 == 0<32> l0040F6E2
l0040F628:
	branch r11_57 == 0x7FF<32> l0040F730
l0040F630:
	r7_101 = r6_61 << 3<32>
	r4_102 = r6_61 >>u 0x1D<32> | 0x8000000<32> | r4_102 << 3<32>
	r6_103 = r11_57 + 0xFFFFFC01<32>
l0040F648:
	r3_104 = 0<32>
l0040F64A:
	r11_113 = r2_106 - r6_103
	r6_121 = r12_115 << 2<32> | r3_104
	r10_134 = r5_5 >>u 0x1F<32> ^ r7_53 >>u 0x1F<32>
	branch r6_121 >=u 0x10<32> l0040F754
l0040F660:
	switch (r6_121 + 0xFFFFFFFF<32>) { l0040FA5A l0040F9BE l0040F9AA l0040F9BE l0040FA4C l0040F9BE l0040F9AA l0040FA5A l0040FA5A l0040FA4C l0040F9AA l0040F9C4 l0040F9C4 l0040F9C4 l0040F97C }
l0040F66A:
	r8_11 = r10_7 | r4_8
	branch r8_11 == 0<32> l0040F6CE
l0040F672:
	r11_15 = __count_leading_zeros<word32>(r10_7)
	branch r10_7 != 0<32> l0040F682
l0040F67A:
	r11_15 = __count_leading_zeros<word32>(r4_8) + 0x20<32>
l0040F682:
	r2_19 = r11_15 + 0xFFFFFFF5<32>
	branch r2_19 >= 0x1D<32> l0040F6B0
l0040F68A:
	r9_25 = r11_15 + 0xFFFFFFF8<32>
	r9_12 = r4_8 << r9_25
	r8_11 = r4_8 >>u 0x1D<32> - r2_19 | r10_7 << r9_25
l0040F6A6:
	r2_106 = 0xFFFFFC0D<32> - r11_15
	goto l0040F616
l0040F6B0:
	r9_12 = 0<32>
	r8_11 = r4_8 << r11_15 + 0xFFFFFFD8<32>
	goto l0040F6A6
l0040F6BC:
	r8_11 = r10_7 | r4_8
	branch r8_11 == 0<32> l0040F6D8
l0040F6C4:
	r8_11 = r10_7
	r2_106 = r11_6
	r12_115 = 3<32>
	goto l0040F618
l0040F6CE:
	r9_12 = 0<32>
	r2_106 = 0<32>
	r12_115 = 1<32>
	goto l0040F618
l0040F6D8:
	r9_12 = 0<32>
	r2_106 = r11_6
	r12_115 = 2<32>
	goto l0040F618
l0040F6E2:
	r7_101 = r4_102 | r6_61
	branch r7_101 == 0<32> l0040F740
l0040F6E8:
	r11_69 = __count_leading_zeros<word32>(r4_102)
	branch r4_102 != 0<32> l0040F6F6
l0040F6EE:
	r11_69 = __count_leading_zeros<word32>(r6_61) + 0x20<32>
l0040F6F6:
	r3_73 = r11_69 + 0xFFFFFFF5<32>
	branch r3_73 >= 0x1D<32> l0040F724
l0040F6FE:
	r7_79 = r11_69 + 0xFFFFFFF8<32>
	r7_101 = r6_61 << r7_79
	r4_102 = r6_61 >>u 0x1D<32> - r3_73 | r4_102 << r7_79
l0040F71A:
	r6_103 = 0xFFFFFC0D<32> - r11_69
	goto l0040F648
l0040F724:
	r7_101 = 0<32>
	r4_102 = r6_61 << r11_69 + 0xFFFFFFD8<32>
	goto l0040F71A
l0040F730:
	r7_101 = r4_102 | r6_61
	branch r7_101 == 0<32> l0040F74A
l0040F736:
	r7_101 = r6_61
	r3_104 = 3<32>
	r6_103 = r11_57
	goto l0040F64A
l0040F740:
	r4_102 = 0<32>
	r6_103 = 0<32>
	r3_104 = 1<32>
	goto l0040F64A
l0040F74A:
	r4_102 = 0<32>
	r6_103 = r11_57
	r3_104 = 2<32>
	goto l0040F64A
l0040F754:
	branch r4_102 <u r8_11 l0040F760
l0040F758:
	branch r8_11 != r4_102 l0040F976
l0040F75C:
	branch r9_12 <u r7_101 l0040F976
l0040F760:
	r2_159 = r9_12 << 0x1F<32>
	r8_11 = r8_11 >>u 1<32>
	r9_12 = r8_11 << 0x1F<32> | r9_12 >>u 1<32>
l0040F774:
	r4_175 = r4_102 << 8<32> | r7_101 >>u 0x18<32>
	r13_177 = __ext<word32,word32>(r4_175, 0<32>, 0x10<32>)
	r7_176 = r7_101 << 8<32>
	r6_195 = r13_177 *s r14
	r3_201 = r14
	r5_202 = r9_12 >>u 0x10<32> | r8_11 %u (r4_175 >>u 0x10<32>) << 0x10<32>
	branch r5_202 >=u r6_195 l0040F7B6
l0040F7A4:
	r5_202 = r5_202 + r4_175
	r3_201 = r14 + 0xFFFFFFFF<32>
	branch r5_202 <u r4_175 l0040F7B6
l0040F7AC:
	branch r5_202 >=u r6_195 l0040F7B6
l0040F7B0:
	r3_201 = r14 + 0xFFFFFFFE<32>
	r5_202 = r5_202 + r4_175
l0040F7B6:
	r8_214 = r13_177 *s r14
	r9_220 = __ext<word32,word32>(r9_12, 0<32>, 0x10<32>) | (r5_202 - r6_195) %u (r4_175 >>u 0x10<32>) << 0x10<32>
	r6_221 = r14
	branch r9_220 >=u r8_214 l0040F7E8
l0040F7D6:
	r9_220 = r9_220 + r4_175
	r6_221 = r14 + 0xFFFFFFFF<32>
	branch r9_220 <u r4_175 l0040F7E8
l0040F7DE:
	branch r9_220 >=u r8_214 l0040F7E8
l0040F7E2:
	r6_221 = r14 + 0xFFFFFFFE<32>
	r9_220 = r9_220 + r4_175
l0040F7E8:
	r3_234 = r3_201 << 0x10<32> | r6_221
	r9_232 = r9_220 - r8_214
	r6_237 = SLICE(r3_234 *u64 r7_176, word32, 32)
	r5_238 = r3_234 *s r7_176
	branch r9_232 <u r6_237 l0040F80A
l0040F800:
	r8_11 = r3_234
	branch r9_232 != r6_237 l0040F84A
l0040F806:
	branch r2_159 >=u r5_238 l0040F84A
l0040F80A:
	r2_159 = r2_159 + r7_176
	r14 = CONVERT(r2_159 <u r7_176, bool, word32) + r4_175
	r8_11 = r3_234 + 0xFFFFFFFF<32>
	r9_232 = r9_232 + r14
	branch r4_175 <u r9_232 l0040F82A
l0040F822:
	branch r4_175 != r9_232 l0040F84A
l0040F826:
	branch r2_159 <u r7_176 l0040F84A
l0040F82A:
	branch r9_232 <u r6_237 l0040F836
l0040F82E:
	branch r6_237 != r9_232 l0040F84A
l0040F832:
	branch r2_159 >=u r5_238 l0040F84A
l0040F836:
	r2_159 = r2_159 + r7_176
	r8_11 = r3_234 + 0xFFFFFFFE<32>
	r9_232 = r9_232 + (CONVERT(r2_159 <u r7_176, bool, word32) + r4_175)
l0040F84A:
	r5_276 = r2_159 - r5_238
	r6_282 = r9_232 - r6_237 - CONVERT(r2_159 <u r5_276, bool, word32)
	r9_12 = 0xFFFFFFFF<32>
	branch r4_175 == r6_282 l0040F91A
l0040F862:
	r3_296 = r13_177 *s r14
	r9_305 = r14
	r2_306 = r5_276 >>u 0x10<32> | r6_282 %u (r4_175 >>u 0x10<32>) << 0x10<32>
	branch r2_306 >=u r3_296 l0040F896
l0040F880:
	r2_306 = r2_306 + r4_175
	r9_305 = r14 + 0xFFFFFFFF<32>
	branch r2_306 <u r4_175 l0040F896
l0040F88A:
	branch r2_306 >=u r3_296 l0040F896
l0040F88E:
	r9_305 = r14 + 0xFFFFFFFE<32>
	r2_306 = r2_306 + r4_175
l0040F896:
	r3_318 = r13_177 *s r14
	r6_324 = (r2_306 - r3_296) %u (r4_175 >>u 0x10<32>) << 0x10<32> | r5_276 & 0xFFFF<32>
	r2_325 = r14
	branch r6_324 >=u r3_318 l0040F8C6
l0040F8B4:
	r6_324 = r6_324 + r4_175
	r2_325 = r14 + 0xFFFFFFFF<32>
	branch r6_324 <u r4_175 l0040F8C6
l0040F8BC:
	branch r6_324 >=u r3_318 l0040F8C6
l0040F8C0:
	r2_325 = r14 + 0xFFFFFFFE<32>
	r6_324 = r6_324 + r4_175
l0040F8C6:
	r5_338 = r9_305 << 0x10<32> | r2_325
	r6_336 = r6_324 - r3_318
	r2_342 = SLICE(r7_176 *u64 r5_338, word32, 32)
	r3_343 = r7_176 *s r5_338
	branch r6_336 <u r2_342 l0040F8E8
l0040F8DE:
	r9_12 = r5_338
	branch r6_336 != r2_342 l0040F916
l0040F8E4:
	branch r3_343 == 0<32> l0040F91A
l0040F8E8:
	r6_348 = r4_175 + r6_336
	r9_12 = r5_338 + 0xFFFFFFFF<32>
	branch r6_348 <u r4_175 l0040F90E
l0040F8F2:
	branch r6_348 <u r2_342 l0040F8FE
l0040F8F6:
	branch r2_342 != r6_348 l0040F916
l0040F8FA:
	branch r7_176 >=u r3_343 l0040F912
l0040F8FE:
	r9_12 = r5_338 + 0xFFFFFFFE<32>
	r7_176 = r7_176 << 1<32>
	r6_348 = r6_348 + (CONVERT(r7_176 << 1<32> <u r7_176, bool, word32) + r4_175)
l0040F90E:
	branch r6_348 != r2_342 l0040F916
l0040F912:
	branch r3_343 == r7_176 l0040F91A
l0040F916:
	r9_12 = r9_12 | 1<32>
l0040F91A:
	r6_442 = r11_113 + 0x3FF<32>
	branch r6_442 <= 0<32> l0040F9C8
l0040F922:
	branch (r9_12 & 7<32>) == 0<32> l0040F93C
l0040F928:
	branch (r9_12 & 0xF<32>) == 4<32> l0040F93C
l0040F930:
	r7_499 = r9_12 + 4<32>
	r8_11 = r8_11 + CONVERT(r7_499 <u r9_12, bool, word32)
	r9_12 = r7_499
l0040F93C:
	branch __bit<word32,word32>(r8_11, 0x18<32>) l0040F948
l0040F940:
	r8_11 = __ins<word32,word32>(r8_11, 0<32>, 8<32>, 1<32>)
	r6_442 = r11_113 + 0x400<32>
l0040F948:
	branch r6_442 > 0x7FE<32> l0040FA5A
l0040F950:
	r9_12 = r8_11 << 0x1D<32> | r9_12 >>u 3<32>
	r8_422 = r8_11 >>u 3<32>
l0040F960:
	return SEQ(r9_12, __ins<word32,word32>(__ins<word32,word32>(__ins<word32,word32>(0<32>, r8_422, 0<32>, 1<32>), r6_442, 4<32>, 1<32>), r10_134, 0xF<32>, 1<32>))
l0040F976:
	r11_113 = r11_113 + 0xFFFFFFFF<32>
	r2_159 = 0<32>
	goto l0040F774
l0040F97C:
	r4_387 = r8_11 | r4_102
	branch (r4_387 & 0x800000<32>) == 0<32> l0040F990
l0040F98C_1:
	r5_10 = 0<32>
l0040F990:
	branch (r4_387 & 0x800000<32>) == 0<32> l0040F994
l0040F990_1:
	r8_11 = 0xFFFFF<32>
l0040F994:
	r10_134 = r5_10
	branch (r4_387 & 0x800000<32>) == 0<32> l0040F99C
l0040F998_1:
	r9_12 = 0xFFFFFFFF<32>
l0040F99C:
	r8_422 = r8_11 | 0x800000<32>
l0040F9A4:
	r6_442 = 0x7FF<32>
	goto l0040F960
l0040F9AA:
	r10_134 = r7_53 >>u 0x1F<32>
	r8_11 = r4_102
	r9_12 = r7_101
	r12_115 = r3_104
l0040F9B2:
	branch r12_115 == 2<32> l0040FA5A
l0040F9B6:
	branch r12_115 == 3<32> l0040F99C
l0040F9BA:
	branch r12_115 != 1<32> l0040F91A
l0040F9BE:
	r8_422 = 0<32>
	r9_12 = 0<32>
	goto l0040FA20
l0040F9C4:
	r10_134 = r5_5 >>u 0x1F<32>
	goto l0040F9B2
l0040F9C8:
	r5_444 = 1<32> - r6_442
	branch r5_444 >= 0x39<32> l0040F9BE
l0040F9D0:
	branch r5_444 >= 0x20<32> l0040FA24
l0040F9D4:
	r6_473 = 0x20<32> - r5_444
	r9_470 = r8_11 << r6_473 | r9_12 >>u r5_444 | CONVERT(r9_12 << r6_473 >u 0<32>, bool, word32)
	r8_467 = r8_11 >>u r5_444
l0040F9F2:
	branch (r9_470 & 7<32>) == 0<32> l0040FA0C
l0040F9F8:
	branch (r9_470 & 0xF<32>) == 4<32> l0040FA0C
l0040FA00:
	r7_483 = r9_470 + 4<32>
	r8_467 = r8_467 + CONVERT(r7_483 <u r9_470, bool, word32)
	r9_470 = r7_483
l0040FA0C:
	branch !__bit<word32,word32>(r8_467, 0x17<32>) l0040FA60
l0040FA10:
	r9_12 = r8_467 << 0x1D<32> | r9_470 >>u 3<32>
	r8_422 = r8_467 >>u 3<32>
l0040FA20:
	r6_442 = 0<32>
	goto l0040F960
l0040FA24:
	r6_447 = 0<32>
	r7_458 = r8_11 >>u 0xFFFFFFE1<32> - r6_442
	branch r5_444 == 0x20<32> l0040FA3C
l0040FA34:
	r6_447 = r8_11 << -r5_444
l0040FA3C:
	r8_467 = 0<32>
	r9_470 = r7_458 | CONVERT((r6_447 | r9_12) >u 0<32>, bool, word32)
	goto l0040F9F2
l0040FA4C:
	r8_11 = 0xFFFFF<32>
	r9_12 = 0xFFFFFFFF<32>
	r10_134 = 0<32>
	goto l0040F99C
l0040FA5A:
	r8_422 = 0<32>
	r9_12 = 0<32>
	goto l0040F9A4
l0040FA60:
	r8_422 = 0<32>
	r9_12 = 0<32>
	r6_442 = 1<32>
	goto l0040F960
__divdf3_exit:


int32 __nedf2(real64 r4:r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
//      __floatscan
//      frexpl
// MayUse:  r6:[0..31] r7:[0..31] Sequence r4:r5:[0..63]
// LiveOut: r4:[0..31]-__nedf2
// Trashed: r4
// Preserved: sp
__nedf2_entry:
	r4_5 = SLICE(r4:r5, word32, 32)
	r5_8 = SLICE(r4:r5, word32, 0)
l0040FA70:
	r9_9 = __ext<word32,word32>(r5_8, 4<32>, 0xB<32>)
	r8_11 = __ext<word32,word32>(r5_8, 0<32>, 0x14<32>)
	r3_13 = __ext<word32,word32>(r7, 0<32>, 0x14<32>)
	r10_14 = __ext<word32,word32>(r7, 4<32>, 0xB<32>)
	branch r9_9 != 0x7FF<32> l0040FAA6
l0040FA96:
	r4_20 = 1<32>
	branch (r8_11 | r4_5) != 0<32> l0040FAD2
l0040FAA0:
	branch r10_14 == r9_9 l0040FAAA
l0040FAA4:
	return 1<32>
l0040FAA6:
	branch r10_14 != 0x7FF<32> l0040FAB2
l0040FAAA:
	r4_20 = 1<32>
	branch (r3_13 | r6) != 0<32> l0040FAD2
l0040FAB2:
	r4_20 = 1<32>
	branch r9_9 != r10_14 l0040FAD2
l0040FAB8:
	branch r8_11 != r3_13 l0040FAD2
l0040FABC:
	branch r4_5 != r6 l0040FAD2
l0040FAC0:
	branch r5_8 >>u 0x1F<32> == r7 >>u 0x1F<32> l0040FAD0
l0040FAC2:
	branch r9_9 != 0<32> l0040FAD2
l0040FAC6:
	return CONVERT((r8_11 | r4_5) >u 0<32>, bool, word32)
l0040FAD0:
	r4_20 = 0<32>
l0040FAD2:
	return r4_20
__nedf2_exit:


real64 __subdf3(real64 r4:r5, real64 r6:r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf_core
//      __floatscan
// MayUse:  Sequence r4:r5:[0..63] Sequence r6:r7:[0..63]
// LiveOut: Sequence r4:r5:[0..63]-__subdf3
// Trashed: r4:r5
// Preserved: sp
__subdf3_entry:
	r5_5 = SLICE(r4:r5, word32, 0)
	r7_8 = SLICE(r6:r7, word32, 0)
	r4_11 = SLICE(r4:r5, word32, 32)
	r6_17 = SLICE(r6:r7, word32, 32)
l0040FAE0:
	r10_6 = __ext<word32,word32>(r5_5, 0<32>, 0x14<32>)
	r9_9 = __ext<word32,word32>(r7_8, 0<32>, 0x14<32>)
	r10_15 = __ext<word32,word32>(r7_8, 4<32>, 0xB<32>)
	r8_103 = r4_11 >>u 0x1D<32> | r10_6 << 3<32>
	r12_14 = r7_8 >>u 0x1F<32>
	r13_19 = __ext<word32,word32>(r5_5, 4<32>, 0xB<32>)
	r9_171 = r6_17 >>u 0x1D<32> | r9_9 << 3<32>
	r5_100 = r5_5 >>u 0x1F<32>
	r3_137 = r4_11 << 3<32>
	branch r10_15 != 0x7FF<32> l0040FB24
l0040FB1E:
	branch (r9_171 | r6_17 << 3<32>) != 0<32> l0040FB28
l0040FB24:
	r12_14 = r7_8 >>u 0x1F<32> ^ 1<32>
l0040FB28:
	r11_309 = r13_19 - r10_15
	branch r12_14 != r5_5 >>u 0x1F<32> l0040FDF2
l0040FB34:
	branch r11_309 <= 0<32> l0040FC82
l0040FB38:
	branch r10_15 != 0<32> l0040FBFE
l0040FB3C:
	branch (r9_171 | r6_17 << 3<32>) != 0<32> l0040FBA4
l0040FB42:
	r10_15 = r11_309
	branch r11_309 != 0x7FF<32> l0040FD6A
l0040FB48:
	branch (r8_103 | r4_11 << 3<32>) != 0<32> l0040FD6A
l0040FB50:
	r8_103 = 0<32>
	r3_137 = 0<32>
l0040FB54:
	branch __bit<word32,word32>(r8_103, 0x17<32>) l0040FB6A
l0040FB58:
	r10_15 = r10_15 + 1<32>
	r8_103 = __ins<word32,word32>(r8_103, 0<32>, 7<32>, 1<32>)
	branch r10_15 != 0x7FF<32> l0040FB6A
l0040FB66:
	r8_103 = 0<32>
	r3_137 = 0<32>
l0040FB6A:
	r7_526 = r3_137 >>u 3<32> | r8_103 << 0x1D<32>
	r8_528 = r8_103 >>u 3<32>
	branch r10_15 != 0x7FF<32> l0040FB90
l0040FB80:
	branch (r7_526 | r8_528) == 0<32> l004100FE
l0040FB88:
	r8_528 = r8_528 | 0x800000<32>
l0040FB90:
	return SEQ(r7_526, __ins<word32,word32>(__ins<word32,word32>(__ins<word32,word32>(0<32>, r8_528, 0<32>, 1<32>), r10_15, 4<32>, 1<32>), r5_100, 0xF<32>, 1<32>))
l0040FBA4:
	r7_392 = r11_309 + 0xFFFFFFFF<32>
	branch r11_309 != 1<32> l0040FBEA
l0040FBAA:
	r6_456 = (r4_11 << 3<32>) + (r6_17 << 3<32>)
	r10_15 = 1<32>
	r8_103 = r8_103 + r9_171 + CONVERT(r6_456 <u r4_11 << 3<32>, bool, word32)
	r3_137 = r6_456
l0040FBBC:
	branch __bit<word32,word32>(r8_103, 0x17<32>) l0040FD6A
l0040FBC0:
	r10_15 = r10_15 + 1<32>
	branch r10_15 == 0x7FF<32> l0040FB50
l0040FBCA:
	r6_474 = __ins<word32,word32>(r8_103, 0<32>, 7<32>, 1<32>)
	r3_137 = r6_474 << 0x1F<32> | (r3_137 >>u 1<32> | r3_137 & 1<32>)
	r8_103 = r6_474 >>u 1<32>
	goto l0040FD6A
l0040FBEA:
	branch r11_309 != 0x7FF<32> l0040FC1C
l0040FBEE:
	branch (r8_103 | r4_11 << 3<32>) != 0<32> l0040FDC0
l0040FBF6:
	r8_103 = 0<32>
	r3_137 = 0<32>
	r10_15 = r11_309
	goto l0040FB54
l0040FBFE:
	branch r13_19 != 0x7FF<32> l0040FC12
l0040FC02:
	branch (r8_103 | r4_11 << 3<32>) != 0<32> l0040FDC0
l0040FC0A:
	r8_103 = 0<32>
	r3_137 = 0<32>
	r10_15 = r13_19
	goto l0040FB54
l0040FC12:
	r9_171 = r9_171 | 0x8000000<32>
	r7_392 = r11_309
l0040FC1C:
	branch r7_392 >= 0x39<32> l0040FC78
l0040FC20:
	branch r7_392 >= 0x20<32> l0040FC58
l0040FC24:
	r7_417 = r9_171 >>u r7_392
	r6_406 = CONVERT(r6_17 << 3<32> << 0x20<32> - r7_392 >u 0<32>, bool, word32) | r4_424
l0040FC46:
	r6_433 = r6_406 + (r4_11 << 3<32>)
	r10_15 = r13_19
	r8_103 = CONVERT(r6_433 <u r4_11 << 3<32>, bool, word32) + (r7_417 + r8_103)
	r3_137 = r6_433
	goto l0040FBBC
l0040FC58:
	r4_407 = r9_171 >>u r7_392
	r10_408 = 0<32>
	branch r7_392 == 0x20<32> l0040FC6A
l0040FC62:
	r10_r4_578 = SEQ(r9_171, r6_17 << 3<32>) >>u r7_392
	r4_424 = SLICE(r10_r4_578, word32, 0) (alias)
	r10_408 = SLICE(r10_r4_578, word32, 32) (alias)
l0040FC6A:
	r6_406 = CONVERT((r10_408 | r6_17 << 3<32>) >u 0<32>, bool, word32) | r4_407
l0040FC74:
	r7_417 = 0<32>
	goto l0040FC46
l0040FC78:
	r6_406 = CONVERT((r9_171 | r6_17 << 3<32>) >u 0<32>, bool, word32)
	goto l0040FC74
l0040FC82:
	branch r11_309 == 0<32> l0040FD30
l0040FC86:
	branch r13_19 != 0<32> l0040FCF2
l0040FC8A:
	branch (r8_103 | r4_11 << 3<32>) != 0<32> l0040FCA4
l0040FC90:
	branch r10_15 != 0x7FF<32> l0040FC9E
l0040FC94:
	r3_137 = r9_171 | r6_17 << 3<32>
	r8_103 = 0<32>
	branch r3_137 == 0<32> l0040FB54
l0040FC9E:
	r8_103 = r9_171
	r3_137 = r6_17 << 3<32>
	goto l0040FD6A
l0040FCA4:
	r11_333 = ~r11_309
	branch r11_333 != 0<32> l0040FCBA
l0040FCAC:
	r3_137 = (r4_11 << 3<32>) + (r6_17 << 3<32>)
	r8_374 = r8_103 + r9_171
l0040FCB2:
	r8_103 = r8_374 + CONVERT(r3_137 <u r6_17 << 3<32>, bool, word32)
	goto l0040FBBC
l0040FCBA:
	branch r10_15 == 0x7FF<32> l0040FC94
l0040FCBE:
	branch r11_333 >= 0x39<32> l0040FD26
l0040FCC2:
	branch r11_333 >= 0x20<32> l0040FD04
l0040FCC6:
	r11_352 = r8_103 >>u r11_333
	r3_341 = r4_359 | CONVERT((r4_11 << 3<32>) << 0x20<32> - r11_333 >u 0<32>, bool, word32)
l0040FCE8:
	r3_137 = r3_341 + (r6_17 << 3<32>)
	r8_374 = r11_352 + r9_171
	goto l0040FCB2
l0040FCF2:
	branch r10_15 == 0x7FF<32> l0040FC94
l0040FCF6:
	r11_333 = -r11_309
	r8_103 = r8_103 | 0x8000000<32>
	goto l0040FCBE
l0040FD04:
	r4_342 = r8_103 >>u r11_333
	r7_343 = 0<32>
	branch r11_333 == 0x20<32> l0040FD16
l0040FD0E:
	r7_r4_579 = SEQ(r8_103, r4_11 << 3<32>) >>u r11_333
	r4_359 = SLICE(r7_r4_579, word32, 0) (alias)
	r7_343 = SLICE(r7_r4_579, word32, 32) (alias)
l0040FD16:
	r3_341 = r4_342 | CONVERT((r7_343 | r4_11 << 3<32>) >u 0<32>, bool, word32)
l0040FD22:
	r11_352 = 0<32>
	goto l0040FCE8
l0040FD26:
	r3_341 = CONVERT((r8_103 | r4_11 << 3<32>) >u 0<32>, bool, word32)
	goto l0040FD22
l0040FD30:
	r10_15 = r13_19 + 1<32>
	branch (r13_19 + 1<32> & 0x7FF<32>) >= 2<32> l0040FDD0
l0040FD3C:
	r7_296 = r8_103 | r4_11 << 3<32>
	branch r13_19 != 0<32> l0040FD88
l0040FD44:
	branch r7_296 == 0<32> l004100D8
l0040FD48:
	r10_15 = 0<32>
	branch (r9_171 | r6_17 << 3<32>) == 0<32> l0040FD6A
l0040FD50:
	r6_325 = (r4_11 << 3<32>) + (r6_17 << 3<32>)
	r3_137 = r6_325
	r8_103 = r8_103 + r9_171 + CONVERT(r6_325 <u r4_11 << 3<32>, bool, word32)
	branch __bit<word32,word32>(r8_103, 0x17<32>) l0040FD6A
l0040FD62:
	r8_103 = __ins<word32,word32>(r8_103, 0<32>, 7<32>, 1<32>)
	r10_15 = 1<32>
l0040FD6A:
	branch (r3_137 & 7<32>) == 0<32> l0040FB54
l0040FD72:
	branch (r3_137 & 0xF<32>) == 4<32> l0040FB54
l0040FD7A:
	r6_493 = r3_137 + 4<32>
	r3_137 = r6_493
	r8_103 = r8_103 + CONVERT(r6_493 <u r3_137, bool, word32)
	goto l0040FB54
l0040FD88:
	branch r7_296 == 0<32> l004100DE
l0040FD8C:
	r10_15 = 0x7FF<32>
	branch (r9_171 | r6_17 << 3<32>) == 0<32> l0040FD6A
l0040FD94:
	r5_301 = r8_103 >>u 3<32>
	branch !__bit<word32,word32>(r9_171 >>u 3<32> | r8_103 >>u 3<32>, 0x13<32>) l0040FDC6
l0040FDA4:
	r7_305 = r8_103 << 0x1D<32> | __ext<word32,word32>(r4_11, 0<32>, 0x1D<32>)
	r11_309 = r12_14
l0040FDB0:
	r8_103 = r7_305 >>u 0x1D<32> | r5_301 << 3<32>
	r3_137 = r7_305 << 3<32>
l0040FDBE:
	r5_100 = r11_309
l0040FDC0:
	r10_15 = 0x7FF<32>
	goto l0040FD6A
l0040FDC6:
	r5_301 = 0xFFFFF<32>
	r7_305 = 0xFFFFFFFF<32>
	goto l0040FDB0
l0040FDD0:
	branch r13_19 == 0x7FE<32> l0040FB50
l0040FDD4:
	r6_288 = (r4_11 << 3<32>) + (r6_17 << 3<32>)
	r11_292 = r8_103 + r9_171 + CONVERT(r6_288 <u r4_11 << 3<32>, bool, word32)
	r3_137 = r11_292 << 0x1F<32> | r6_288 >>u 1<32>
	r8_103 = r11_292 >>u 1<32>
	goto l0040FD6A
l0040FDF2:
	branch r11_309 <= 0<32> l0040FEAA
l0040FDF6:
	branch r10_15 != 0<32> l0040FE70
l0040FDFA:
	branch (r9_171 | r6_17 << 3<32>) == 0<32> l0040FB42
l0040FE02:
	r7_172 = r11_309 + 0xFFFFFFFF<32>
	branch r11_309 != 1<32> l0040FE2C
l0040FE08:
	r6_221 = (r4_11 << 3<32>) - (r6_17 << 3<32>)
	r10_15 = 1<32>
	r8_103 = r8_103 - r9_171 - CONVERT(r4_11 << 3<32> <u r6_221, bool, word32)
	r3_137 = r6_221
l0040FE1E:
	branch __bit<word32,word32>(r8_103, 0x17<32>) l0040FD6A
l0040FE22:
	r4_228 = __ext<word32,word32>(r8_103, 0<32>, 0x17<32>)
	r11_230 = r3_137
	r13_19 = r10_15
	goto l00410034
l0040FE2C:
	branch r11_309 == 0x7FF<32> l0040FBEE
l0040FE30:
	branch r7_172 >= 0x39<32> l0040FEA0
l0040FE34:
	branch r7_172 >= 0x20<32> l0040FE80
l0040FE38:
	r7_190 = r9_171 >>u r7_172
	r6_179 = CONVERT(r6_17 << 3<32> << 0x20<32> - r7_172 >u 0<32>, bool, word32) | r4_197
l0040FE5A:
	r6_206 = (r4_11 << 3<32>) - r6_179
	r10_15 = r13_19
	r8_103 = r8_103 - r7_190 - CONVERT(r4_11 << 3<32> <u r6_206, bool, word32)
	r3_137 = r6_206
	goto l0040FE1E
l0040FE70:
	branch r13_19 == 0x7FF<32> l0040FC02
l0040FE74:
	r9_171 = r9_171 | 0x8000000<32>
	r7_172 = r11_309
	goto l0040FE30
l0040FE80:
	r4_180 = r9_171 >>u r7_172
	r10_181 = 0<32>
	branch r7_172 == 0x20<32> l0040FE92
l0040FE8A:
	r10_r4_576 = SEQ(r9_171, r6_17 << 3<32>) >>u r7_172
	r4_197 = SLICE(r10_r4_576, word32, 0) (alias)
	r10_181 = SLICE(r10_r4_576, word32, 32) (alias)
l0040FE92:
	r6_179 = CONVERT((r10_181 | r6_17 << 3<32>) >u 0<32>, bool, word32) | r4_180
l0040FE9C:
	r7_190 = 0<32>
	goto l0040FE5A
l0040FEA0:
	r6_179 = CONVERT((r9_171 | r6_17 << 3<32>) >u 0<32>, bool, word32)
	goto l0040FE9C
l0040FEAA:
	branch r11_309 == 0<32> l0040FF5A
l0040FEAE:
	branch r13_19 != 0<32> l0040FF1C
l0040FEB2:
	branch (r8_103 | r4_11 << 3<32>) != 0<32> l0040FECA
l0040FEB8:
	branch r10_15 != 0x7FF<32> l0040FEC4
l0040FEBC:
	r3_137 = r9_171 | r6_17 << 3<32>
	branch r3_137 == 0<32> l004100E4
l0040FEC4:
	r8_103 = r9_171
	r3_137 = r6_17 << 3<32>
	goto l0040FFAE
l0040FECA:
	r11_102 = ~r11_309
	branch r11_102 != 0<32> l0040FEE6
l0040FED2:
	r3_137 = (r6_17 << 3<32>) - (r4_11 << 3<32>)
	r8_143 = r9_171 - r8_103
l0040FEDA:
	r5_100 = r12_14
	r8_103 = r8_143 - CONVERT(r6_17 << 3<32> <u r3_137, bool, word32)
	goto l0040FE1E
l0040FEE6:
	branch r10_15 == 0x7FF<32> l0040FEBC
l0040FEEA:
	branch r11_102 >= 0x39<32> l0040FF50
l0040FEEE:
	branch r11_102 >= 0x20<32> l0040FF2E
l0040FEF2:
	r11_121 = r8_103 >>u r11_102
	r3_110 = r5_128 | CONVERT((r4_11 << 3<32>) << 0x20<32> - r11_102 >u 0<32>, bool, word32)
l0040FF12:
	r3_137 = (r6_17 << 3<32>) - r3_110
	r8_143 = r9_171 - r11_121
	goto l0040FEDA
l0040FF1C:
	branch r10_15 == 0x7FF<32> l0040FEBC
l0040FF20:
	r11_102 = -r11_309
	r8_103 = r8_103 | 0x8000000<32>
	goto l0040FEEA
l0040FF2E:
	r5_111 = r8_103 >>u r11_102
	r7_112 = 0<32>
	branch r11_102 == 0x20<32> l0040FF40
l0040FF38:
	r7_r5_577 = SEQ(r8_103, r4_11 << 3<32>) >>u r11_102
	r5_128 = SLICE(r7_r5_577, word32, 0) (alias)
	r7_112 = SLICE(r7_r5_577, word32, 32) (alias)
l0040FF40:
	r3_110 = r5_111 | CONVERT((r7_112 | r4_11 << 3<32>) >u 0<32>, bool, word32)
l0040FF4C:
	r11_121 = 0<32>
	goto l0040FF12
l0040FF50:
	r3_110 = CONVERT((r8_103 | r4_11 << 3<32>) >u 0<32>, bool, word32)
	goto l0040FF4C
l0040FF5A:
	branch (r13_19 + 1<32> & 0x7FF<32>) >= 2<32> l00410010
l0040FF66:
	r10_15 = r8_103 | r4_11 << 3<32>
	r7_58 = r9_171 | r6_17 << 3<32>
	branch r13_19 != 0<32> l0040FFC2
l0040FF72:
	branch r10_15 != 0<32> l0040FF86
l0040FF76:
	branch r7_58 != 0<32> l0040FEC4
l0040FF7A:
	r3_137 = 0<32>
l0040FF7E:
	r8_103 = 0<32>
	r10_15 = 0<32>
	r5_100 = 0<32>
	goto l0040FB54
l0040FF86:
	branch r7_58 == 0<32> l0040FFBE
l0040FF88:
	r4_84 = (r4_11 << 3<32>) - (r6_17 << 3<32>)
	r7_87 = r8_103 - r9_171 - CONVERT(r4_11 << 3<32> <u r4_84, bool, word32)
	branch __bit<word32,word32>(r7_87, 0x17<32>) l0040FFB2
l0040FF9C:
	r3_137 = (r6_17 << 3<32>) - (r4_11 << 3<32>)
	r10_15 = 0<32>
	r8_103 = r9_171 - r8_103 - CONVERT(r6_17 << 3<32> <u r3_137, bool, word32)
l0040FFAE:
	r5_100 = r12_14
	goto l0040FD6A
l0040FFB2:
	r3_137 = r4_84 | r7_87
	branch r3_137 == 0<32> l00410098
l0040FFBA:
	r8_103 = r7_87
	r3_137 = r4_84
l0040FFBE:
	r10_15 = 0<32>
	goto l0040FD6A
l0040FFC2:
	branch r10_15 != 0<32> l0040FFD2
l0040FFC6:
	branch r7_58 == 0<32> l004100EC
l0040FFCA:
	r8_103 = r9_171
	r3_137 = r6_17 << 3<32>
	r5_100 = r12_14
	goto l0040FDC0
l0040FFD2:
	r10_15 = 0x7FF<32>
	branch r7_58 == 0<32> l0040FD6A
l0040FFD8:
	r7_60 = r8_103 >>u 3<32>
	branch !__bit<word32,word32>(r9_171 >>u 3<32> | r8_103 >>u 3<32>, 0x13<32>) l00410006
l0040FFE8:
	r4_64 = r8_103 << 0x1D<32> | __ext<word32,word32>(r4_11, 0<32>, 0x1D<32>)
	r11_309 = r5_5 >>u 0x1F<32>
l0040FFF6:
	r8_103 = r4_64 >>u 0x1D<32> | r7_60 << 3<32>
	r3_137 = r4_64 << 3<32>
	goto l0040FDBE
l00410006:
	r7_60 = 0xFFFFF<32>
	r4_64 = 0xFFFFFFFF<32>
	goto l0040FFF6
l00410010:
	r11_230 = (r4_11 << 3<32>) - (r6_17 << 3<32>)
	r4_228 = r8_103 - r9_171 - CONVERT(r4_11 << 3<32> <u r11_230, bool, word32)
	branch __bit<word32,word32>(r4_228, 0x17<32>) l00410090
l00410022:
	r11_230 = (r6_17 << 3<32>) - (r4_11 << 3<32>)
	r5_100 = r12_14
	r4_228 = r9_171 - r8_103 - CONVERT(r6_17 << 3<32> <u r11_230, bool, word32)
l00410034:
	r7_239 = __count_leading_zeros<word32>(r4_228)
	branch r4_228 != 0<32> l00410042
l0041003A:
	r7_239 = __count_leading_zeros<word32>(r11_230) + 0x20<32>
l00410042:
	r10_244 = r7_239 + 0xFFFFFFF8<32>
	branch r10_244 >= 0x20<32> l0041009C
l0041004A:
	r3_137 = r11_230 << r10_244
	r8_248 = r11_230 >>u -r10_244 | r4_228 << r10_244
l0041005E:
	branch r10_244 < r13_19 l004100CE
l00410062:
	r10_262 = r10_244 - r13_19
	branch r10_262 >= 0x1F<32> l004100A8
l0041006E:
	r7_279 = 0x20<32> - (r10_262 + 1<32>)
	r3_137 = r8_248 << r7_279 | r3_137 >>u r10_262 + 1<32> | CONVERT(r3_137 << r7_279 >u 0<32>, bool, word32)
	r8_103 = r8_248 >>u r10_262 + 1<32>
	goto l0040FFBE
l00410090:
	r3_137 = r11_230 | r4_228
	branch r3_137 != 0<32> l00410034
l00410098:
	goto l0040FF7E
l0041009C:
	r3_137 = 0<32>
	r8_248 = r11_230 << r7_239 + 0xFFFFFFD8<32>
	goto l0041005E
l004100A8:
	r7_265 = 0<32>
	r10_266 = r8_248 >>u r10_262 + 0xFFFFFFE1<32>
	branch r10_262 == 0x1F<32> l004100BE
l004100B6:
	r7_265 = r8_248 << -(r10_262 + 1<32>)
l004100BE:
	r3_137 = r10_266 | CONVERT((r3_137 | r7_265) >u 0<32>, bool, word32)
	r8_103 = 0<32>
	goto l0040FFBE
l004100CE:
	r10_15 = r13_19 - r10_244
	r8_103 = __ins<word32,word32>(r8_248, 0<32>, 7<32>, 1<32>)
	goto l0040FD6A
l004100D8:
	r8_103 = r9_171
	r3_137 = r6_17 << 3<32>
	goto l0040FFBE
l004100DE:
	r8_103 = r9_171
	r3_137 = r6_17 << 3<32>
	goto l0040FDC0
l004100E4:
	r8_103 = 0<32>
	r5_100 = r12_14
	goto l0040FB54
l004100EC:
	r5_100 = 0<32>
	r8_103 = 0x7FFFFF<32>
	r3_137 = 0xFFFFFFF8<32>
	r10_15 = 0x7FF<32>
	goto l0040FB54
l004100FE:
	r8_528 = 0<32>
	goto l0040FB90
__subdf3_exit:


