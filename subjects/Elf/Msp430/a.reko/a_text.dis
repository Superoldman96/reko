void fn00004000(word16 sr, word16 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r8:[0..15] sr:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00004000_entry:
l00004000:
	Mem3[0x0120<p16>:word16] = 0x5A80<16>
	r15_12 = 0x5B78<16>
	r14_13 = 0x200<16>
	branch false l00004020
l00004016:
	Mem14[r14_13:byte] = Mem10[r15_12:byte]
	r15_12 = r15_12 + 1<i16>
	r14_13 = r14_13 + 1<16>
	branch r14_13 >=u 0x21C<16> l00004016
l00004020:
	r15_19 = 0x21C<16>
	branch false l00004036
l0000402C:
	Mem24[r15_19:byte] = 0<8>
	r15_19 = r15_19 + 1<16>
	branch r15_19 >=u 0x9B4<16> l0000402C
l00004036:
l00004036_thunk_main:
	main(sr, r8)
fn00004000_exit:


void task_idle(word16 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r8:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
task_idle_entry:
l4048:
	r10_18 = xTaskGetTickCount() + 0x3E8<16>
l405A:
	r15_24 = xTaskGetTickCount()
	branch r10_18 - r15_24 >= 1<16> l4080
l406A:
	printf(r8, 0x4040<16>)
	r10_18 = r15_24 + 0x3E8<16>
	goto l405A
l4080:
task_idle_exit:


void task_1(word16 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_1_entry:
l4096:
	Mem10[&tLoc02:word16] = xTaskGetTickCount()
l40A0:
	Mem14[0x0031<p16>:byte] = Mem11[0x0031<p16>:byte] ^ 1<8>
	putchar(sr, 0x58<16>)
	vTaskDelayUntil(0x1F4<16>, &tLoc02)
	goto l40A0
task_1_exit:


void task_2(word16 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_2_entry:
l40BC:
	Mem10[&tLoc02:word16] = xTaskGetTickCount()
l40C6:
	Mem14[0x0031<p16>:byte] = Mem11[0x0031<p16>:byte] ^ 2<8>
	putchar(sr, 0x59<16>)
	vTaskDelayUntil(0xFA<16>, &tLoc02)
	goto l40C6
task_2_exit:


void task_3(word16 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_3_entry:
l40E2:
	Mem10[&tLoc02:word16] = xTaskGetTickCount()
l40EC:
	Mem14[0x0031<p16>:byte] = Mem11[0x0031<p16>:byte] ^ 4<8>
	putchar(sr, 0x5A<16>)
	vTaskDelayUntil(0x19<16>, &tLoc02)
	goto l40EC
task_3_exit:


void main(word16 sr, word16 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004000
// MayUse:  r8:[0..15] sr:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
main_entry:
l414C:
	__set_stackpointer(0xA00<16>)
	Mem3[0x0120<p16>:word16] = 0x5A80<16>
	Mem5[0x0056<p16>:byte] = 0xE0<8>
	Mem7[0x0057<p16>:byte] = 7<8>
	Mem9[0x0032<p16>:byte] = 7<8>
	Mem11[0x0031<p16>:byte] = 7<8>
	init_uart_isr(0<16>, 0x8000<32>, 0x10<8>)
	uart_putchar_isr_mode(0<16>)
	printf(r8, 0x411D<16>)
	uart_putchar_isr_mode(1<16>)
	vTaskStartScheduler(xTaskCreate(xTaskCreate(xTaskCreate(xTaskCreate(sr, 0x32<16>, 0x414B<16>, 3<16>, out r15_161), 0x32<16>, 0x414B<16>, 3<16>, out r15_162), 0x32<16>, 0x414B<16>, 3<16>, out r15_163), 0x96<16>, 0x414B<16>, 0<16>, out r15_164))
l5AD8:
	goto l5AD8
main_exit:


byte msp430_compute_modulator_bits(ui32 r13_r12, ui32 r15_r14, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      init_uart_isr
// MayUse:  Sequence r13:r12:[0..31] Sequence r15:r14:[0..31] Stack +0002:[0..15]
// LiveOut: r15:[0..7]-init_uart_isr
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 r4 r5 r6 r7 r8 r9 sp sr
msp430_compute_modulator_bits_entry:
	r14 = SLICE(r15_r14, word16, 0)
	r15 = SLICE(r15_r14, word16, 16)
l0000420E:
	r12_45 = fn00005B04(r15_r14, r13_r12)
	__disable_interrupts()
	r9_r8_212 = fn00005ADC(r14, r15, r12_45, 0<16>) - r13_r12
	branch wArg02 == 0<16> l00004274
l0000426C:
	Mem85[wArg02:word16] = r12_45
l00004274:
	r7_138 = 0<16>
	r6_127 = 0<16>
	r11_r10_300 = 0<32> (alias)
l0000427C:
	r11_r10_215 = r11_r10_300 + r9_r8_212
	branch SLICE(r11_r10_215 * 2<32> - -r15_r14, word16, 16) >= 0<16> l000042AE
l0000429A:
	r11_r10_215 = r11_r10_215 + r15_r14
	r15_126 = 1<16>
	r14_128 = r6_127
	branch r6_127 == 0<16> l000042AC
l000042A6:
	r15_126 = r15_126 * 2<16>
	r14_128 = r14_128 - 1<16>
	branch r14_128 != 0<16> l000042A6
l000042AC:
	r7_138 = r7_138 | r15_126
l000042AE:
	r6_127 = CONVERT(SLICE(r6_127, byte, 0) + 1<8>, byte, word16)
	r11_r10_300 = r11_r10_215 (alias)
	branch r6_127 >=u 8<8> l0000427C
l000042B4:
	return SLICE(r7_138, byte, 0)
msp430_compute_modulator_bits_exit:


void init_uart_isr(word16 r14, word32 dwArg02, byte bArg06)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004000
// MayUse:  r14:[0..15] Stack +0002:[0..31] Stack +0006:[0..7]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r5
// Preserved: r10 r11 r4 r6 r7 r8 r9 sp
init_uart_isr_entry:
l000042CC:
	__disable_interrupts()
	Mem46[0x0218<p16>:word16] = Mem23[0x0218<p16>:word16] + 1<16>
	v19_42 = CONVERT(bArg06, byte, word16)
	xQueueCreate(v19_42, out r6_189, out r7_190, out r15_53)
	Mem62[0x021C<p16>:word16] = r15_53
	r4_69 = xQueueCreate(v19_42, out r6_71, out r7_72, out r15_68)
	Mem77[0x021E<p16>:word16] = r15_68
	Mem78[0x0078<p16>:byte] = 1<8>
	Mem81[0x0078<p16>:byte] = Mem78[0x0078<p16>:byte] | 0x10<16>
	Mem86[0x0079<p16>:byte] = SLICE(r6_71, byte, 0) & 0x30<8>
	r15_98 = CONVERT(msp430_compute_modulator_bits(dwArg02, SEQ(r14, r7_72), r4_69), uint8, uint16)
	Mem105[0x007C<p16>:byte] = Mem88[r4_69:byte]
	Mem113[0x007D<p16>:byte] = SLICE(__swpb(Mem105[r4_69:word16]), byte, 0)
	Mem115[0x007B<p16>:byte] = SLICE(r15_98, byte, 0)
	Mem118[0x0005<p16>:byte] = Mem115[0x0005<p16>:byte] | 0x30<16>
	Mem120[0x0078<p16>:byte] = 0x10<8>
	Mem123[0x001B<p16>:byte] = Mem120[0x001B<p16>:byte] | 0xFFC0<16>
	Mem126[0x0001<p16>:byte] = Mem123[0x0001<p16>:byte] | 0x30<16>
	branch Mem126[0x0218<p16>:word16] == 0<16> l0000436E
l00004366:
	v37_131 = Mem126[0x0218<p16>:word16]
	Mem133[0x0218<p16>:word16] = v37_131 + 0xFFFF<16>
	branch v37_131 != 1<16> l0000436E
l0000436C:
	__enable_interrupts()
l0000436E:
	return
init_uart_isr_exit:


void getchar(word16 sr)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8
// Preserved: sp
getchar_entry:
l4380:
	branch x_getchar(sr, 0x64<16>, fp - 2<16>) == 0<16> l4396
l4390:
	goto l4398
l4396:
l4398:
	return
getchar_exit:


void uart_putchar_isr_mode(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004000
// MayUse:  r15:[0..7]
// LiveOut:
// Trashed:
// Preserved: sp
uart_putchar_isr_mode_entry:
l0000439C:
	Mem5[0x0200<p16>:byte] = SLICE(r15, byte, 0)
	return
uart_putchar_isr_mode_exit:


word16 putchar(word16 sr, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      task_1
//      task_2
//      task_3
//      putchar
// MayUse:  r15:[0..15] sr:[0..15]
// LiveOut: r11:[0..15]-putchar
// Trashed: VNZC r13 r14 r15
// Preserved: r11 sp sr
putchar_entry:
l000043A2:
	r11_12 = r15
	branch r15 == 0xA<16> l000043D6
l000043AC:
	branch Mem5[0x0200<p16>:byte] != 0<8> l000043CA
l000043B2:
	branch (Mem5[0x0079<p16>:byte] & 1<8>) == 0<8> l000043B2
l000043B8:
	Mem40[0x007F<p16>:byte] = SLICE(r11_12, byte, 0)
	r15_26 = 1<16>
l000043BE:
	branch r15_26 == 0<16> l000043C6
l000043C2:
	goto l000043E0
l000043C6:
	goto l000043E0
l000043CA:
	r15_26 = x_putchar(sr, 0x64<16>, r11_12)
	goto l000043BE
l000043D6:
	r11_12 = putchar(sr, 0xD<16>)
	goto l000043AC
l000043E0:
	return <invalid>
putchar_exit:


word16 x_getchar(word16 sr, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      getchar
// MayUse:  r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: r15:[0..15]-getchar
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8
// Preserved: sp
x_getchar_entry:
l43E4:
	branch xQueueReceive(sr, r14, r15, Mem0[0x021C<p16>:word16]) == 0<16> l43F8
l43F4:
	return 1<16>
l43F8:
	return 0<16>
x_getchar_exit:


word16 x_putchar(word16 sr, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      putchar
// MayUse:  r14:[0..15] r15:[0..7] sr:[0..15]
// LiveOut: r15:[0..15]-putchar
// Trashed: VNZC r13 r15
// Preserved: r12 r14 r4 r5 r6 r7 r8 sp sr
x_putchar_entry:
l000043FC:
	__disable_interrupts()
	Mem11[0x0218<p16>:word16] = Mem6[0x0218<p16>:word16] + 1<16>
	v6_5 = SLICE(r15, byte, 0)
	branch Mem11[0x0220<p16>:word16] == 1<16> l00004440
l00004410:
	sr_27 = xQueueSend(sr, r14, fp - 2<16>, Mem11[0x021E<p16>:word16], out r15_22)
	branch Mem11[0x0220<p16>:word16] == 1<16> l00004430
l00004420:
	branch Mem59[0x0218<p16>:word16] == 0<16> l0000444A
l00004426:
	v15_63 = Mem59[0x0218<p16>:word16]
	Mem65[0x0218<p16>:word16] = v15_63 + 0xFFFF<16>
	branch v15_63 != 1<16> l0000444A
l0000442C:
	__enable_interrupts()
	goto l0000444A
l00004430:
	branch r15_22 != 1<16> l00004420
l00004434:
	xQueueReceive(sr_27, 0<16>, fp - 2<16>, Mem11[0x021E<p16>:word16])
l00004440:
	Mem55[0x0220<p16>:word16] = 0<16>
	Mem58[0x007F<p16>:byte] = v6_5
	goto l00004420
l0000444A:
	return 1<16>
x_putchar_exit:


void vRxISR(word16 sr)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed: VNZC r10 r11 r4 r5 r6 r7 r8 r9 sr
// Preserved: r12 r13 r14 r15 sp
vRxISR_entry:
l4450:
	branch xQueueSendFromISR(sr, 0<16>, fp - 0xA<16>, Mem18[0x021C<p16>:word16]) == 0<16> l4474
l4470:
	vPortYield(out r5_98, out r6_99, out r7_100, out r8_101, out r9_102, out r10_103, out r11_104)
l4474:
	return
vRxISR_exit:


void vTxISR(word16 sr)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed: VNZC sr
// Preserved: r12 r13 r14 r15 sp
vTxISR_entry:
l4480:
	branch xQueueReceiveFromISR(sr, &tLoc0C, fp - 0xA<16>, Mem14[0x021E<p16>:word16]) == 1<16> l44A2
l449C:
	Mem36[0x0220<p16>:word16] = 1<16>
	goto l44A8
l44A2:
	Mem35[0x007F<p16>:byte] = bLoc0A
l44A8:
	return
vTxISR_exit:


word16 xTaskCreate(word16 sr, word16 r13, word16 r14, word16 wArg02, word16 & r15Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004000
//      vTaskStartScheduler
// MayUse:  r13:[0..15] r14:[0..15] sr:[0..15] Stack +0002:[0..15]
// LiveOut: r15:[0..15]-vTaskStartScheduler sr:[0..15]-main
// Trashed: VNZC r12 r13 r14 r15 r4 sr
// Preserved: r10 r11 r5 r6 r7 r8 r9 sp
xTaskCreate_entry:
l000044B4:
	sr_49 = prvAllocateTCBAndStack(sr, r13, out r5_46, out r6_47, out r7_48, out r15_44)
	branch r15_44 == 0<16> l000045A0
l000044E2:
	prvInitialiseTCBVariables(wArg02, r14, r13, r15_44)
	Mem83[r15_44:word16] = pxPortInitialiseStack(r7_48, r6_47, Mem23[r15_44 + 36<i16>:word16] * 2<16> + Mem23[r15_44 + 2<i16>:word16] - 2<16>)
	__disable_interrupts()
	Mem86[0x0218<p16>:word16] = Mem83[0x0218<p16>:word16] + 1<16>
	Mem89[0x0206<p16>:word16] = Mem86[0x0206<p16>:word16] + 1<16>
	branch Mem89[0x0206<p16>:word16] == 1<16> l00004596
l00004514:
	branch Mem89[0x020E<p16>:word16] != 0<16> l0000452A
l0000451A:
	branch wArg02 >=u Mem89[Mem89[0x0202<p16>:word16] + 6<i16>:word16] l0000452A
l00004526:
	Mem108[0x0202<p16>:word16] = r15_44
l0000452A:
	v28_111 = Mem110[r15_44 + 6<i16>:word16]
	branch Mem110[0x020A<p16>:word16] <u v28_111 l00004538
l00004534:
	Mem116[0x020A<p16>:word16] = v28_111
l00004538:
	Mem120[r15_44 + 4<i16>:word16] = Mem117[0x0214<p16>:word16]
	Mem123[0x0214<p16>:word16] = Mem120[0x0214<p16>:word16] + 1<16>
	Mem124[r15_44 + 8<i16>:word16] = 0<16>
	branch Mem124[0x020C<p16>:word16] <u v28_111 l00004550
l0000454C:
	Mem129[0x020C<p16>:word16] = v28_111
l00004550:
	vListInsertEnd(r15_44 + 8<16>, v28_111 * 0x10<16> + 0x222<16>)
	r10_147 = 1<16>
	branch Mem148[0x0218<p16>:word16] == 0<16> l00004574
l0000456C:
	v44_152 = Mem148[0x0218<p16>:word16]
	Mem154[0x0218<p16>:word16] = v44_152 + 0xFFFF<16>
	branch v44_152 != 1<16> l00004574
l00004572:
	__enable_interrupts()
l00004574:
	branch r10_147 != 1<16> l000045A4
l00004578:
	branch r5_46 == 0<16> l00004580
l0000457C:
	Mem167[r5_46:word16] = r15_44
l00004580:
	branch Mem168[0x020E<p16>:word16] == 0<16> l000045A4
l00004586:
	branch Mem168[Mem168[0x0202<p16>:word16] + 6<i16>:word16] <u wArg02 l000045A4
l00004590:
	vPortYield(out r5_317, out r6_318, out r7_319, out r8_320, out r9_321, out r10_147, out r11_322)
	goto l000045A4
l00004596:
	Mem93[0x0202<p16>:word16] = r15_44
	prvInitialiseTaskLists()
	goto l0000452A
l000045A0:
	r10_147 = 0xFFFF<16>
	goto l00004574
l000045A4:
	r15Out = r10_147
	return sr_49
xTaskCreate_exit:


void vTaskDelete(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8
// Preserved: r10 r11 r9 sp
vTaskDelete_entry:
l45B6:
	__disable_interrupts()
	Mem16[0x0218<p16>:word16] = Mem11[0x0218<p16>:word16] + 1<16>
	r11_17 = r15
	branch r15 == 0<16> l460C
l45CA:
	r10_24 = r11_17 + 8<16>
	vListRemove(r10_24)
	branch Mem16[r11_17 + 26<i16>:word16] != 0<16> l4600
l45DA:
	vListInsertEnd(r10_24, 0x296<16>)
	Mem61[0x0204<p16>:word16] = Mem16[0x0204<p16>:word16] + 1<16>
	branch Mem61[0x0218<p16>:word16] == 0<16> l45F6
l45EE:
	v15_65 = Mem61[0x0218<p16>:word16]
	Mem67[0x0218<p16>:word16] = v15_65 + 0xFFFF<16>
	branch v15_65 != 1<16> l45F6
l45F4:
	__enable_interrupts()
l45F6:
	branch r15 != 0<16> l4612
l45FA:
	vPortYield(out r5_162, out r6_163, out r7_164, out r8_165, out r9_166, out r10_167, out r11_168)
	goto l4612
l4600:
	vListRemove(r11_17 + 0x12<16>)
	goto l45DA
l460C:
	r11_17 = Mem16[0x0202<p16>:word16]
	goto l45CA
l4612:
	return
vTaskDelete_exit:


void vTaskDelayUntil(word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      task_1
//      task_2
//      task_3
// MayUse:  r14:[0..15] r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8
// Preserved: r10 r11 r9 sp
vTaskDelayUntil_entry:
l0000461A:
	vTaskSuspendAll()
	v9_21 = Mem11[r15:word16]
	r10_16 = 0<16>
	r11_23 = r14 + v9_21
	branch Mem11[0x0208<p16>:word16] <u v9_21 l00004690
l00004634:
	branch r11_23 <u v9_21 l00004640
l00004638:
	branch Mem11[0x0208<p16>:word16] <u r11_23 l00004640
l0000463E:
	r10_16 = 1<16>
l00004640:
	Mem42[r15:word16] = r11_23
	branch r10_16 != 0<16> l00004656
l00004648:
	xTaskResumeAll(out r5_180, out r6_181, out r7_182, out r15_88)
	branch r15_88 != 0<16> l00004696
l00004650:
	vPortYield(out r5_183, out r6_184, out r7_185, out r8_186, out r9_187, out r10_188, out r11_189)
	goto l00004696
l00004656:
	vListRemove(Mem42[0x0202<p16>:word16] + 8<16>)
	Mem60[Mem42[0x0202<p16>:word16] + 8<i16>:word16] = r11_23
	branch r11_23 <u Mem60[0x0208<p16>:word16] l00004682
l00004670:
	r14_69 = Mem60[0x0202<p16>:word16] + 8<16>
	r15_71 = Mem60[0x0284<p16>:word16]
l0000467C:
	vListInsert(r14_69, r15_71)
	goto l00004648
l00004682:
	r14_69 = Mem60[0x0202<p16>:word16] + 8<16>
	r15_71 = Mem60[0x0282<p16>:word16]
	goto l0000467C
l00004690:
	branch r11_23 >=u v9_21 l0000463E
l00004694:
	goto l00004638
l00004696:
	return
vTaskDelayUntil_exit:


void vTaskDelay(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  r15:[0..15]
// LiveOut:
// Trashed: VNZC r10 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9
// Preserved: r11 sp
vTaskDelay_entry:
l469E:
	r15_58 = 0<16>
	branch r15 != 0<16> l46B2
l46A8:
	branch r15_58 != 0<16> l46F8
l46AC:
	vPortYield(out r5_144, out r6_145, out r7_146, out r8_147, out r9_148, out r10_149, out r11_150)
	goto l46F8
l46B2:
	vTaskSuspendAll()
	r11_16 = r15 + Mem5[0x0208<p16>:word16]
	vListRemove(Mem5[0x0202<p16>:word16] + 8<16>)
	Mem30[Mem5[0x0202<p16>:word16] + 8<i16>:word16] = r11_16
	branch r11_16 <u Mem30[0x0208<p16>:word16] l46EA
l46D4:
	r14_39 = Mem30[0x0202<p16>:word16] + 8<16>
	r15_41 = Mem30[0x0284<p16>:word16]
l46E0:
	vListInsert(r14_39, r15_41)
	xTaskResumeAll(out r5_151, out r6_152, out r7_153, out r15_58)
	goto l46A8
l46EA:
	r14_39 = Mem30[0x0202<p16>:word16] + 8<16>
	r15_41 = Mem30[0x0282<p16>:word16]
	goto l46E0
l46F8:
	return
vTaskDelay_exit:


void vTaskStartScheduler(word16 sr)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004000
// MayUse:  sr:[0..15]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskStartScheduler_entry:
l00004702:
	branch Mem0[0x0202<p16>:word16] != 0<16> l0000470A
l00004708:
	return
l0000470A:
	xTaskCreate(sr, 0x32<16>, 0x46FC<16>, 0<16>, out r15_19)
	branch r15_19 != 1<16> l00004708
l00004726:
	__disable_interrupts()
	Mem29[0x020E<p16>:word16] = 1<16>
	Mem30[0x0208<p16>:word16] = 0<16>
	xPortStartScheduler()
	goto l00004708
vTaskStartScheduler_exit:


void vTaskEndScheduler()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vTaskEndScheduler_entry:
l4736:
	__disable_interrupts()
	Mem3[0x020E<p16>:word16] = 0<16>
	vPortEndScheduler()
	return
vTaskEndScheduler_exit:


void vTaskSuspendAll()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTaskDelayUntil
//      vTaskDelay
//      prvCheckTasksWaitingTermination
//      xQueueSend
//      xQueueReceive
//      pvPortMalloc
// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
vTaskSuspendAll_entry:
l00004742:
	__disable_interrupts()
	Mem6[0x0218<p16>:word16] = Mem0[0x0218<p16>:word16] + 1<16>
	Mem9[0x0210<p16>:word16] = Mem6[0x0210<p16>:word16] + 1<16>
	branch Mem9[0x0218<p16>:word16] == 0<16> l0000475A
l00004752:
	v9_13 = Mem9[0x0218<p16>:word16]
	Mem15[0x0218<p16>:word16] = v9_13 + 0xFFFF<16>
	branch v9_13 != 1<16> l0000475A
l00004758:
	__enable_interrupts()
l0000475A:
	return
vTaskSuspendAll_exit:


word16 xTaskResumeAll(word16 & r5Out, word16 & r6Out, word16 & r7Out, word16 & r15Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTaskDelayUntil
//      vTaskDelay
//      prvCheckTasksWaitingTermination
//      xQueueSend
//      xQueueReceive
//      pvPortMalloc
// MayUse: 
// LiveOut: r15:[0..15]-xQueueSend r4:[0..15]-pvPortMalloc r5:[0..15]-pvPortMalloc r6:[0..15]-pvPortMalloc r7:[0..15]-pvPortMalloc
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7
// Preserved: r10 r11 r8 r9 sp
xTaskResumeAll_entry:
l0000475C:
	__disable_interrupts()
	Mem18[0x0218<p16>:word16] = Mem14[0x0218<p16>:word16] + 1<16>
	v10_19 = Mem18[0x0210<p16>:word16]
	Mem21[0x0210<p16>:word16] = v10_19 + 0xFFFF<16>
	r8_15 = 0<16>
	branch v10_19 != 1<16> l000047EA
l00004772:
	branch Mem21[0x0206<p16>:word16] == 0<16> l000047EA
l00004778:
	r9_178 = 0<16>
l0000477A:
	branch Mem28[0x0286<p16>:word16] == 0<16> l0000480E
l00004780:
	r11_32 = Mem28[Mem28[Mem28[0x0288<p16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l0000478C:
	branch r11_32 == 0<16> l000047D8
l00004790:
	vListRemove(r11_32 + 0x12<16>)
	r10_137 = r11_32 + 8<16>
	vListRemove(r10_137)
	Mem147[r11_32 + 8<i16>:word16] = 0<16>
	v18_148 = Mem147[r11_32 + 6<i16>:word16]
	branch Mem147[0x020C<p16>:word16] <u v18_148 l000047B6
l000047B2:
	Mem153[0x020C<p16>:word16] = v18_148
l000047B6:
	vListInsertEnd(r10_137, v18_148 * 0x10<16> + 0x222<16>)
	branch Mem170[Mem170[0x0202<p16>:word16] + 6<i16>:word16] <u Mem170[r11_32 + 6<i16>:word16] l0000477A
l000047D4:
	r9_178 = 1<16>
	goto l0000477A
l000047D8:
	branch Mem28[0x0212<p16>:word16] == 0<16> l000047E6
l000047DE:
	branch Mem28[0x0212<p16>:word16] != 0<16> l00004802
l000047E4:
	r9_178 = 1<16>
l000047E6:
	branch r9_178 == 1<16> l000047FA
l000047EA:
	branch Mem87[0x0218<p16>:word16] == 0<16> l00004812
l000047F0:
	v22_93 = Mem87[0x0218<p16>:word16]
	Mem95[0x0218<p16>:word16] = v22_93 + 0xFFFF<16>
	branch v22_93 != 1<16> l00004812
l000047F6:
	__enable_interrupts()
	goto l00004812
l000047FA:
	r4 = vPortYield(out r5, out r6, out r7, out r8_15, out r9_289, out r10_290, out r11_291)
	goto l000047EA
l00004802:
	vTaskIncrementTick()
	v33_58 = Mem57[0x0212<p16>:word16]
	Mem60[0x0212<p16>:word16] = v33_58 + 0xFFFF<16>
	branch v33_58 != 1<16> l00004802
l0000480C:
	goto l000047E4
l0000480E:
	r11_32 = 0<16>
	goto l0000478C
l00004812:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r15Out = r8_15
	return r4
xTaskResumeAll_exit:


word16 xTaskGetTickCount()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      task_idle
//      task_1
//      task_2
//      task_3
// MayUse: 
// LiveOut: r15:[0..15]-task_1
// Trashed: VNZC r15
// Preserved: sp
xTaskGetTickCount_entry:
l0000481E:
	__disable_interrupts()
	v4_4 = Mem0[0x0218<p16>:word16]
	Mem6[0x0218<p16>:word16] = v4_4 + 1<16>
	v6_8 = Mem6[0x0208<p16>:word16]
	branch v4_4 == 0xFFFF<16> l00004832
l0000482A:
	v9_11 = Mem6[0x0218<p16>:word16]
	Mem13[0x0218<p16>:word16] = v9_11 + 0xFFFF<16>
	branch v9_11 != 1<16> l00004832
l00004830:
	__enable_interrupts()
l00004832:
	return v6_8
xTaskGetTickCount_exit:


void uxTaskGetNumberOfTasks()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: VNZC r15
// Preserved: sp
uxTaskGetNumberOfTasks_entry:
l4834:
	__disable_interrupts()
	v4_4 = Mem0[0x0218<p16>:word16]
	Mem6[0x0218<p16>:word16] = v4_4 + 1<16>
	branch v4_4 == 0xFFFF<16> l4848
l4840:
	v9_11 = Mem6[0x0218<p16>:word16]
	Mem13[0x0218<p16>:word16] = v9_11 + 0xFFFF<16>
	branch v9_11 != 1<16> l4848
l4846:
	__enable_interrupts()
l4848:
	return
uxTaskGetNumberOfTasks_exit:


void vTaskIncrementTick()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xTaskResumeAll
//      prvTickISR
// MayUse: 
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
vTaskIncrementTick_entry:
l0000484A:
	branch Mem8[0x0210<p16>:word16] != 0<16> l000048D0
l00004854:
	v9_16 = Mem8[0x0208<p16>:word16]
	Mem18[0x0208<p16>:word16] = v9_16 + 1<16>
	branch v9_16 != 0xFFFF<16> l00004868
l0000485A:
	v10_21 = Mem18[0x0282<p16>:word16]
	Mem24[0x0282<p16>:word16] = Mem18[0x0284<p16>:word16]
	Mem25[0x0284<p16>:word16] = v10_21
l00004868:
	v16_27 = Mem26[0x0282<p16>:word16]
	branch Mem26[v16_27:word16] == 0<16> l000048CC
l00004872:
	r11_32 = Mem26[Mem26[Mem26[v16_27 + 2<i16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l0000487E:
	branch r11_32 == 0<16> l000048D4
l00004882:
	branch Mem26[0x0208<p16>:word16] >=u Mem26[r11_32 + 8<i16>:word16] l000048D4
l0000488A:
	r10_58 = r11_32 + 8<16>
	vListRemove(r10_58)
	branch Mem26[r11_32 + 26<i16>:word16] != 0<16> l000048C0
l0000489A:
	Mem82[r11_32 + 8<i16>:word16] = 0<16>
	v25_83 = Mem82[r11_32 + 6<i16>:word16]
	branch Mem82[0x020C<p16>:word16] <u v25_83 l000048AC
l000048A8:
	Mem88[0x020C<p16>:word16] = v25_83
l000048AC:
	vListInsertEnd(r10_58, v25_83 * 0x10<16> + 0x222<16>)
	goto l00004868
l000048C0:
	vListRemove(r11_32 + 0x12<16>)
	goto l0000489A
l000048CC:
	r11_32 = 0<16>
	goto l0000487E
l000048D0:
	Mem14[0x0212<p16>:word16] = Mem8[0x0212<p16>:word16] + 1<16>
l000048D4:
	return
vTaskIncrementTick_exit:


void vTaskPlaceOnEventList(word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xQueueSend
//      xQueueReceive
// MayUse:  r14:[0..15] r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r11 sp
vTaskPlaceOnEventList_entry:
l000048DA:
	vListInsert(Mem5[0x0202<p16>:word16] + 0x12<16>, r15)
	r11_24 = r14 + Mem5[0x0208<p16>:word16]
	vListRemove(Mem5[0x0202<p16>:word16] + 8<16>)
	Mem38[Mem5[0x0202<p16>:word16] + 8<i16>:word16] = r11_24
	branch r11_24 <u Mem38[0x0208<p16>:word16] l0000491C
l0000490E:
	r14_47 = Mem38[0x0202<p16>:word16] + 8<16>
	r15_49 = Mem38[0x0284<p16>:word16]
	goto l00004928
l0000491C:
	r14_47 = Mem38[0x0202<p16>:word16] + 8<16>
	r15_49 = Mem38[0x0282<p16>:word16]
l00004928:
	vListInsert(r14_47, r15_49)
	return
vTaskPlaceOnEventList_exit:


word16 xTaskRemoveFromEventList(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xQueueSendFromISR
//      xQueueReceiveFromISR
//      prvUnlockQueue
// MayUse:  r15:[0..15]
// LiveOut: r15:[0..15]-prvUnlockQueue
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
xTaskRemoveFromEventList_entry:
l00004930:
	branch Mem8[r15:word16] == 0<16> l000049A2
l0000493A:
	r10_13 = Mem8[Mem8[Mem8[r15 + 2<i16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l00004946:
	vListRemove(r10_13 + 0x12<16>)
	branch Mem8[0x0210<p16>:word16] != 0<16> l0000499A
l00004958:
	vListRemove(r10_13 + 8<16>)
	Mem48[r10_13 + 8<i16>:word16] = 0<16>
	v14_49 = Mem48[r10_13 + 6<i16>:word16]
	branch Mem48[0x020C<p16>:word16] <u v14_49 l00004974
l00004970:
	Mem54[0x020C<p16>:word16] = v14_49
l00004974:
	r15_37 = v14_49 * 0x10<16> + 0x222<16>
	r14_36 = r10_13 + 8<16>
l00004982:
	vListInsertEnd(r14_36, r15_37)
	branch Mem73[Mem73[0x0202<p16>:word16] + 6<i16>:word16] <u Mem73[r10_13 + 6<i16>:word16] l00004996
l00004992:
	r15_112 = 1<16>
	goto l000049A6
l00004996:
	r15_112 = 0<16>
	goto l000049A6
l0000499A:
	r14_36 = r10_13 + 0x12<16>
	r15_37 = 0x286<16>
	goto l00004982
l000049A2:
	r10_13 = 0<16>
	goto l00004946
l000049A6:
	return r15_112
xTaskRemoveFromEventList_exit:


void prvIdleTask()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_entry:
l49AC:
	prvCheckTasksWaitingTermination()
	branch Mem0[0x0222<p16>:word16] >=u 2<16> l49AC
l49B6:
	vPortYield(out r5_37, out r6_38, out r7_39, out r8_40, out r9_41, out r10_42, out r11_43)
	goto l49AC
prvIdleTask_exit:


void prvInitialiseTCBVariables(word16 r12, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xTaskCreate
// MayUse:  r12:[0..15] r13:[0..15] r14:[0..15] r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
prvInitialiseTCBVariables_entry:
l000049BE:
	Mem17[r15 + 36<i16>:word16] = r14
	strncpy(8<16>, r13, r15 + 0x1C<16>)
	Mem29[r15 + 35<i16>:byte] = 0<8>
	r10_16 = r12
	branch r12 >=u 4<16> l000049E6
l000049E2:
	r10_16 = 3<16>
l000049E6:
	Mem35[r15 + 6<i16>:word16] = r10_16
	vListInitialiseItem(r15 + 8<16>)
	vListInitialiseItem(r15 + 0x12<16>)
	Mem42[r15 + 14<i16>:word16] = r15
	Mem46[r15 + 18<i16>:word16] = 4<16> - r10_16
	Mem47[r15 + 24<i16>:word16] = r15
	return
prvInitialiseTCBVariables_exit:


void prvInitialiseTaskLists()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xTaskCreate
// MayUse: 
// LiveOut:
// Trashed: VNZC r15
// Preserved: r11 sp
prvInitialiseTaskLists_entry:
l00004A12:
	r11_20 = 0<16>
l00004A16:
	vListInitialise(r11_20 * 0x10<16> + 0x222<16>)
	r11_20 = r11_20 + 1<16>
	branch r11_20 >=u 4<16> l00004A16
l00004A2E:
	vListInitialise(0x262<16>)
	vListInitialise(0x272<16>)
	vListInitialise(0x286<16>)
	vListInitialise(0x296<16>)
	Mem47[0x0282<p16>:word16] = 0x262<16>
	Mem48[0x0284<p16>:word16] = 0x272<16>
	return
prvInitialiseTaskLists_exit:


void prvCheckTasksWaitingTermination()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvIdleTask
// MayUse: 
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7
// Preserved: r11 sp
prvCheckTasksWaitingTermination_entry:
l4A5E:
	branch Mem5[0x0204<p16>:word16] == 0<16> l4ABE
l4A66:
	vTaskSuspendAll()
	r11_13 = 0<16>
	branch Mem5[0x0296<p16>:word16] != 0<16> l4A74
l4A72:
	r11_13 = 1<16>
l4A74:
	xTaskResumeAll(out r5_137, out r6_138, out r7_139, out r15_140)
	branch r11_13 != 0<16> l4ABE
l4A7C:
	__disable_interrupts()
	Mem36[0x0218<p16>:word16] = Mem5[0x0218<p16>:word16] + 1<16>
	branch Mem36[0x0296<p16>:word16] == 0<16> l4ABA
l4A88:
	r11_40 = Mem36[Mem36[Mem36[0x0298<p16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l4A94:
	vListRemove(r11_40 + 8<16>)
	Mem61[0x0206<p16>:word16] = Mem36[0x0206<p16>:word16] + 0xFFFF<16>
	Mem64[0x0204<p16>:word16] = Mem61[0x0204<p16>:word16] + 0xFFFF<16>
	branch Mem64[0x0218<p16>:word16] == 0<16> l4AB2
l4AAA:
	v19_68 = Mem64[0x0218<p16>:word16]
	Mem70[0x0218<p16>:word16] = v19_68 + 0xFFFF<16>
	branch v19_68 != 1<16> l4AB2
l4AB0:
	__enable_interrupts()
l4AB2:
	prvDeleteTCB()
	goto l4ABE
l4ABA:
	r11_40 = 0<16>
	goto l4A94
l4ABE:
	return
prvCheckTasksWaitingTermination_exit:


word16 prvAllocateTCBAndStack(word16 sr, word16 r15, word16 & r5Out, word16 & r6Out, word16 & r7Out, word16 & r15Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xTaskCreate
// MayUse:  r15:[0..15] sr:[0..15]
// LiveOut: r15:[0..15]-xTaskCreate r5:[0..15]-xTaskCreate r6:[0..15]-xTaskCreate r7:[0..15]-xTaskCreate sr:[0..15]-xTaskCreate
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 sr
// Preserved: r10 r11 sp
prvAllocateTCBAndStack_entry:
l00004AC2:
	pvPortMalloc(0x26<16>, out r5_17, out r6_18, out r7_19, out r15_15)
	r11_24 = r15_15
	branch r15_15 == 0<16> l00004AFA
l00004AD6:
	pvPortMalloc(r15 * 2<16>, out r5_17, out r6_18, out r7_19, out r15_33)
	Mem42[r15_15 + 2<i16>:word16] = r15_33
	branch r15_33 != 0<16> l00004AF0
l00004AE6:
	vPortFree()
	r11_24 = 0<16>
	goto l00004AFA
l00004AF0:
	sr = memset(sr, r15 * 2<16>, 0xA5<16>, r15_33)
l00004AFA:
	r5Out = r5_17
	r6Out = r6_18
	r7Out = r7_19
	r15Out = r11_24
	return sr
prvAllocateTCBAndStack_exit:


void prvDeleteTCB()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvCheckTasksWaitingTermination
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r11 r15 sp
prvDeleteTCB_entry:
l4B02:
	vPortFree()
	vPortFree()
	return
prvDeleteTCB_exit:


void vTaskSwitchContext()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vPortYield
//      prvTickISR
// MayUse: 
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vTaskSwitchContext_entry:
l00004B18:
	branch Mem0[0x0210<p16>:word16] != 0<16> l00004BAE
l00004B1E:
	branch Mem0[Mem0[0x020C<p16>:word16] * 0x10<16> + 546<i16>:word16] != 0<16> l00004B46
l00004B30:
	Mem19[0x020C<p16>:word16] = Mem16[0x020C<p16>:word16] + 0xFFFF<16>
	branch Mem19[Mem19[0x020C<p16>:word16] * 0x10<16> + 546<i16>:word16] == 0<16> l00004B30
l00004B46:
	Mem48[Mem30[0x020C<p16>:word16] * 0x10<16> + 0x226<16>:word16] = Mem30[Mem30[Mem30[0x020C<p16>:word16] * 0x10<16> + 0x226<16>:word16] + 2<i16>:word16]
	branch Mem48[Mem48[0x020C<p16>:word16] * 0x10<16> + 0x226<16>:word16] == Mem48[Mem48[0x020C<p16>:word16] * 0x10<16> + 0x224<16>:word16] l00004BB0
l00004B98:
	Mem97[0x0202<p16>:word16] = Mem86[Mem86[Mem86[0x020C<p16>:word16] * 0x10<16> + 550<i16>:word16] + 6<i16>:word16]
l00004BAE:
	return
l00004BB0:
	Mem85[Mem48[0x020C<p16>:word16] * 0x10<16> + 550<i16>:word16] = Mem48[Mem48[Mem48[0x020C<p16>:word16] * 0x10<16> + 550<i16>:word16] + 2<i16>:word16]
	goto l00004B98
vTaskSwitchContext_exit:


void vListInitialise(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvInitialiseTaskLists
// MayUse:  r15:[0..15]
// LiveOut:
// Trashed: VNZC r15
// Preserved: r11 sp
vListInitialise_entry:
l00004BD4:
	Mem10[r15 + 2<i16>:word16] = r15 + 6<16>
	Mem11[r15 + 4<i16>:word16] = r15 + 6<16>
	Mem12[r15 + 6<i16>:word16] = 0xFFFF<16>
	Mem13[r15 + 8<i16>:word16] = r15 + 6<16>
	Mem14[r15 + 10<i16>:word16] = r15 + 6<16>
	Mem15[r15 + 12<i16>:word16] = 0<16>
	vListInitialiseItem(r15 + 6<16>)
	Mem16[r15:word16] = 0<16>
	return
vListInitialise_exit:


void vListInitialiseItem(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvInitialiseTCBVariables
//      vListInitialise
// MayUse:  r15:[0..15]
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialiseItem_entry:
l00004C00:
	Mem4[r15 + 8<i16>:word16] = 0<16>
	return
vListInitialiseItem_exit:


void vListInsertEnd(word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xTaskCreate
//      vTaskDelete
//      xTaskResumeAll
//      vTaskIncrementTick
//      xTaskRemoveFromEventList
// MayUse:  r14:[0..15] r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: sp
vListInsertEnd_entry:
l00004C06:
	v6_6 = Mem0[r15 + 4<i16>:word16]
	Mem10[r14 + 2<i16>:word16] = Mem0[v6_6 + 2<i16>:word16]
	Mem12[r14 + 4<i16>:word16] = Mem10[r15 + 4<i16>:word16]
	Mem15[Mem12[v6_6 + 2<i16>:word16] + 4<i16>:word16] = r14
	Mem16[v6_6 + 2<i16>:word16] = r14
	Mem17[r15 + 4<i16>:word16] = r14
	Mem18[r14 + 8<i16>:word16] = r15
	Mem21[r15:word16] = Mem18[r15:word16] + 1<16>
	return
vListInsertEnd_exit:


void vListInsert(word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTaskDelayUntil
//      vTaskDelay
//      vTaskPlaceOnEventList
// MayUse:  r14:[0..15] r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: r11 sp
vListInsert_entry:
l00004C32:
	v7_9 = Mem5[r14:word16]
	branch v7_9 == 0xFFFF<16> l00004C5A
l00004C3C:
	v11_30 = Mem5[r15 + 2<i16>:word16]
	r13_14 = v11_30
	branch v7_9 >=u Mem5[Mem5[v11_30 + 2<i16>:word16]:word16] l00004C76
l00004C4A:
	v16_40 = Mem5[r13_14 + 2<i16>:word16]
	r13_14 = v16_40
	branch v7_9 <u Mem5[Mem5[v16_40 + 2<i16>:word16]:word16] l00004C4A
l00004C58:
	goto l00004C76
l00004C5A:
	v19_13 = Mem5[r15 + 2<i16>:word16]
	r13_14 = v19_13
	branch Mem5[Mem5[v19_13 + 2<i16>:word16]:word16] <u 0xFFFF<16> l00004C76
l00004C68:
	v22_22 = Mem5[r13_14 + 2<i16>:word16]
	r13_14 = v22_22
	branch Mem5[Mem5[v22_22 + 2<i16>:word16]:word16] >=u v7_9 l00004C68
l00004C76:
	Mem55[r14 + 2<i16>:word16] = Mem5[r13_14 + 2<i16>:word16]
	Mem58[Mem55[r14 + 2<i16>:word16] + 4<i16>:word16] = r14
	Mem59[r14 + 4<i16>:word16] = r13_14
	Mem60[r13_14 + 2<i16>:word16] = r14
	Mem64[r14 + 8<i16>:word16] = r15
	Mem67[r15:word16] = Mem64[r15:word16] + 1<16>
	return
vListInsert_exit:


void vListRemove(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTaskDelete
//      vTaskDelayUntil
//      vTaskDelay
//      xTaskResumeAll
//      vTaskIncrementTick
//      vTaskPlaceOnEventList
//      xTaskRemoveFromEventList
//      prvCheckTasksWaitingTermination
// MayUse:  r15:[0..15]
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vListRemove_entry:
l00004C98:
	v6_6 = Mem0[r15 + 2<i16>:word16]
	Mem9[v6_6 + 4<i16>:word16] = Mem0[r15 + 4<i16>:word16]
	v8_10 = Mem9[r15 + 4<i16>:word16]
	Mem12[v8_10 + 2<i16>:word16] = v6_6
	v10_13 = Mem12[r15 + 8<i16>:word16]
	branch Mem12[v10_13 + 4<i16>:word16] != r15 l00004CBA
l00004CB6:
	Mem18[v10_13 + 4<i16>:word16] = v8_10
l00004CBA:
	Mem20[r15 + 8<i16>:word16] = 0<16>
	Mem24[v10_13:word16] = Mem20[v10_13:word16] + 0xFFFF<16>
	return
vListRemove_exit:


word16 xQueueCreate(word16 r15, byte & r6Out, word16 & r7Out, word16 & r15Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      init_uart_isr
// MayUse:  r15:[0..15]
// LiveOut: r15:[0..15]-init_uart_isr r4:[0..15]-init_uart_isr r6:[0..7]-init_uart_isr r7:[0..15]-init_uart_isr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7
// Preserved: r10 r11 r9 sp
xQueueCreate_entry:
l00004CC4:
	branch r15 != 0<16> l00004CD6
l00004CD2:
	goto l00004D76
l00004CD6:
	r4 = pvPortMalloc(0x32<16>, out r5_82, out r6, out r7, out r15_22)
	branch r15_22 == 0<16> l00004CD2
l00004CE4:
	__disable_interrupts()
l00004D76:
	r6Out = r6
	r7Out = r7
	r15Out = 0<16>
	return r4
xQueueCreate_exit:


word16 xQueueSend(word16 sr, word16 r13, word16 r14, word16 r15, word16 & r15Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      x_putchar
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: r15:[0..15]-x_putchar sr:[0..15]-x_putchar
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
xQueueSend_entry:
l00004D7E:
	vTaskSuspendAll()
	__disable_interrupts()
	Mem24[0x0218<p16>:word16] = Mem11[0x0218<p16>:word16] + 1<16>
	Mem27[r15 + 46<i16>:word16] = Mem24[r15 + 46<i16>:word16] + 1<16>
	Mem30[r15 + 48<i16>:word16] = Mem27[r15 + 48<i16>:word16] + 1<16>
	r11_117 = r15
	r9_103 = r14
	branch Mem30[0x0218<p16>:word16] == 0<16> l00004DAA
l00004DA2:
	v16_34 = Mem30[0x0218<p16>:word16]
	Mem36[0x0218<p16>:word16] = v16_34 + 0xFFFF<16>
	branch v16_34 != 1<16> l00004DAA
l00004DA8:
	__enable_interrupts()
l00004DAA:
	branch prvIsQueueFull(r15) == 0<16> l00004DB8
l00004DB4:
	branch r13 != 0<16> l00004E26
l00004DB8:
	__disable_interrupts()
	Mem144[0x0218<p16>:word16] = Mem141[0x0218<p16>:word16] + 1<16>
	branch Mem144[r11_117 + 40<i16>:word16] >=u Mem144[r11_117 + 42<i16>:word16] l00004DF6
l00004DC6:
	r10_186 = 0xFFFD<16>
l00004DCA:
	branch Mem194[0x0218<p16>:word16] == 0<16> l00004DD8
l00004DD0:
	v22_198 = Mem194[0x0218<p16>:word16]
	Mem200[0x0218<p16>:word16] = v22_198 + 0xFFFF<16>
	branch v22_198 != 1<16> l00004DD8
l00004DD6:
	__enable_interrupts()
l00004DD8:
	branch prvUnlockQueue(r11_117) == 0<16> l00004DF0
l00004DE2:
	xTaskResumeAll(out r5_344, out r6_345, out r7_346, out r15_228)
	branch r15_228 != 0<16> l00004E7A
l00004DEA:
	vPortYield(out r5_347, out r6_348, out r7_349, out r8_350, out r9_351, out r10_186, out r11_352)
	goto l00004E7A
l00004DF0:
	xTaskResumeAll(out r5_340, out r6_341, out r7_342, out r15_343)
	goto l00004E7A
l00004DF6:
	sr = memcpy(sr, Mem144[r11_117 + 44<i16>:word16], r9_103, Mem144[r11_117 + 4<i16>:word16])
	Mem175[r11_117 + 40<i16>:word16] = Mem144[r11_117 + 40<i16>:word16] + 1<16>
	r15_179 = Mem175[r11_117 + 4<i16>:word16] + Mem175[r11_117 + 44<i16>:word16]
	Mem180[r11_117 + 4<i16>:word16] = r15_179
	branch r15_179 >=u Mem180[r11_117 + 2<i16>:word16] l00004E1E
l00004E1A:
	Mem185[r11_117 + 4<i16>:word16] = Mem180[r11_117:word16]
l00004E1E:
	Mem191[r11_117 + 48<i16>:word16] = Mem188[r11_117 + 48<i16>:word16] + 1<16>
	r10_186 = 1<16>
	goto l00004DCA
l00004E26:
	vTaskPlaceOnEventList(r13, r15 + 8<16>)
	__disable_interrupts()
	Mem67[0x0218<p16>:word16] = Mem64[0x0218<p16>:word16] + 1<16>
	prvUnlockQueue(r15)
	xTaskResumeAll(out r5_337, out r6_338, out r7_339, out r15_78)
	branch r15_78 == 0<16> l00004E74
l00004E44:
	vTaskSuspendAll()
	__disable_interrupts()
	Mem116[0x0218<p16>:word16] = Mem67[0x0218<p16>:word16] + 1<16>
	Mem120[r11_117 + 46<i16>:word16] = Mem116[r11_117 + 46<i16>:word16] + 1<16>
	Mem123[r11_117 + 48<i16>:word16] = Mem120[r11_117 + 48<i16>:word16] + 1<16>
	branch Mem123[0x0218<p16>:word16] == 0<16> l00004E64
l00004E5C:
	v38_127 = Mem123[0x0218<p16>:word16]
	Mem129[0x0218<p16>:word16] = v38_127 + 0xFFFF<16>
	branch v38_127 != 1<16> l00004E64
l00004E62:
	__enable_interrupts()
l00004E64:
	branch Mem132[0x0218<p16>:word16] == 0<16> l00004DB8
l00004E6A:
	v40_136 = Mem132[0x0218<p16>:word16]
	Mem138[0x0218<p16>:word16] = v40_136 + 0xFFFF<16>
	branch v40_136 != 1<16> l00004DB8
l00004E70:
	__enable_interrupts()
	goto l00004DB8
l00004E74:
	vPortYield(out r5_353, out r6_354, out r7_355, out r8_356, out r9_103, out r10_357, out r11_117)
	goto l00004E44
l00004E7A:
	r15Out = r10_186
	return sr
xQueueSend_exit:


word16 xQueueSendFromISR(word16 sr, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vRxISR
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: r15:[0..15]-vRxISR
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
xQueueSendFromISR_entry:
l4E84:
	branch Mem8[r15 + 40<i16>:word16] >=u Mem8[r15 + 42<i16>:word16] l4E98
l4E94:
	r13_69 = r13
	goto l4EE8
l4E98:
	memcpy(sr, Mem8[r15 + 44<i16>:word16], r14, Mem8[r15 + 4<i16>:word16])
	Mem33[r15 + 40<i16>:word16] = Mem8[r15 + 40<i16>:word16] + 1<16>
	r15_37 = Mem33[r15 + 4<i16>:word16] + Mem33[r15 + 44<i16>:word16]
	Mem38[r15 + 4<i16>:word16] = r15_37
	branch r15_37 >=u Mem38[r15 + 2<i16>:word16] l4EBE
l4EBA:
	Mem43[r15 + 4<i16>:word16] = Mem38[r15:word16]
l4EBE:
	v21_46 = Mem45[r15 + 48<i16>:word16]
	branch v21_46 == 0xFFFF<16> l4ECE
l4EC6:
	Mem72[r15 + 48<i16>:word16] = v21_46 + 1<16>
	goto l4E94
l4ECE:
	branch r13 != 0<16> l4E94
l4ED2:
	branch Mem45[r15 + 24<i16>:word16] == 0<16> l4E94
l4ED8:
	branch xTaskRemoveFromEventList(r15 + 0x18<16>) == 0<16> l4E94
l4EE6:
	r13_69 = 1<16>
l4EE8:
	return r13_69
xQueueSendFromISR_exit:


word16 xQueueReceive(word16 sr, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      x_getchar
//      x_putchar
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: r15:[0..15]-x_getchar
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8
// Preserved: r10 r11 r9 sp sr
xQueueReceive_entry:
l00004EF0:
	vTaskSuspendAll()
	__disable_interrupts()
	Mem24[0x0218<p16>:word16] = Mem11[0x0218<p16>:word16] + 1<16>
	Mem27[r15 + 46<i16>:word16] = Mem24[r15 + 46<i16>:word16] + 1<16>
	Mem30[r15 + 48<i16>:word16] = Mem27[r15 + 48<i16>:word16] + 1<16>
	r11_117 = r15
	r9_103 = r14
	branch Mem30[0x0218<p16>:word16] == 0<16> l00004F1C
l00004F14:
	v16_34 = Mem30[0x0218<p16>:word16]
	Mem36[0x0218<p16>:word16] = v16_34 + 0xFFFF<16>
	branch v16_34 != 1<16> l00004F1C
l00004F1A:
	__enable_interrupts()
l00004F1C:
	branch prvIsQueueEmpty(r15) == 0<16> l00004F2A
l00004F26:
	branch r13 != 0<16> l00004F96
l00004F2A:
	__disable_interrupts()
	Mem144[0x0218<p16>:word16] = Mem141[0x0218<p16>:word16] + 1<16>
	v18_147 = Mem144[r11_117 + 40<i16>:word16]
	branch v18_147 == 0<16> l00004F92
l00004F38:
	v19_152 = Mem144[r11_117 + 44<i16>:word16]
	r15_156 = Mem144[r11_117 + 6<i16>:word16] + v19_152
	Mem157[r11_117 + 6<i16>:word16] = r15_156
	branch r15_156 >=u Mem157[r11_117 + 2<i16>:word16] l00004F50
l00004F4C:
	Mem162[r11_117 + 6<i16>:word16] = Mem157[r11_117:word16]
l00004F50:
	Mem167[r11_117 + 40<i16>:word16] = v18_147 + 0xFFFF<16>
	memcpy(sr, v19_152, Mem167[r11_117 + 6<i16>:word16], r9_103)
	Mem193[r11_117 + 46<i16>:word16] = Mem167[r11_117 + 46<i16>:word16] + 1<16>
	r10_151 = 1<16>
l00004F66:
	branch Mem196[0x0218<p16>:word16] == 0<16> l00004F74
l00004F6C:
	v27_200 = Mem196[0x0218<p16>:word16]
	Mem202[0x0218<p16>:word16] = v27_200 + 0xFFFF<16>
	branch v27_200 != 1<16> l00004F74
l00004F72:
	__enable_interrupts()
l00004F74:
	branch prvUnlockQueue(r11_117) == 0<16> l00004F8C
l00004F7E:
	xTaskResumeAll(out r5_344, out r6_345, out r7_346, out r15_230)
	branch r15_230 != 0<16> l00004FEC
l00004F86:
	vPortYield(out r5_347, out r6_348, out r7_349, out r8_350, out r9_351, out r10_151, out r11_352)
	goto l00004FEC
l00004F8C:
	xTaskResumeAll(out r5_340, out r6_341, out r7_342, out r15_343)
	goto l00004FEC
l00004F92:
	r10_151 = 0<16>
	goto l00004F66
l00004F96:
	vTaskPlaceOnEventList(r13, r15 + 0x18<16>)
	__disable_interrupts()
	Mem67[0x0218<p16>:word16] = Mem64[0x0218<p16>:word16] + 1<16>
	prvUnlockQueue(r15)
	xTaskResumeAll(out r5_337, out r6_338, out r7_339, out r15_78)
	branch r15_78 == 0<16> l00004FE6
l00004FB6:
	vTaskSuspendAll()
	__disable_interrupts()
	Mem116[0x0218<p16>:word16] = Mem67[0x0218<p16>:word16] + 1<16>
	Mem120[r11_117 + 46<i16>:word16] = Mem116[r11_117 + 46<i16>:word16] + 1<16>
	Mem123[r11_117 + 48<i16>:word16] = Mem120[r11_117 + 48<i16>:word16] + 1<16>
	branch Mem123[0x0218<p16>:word16] == 0<16> l00004FD6
l00004FCE:
	v33_127 = Mem123[0x0218<p16>:word16]
	Mem129[0x0218<p16>:word16] = v33_127 + 0xFFFF<16>
	branch v33_127 != 1<16> l00004FD6
l00004FD4:
	__enable_interrupts()
l00004FD6:
	branch Mem132[0x0218<p16>:word16] == 0<16> l00004F2A
l00004FDC:
	v38_136 = Mem132[0x0218<p16>:word16]
	Mem138[0x0218<p16>:word16] = v38_136 + 0xFFFF<16>
	branch v38_136 != 1<16> l00004F2A
l00004FE2:
	__enable_interrupts()
	goto l00004F2A
l00004FE6:
	vPortYield(out r5_353, out r6_354, out r7_355, out r8_356, out r9_103, out r10_357, out r11_117)
	goto l00004FB6
l00004FEC:
	return r10_151
xQueueReceive_exit:


word16 xQueueReceiveFromISR(word16 sr, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTxISR
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: r15:[0..15]-vTxISR
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
xQueueReceiveFromISR_entry:
l00004FF6:
	v10_15 = Mem8[r15 + 40<i16>:word16]
	branch v10_15 == 0<16> l00005060
l00005008:
	v13_20 = Mem8[r15 + 44<i16>:word16]
	r15_24 = Mem8[r15 + 6<i16>:word16] + v13_20
	Mem25[r15 + 6<i16>:word16] = r15_24
	branch r15_24 >=u Mem25[r15 + 2<i16>:word16] l00005020
l0000501C:
	Mem30[r15 + 6<i16>:word16] = Mem25[r15:word16]
l00005020:
	Mem35[r15 + 40<i16>:word16] = v10_15 + 0xFFFF<16>
	memcpy(sr, v13_20, Mem35[r15 + 6<i16>:word16], r14)
	v21_51 = Mem35[r15 + 46<i16>:word16]
	branch v21_51 == 0xFFFF<16> l00005042
l00005038:
	Mem78[r15 + 46<i16>:word16] = v21_51 + 1<16>
l0000503E:
	r15_119 = 1<16>
	goto l00005062
l00005042:
	branch Mem35[r13:word16] != 0<16> l0000503E
l00005048:
	branch Mem35[r15 + 8<i16>:word16] == 0<16> l0000503E
l0000504E:
	branch xTaskRemoveFromEventList(r15 + 8<16>) == 0<16> l0000503E
l0000505A:
	Mem75[r13:word16] = 1<16>
	goto l0000503E
l00005060:
	r15_119 = 0<16>
l00005062:
	return r15_119
xQueueReceiveFromISR_exit:


void uxQueueMessagesWaiting()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: VNZC r15
// Preserved: sp
uxQueueMessagesWaiting_entry:
l5068:
	__disable_interrupts()
	v4_4 = Mem0[0x0218<p16>:word16]
	Mem6[0x0218<p16>:word16] = v4_4 + 1<16>
	branch v4_4 == 0xFFFF<16> l507C
l5074:
	v9_12 = Mem6[0x0218<p16>:word16]
	Mem14[0x0218<p16>:word16] = v9_12 + 0xFFFF<16>
	branch v9_12 != 1<16> l507C
l507A:
	__enable_interrupts()
l507C:
	return
uxQueueMessagesWaiting_exit:


void vQueueDelete()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r11 r15 sp
vQueueDelete_entry:
l507E:
	vPortFree()
	vPortFree()
	return
vQueueDelete_exit:


word16 prvUnlockQueue(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xQueueSend
//      xQueueReceive
// MayUse:  r15:[0..15]
// LiveOut: r15:[0..15]-xQueueSend
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
prvUnlockQueue_entry:
l00005092:
	__disable_interrupts()
	Mem14[0x0218<p16>:word16] = Mem8[0x0218<p16>:word16] + 1<16>
	v9_15 = Mem14[r15 + 48<i16>:word16]
	Mem17[r15 + 48<i16>:word16] = v9_15 + 0xFFFF<16>
	r10_11 = 0<16>
	branch v9_15 < 1<16> l000050B0
l000050A6:
	Mem20[r15 + 48<i16>:word16] = 0xFFFF<16>
	branch Mem20[r15 + 24<i16>:word16] != 0<16> l000050F4
l000050B0:
	branch Mem37[0x0218<p16>:word16] == 0<16> l000050BE
l000050B6:
	v14_41 = Mem37[0x0218<p16>:word16]
	Mem43[0x0218<p16>:word16] = v14_41 + 0xFFFF<16>
	branch v14_41 != 1<16> l000050BE
l000050BC:
	__enable_interrupts()
l000050BE:
	__disable_interrupts()
	Mem49[0x0218<p16>:word16] = Mem46[0x0218<p16>:word16] + 1<16>
	v16_52 = Mem49[r15 + 46<i16>:word16]
	Mem54[r15 + 46<i16>:word16] = v16_52 + 0xFFFF<16>
	branch v16_52 < 1<16> l000050D4
l000050CA:
	Mem57[r15 + 46<i16>:word16] = 0xFFFF<16>
	branch Mem57[r15 + 8<i16>:word16] != 0<16> l000050E4
l000050D4:
	branch Mem75[0x0218<p16>:word16] == 0<16> l00005104
l000050DA:
	v19_79 = Mem75[0x0218<p16>:word16]
	Mem81[0x0218<p16>:word16] = v19_79 + 0xFFFF<16>
	branch v19_79 != 1<16> l00005104
l000050E0:
	__enable_interrupts()
	goto l00005104
l000050E4:
	branch xTaskRemoveFromEventList(r15 + 8<16>) == 0<16> l000050D4
l000050F0:
	r10_11 = 1<16>
	goto l000050D4
l000050F4:
	branch xTaskRemoveFromEventList(r15 + 0x18<16>) == 0<16> l000050B0
l00005100:
	r10_11 = 1<16>
	goto l000050B0
l00005104:
	return r10_11
prvUnlockQueue_exit:


word16 prvIsQueueEmpty(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xQueueReceive
// MayUse:  r15:[0..15]
// LiveOut: r15:[0..15]-xQueueReceive
// Trashed: VNZC r14 r15
// Preserved: sp
prvIsQueueEmpty_entry:
l0000510C:
	__disable_interrupts()
	Mem6[0x0218<p16>:word16] = Mem0[0x0218<p16>:word16] + 1<16>
	r14_12 = 0<16>
	branch Mem6[r15 + 40<i16>:word16] != 0<16> l0000511C
l0000511A:
	r14_12 = 1<16>
l0000511C:
	branch Mem6[0x0218<p16>:word16] == 0<16> l0000512A
l00005122:
	v11_17 = Mem6[0x0218<p16>:word16]
	Mem19[0x0218<p16>:word16] = v11_17 + 0xFFFF<16>
	branch v11_17 != 1<16> l0000512A
l00005128:
	__enable_interrupts()
l0000512A:
	return r14_12
prvIsQueueEmpty_exit:


word16 prvIsQueueFull(word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xQueueSend
// MayUse:  r15:[0..15]
// LiveOut: r15:[0..15]-xQueueSend
// Trashed: VNZC r14 r15
// Preserved: sp
prvIsQueueFull_entry:
l0000512E:
	__disable_interrupts()
	Mem6[0x0218<p16>:word16] = Mem0[0x0218<p16>:word16] + 1<16>
	r14_13 = 0<16>
	branch Mem6[r15 + 40<i16>:word16] == Mem6[r15 + 42<i16>:word16] l0000514E
l0000513E:
	branch Mem6[0x0218<p16>:word16] == 0<16> l00005152
l00005144:
	v12_18 = Mem6[0x0218<p16>:word16]
	Mem20[0x0218<p16>:word16] = v12_18 + 0xFFFF<16>
	branch v12_18 != 1<16> l00005152
l0000514A:
	__enable_interrupts()
	goto l00005152
l0000514E:
	r14_13 = 1<16>
	goto l0000513E
l00005152:
	return r14_13
prvIsQueueFull_exit:


word16 pvPortMalloc(word16 r15, word16 & r5Out, word16 & r6Out, word16 & r7Out, word16 & r15Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvAllocateTCBAndStack
//      xQueueCreate
// MayUse:  r15:[0..15]
// LiveOut: r15:[0..15]-xQueueCreate r4:[0..15]-xQueueCreate r5:[0..15]-prvAllocateTCBAndStack r6:[0..15]-xQueueCreate r7:[0..15]-xQueueCreate
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7
// Preserved: r10 r11 sp
pvPortMalloc_entry:
l00005156:
	r11_10 = r15
	r10_11 = 0<16>
	branch (r15 & 1<16>) == 0<16> l00005166
l00005162:
	r11_10 = r15 - (r15 & 1<16>) + 2<16>
l00005166:
	vTaskSuspendAll()
	v11_24 = Mem8[0x0216<p16>:word16]
	r15_28 = v11_24 + r11_10
	branch r15_28 <u 0x708<16> l00005186
l00005178:
	branch v11_24 <u r15_28 l00005186
l0000517C:
	Mem36[0x0216<p16>:word16] = r15_28
	r10_11 = v11_24 + 0x2AA<16>
l00005186:
	r4_41 = xTaskResumeAll(out r5_42, out r6_43, out r7_44, out r15_71)
	r5Out = r5_42
	r6Out = r6_43
	r7Out = r7_44
	r15Out = r10_11
	return r4_41
pvPortMalloc_exit:


void vPortFree()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvAllocateTCBAndStack
//      prvDeleteTCB
//      vQueueDelete
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortFree_entry:
l00005192:
	return
vPortFree_exit:


void vPortInitialiseBlocks()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortInitialiseBlocks_entry:
l5194:
	Mem3[0x0216<p16>:word16] = 0<16>
	return
vPortInitialiseBlocks_exit:


word16 pxPortInitialiseStack(word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xTaskCreate
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15]
// LiveOut: r15:[0..15]-xTaskCreate
// Trashed: VNZC r15
// Preserved: sp
pxPortInitialiseStack_entry:
l0000519A:
	Mem5[r15:word16] = r14
	Mem7[r15 - 2<16>:word16] = 8<16>
	Mem9[r15 - 4<16>:word16] = 0x4444<16>
	Mem11[r15 - 6<16>:word16] = 0x5555<16>
	Mem13[r15 - 8<16>:word16] = 0x6666<16>
	Mem15[r15 - 0xA<16>:word16] = 0x7777<16>
	Mem17[r15 - 0xC<16>:word16] = 0x8888<16>
	Mem19[r15 - 0xE<16>:word16] = 0x9999<16>
	Mem21[r15 - 0x10<16>:word16] = 0xAAAA<16>
	Mem23[r15 - 0x12<16>:word16] = 0xBBBB<16>
	Mem25[r15 - 0x14<16>:word16] = 0xCCCC<16>
	Mem27[r15 - 0x16<16>:word16] = 0xDDDD<16>
	Mem29[r15 - 0x18<16>:word16] = 0xEEEE<16>
	Mem32[r15 - 0x1A<16>:word16] = r13
	Mem35[r15 - 0x1C<16>:word16] = 0<16>
	return r15 - 0x1C<16>
pxPortInitialiseStack_exit:


void xPortStartScheduler()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTaskStartScheduler
// MayUse: 
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
xPortStartScheduler_entry:
l0000520A:
	prvSetupTimerInterrupt()
	Mem11[0x00000218<p32>:word16] = Mem0[Mem0[Mem0[0x00000202<p32>:word16]:word16]:word16]
	return
xPortStartScheduler_exit:


void vPortEndScheduler()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vTaskEndScheduler
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortEndScheduler_entry:
l5238:
	return
vPortEndScheduler_exit:


word16 vPortYield(word16 & r5Out, word16 & r6Out, word16 & r7Out, word16 & r8Out, word16 & r9Out, word16 & r10Out, word16 & r11Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vRxISR
//      xTaskCreate
//      vTaskDelete
//      vTaskDelayUntil
//      vTaskDelay
//      xTaskResumeAll
//      prvIdleTask
//      xQueueSend
//      xQueueReceive
// MayUse: 
// LiveOut: r10:[0..15]-xTaskCreate r11:[0..15]-xQueueSend r4:[0..15]-xTaskResumeAll r5:[0..15]-xTaskResumeAll r6:[0..15]-xTaskResumeAll r7:[0..15]-xTaskResumeAll r8:[0..15]-xTaskResumeAll r9:[0..15]-xQueueSend
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
vPortYield_entry:
l0000523A:
	__disable_interrupts()
	Mem48[Mem45[0x00000202<p32>:word16]:word16] = fp - 28<i32>
	vTaskSwitchContext()
	v21_58 = Mem48[Mem48[0x00000202<p32>:word16]:word16]
	Mem63[0x00000218<p32>:word16] = Mem48[v21_58:word16]
	v27_76 = Mem63[v21_58 + 10<i16>:word16]
	v28_79 = Mem63[v21_58 + 12<i16>:word16]
	v29_82 = Mem63[v21_58 + 14<i16>:word16]
	v30_85 = Mem63[v21_58 + 16<i16>:word16]
	v31_88 = Mem63[v21_58 + 18<i16>:word16]
	v32_91 = Mem63[v21_58 + 20<i16>:word16]
	v34_97 = Mem63[v21_58 + 24<i16>:word16]
	r5Out = Mem63[v21_58 + 22<i16>:word16]
	r6Out = v32_91
	r7Out = v31_88
	r8Out = v30_85
	r9Out = v29_82
	r10Out = v28_79
	r11Out = v27_76
	return v34_97
vPortYield_exit:


void prvSetupTimerInterrupt()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xPortStartScheduler
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
prvSetupTimerInterrupt_entry:
l0000528E:
	Mem3[0x0160<p16>:word16] = 0<16>
	Mem4[0x0160<p16>:word16] = 0x100<16>
	Mem7[0x0160<p16>:word16] = Mem4[0x0160<p16>:word16] | 4<16>
	Mem8[0x0172<p16>:word16] = 0x20<16>
	Mem9[0x0162<p16>:word16] = 0x10<16>
	Mem12[0x0160<p16>:word16] = Mem9[0x0160<p16>:word16] | 4<16>
	Mem15[0x0160<p16>:word16] = Mem12[0x0160<p16>:word16] | 0x10<16>
	return
prvSetupTimerInterrupt_exit:


void prvTickISR()
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
prvTickISR_entry:
l52B4:
	Mem45[Mem42[0x0202<p16>:word16]:word16] = fp - 26<i32>
	vTaskIncrementTick()
	vTaskSwitchContext()
	Mem68[0x0218<p16>:word16] = Mem45[Mem45[Mem45[0x0202<p16>:word16]:word16]:word16]
	return
prvTickISR_exit:


void printf(word16 r8, word16 wArg02)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004000
//      task_idle
// MayUse:  r8:[0..15] Stack +0002:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: sp
printf_entry:
l00005308:
	vuprintf(r8, fp + 4<16>, wArg02, 0x43A2<16>)
	return
printf_exit:


word16 PRINT(word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vuprintf
// MayUse:  r14:[0..15] r15:[0..15]
// LiveOut: r15:[0..15]-vuprintf
// Trashed: VNZC r14 r15
// Preserved: r10 r11 sp
PRINT_entry:
l0000531A:
	r10_10 = r15
	r11_12 = r14
	branch r14 != 0<16> l0000532A
l00005326:
	r15_36 = 1<16>
	goto l00005344
l0000532A:
	call Mem16[0x09B2<p16>:word16] (retsize: 2;)
		uses: Mem:Mem16,r10:r10_15 + 1<16>,r11:r11_25,r14:r14_26,r15:CONVERT(Mem16[r10_15:byte], byte, word16)
		defs: r10:r10_30,r11:r11_29,r14:r14_32,r15:r15_31
	branch r15_31 < 0<16> l00005342
l00005338:
	Mem39[0x021A<p16>:word16] = Mem16[0x021A<p16>:word16] + 1<16>
	r11_12 = r11_29 + 0xFFFF<16>
	branch r11_29 != 1<16> l0000532A
l00005340:
	goto l00005326
l00005342:
	r15_36 = 0xFFFF<16>
l00005344:
	return r15_36
PRINT_exit:


word16 __write_pad(word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vuprintf
// MayUse:  r14:[0..15] r15:[0..15]
// LiveOut: r15:[0..15]-vuprintf
// Trashed: VNZC r14 r15
// Preserved: r10 r11 r9 sp
__write_pad_entry:
l0000534A:
	r9_13 = r15
	r11_15 = r14
	branch r14 < 1<8> l00005370
l00005358:
	r10_20 = CONVERT(SLICE(r15, byte, 0), byte, word16)
l0000535C:
	call Mem25[0x09B2<p16>:word16] (retsize: 2;)
		uses: Mem:Mem25,r10:r10_23,r11:r11_27,r14:r14_29,r15:r10_23,r9:r9_28
		defs: r10:r10_33,r11:r11_32,r14:r14_36,r15:r15_35,r9:r9_34
	branch r15_35 < 0<16> l00005374
l00005366:
	Mem43[0x021A<p16>:word16] = Mem25[0x021A<p16>:word16] + 1<16>
	r11_15 = CONVERT(SLICE(r11_32, byte, 0) + 0xFF<8>, byte, word16)
	branch r11_15 >= 1<8> l0000535C
l00005370:
	r15_40 = r9_13
	goto l00005376
l00005374:
	r15_40 = 0xFFFF<16>
l00005376:
	return r15_40
__write_pad_exit:


void vuprintf(word16 r8, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      printf
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] r8:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 r4 r5 r6 r7 r8 r9 sp
vuprintf_entry:
l0000537E:
	Mem33[0x021A<p16>:word16] = 0<16>
	Mem35[0x09B2<p16>:word16] = r15
	r5_1002 = r13
	r6_1046 = r14
	dwLoc1C_2132 = 0<32> (alias)
	goto l53A6
l000053AE:
	r6_48 = r6_1046
	r6_48 = r6_1046
	branch v17_42 == 0x25<16> l000053C2
l000053B4:
	r6_48 = r6_48 + 1<16>
	v20_52 = CONVERT(Mem40[r6_48:byte], byte, word16)
	r7_43 = v20_52
	branch v20_52 == 0<8> l000053C2
l000053BC:
	branch v20_52 != 0x25<16> l000053B4
l000053C2:
	r13_62 = r6_48 - r6_1046
	branch r13_62 == 0<16> l000053CC
l000053C8:
	goto l5916
l000053CC:
	branch r7_43 != 0<8> l000053D4
l000053D0:
	goto l5924
l000053D4:
	r6_1046 = r6_48 + 1<16>
	bLoc1E_1062 = 0<8>
	bLoc17_1063 = 0<8>
	bLoc1D_1064 = 0<8>
	r11_1015 = 0xFF<16>
	bLoc24_1065 = 0<8>
	dwLoc1C_2124 = dwLoc1C_2132 (alias)
	goto l53E8
l000053F2:
	goto l58F0
l000053F6:
	branch (r7_264 | 0x20<16>) != 0x78<16> l5406
l00005402:
	goto l58F0
l53A6:
	v17_42 = CONVERT(Mem40[r6_1046:byte], byte, word16)
	r7_43 = v17_42
	r6_48 = r6_1046
	branch v17_42 == 0<8> l000053C2
	goto l000053AE
l53E8:
	r7_264 = CONVERT(Mem92[r6_1046:byte], byte, word16)
	r6_1046 = r6_1046 + 1<16>
l53EC:
	branch r7_264 != 0x75<16> l000053F6
	goto l000053F2
l5406:
	wLoc1A_1119 = SLICE(dwLoc1C_2124, word16, 16) (alias)
	wLoc1C_1116 = SLICE(dwLoc1C_2124, word16, 0) (alias)
	branch r7_264 != 0x20<16> l5410
l540C:
	goto l58DC
l5410:
	branch r7_264 != 0x23<16> l541A
l5416:
	goto l58D4
l541A:
	branch r7_264 != 0x2A<16> l5424
l5420:
	goto l58B8
l5424:
	branch r7_264 != 0x2D<16> l542E
l542A:
	goto l58A8
l542E:
	branch r7_264 != 0x2B<16> l5438
l5434:
	goto l589E
l5438:
	branch r7_264 != 0x2E<16> l5442
l543E:
	goto l5838
l5442:
	branch r7_264 != 0x30<16> l544C
l5448:
	goto l5822
l544C:
	branch r7_264 <u 0x3A<16> l548C
l5458:
	r13_776 = 0<16>
l545A:
	r14_782 = r13_776 * 2<16>
	r13_791 = r13_776 * 4<16> + r14_782 + r14_782 * 2<16> + CONVERT(SLICE(r7_264, byte, 0), byte, word16)
	v64_796 = CONVERT(Mem155[r6_1046:byte], byte, word16)
	r13_776 = r13_791 + 0xFFD0<16>
	r7_264 = v64_796
	r6_1046 = r6_1046 + 1<16>
	branch v64_796 >=u 0x3A<16> l545A
l5486:
	bLoc1D_1064 = SLICE(r13_791, byte, 0) + 0xD0<8>
	goto l53EC
l548C:
	branch r7_264 == 0x68<16> l581A
l5492:
	branch r7_264 != 0x6C<16> l549E
l5498:
	bLoc1E_1062 = bLoc1E_1062 | 1<8>
	goto l53E8
l549E:
	branch r7_264 == 0x63<16> l580C
l54A4:
	branch r7_264 == 0x44<16> l5806
l54AA:
	branch r7_264 == 0x64<16> l57AE
l54B0:
	branch r7_264 == 0x69<16> l57AE
l54B6:
	branch r7_264 == 0x4F<16> l57A8
l54BC:
	branch r7_264 == 0x6F<16> l57A2
l54C2:
	branch r7_264 == 0x70<16> l5784
l54C8:
	branch r7_264 == 0x73<16> l570C
l54CE:
	branch r7_264 == 0x55<16> l5706
l54D4:
	branch r7_264 == 0x75<16> l56FE
l54DA:
	branch r7_264 == 0x58<16> l55FE
l54E0:
	branch r7_264 == 0x78<16> l55FE
l54E6:
	branch r7_264 != 0<8> l54EE
l54EA:
	goto l5924
l54EE:
l54F6:
	wLoc20_1297 = fp - 0x4C<16>
	r9_311 = 1<16>
l54F8:
	bLoc24_1065 = 0<8>
l54FC:
	r11_543 = r9_311
	r10_549 = CONVERT(bLoc17_1063, byte, word16) - r9_311
	branch r10_549 < 0<16> l55FA
l5506:
	v77_557 = CONVERT(bLoc24_1065, byte, word16)
	r14_558 = v77_557
	branch v77_557 == 0<8> l55EE
l550E:
	r11_543 = CONVERT(SLICE(r9_311, byte, 0) + 1<8>, byte, word16)
l5510:
	v81_584 = CONVERT(bLoc1E_1062, byte, word16)
	r11_580 = r11_543 + r10_549
	r8 = v81_584 & 0x30<16>
	branch (v81_584 & 0x30<16>) != 0<16> l5542
l551C:
	r13_598 = CONVERT(bLoc1D_1064 - SLICE(r11_580, byte, 0), byte, word16)
	branch r13_598 < 1<16> l5542
l552C:
	branch __write_pad(r13_598, 0x20<16>) >= 0<16> l553E
l553A:
	goto l5924
l553E:
	r14_558 = CONVERT(bLoc24_1065, byte, word16)
l5542:
	branch r14_558 != 0<8> l55E4
l5546:
	branch (CONVERT(bLoc1E_1062, byte, word16) & 0x40<16>) == 0<16> l5576
l554E:
	r14_618 = 2<16>
	r15_621 = fp - 0x22<16>
l556A:
	branch PRINT(r14_618, r15_621) >= 0<16> l5576
l5572:
	goto l5924
l5576:
	branch (v81_584 & 0x30<16>) == 0x20<16> l55C4
l557C:
	branch __write_pad(r10_549, 0x30<16>) < 0<16> l5924
l558A:
	branch PRINT(CONVERT(SLICE(r9_311, byte, 0), byte, word16), wLoc20_1297) < 0<16> l5924
l559C:
	dwLoc1C_2132 = dwLoc1C_2124 (alias)
	branch (CONVERT(bLoc1E_1062, byte, word16) & 0x10<16>) == 0<16> l53A6
l55A4:
	r13_760 = CONVERT(bLoc1D_1064 - SLICE(r11_580, byte, 0), byte, word16)
	dwLoc1C_2132 = dwLoc1C_2124 (alias)
	branch r13_760 < 1<16> l53A6
l55B4:
	dwLoc1C_2132 = dwLoc1C_2124 (alias)
	branch __write_pad(r13_760, 0x20<16>) >= 0<16> l53A6
l55C2:
	goto l5924
l55C4:
	r13_693 = CONVERT(bLoc1D_1064 - SLICE(r11_580, byte, 0), byte, word16)
	branch r13_693 < 1<16> l557C
l55D4:
	branch __write_pad(r13_693, 0x30<16>) >= 0<16> l557C
l55E2:
	goto l5924
l55E4:
	r14_618 = 1<16>
	r15_621 = fp - 0x24<16>
	goto l556A
l55EE:
	branch (CONVERT(bLoc1E_1062, byte, word16) & 0x40<16>) == 0<16> l5510
l55F6:
	r11_543 = CONVERT(SLICE(r9_311, byte, 0) + 2<8>, byte, word16)
	goto l5510
l55FA:
	r10_549 = 0<16>
	goto l5506
l55FE:
	bLoc18_1092 = 0x10<8>
	dwLoc1C_2115 = dwLoc1C_2124 (alias)
	branch (bLoc1E_1062 & 8<8>) == 0<8> l561C
l560A:
	branch wLoc1C_1116 != 0<16> l5616
l5610:
	dwLoc1C_2115 = dwLoc1C_2124 (alias)
	branch wLoc1A_1119 == 0<16> l561C
l5616:
	bLoc1E_1062 = bLoc1E_1062 | 0x40<16>
	dwLoc1C_2115 = dwLoc1C_2124 (alias)
l561C:
	bLoc24_1065 = 0<8>
	dwLoc1C_2112 = dwLoc1C_2115 (alias)
l5620:
	v95_386 = SLICE(r11_1015, byte, 0)
	wLoc1A_1141 = SLICE(dwLoc1C_2112, word16, 16) (alias)
	wLoc1C_1134 = SLICE(dwLoc1C_2112, word16, 0) (alias)
	bLoc17_1063 = v95_386
	branch r11_1015 < 0<8> l562E
l5628:
	bLoc1E_1062 = bLoc1E_1062 & 0xFFDF<16>
l562E:
	bLoc20_1188 = SLICE(fp, byte, 0) - 0x24<8> (alias)
	bLoc1F_1299 = SLICE(fp - 0x24<16>, byte, 8) (alias)
	branch wLoc1C_1134 != 0<16> l564A
l563E:
	branch wLoc1A_1141 != 0<16> l564A
l5644:
	wLoc20_1168 = SEQ(bLoc1F_1299, bLoc20_1188) (alias)
	branch v95_386 == 0<8> l56C6
l564A:
	wLoc20_1168 = fp - 0x24<16>
	wLoc14_1717 = CONVERT(bLoc18_1092, uint8, uint16) (alias)
	dwLoc1C_2106 = dwLoc1C_2112 (alias)
l5658:
	wLoc1A_1158 = SLICE(dwLoc1C_2106, word16, 16) (alias)
	wLoc1C_1157 = SLICE(dwLoc1C_2106, word16, 0) (alias)
	bLoc16_1156 = 0<8>
	branch SLICE(dwLoc1C_2106 - CONVERT(wLoc14_1717, uint16, uint32), word16, 16) >=u 0<16> l5672
l566E:
	bLoc16_1156 = 1<8>
l5672:
	fn00005B4E(CONVERT(wLoc14_1717, uint16, uint32), r8, wLoc1C_1157, wLoc1A_1158, out r13_r12_2144, out r15_r14_2145, out r8_447)
	r14_445 = SLICE(r15_r14_2145, word16, 0) (alias)
	branch r14_445 <u 0xA<16> l56EE
l568E:
	r4_456 = r14_445 + 0x30<16>
l5692:
	wLoc20_1168 = wLoc20_2148 + 0xFFFF<16>
	Mem476[wLoc20_1168:byte] = SLICE(r4_456, byte, 0)
	fn00005B4E(CONVERT(wLoc14_1717, uint16, uint32), r8_447, wLoc1C_1157, wLoc1A_1158, out r13_r12_2146, out r15_r14_2147, out r8)
	dwLoc1C_2106 = r13_r12_2146 (alias)
	wLoc20_2148 = wLoc20_1168
	branch bLoc16_1156 != 0<8> l5658
l56C0:
	dwLoc1C_2112 = r13_r12_2146 (alias)
	branch bLoc18_1092 == 8<8> l56D2
l56C6:
	r9_311 = CONVERT(SLICE(fp, byte, 0) - 0x4C<8> - SLICE(wLoc20_1168, byte, 0), byte, word16) + 0x28<16>
	wLoc20_1297 = wLoc20_1168 (alias)
	dwLoc1C_2124 = dwLoc1C_2112 (alias)
	goto l54FC
l56D2:
	dwLoc1C_2112 = r13_r12_2146 (alias)
	branch (bLoc1E_1062 & 8<8>) == 0<8> l56C6
l56D8:
	dwLoc1C_2112 = r13_r12_2146 (alias)
	branch r4_456 == 0x30<16> l56C6
l56DE:
	Mem520[wLoc20_2148 + 0xFFFE<16>:byte] = 0x30<8>
	wLoc20_1168 = SEQ(SLICE(wLoc20_2148 + 0xFFFE<16>, byte, 8), SLICE(wLoc20_2148, byte, 0) + 0xFE<8>) (alias)
	dwLoc1C_2112 = r13_r12_2146 (alias)
	goto l56C6
l56EE:
	r4_456 = r14_445 + 0x57<16>
	branch r7_264 != 0x58<16> l5692
l56F8:
	r4_456 = r14_445 + 0x57<16> & 0xFFDF<16>
	goto l5692
l56FE:
	bLoc18_1092 = 0xA<8>
	dwLoc1C_2115 = dwLoc1C_2124 (alias)
	goto l561C
l5706:
	bLoc1E_1062 = bLoc1E_1062 | 1<8>
	goto l56FE
l570C:
	v152_269 = Mem155[r5_1002:word16]
	r5_1002 = r5_1002 + 2<16>
	wLoc20_1099 = v152_269
	branch v152_269 == 0<16> l5756
l571A:
	bLoc20_1110 = SLICE(wLoc20_1099, byte, 0) (alias)
	branch r11_1015 < 0<8> l5740
l571E:
	r15_323 = memchr(CONVERT(SLICE(r11_1015, byte, 0), byte, word16), 0<16>, wLoc20_1099)
	branch r15_323 == 0<16> l573C
l5732:
	r9_311 = CONVERT(SLICE(r15_323, byte, 0) - bLoc20_1110, byte, word16)
	wLoc20_1297 = wLoc20_1099 (alias)
	branch r11_1015 >= r9_311 l54F8
l573C:
	wLoc20_1297 = wLoc20_1099
	r9_311 = r11_1015
	goto l54F8
l5740:
	r15_298 = wLoc20_1099 - 1<16>
l5746:
	r15_298 = r15_298 + 1<16>
	branch Mem295[r15_298:byte] != 0<8> l5746
l574E:
	r9_311 = CONVERT(SLICE(r15_298, byte, 0) - bLoc20_1110, byte, word16)
	goto l54F8
l5756:
	wLoc20_1099 = fp - 0x4C<16>
	goto l571A
l5784:
	r5_1002 = r5_1002 + 2<16>
	bLoc18_1092 = 0x10<8>
	bLoc1E_1062 = bLoc1E_1062 | 0x40<16>
	r7_264 = 0x78<16>
	dwLoc1C_2115 = CONVERT(Mem155[r5_1002:word16], uint16, uint32) (alias)
	goto l561C
l57A2:
	bLoc18_1092 = 8<8>
	dwLoc1C_2115 = dwLoc1C_2124 (alias)
	goto l561C
l57A8:
	bLoc1E_1062 = bLoc1E_1062 | 1<8>
	goto l57A2
l57AE:
	branch (bLoc1E_1062 & 1<8>) == 0<8> l57E6
l57B4:
	r5_1002 = r5_1002 + 4<16>
	dwLoc1C_2109 = Mem213[r5_1002:word32] (alias)
l57C0:
	wLoc1C_1086 = SLICE(dwLoc1C_2109, word16, 0) (alias)
	branch SLICE(dwLoc1C_2109, word16, 16) < 0<16> l57CE
l57C6:
	bLoc18_1092 = 0xA<8>
	dwLoc1C_2112 = dwLoc1C_2109 (alias)
	goto l5620
l57CE:
	bLoc24_1065 = 0x2D<8>
	dwLoc1C_2109 = SEQ(SLICE(-dwLoc1C_2109, word16, 16), -wLoc1C_1086) (alias)
	goto l57C6
l57E6:
	v185_190 = Mem180[r5_1002:word16]
	r5_1002 = r5_1002 + 2<16>
	dwLoc1C_2109 = SEQ(CONVERT(v185_190 * 2<16> <u 0<16>, bool, word16) - 1<i16>, v185_190) (alias)
	goto l57C0
l5806:
	bLoc1E_1062 = bLoc1E_1062 | 1<8>
	goto l57AE
l580C:
	r5_1002 = r5_1002 + 2<16>
	goto l54F6
l581A:
	bLoc1E_1062 = bLoc1E_1062 | 4<8>
	goto l53E8
l5822:
	branch (CONVERT(bLoc1E_1062, byte, word16) & 0x10<16>) == 0<16> l582E
l582A:
	goto l53E8
l582E:
	bLoc1E_1062 = bLoc1E_1062 | 0x20<16>
	goto l53E8
l5838:
	v54_820 = CONVERT(Mem155[r6_1046:byte], byte, word16)
	r7_264 = v54_820
	r6_1046 = r6_1046 + 1<16>
	branch v54_820 == 0x2A<16> l588A
l5842:
	r13_835 = 0<16>
	branch v54_820 <u 0x3A<16> l587C
l5850:
	r14_845 = r13_835 * 2<16>
	v57_859 = CONVERT(Mem155[r6_1046:byte], byte, word16)
	r13_835 = r13_835 * 4<16> + r14_845 + r14_845 * 2<16> + CONVERT(SLICE(r7_264, byte, 0), byte, word16) + 0xFFD0<16>
	r7_264 = v57_859
	r6_1046 = r6_1046 + 1<16>
	branch v57_859 >=u 0x3A<16> l5850
l587C:
	r15_867 = r13_835
	branch r13_835 >= 0xFFFF<16> l5884
l5882:
	r15_867 = 0xFFFF<16>
l5884:
	r11_1015 = r15_867
	goto l53EC
l588A:
	v58_827 = Mem155[r5_1002:word16]
	r5_1002 = r5_1002 + 2<16>
	r15_829 = v58_827
	branch v58_827 >= 0xFFFF<16> l5898
l5896:
	r15_829 = 0xFFFF<16>
l5898:
	r11_1015 = r15_829
	goto l53E8
l589E:
	bLoc24_1065 = 0x2B<8>
	goto l53E8
l58A8:
	bLoc1E_1062 = (bLoc1E_1062 | 0x10<16>) & 0xFFDF<16>
	goto l53E8
l58B8:
	v45_877 = Mem155[r5_1002:byte]
	r5_1002 = r5_1002 + 2<16>
	bLoc1D_1064 = v45_877
	branch v45_877 < 0<8> l58CA
l58C6:
	goto l53E8
l58CA:
	bLoc1D_1064 = -v45_877
	goto l58A8
l58D4:
	bLoc1E_1062 = bLoc1E_1062 | 8<8>
	goto l53E8
l58DC:
	branch bLoc24_1065 == 0<8> l58E6
l58E2:
	goto l53E8
l58E6:
	bLoc24_1065 = 0x20<8>
	goto l53E8
l58F0:
	branch (bLoc1E_1062 & 1<8>) == 0<8> l5906
l58F6:
	r5_1002 = r5_1002 + 4<16>
	dwLoc1C_2124 = Mem128[r5_1002:word32] (alias)
	goto l5406
l5906:
	r5_1002 = r5_1002 + 2<16>
	dwLoc1C_2124 = CONVERT(Mem108[r5_1002:word16], uint16, uint32) (alias)
	goto l5406
l5916:
	branch PRINT(r13_62, r6_1046) < 0<16> l5924
l5920:
	goto l000053CC
l5924:
	return
vuprintf_exit:


word16 memchr(word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vuprintf
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15]
// LiveOut: r15:[0..15]-vuprintf
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r11 sp
memchr_entry:
l0000593E:
	branch r13 == 0<16> l00005956
l00005948:
	r14_13 = r15
l0000594A:
	r14_13 = r14_13 + 1<16>
	branch CONVERT(Mem5[r14_13:byte], byte, word16) == r14 l0000595A
l00005952:
	r13 = r13 + 0xFFFF<16>
	branch r13 != 0<16> l0000594A
l00005956:
	r15_24 = 0<16>
	goto l0000595E
l0000595A:
	r15_24 = r14_13 + 0xFFFF<16>
l0000595E:
	return r15_24
memchr_exit:


void strncpy(word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvInitialiseTCBVariables
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15]
// LiveOut:
// Trashed: VNZC r12 r13 r14
// Preserved: r11 r15 sp
strncpy_entry:
l00005962:
	branch r13 == 0<16> l0000598E
l0000596A:
	r12_11 = r15
l0000596C:
	Mem16[r12_11:byte] = Mem13[r14:byte]
	r14 = r14 + 1<16>
	r12_11 = r12_11 + 1<16>
	branch Mem16[r12_11:byte] == 0<8> l00005980
l0000597A:
	r13 = r13 + 0xFFFF<16>
	branch r13 != 0<16> l0000596C
l0000597E:
	goto l0000598E
l00005980:
	r13_25 = r13 + 0xFFFF<16>
	branch r13_25 == 0<16> l0000598E
l00005984:
	Mem29[r12_11:byte] = 0<8>
	r12_11 = r12_11 + 1<16>
	r13_25 = r13_25 + 0xFFFF<16>
	branch r13_25 != 0<16> l00005984
l0000598E:
	return
strncpy_exit:


word16 memcpy(word16 sr, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      xQueueSend
//      xQueueSendFromISR
//      xQueueReceive
//      xQueueReceiveFromISR
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: sr:[0..15]-xQueueSend
// Trashed: VNZC r12 r13 r14 sr
// Preserved: r10 r11 r15 sp
memcpy_entry:
l00005994:
	r11_12 = r13
	r13_13 = r15
	r12_130 = r14
	branch r13 == 0<16> l00005A60
l000059A4:
	branch r15 == r14 l00005A60
l000059A8:
	branch r15 <u r14 l00005A02
l000059AC:
	r15_106 = r14 | r15
	C_149 = cond(r15_106 & 1<16>) & 1<16> (alias)
	branch (r15_106 & 1<16>) == 0<16> l000059D0
l000059B4:
	branch ((r14 ^ r15) & 1<16>) != 0<16> l000059C0
l000059BC:
	branch r13 <u 2<16> l000059F8
l000059C0:
	r14_122 = r13
l000059C2:
	r11_12 = r13 - r14_122
l000059C4:
	Mem134[r13_13:byte] = Mem131[r12_130:byte]
	r14_122 = r14_122 + 0xFFFF<16>
	r12_130 = r12_130 + 1<16>
	r13_13 = r13_13 + 1<16>
	C_149 = cond(r14_122) & 1<16> (alias)
	branch r14_122 != 0<16> l000059C4
l000059D0:
	sr = sr & 0xFFFE<16>
	r14_152 = __rcr<word16,byte>(r11_12, 1<8>, C_149)
	branch r14_152 == 0<16> l000059E4
l000059DA:
	Mem160[r13_13:word16] = Mem156[r12_130:word16]
	r12_130 = r12_130 + 2<i16>
	r13_13 = r13_13 + 2<16>
	r14_152 = r14_152 + 0xFFFF<16>
	branch r14_152 != 0<16> l000059DA
l000059E4:
	r14_169 = r11_12 & 1<16>
	branch r14_169 == 0<16> l00005A60
l000059EA:
	Mem177[r13_13:byte] = Mem174[r12_130:byte]
	r12_130 = r12_130 + 1<16>
	r13_13 = r13_13 + 1<16>
	r14_169 = r14_169 + 0xFFFF<16>
	branch r14_169 != 0<16> l000059EA
l000059F6:
	goto l00005A60
l000059F8:
	r14_122 = 2<16> - (r14 & 1<16>)
	goto l000059C2
l00005A02:
	r12_23 = r14 + r13
	r13_233 = r15 + r13
	r15_27 = r12_23 | r13_233
	C_70 = cond(r15_27 & 1<16>) & 1<16> (alias)
	branch (r15_27 & 1<16>) == 0<16> l00005A30
l00005A12:
	branch ((r12_23 ^ r13_233) & 1<16>) != 0<16> l00005A20
l00005A1A:
	branch r13 <u 3<16> l00005A5A
l00005A20:
	r14_41 = r13
l00005A22:
	r11_12 = r13 - r14_41
l00005A24:
	r12_23 = r12_23 + 0xFFFF<16>
	r13_233 = r13_233 + 0xFFFF<16>
	Mem56[r13_233:byte] = Mem54[r12_23:byte]
	r14_41 = r14_41 + 0xFFFF<16>
	C_70 = cond(r14_41) & 1<16> (alias)
	branch r14_41 != 0<16> l00005A24
l00005A30:
	sr = sr & 0xFFFE<16>
	r14_73 = __rcr<word16,byte>(r11_12, 1<8>, C_70)
	branch r14_73 == 0<16> l00005A46
l00005A3A:
	r12_23 = r12_23 - 2<16>
	r13_233 = r13_233 - 2<16>
	Mem82[r13_233:word16] = Mem80[r12_23:word16]
	r14_73 = r14_73 + 0xFFFF<16>
	branch r14_73 != 0<16> l00005A3A
l00005A46:
	r14_101 = r11_12 & 1<16>
	branch r14_101 == 0<16> l00005A60
l00005A4C:
	r12_23 = r12_23 + 0xFFFF<16>
	r13_233 = r13_233 + 0xFFFF<16>
	Mem100[r13_233:byte] = Mem98[r12_23:byte]
	r14_101 = r14_101 + 0xFFFF<16>
	branch r14_101 != 0<16> l00005A4C
l00005A58:
	goto l00005A60
l00005A5A:
	r14_41 = r12_23 & 1<16>
	goto l00005A22
l00005A60:
	return sr
memcpy_exit:


word16 memset(word16 sr, word16 r13, word16 r14, word16 r15)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      prvAllocateTCBAndStack
// MayUse:  r13:[0..15] r14:[0..15] r15:[0..15] sr:[0..15]
// LiveOut: sr:[0..15]-prvAllocateTCBAndStack
// Trashed: VNZC r12 r13 r14 sr
// Preserved: r10 r11 r15 r9 sp
memset_entry:
l00005A68:
	r14_124 = r15
	branch r13 <u 6<16> l00005A8A
l00005A7A:
	branch r13 == 0<16> l00005ACE
l00005A7E:
	Mem89[r14_124:byte] = SLICE(r14, byte, 0)
	r14_124 = r14_124 + 1<16>
	r13 = r13 + 0xFFFF<16>
	branch r13 != 0<16> l00005A7E
l00005A88:
	goto l00005ACE
l00005A8A:
	r11_122 = r14
	branch r14 == 0<16> l00005A96
l00005A90:
	r11_122 = r14 | __swpb(r14)
l00005A96:
	C_55 = cond(r15 & 1<16>) & 1<16> (alias)
	branch (r15 & 1<16>) == 0<16> l00005AAE
l00005A9C:
	r15_33 = 2<16> - (r15 & 1<16>)
	r12_34 = r15_33
	r13 = r13 - r15_33
l00005AA4:
	Mem41[r14_124:byte] = SLICE(r14, byte, 0)
	r12_34 = r12_34 + 0xFFFF<16>
	r14_124 = r14_124 + 1<16>
	C_55 = cond(r12_34) & 1<16> (alias)
	branch r12_34 != 0<16> l00005AA4
l00005AAE:
	sr = sr & 0xFFFE<16>
	r12_58 = __rcr<word16,byte>(r13, 1<8>, C_55)
l00005AB4:
	Mem63[r14_124:word16] = r11_122
	r14_124 = r14_124 + 2<16>
	r12_58 = r12_58 + 0xFFFF<16>
	branch r12_58 != 0<16> l00005AB4
l00005ABE:
	r12_71 = r13 & 1<16>
	branch r12_71 == 0<16> l00005ACE
l00005AC4:
	Mem78[r14_124:byte] = SLICE(r14, byte, 0)
	r14_124 = r14_124 + 1<16>
	r12_71 = r12_71 + 0xFFFF<16>
	branch r12_71 != 0<16> l00005AC4
l00005ACE:
	return sr
memset_exit:


ui32 fn00005ADC(word16 r10, word16 r11, word16 r12, word16 r13)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      msp430_compute_modulator_bits
// MayUse:  r10:[0..15] r11:[0..15] r12:[0..15] r13:[0..15]
// LiveOut: Sequence r15:r14:[0..31]-msp430_compute_modulator_bits
// Trashed: r14 r15
// Preserved: sp
fn00005ADC_entry:
l00005ADC:
	Mem4[0x0130<p16>:word16] = r12
	Mem6[0x0138<p16>:word16] = r10
	Mem7[0x0134<p16>:word16] = r12
	v6_8 = Mem7[0x013A<p16>:word16]
	Mem11[0x013A<p16>:word16] = Mem7[0x013C<p16>:word16]
	Mem13[0x0138<p16>:word16] = r11
	Mem15[0x0134<p16>:word16] = r13
	Mem16[0x0138<p16>:word16] = r10
	return SEQ(Mem16[0x013A<p16>:word16], v6_8)
fn00005ADC_exit:


word16 fn00005B04(ui32 r11_r10, ui32 r13_r12)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      msp430_compute_modulator_bits
// MayUse:  Sequence r11:r10:[0..31] Sequence r13:r12:[0..31]
// LiveOut: r12:[0..15]-msp430_compute_modulator_bits
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: r10 r11 sp
fn00005B04_entry:
	r13 = SLICE(r13_r12, word16, 16)
	r12 = SLICE(r13_r12, word16, 0)
	r11 = SLICE(r11_r10, word16, 16)
l00005B04:
	r8_18 = 0<16>
	branch (r13 & 0x8000<16>) == 0<16> l00005B16
l00005B0C:
	r13_r12_89 = ~r13_r12
	r12 = SLICE(r13_r12_89, word16, 0) + 1<16> (alias)
	r13 = SLICE(r13_r12_89 + 1<32>, word16, 16) (alias)
	r8_18 = 4<16>
l00005B16:
	r11_r10_126 = r11_r10 (alias)
	branch (r11 & 0x8000<16>) == 0<16> l00005B26
l00005B1C:
	r11_r10_91 = ~r11_r10
	r8_18 = r8_18 | 8<16>
	r11_r10_126 = SEQ(SLICE(r11_r10_91 + 1<32>, word16, 16), SLICE(r11_r10_91, word16, 0) + 1<16>) (alias)
l00005B26:
	r8_55 = __rcr<word16,byte>(r8_49, 1<8>, fn00005B4E(r11_r10_126, r8_18, r12, r13, out r13_r12_131, out r15_r14_134, out r8_49))
	branch (r8_55 & 4<16>) == 0<16> l00005B40
l00005B30:
	r13_r12_95 = ~r13_r12_131
	r13_r12_131 = SEQ(SLICE(r13_r12_95 + 1<32>, word16, 16), SLICE(r13_r12_95, word16, 0) + 1<16>) (alias)
l00005B40:
	r12_108 = SLICE(r13_r12_131, word16, 0) (alias)
	branch (r8_55 & 8<16>) == 0<16> l00005B4C
l00005B44:
	r12_108 = SLICE(~r13_r12_131, word16, 0) + 1<16> (alias)
l00005B4C:
	return r12_108
fn00005B04_exit:


bool fn00005B4E(ui32 r11_r10, word16 r8, word16 r12, word16 r13, ui32 & r13_r12Out, ui32 & r15_r14Out, word16 & r8Out)
// stackDelta: 2; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      vuprintf
//      fn00005B04
// MayUse:  r12:[0..15] r13:[0..15] r8:[0..15] Sequence r11:r10:[0..31]
// LiveOut: C-fn00005B04 Sequence r13:r12:[0..31]-fn00005B04 Sequence r15:r14:[0..31]-fn00005B04 r8:[0..15]-fn00005B04
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: r10 r11 sp
fn00005B4E_entry:
	r11 = SLICE(r11_r10, word16, 16)
	r10 = SLICE(r11_r10, word16, 0)
l00005B4E:
	r15_29 = 0<16>
	r14_25 = 0<16>
	r9_18 = 0x21<16>
	goto l00005B6C
l00005B58:
	r8 = __rcr<word16,byte>(r8_17, 1<8>, VNZC_20 & 1<16>)
	r14_25 = r14_25 * 2<16> + CONVERT(r8 <u 0<16>, bool, word16)
	r15_29 = r15_29 * 2<16> + CONVERT(r14_25 <u 0<16>, bool, word16)
	branch r15_29 >=u r11 l00005B6C
l00005B62:
	branch r15_29 != r11 l00005B68
l00005B64:
	branch r14_25 >=u r10 l00005B6C
l00005B68:
	r15_r14_61 = SEQ(r15_29, r14_25) - r11_r10
	r14_25 = SLICE(r15_r14_61, word16, 0) (alias)
	r15_29 = SLICE(r15_r14_61, word16, 16) (alias)
l00005B6C:
	r12 = r12 * 2<16>
	r13 = r13 * 2<16> + CONVERT(r12 <u 0<16>, bool, word16)
	r9_18 = r9_18 - 1<16>
	r8_17 = r8 * 2<16> + CONVERT(r13 <u 0<16>, bool, word16)
	VNZC_20 = cond(r9_18)
	branch r9_18 != 0<16> l00005B58
l00005B76:
	r13_r12Out = <invalid>
	r15_r14Out = <invalid>
	r8Out = r8_17
	return (VNZC_20 & 1<16>) != 0<16>
fn00005B4E_exit:


