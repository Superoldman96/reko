word32 fn00110287(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00110287_entry:
l00110287:
	v48_19 = Mem0[arg0 + 0xB<32>:int8]
	v46_20 = CONVERT(v48_19, int8, word32)
	branch v48_19 >= 0<8> l001102E7
l001102B7:
	loc14_36 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	loc15_38 = Mem0[arg0 + 4<32>:word32]
	goto l001102F7
l001102E7:
	loc14_36 = 1<32>
	loc15_38 = v46_20 & 0xFF<32>
l001102F7:
	v46_69 = arg2 - arg1
	v49_77 = v46_69 >> 2<32> == 0<32>
l00110311:
	branch v49_77 != 0<32> l00110421
l00110318:
	branch loc14_36 - loc15_38 >=u v46_69 >> 2<32> l00110355
l0011032A:
	fn0011CDB7(arg0, loc14_36, loc15_38 + (v46_69 >> 2<32>) - loc14_36, loc15_38, loc15_38, 0<32>, 0<32>)
	loc20_118 = CONVERT(Mem0[arg0 + 0xB<32>:int8], int8, word32)
	goto l00110359
l00110355:
	loc20_118 = v46_20
l00110359:
	v49_126 = SLICE(loc20_118, byte, 0) < 0<8>
	branch !v49_126 l00110377
l0011036B:
	loc23_131 = Mem0[arg0:word32]
	goto l0011037B
l00110377:
	loc23_131 = arg0
l0011037B:
	v46_163 = loc15_38 + (arg2 - arg1 >>u 2<32>)
	loc3_166 = loc23_131 + (loc15_38 << 2<32>)
	loc4_171 = arg1
l001103A9:
	branch loc4_171 != arg2 l001103B9
l001103B6:
	goto l001103DF
l001103B9:
	Mem186[loc3_166:word32] = Mem180[loc4_171:word32]
	loc3_166 = loc3_166 + 4<32>
	loc4_171 = loc4_171 + 4<32>
	goto l001103A9
l001103DF:
	Mem209[loc23_131 + (v46_163 << 2<32>):word32] = 0<32>
	v46_216 = loc15_38 + (v46_69 >> 2<32>)
	branch !v49_126 l0011040E
l001103FD:
	Mem240[arg0 + 4<32>:word32] = v46_216
	goto l00110421
l0011040E:
	Mem231[arg0 + 0xB<32>:byte] = SLICE(v46_216, byte, 0)
	goto l00110421
l00110421:
l00110421:
	return <invalid>
fn00110287_exit:


void fn00110427(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00110427_entry:
l00110427:
	v184_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x70<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00110443
l0011043D:
	abortStackOverflow(0x70<32>)
l00110443:
	branch !arg0 l001109AD
l00110498:
	v184_710 = fn000EA9F7(arg1, 0x5338<32>)
	Mem734[arg2:word32] = Mem7[v184_2 + 0x64<32>:word32]
	branch Mem734[arg8 + 0xB<32>:int8] >= 0<8> l00110540
l00110523:
	Mem785[Mem734[arg8:word32]:word32] = 0<32>
	Mem792[arg8 + 4<32>:word32] = 0<32>
	goto l0011054E
l00110540:
	Mem775[arg8:word32] = 0<32>
	Mem779[arg8 + 0xB<32>:byte] = 0<8>
l0011054E:
	Mem794[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg8, 0<32>)
	v191_799 = Mem794[0x00140048<p32>:word32]
	Mem802[0x00140048<p32>:word32] = 0<32>
	branch !(v191_799 & 1<32>) l0011057E
l0011056F:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011057E:
	Mem821[arg8:word64] = Mem802[v184_2 + 0x58<32>:word64]
	Mem829[arg8 + 8<32>:word32] = Mem821[v184_2 + 0x60<32>:word32]
	loc10_831 = 0<32>
l0011059E:
	branch loc10_831 != 3<32> l001105B0
l001105AD:
	goto l001105CE
l001105B0:
	Mem847[v184_2 + 0x58<32> + (loc10_831 << 2<32>):word32] = 0<32>
	loc10_831 = loc10_831 + 1<32>
	goto l0011059E
l001105CE:
	fn0011C7BA(v184_2 + 0x58<32>)
	branch Mem859[arg7 + 0xB<32>:int8] >= 0<8> l00110640
l00110621:
	Mem915[Mem859[arg7:word32]:word32] = 0<32>
	Mem922[arg7 + 4<32>:word32] = 0<32>
	goto l0011064E
l00110640:
	Mem905[arg7:word32] = 0<32>
	Mem909[arg7 + 0xB<32>:byte] = 0<8>
l0011064E:
	Mem924[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg7, 0<32>)
	v198_929 = Mem924[0x00140048<p32>:word32]
	Mem932[0x00140048<p32>:word32] = 0<32>
	branch !(v198_929 & 1<32>) l00110685
l00110673:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00110685:
	Mem951[arg7:word64] = Mem932[v184_2 + 0x4C<32>:word64]
	Mem959[arg7 + 8<32>:word32] = Mem951[v184_2 + 0x54<32>:word32]
	loc11_961 = 0<32>
l001106A5:
	branch loc11_961 != 3<32> l001106B7
l001106B4:
	goto l001106D9
l001106B7:
	Mem977[v184_2 + 0x4C<32> + (loc11_961 << 2<32>):word32] = 0<32>
	loc11_961 = loc11_961 + 1<32>
	goto l001106A5
l001106D9:
	fn0011C7BA(v184_2 + 0x4C<32>)
	Mem1014[arg3:word32] = (Mem989[Mem989[v184_710:word32] + 0xC<32>:word32] & 0x1FF<32>) + 0xB00<32>
	Mem1040[arg4:word32] = (Mem1014[Mem1014[v184_710:word32] + 0x10<32>:word32] & 0x1FF<32>) + 0xB00<32>
	branch Mem1040[arg5 + 0xB<32>:int8] >= 0<8> l001107BC
l0011079B:
	Mem1101[Mem1040[arg5:word32]:byte] = 0<8>
	Mem1108[arg5 + 4<32>:word32] = 0<32>
	goto l001107CB
l001107BC:
	Mem1090[arg5:byte] = 0<8>
	Mem1094[arg5 + 0xB<32>:byte] = 0<8>
l001107CB:
	Mem1110[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg5, 0<32>)
	v207_1115 = Mem1110[0x00140048<p32>:word32]
	Mem1118[0x00140048<p32>:word32] = 0<32>
	branch !(v207_1115 & 1<32>) l00110802
l001107F0:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00110802:
	Mem1137[arg5:word64] = Mem1118[v184_2 + 0x40<32>:word64]
	Mem1145[arg5 + 8<32>:word32] = Mem1137[v184_2 + 0x48<32>:word32]
	loc12_1147 = 0<32>
l00110822:
	branch loc12_1147 != 3<32> l00110834
l00110831:
	goto l00110856
l00110834:
	Mem1163[v184_2 + 0x40<32> + (loc12_1147 << 2<32>):word32] = 0<32>
	loc12_1147 = loc12_1147 + 1<32>
	goto l00110822
l00110856:
	fn0011BAF7(v184_2 + 0x40<32>)
	branch Mem1175[arg6 + 0xB<32>:int8] >= 0<8> l001108D8
l001108B7:
	Mem1243[Mem1175[arg6:word32]:word32] = 0<32>
	Mem1250[arg6 + 4<32>:word32] = 0<32>
	goto l001108E7
l001108D8:
	Mem1233[arg6:word32] = 0<32>
	Mem1237[arg6 + 0xB<32>:byte] = 0<8>
l001108E7:
	Mem1252[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg6, 0<32>)
	v216_1257 = Mem1252[0x00140048<p32>:word32]
	Mem1260[0x00140048<p32>:word32] = 0<32>
	branch !(v216_1257 & 1<32>) l0011091E
l0011090C:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011091E:
	Mem1279[arg6:word64] = Mem1260[v184_2 + 0x34<32>:word64]
	Mem1287[arg6 + 8<32>:word32] = Mem1279[v184_2 + 0x3C<32>:word32]
	loc13_1289 = 0<32>
l0011093E:
	branch loc13_1289 != 3<32> l00110950
l0011094D:
	goto l00110972
l00110950:
	Mem1305[v184_2 + 0x34<32> + (loc13_1289 << 2<32>):word32] = 0<32>
	loc13_1289 = loc13_1289 + 1<32>
	goto l0011093E
l00110972:
	fn0011C7BA(v184_2 + 0x34<32>)
	loc188_1335 = (Mem1317[Mem1317[v184_710:word32] + 0x24<32>:word32] & 0x1FF<32>) + 0xB00<32>
	goto l00110E79
l001109AD:
	v184_60 = fn000EA9F7(arg1, 0x5330<32>)
	Mem88[arg2:word32] = Mem7[v184_2 + 0x30<32>:word32]
	branch Mem88[arg8 + 0xB<32>:int8] >= 0<8> l00110A60
l00110A43:
	Mem142[Mem88[arg8:word32]:word32] = 0<32>
	Mem149[arg8 + 4<32>:word32] = 0<32>
	goto l00110A6E
l00110A60:
	Mem132[arg8:word32] = 0<32>
	Mem136[arg8 + 0xB<32>:byte] = 0<8>
l00110A6E:
	Mem151[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg8, 0<32>)
	v191_156 = Mem151[0x00140048<p32>:word32]
	Mem159[0x00140048<p32>:word32] = 0<32>
	branch !(v191_156 & 1<32>) l00110A9E
l00110A8F:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00110A9E:
	Mem178[arg8:word64] = Mem159[v184_2 + 0x24<32>:word64]
	Mem186[arg8 + 8<32>:word32] = Mem178[v184_2 + 0x2C<32>:word32]
	loc14_188 = 0<32>
l00110ABE:
	branch loc14_188 != 3<32> l00110AD0
l00110ACD:
	goto l00110AEE
l00110AD0:
	Mem204[v184_2 + 0x24<32> + (loc14_188 << 2<32>):word32] = 0<32>
	loc14_188 = loc14_188 + 1<32>
	goto l00110ABE
l00110AEE:
	fn0011C7BA(v184_2 + 0x24<32>)
	branch Mem216[arg7 + 0xB<32>:int8] >= 0<8> l00110B60
l00110B43:
	Mem275[Mem216[arg7:word32]:word32] = 0<32>
	Mem282[arg7 + 4<32>:word32] = 0<32>
	goto l00110B6E
l00110B60:
	Mem265[arg7:word32] = 0<32>
	Mem269[arg7 + 0xB<32>:byte] = 0<8>
l00110B6E:
	Mem284[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg7, 0<32>)
	v198_289 = Mem284[0x00140048<p32>:word32]
	Mem292[0x00140048<p32>:word32] = 0<32>
	branch !(v198_289 & 1<32>) l00110B9E
l00110B8F:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00110B9E:
	Mem311[arg7:word64] = Mem292[v184_2 + 0x18<32>:word64]
	Mem319[arg7 + 8<32>:word32] = Mem311[v184_2 + 0x20<32>:word32]
	loc15_321 = 0<32>
l00110BBE:
	branch loc15_321 != 3<32> l00110BD0
l00110BCD:
	goto l00110BEE
l00110BD0:
	Mem337[v184_2 + 0x18<32> + (loc15_321 << 2<32>):word32] = 0<32>
	loc15_321 = loc15_321 + 1<32>
	goto l00110BBE
l00110BEE:
	fn0011C7BA(v184_2 + 0x18<32>)
	Mem377[arg3:word32] = (Mem349[Mem349[v184_60:word32] + 0xC<32>:word32] & 0x1FF<32>) + 0xB00<32>
	Mem406[arg4:word32] = (Mem377[Mem377[v184_60:word32] + 0x10<32>:word32] & 0x1FF<32>) + 0xB00<32>
	branch Mem406[arg5 + 0xB<32>:int8] >= 0<8> l00110CB7
l00110C9A:
	Mem470[Mem406[arg5:word32]:byte] = 0<8>
	Mem477[arg5 + 4<32>:word32] = 0<32>
	goto l00110CC5
l00110CB7:
	Mem459[arg5:byte] = 0<8>
	Mem463[arg5 + 0xB<32>:byte] = 0<8>
l00110CC5:
	Mem479[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg5, 0<32>)
	v207_484 = Mem479[0x00140048<p32>:word32]
	Mem487[0x00140048<p32>:word32] = 0<32>
	branch !(v207_484 & 1<32>) l00110CF5
l00110CE6:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00110CF5:
	Mem506[arg5:word64] = Mem487[v184_2 + 0xC<32>:word64]
	Mem514[arg5 + 8<32>:word32] = Mem506[v184_2 + 0x14<32>:word32]
	loc16_516 = 0<32>
l00110D15:
	branch loc16_516 != 3<32> l00110D27
l00110D24:
	goto l00110D45
l00110D27:
	Mem532[v184_2 + 0xC<32> + (loc16_516 << 2<32>):word32] = 0<32>
	loc16_516 = loc16_516 + 1<32>
	goto l00110D15
l00110D45:
	fn0011BAF7(v184_2 + 0xC<32>)
	branch Mem544[arg6 + 0xB<32>:int8] >= 0<8> l00110DB7
l00110D9A:
	Mem615[Mem544[arg6:word32]:word32] = 0<32>
	Mem622[arg6 + 4<32>:word32] = 0<32>
	goto l00110DC5
l00110DB7:
	Mem605[arg6:word32] = 0<32>
	Mem609[arg6 + 0xB<32>:byte] = 0<8>
l00110DC5:
	Mem624[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg6, 0<32>)
	v216_629 = Mem624[0x00140048<p32>:word32]
	Mem632[0x00140048<p32>:word32] = 0<32>
	branch !(v216_629 & 1<32>) l00110DF5
l00110DE6:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00110DF5:
	Mem651[arg6:word64] = Mem632[v184_2:word64]
	Mem659[arg6 + 8<32>:word32] = Mem651[v184_2 + 8<32>:word32]
	loc17_661 = 0<32>
l00110E15:
	branch loc17_661 != 3<32> l00110E27
l00110E24:
	goto l00110E45
l00110E27:
	Mem677[v184_2 + (loc17_661 << 2<32>):word32] = 0<32>
	loc17_661 = loc17_661 + 1<32>
	goto l00110E15
l00110E45:
	fn0011C7BA(v184_2)
	loc188_1335 = (Mem689[Mem689[v184_60:word32] + 0x24<32>:word32] & 0x1FF<32>) + 0xB00<32>
l00110E79:
	Mem1367[arg9:word32] = loc188_1335
	Mem1394[0x00140030<p32>:word32] = v184_2
	return
fn00110427_exit:


void fn00110E8A(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00110E8A_entry:
l00110E8A:
	v38_23 = Mem0[arg0:word32]
	v38_11 = Mem0[arg0 + 4<32>:word32]
	v38_27 = Mem0[arg2:word32] - v38_23
	branch v38_27 >=u 0x7FFFFFFF<32> l00110ED4
l00110ED1:
	v38_38 = v38_27 << 1<32>
	goto l00110ED6
l00110ED4:
	v38_38 = 0xFFFFFFFF<32>
l00110ED6:
	branch v38_38 != 0<32> l00110EE7
l00110EE4:
	v38_47 = 4<32>
	goto l00110EE9
l00110EE7:
	v38_47 = v38_38
l00110EE9:
	v38_64 = Mem0[arg1:word32] - v38_23
	branch v38_11 == 0x1A4<32> l00110F0C
l00110F09:
	v38_75 = v38_23
	goto l00110F0E
l00110F0C:
	v38_75 = 0<32>
l00110F0E:
	v38_82 = fn000E3E00(v38_75, v38_47)
	branch v38_82 != 0<32> l00110F29
l00110F25:
	fn0011B725()
l00110F29:
	branch v38_11 == 0x1A4<32> l00110F3F
l00110F2F:
	Mem149[arg0:word32] = v38_82
	loc25 = v38_82
	goto l00110FA3
l00110F3F:
	v38_99 = Mem0[arg0:word32]
	Mem106[arg0:word32] = v38_82
	branch v38_99 != 0<32> l00110F61
l00110F5C:
	loc25 = v38_82
	goto l00110FA2
l00110F61:
	v38_117 = Mem106[arg0 + 4<32>:word32]
	Mem120[0x00140048<p32>:word32] = 0<32>
	invoke_vi(v38_117, v38_99)
	v38_123 = Mem120[0x00140048<p32>:word32]
	Mem126[0x00140048<p32>:word32] = 0<32>
	branch !(v38_123 & 1<32>) l00110F94
l00110F85:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00110FA1
l00110F94:
	loc25 = Mem126[arg0:word32]
	goto l00110FA4
l00110FA1:
l00110FA2:
l00110FA3:
l00110FA4:
	Mem157[arg0 + 4<32>:word32] = 0x1AD<32>
	Mem192[arg1:word32] = loc25 + ((v38_64 >> 2<32>) << 2<32>)
	Mem214[arg2:word32] = Mem192[arg0:word32] + __align(v38_47, 4<i32>)
	return
fn00110E8A_exit:


void fn00110FE0(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn00110FE0_entry:
l00110FE0:
	return
fn00110FE0_exit:


void fn00110FE9(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00110FE9_entry:
l00110FE9:
	fn0011B709(arg0)
	return
fn00110FE9_exit:


word32 fn00110FF7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..63]
// LiveOut:
// Trashed: stack
// Preserved:
fn00110FF7_entry:
l00110FF7:
	v181_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x190<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00111013
l0011100D:
	abortStackOverflow(0x190<32>)
l00111013:
	Mem85[v181_2 + 0x48<32>:word32] = v181_2 + 0x120<32>
	Mem91[v181_2:real64] = arg5
	v181_96 = fn000DB3DF(v181_2 + 0x120<32>, 0x64<32>, 0x3DC0<32>, v181_2)
l001110DA:
	branch v181_96 <=u 0x63<32> l00111211
l001110E0:
	Mem114[0x00140048<p32>:word32] = 0<32>
	v181_116 = invoke_i(0x17B<32>)
	v181_118 = Mem114[0x00140048<p32>:word32]
	Mem121[0x00140048<p32>:word32] = 0<32>
	branch !(v181_118 & 1<32>) l0011110C
l001110FE:
	loc27 = 0<32>
	loc30 = 0<32>
	loc182_112 = 8<32>
	goto l0011120F
l0011110C:
	Mem128[0x00140048<p32>:word32] = 0<32>
	Mem131[v181_2 + 8<32>:real64] = arg5
	v181_137 = invoke_iiiii(0x18D<32>, v181_2 + 0x48<32>, v181_116, 0x3DC0<32>, v181_2 + 8<32>)
	v181_139 = Mem131[0x00140048<p32>:word32]
	Mem142[0x00140048<p32>:word32] = 0<32>
	branch !(v181_139 & 1<32>) l0011114C
l0011113E:
	loc27 = 0<32>
	loc30 = 0<32>
	loc182_112 = 8<32>
	goto l0011120E
l0011114C:
	v181_149 = Mem142[v181_2 + 0x48<32>:word32]
	branch v181_149 != 0<32> l00111198
l0011115F:
	Mem161[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v181_163 = Mem161[0x00140048<p32>:word32]
	Mem166[0x00140048<p32>:word32] = 0<32>
	branch !(v181_163 & 1<32>) l0011118B
l0011117B:
	loc27 = 0<32>
	loc30 = 0<32>
	loc182_112 = 8<32>
	goto l00111228
l0011118B:
	loc87_159 = Mem166[v181_2 + 0x48<32>:word32]
	goto l001111A0
l00111198:
	loc87_159 = v181_149
l001111A0:
	v181_179 = _malloc(v181_137)
	branch v181_179 != 0<32> l001111F8
l001111B7:
	Mem200[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v181_202 = Mem200[0x00140048<p32>:word32]
	Mem205[0x00140048<p32>:word32] = 0<32>
	branch !(v181_202 & 1<32>) l001111E1
l001111D3:
	loc27 = v181_179
	loc30 = loc87_159
	loc182_112 = 8<32>
	goto l001111F6
l001111E1:
	loc6 = 0<32>
	loc11 = v181_137
	loc28 = v181_179
	loc31 = loc87_159
	loc182_112 = 0xB<32>
l001111F6:
	goto l0011120D
l001111F8:
	loc6 = v181_179
	loc11 = v181_137
	loc28 = v181_179
	loc31 = loc87_159
	loc182_112 = 0xB<32>
l0011120D:
l0011120E:
l0011120F:
	goto l00111227
l00111211:
	loc6 = v181_2 + 0xBC<32>
	loc11 = v181_96
	loc28 = 0<32>
	loc31 = 0<32>
	loc182_112 = 0xB<32>
l00111227:
l00111228:
	branch loc182_112 != 0xB<32> l00111826
l00111231:
	Mem255[0x00140048<p32>:word32] = 0<32>
	v181_268 = invoke_ii(0x167<32>, arg3)
	v181_270 = Mem255[0x00140048<p32>:word32]
	Mem273[0x00140048<p32>:word32] = 0<32>
	branch !(v181_270 & 1<32>) l0011125F
l00111251:
	loc27 = loc28
	loc30 = loc31
	loc182_112 = 8<32>
	goto l00111824
l0011125F:
	Mem288[v181_2 + 0x44<32>:word32] = v181_268
	Mem290[0x00140048<p32>:word32] = 0<32>
	v181_294 = invoke_iii(0x164<32>, v181_2 + 0x44<32>, 0x4C70<32>)
	v181_296 = Mem290[0x00140048<p32>:word32]
	Mem299[0x00140048<p32>:word32] = 0<32>
l00111288:
	branch !(v181_296 & 1<32>) l001112A3
l0011128E:
	loc16_1512 = ___cxa_find_matching_catch_2()
	loc82_1517 = v181_268
	goto l0011180C
l001112A3:
	v181_313 = Mem299[v181_2 + 0x48<32>:word32]
	v181_336 = Mem299[Mem299[v181_294:word32] + 0x20<32>:word32]
	Mem339[0x00140048<p32>:word32] = 0<32>
	invoke_iiiii(v181_336, v181_294, v181_313, v181_313 + loc11, loc6)
	v181_355 = Mem339[0x00140048<p32>:word32]
	Mem358[0x00140048<p32>:word32] = 0<32>
	branch !(v181_355 & 1<32>) l00111302
l001112EB:
	loc16_1512 = ___cxa_find_matching_catch_2()
	loc82_1517 = v181_268
	goto l0011180D
l00111302:
	branch loc11 != 0<32> l00111313
l0011130D:
	loc138_385 = 0<32>
	goto l0011133A
l00111313:
	loc138_385 = Mem358[Mem358[v181_2 + 0x48<32>:word32]:int8] == 0x2D<8>
l0011133A:
	Mem398[v181_2 + 0x38<32>:word64] = 0<64>
	Mem403[v181_2 + 0x40<32>:word32] = 0<32>
	loc7_405 = 0<32>
l00111352:
	branch loc7_405 != 3<32> l00111364
l00111361:
	goto l00111386
l00111364:
	Mem421[v181_2 + 0x38<32> + (loc7_405 << 2<32>):word32] = 0<32>
	loc7_405 = loc7_405 + 1<32>
	goto l00111352
l00111386:
	Mem439[v181_2 + 0x2C<32>:word64] = 0<64>
	Mem444[v181_2 + 0x34<32>:word32] = 0<32>
	loc8_446 = 0<32>
l0011139F:
	branch loc8_446 != 3<32> l001113B1
l001113AE:
	goto l001113D3
l001113B1:
	Mem462[v181_2 + 0x2C<32> + (loc8_446 << 2<32>):word32] = 0<32>
	loc8_446 = loc8_446 + 1<32>
	goto l0011139F
l001113D3:
	Mem481[v181_2 + 0x20<32>:word64] = 0<64>
	Mem486[v181_2 + 0x28<32>:word32] = 0<32>
	loc9_488 = 0<32>
l001113EC:
	branch loc9_488 != 3<32> l001113FE
l001113FB:
	goto l00111420
l001113FE:
	Mem504[v181_2 + 0x20<32> + (loc9_488 << 2<32>):word32] = 0<32>
	loc9_488 = loc9_488 + 1<32>
	goto l001113EC
l00111420:
	Mem512[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiii(0x1B4<32>, arg2, loc138_385, v181_2 + 0x44<32>, v181_2 + 0xB8<32>, v181_2 + 0xB5<32>, v181_2 + 0xB4<32>, v181_2 + 0x38<32>, v181_2 + 0x2C<32>, v181_2 + 0x20<32>, v181_2 + 0x1C<32>)
	v181_593 = Mem512[0x00140048<p32>:word32]
	Mem596[0x00140048<p32>:word32] = 0<32>
	branch !(v181_593 & 1<32>) l00111469
l00111458:
	loc14_1330 = ___cxa_find_matching_catch_2()
	goto l001117E8
l00111469:
	v181_603 = Mem596[v181_2 + 0x1C<32>:word32]
	branch loc11 <= v181_603 l0011154A
l0011147F:
	v196_704 = Mem596[v181_2 + 0x2B<32>:int8]
	v181_693 = loc11 - v181_603
	v181_705 = CONVERT(v196_704, int8, word32)
	v181_720 = Mem596[v181_2 + 0x24<32>:word32]
	branch v196_704 >= 0<8> l001114D5
l001114D1:
	v181_727 = v181_720
	goto l001114D8
l001114D5:
	v181_727 = v181_705 & 0xFF<32>
l001114D8:
	v197_738 = Mem596[v181_2 + 0x37<32>:int8]
	v181_739 = CONVERT(v197_738, int8, word32)
	v181_754 = Mem596[v181_2 + 0x30<32>:word32]
	branch v197_738 >= 0<8> l00111520
l0011151C:
	v181_761 = v181_754
	goto l00111523
l00111520:
	v181_761 = v181_739 & 0xFF<32>
l00111523:
	loc21_690 = v181_727 + (v181_693 << 1<32> | 1<32>) + v181_761
	goto l001115F0
l0011154A:
	v198_619 = Mem596[v181_2 + 0x2B<32>:int8]
	v181_620 = CONVERT(v198_619, int8, word32)
	v181_635 = Mem596[v181_2 + 0x24<32>:word32]
	branch v198_619 >= 0<8> l0011158E
l0011158A:
	v181_642 = v181_635
	goto l00111591
l0011158E:
	v181_642 = v181_620 & 0xFF<32>
l00111591:
	v199_653 = Mem596[v181_2 + 0x37<32>:int8]
	v181_654 = CONVERT(v199_653, int8, word32)
	v181_669 = Mem596[v181_2 + 0x30<32>:word32]
	branch v199_653 >= 0<8> l001115D8
l001115D4:
	v181_676 = v181_669
	goto l001115DA
l001115D8:
	v181_676 = v181_654 & 0xFF<32>
l001115DA:
	loc21_690 = v181_642 + 2<32> + v181_676
l001115F0:
	v181_790 = loc21_690 + v181_603
l00111601:
	branch v181_790 <=u 0x64<32> l00111680
l00111607:
	v181_822 = _malloc(v181_790)
	branch v181_822 != 0<32> l0011166C
l0011161D:
	Mem840[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v181_842 = Mem840[0x00140048<p32>:word32]
	Mem845[0x00140048<p32>:word32] = 0<32>
	branch !(v181_842 & 1<32>) l00111650
l00111639:
	loc12 = ___cxa_find_matching_catch_2()
	loc26 = v181_822
	goto l00111693
l00111650:
	loc10 = 0<32>
	loc25 = v181_822
	loc60 = Mem845[v181_2 + 0x1C<32>:word32]
	loc182_112 = 0x25<32>
	goto l00111693
l0011166C:
l0011167E:
	loc25 = v181_822
	loc10 = v181_822
	goto l00111692
l00111680:
	loc10 = v181_2 + 0x50<32>
	loc25 = 0<32>
l00111692:
	loc60 = v181_603
	Mem910 = Mem596
	loc182_112 = 0x25<32>
l00111693:
	branch loc182_112 != 0x25<32> l001117CA
l0011169C:
	v181_915 = Mem909[arg3 + 4<32>:word32]
	v181_951 = CONVERT(Mem909[v181_2 + 0xB5<32>:int8], int8, word32)
	v181_963 = CONVERT(Mem909[v181_2 + 0xB4<32>:int8], int8, word32)
	Mem966[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiiiiiiii(0x1B5<32>, loc10, v181_2 + 0x18<32>, v181_2 + 0x14<32>, v181_915, loc6, loc6 + loc11, v181_294, loc138_385, v181_2 + 0xB8<32>, v181_951, v181_963, v181_2 + 0x38<32>, v181_2 + 0x2C<32>, v181_2 + 0x20<32>, loc60)
	v181_1113 = Mem966[0x00140048<p32>:word32]
	Mem1116[0x00140048<p32>:word32] = 0<32>
	branch (v181_1113 & 1<32>) != 0<32> l001117B5
l001116FB:
	Mem1169[v181_2 + 0x10<32>:word32] = Mem1116[arg1:word32]
	v181_1171 = Mem1169[v181_2 + 0x18<32>:word32]
	v181_1174 = Mem1169[v181_2 + 0x14<32>:word32]
	Mem1177[0x00140048<p32>:word32] = 0<32>
	Mem1200[v181_2 + 0x4C<32>:word32] = Mem1177[v181_2 + 0x10<32>:word32]
	v181_1230 = invoke_iiiiiii(0x168<32>, v181_2 + 0x4C<32>, loc10, v181_1171, v181_1174, arg3, arg4)
	v181_1232 = Mem1200[0x00140048<p32>:word32]
	Mem1235[0x00140048<p32>:word32] = 0<32>
	branch (v181_1232 & 1<32>) != 0<32> l001117B4
l0011174C:
	branch loc25 == 0<32> != 0<32> l00111762
l00111758:
	_free(loc25)
l00111762:
	fn0011BAF7(v181_2 + 0x20<32>)
	fn0011BAF7(v181_2 + 0x2C<32>)
	fn0011BAF7(v181_2 + 0x38<32>)
	fn0011B43F(Mem1235[v181_2 + 0x44<32>:word32])
	branch loc28 == 0<32> != 0<32> l00111795
l0011178B:
	_free(loc28)
l00111795:
	branch loc31 == 0<32> != 0<32> l001117AB
l001117A1:
	_free(loc31)
l001117AB:
	Mem1472[0x00140030<p32>:word32] = v181_2
	return v181_1230
l001117B4:
l001117B5:
	loc12 = ___cxa_find_matching_catch_2()
	loc26 = loc25
l001117CA:
	branch loc26 == 0<32> != 0<32> l001117E0
l001117D6:
	_free(loc26)
l001117E0:
	loc14_1330 = loc12
l001117E8:
	fn0011BAF7(v181_2 + 0x20<32>)
	fn0011BAF7(v181_2 + 0x2C<32>)
	fn0011BAF7(v181_2 + 0x38<32>)
	loc16_1512 = loc14_1330
	loc82_1517 = Mem1505[v181_2 + 0x44<32>:word32]
l0011180C:
l0011180D:
	fn0011B43F(loc82_1517)
	loc18 = loc16_1512
	loc29 = loc28
	loc32 = loc31
l00111824:
l00111826:
	branch loc182_112 != 8<32> l00111847
l0011182E:
	loc18 = ___cxa_find_matching_catch_2()
	loc29 = loc27
	loc32 = loc30
l00111847:
	branch loc29 == 0<32> != 0<32> l0011185D
l00111853:
	_free(loc29)
l0011185D:
	branch loc32 == 0<32> != 0<32> l00111873
l00111869:
	_free(loc32)
l00111873:
	___resumeException(loc18)
	return 0<32>
fn00110FF7_exit:


word32 fn0011187C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011187C_entry:
l0011187C:
	v154_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0xB0<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00111898
l00111892:
	abortStackOverflow(0xB0<32>)
l00111898:
	Mem71[v154_2 + 0x34<32>:word32] = fn000E64CA(arg3)
	Mem73[0x00140048<p32>:word32] = 0<32>
	v154_77 = invoke_iii(0x164<32>, v154_2 + 0x34<32>, 0x4C70<32>)
	v154_79 = Mem73[0x00140048<p32>:word32]
	Mem82[0x00140048<p32>:word32] = 0<32>
l00111930:
	branch !(v154_79 & 1<32>) l0011194B
l00111936:
	loc14_1376 = ___cxa_find_matching_catch_2()
	goto l00111F0F
l0011194B:
	v158_96 = Mem82[arg5 + 0xB<32>:int8]
	v154_97 = CONVERT(v158_96, int8, word32)
	v154_103 = CONVERT(v158_96, byte, int32)
	v154_112 = Mem82[arg5 + 4<32>:word32]
	branch v154_103 >= 0<32> l00111983
l00111980:
	v154_119 = v154_112
	goto l00111985
l00111983:
	v154_119 = v154_97 & 0xFF<32>
l00111985:
	v156_125 = v154_119 == 0<32>
l0011198F:
	branch !v156_125 l0011199A
l00111995:
	goto l00111A17
l0011199A:
	v154_131 = Mem82[arg5:word32]
	branch v154_103 >= 0<32> l001119A8
l001119A5:
	v154_135 = v154_131
	goto l001119AA
l001119A8:
	v154_135 = arg5
l001119AA:
	v159_141 = Mem82[v154_135:int8]
	v154_154 = Mem82[Mem82[v154_77:word32] + 0x1C<32>:word32]
	Mem157[0x00140048<p32>:word32] = 0<32>
	v154_161 = invoke_iii(v154_154, v154_77, 0x2D<32>)
	v154_163 = Mem157[0x00140048<p32>:word32]
	Mem166[0x00140048<p32>:word32] = 0<32>
	branch !(v154_163 & 1<32>) l001119FD
l001119EA:
	loc14_1376 = ___cxa_find_matching_catch_2()
	goto l00111F10
l001119FD:
	loc94_185 = CONVERT(v159_141, byte, int32) == CONVERT(SLICE(v154_161, byte, 0), byte, int32)
	goto l00111A18
l00111A17:
	loc94_185 = 0<32>
l00111A18:
	Mem202[v154_2 + 0x28<32>:word64] = 0<64>
	Mem207[v154_2 + 0x30<32>:word32] = 0<32>
	loc7_209 = 0<32>
l00111A30:
	branch loc7_209 != 3<32> l00111A42
l00111A3F:
	goto l00111A60
l00111A42:
	Mem225[v154_2 + 0x28<32> + (loc7_209 << 2<32>):word32] = 0<32>
	loc7_209 = loc7_209 + 1<32>
	goto l00111A30
l00111A60:
	Mem239[v154_2 + 0x1C<32>:word64] = 0<64>
	Mem244[v154_2 + 0x24<32>:word32] = 0<32>
	loc8_246 = 0<32>
l00111A79:
	branch loc8_246 != 3<32> l00111A8B
l00111A88:
	goto l00111AA9
l00111A8B:
	Mem262[v154_2 + 0x1C<32> + (loc8_246 << 2<32>):word32] = 0<32>
	loc8_246 = loc8_246 + 1<32>
	goto l00111A79
l00111AA9:
	Mem277[v154_2 + 0x10<32>:word64] = 0<64>
	Mem282[v154_2 + 0x18<32>:word32] = 0<32>
	loc9_284 = 0<32>
l00111AC2:
	branch loc9_284 != 3<32> l00111AD4
l00111AD1:
	goto l00111AF2
l00111AD4:
	Mem300[v154_2 + 0x10<32> + (loc9_284 << 2<32>):word32] = 0<32>
	loc9_284 = loc9_284 + 1<32>
	goto l00111AC2
l00111AF2:
	Mem308[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiii(0x1B4<32>, arg2, loc94_185, v154_2 + 0x34<32>, v154_2 + 0xA4<32>, v154_2 + 0xA1<32>, v154_2 + 0xA0<32>, v154_2 + 0x28<32>, v154_2 + 0x1C<32>, v154_2 + 0x10<32>, v154_2 + 0xC<32>)
	v154_373 = Mem308[0x00140048<p32>:word32]
	Mem376[0x00140048<p32>:word32] = 0<32>
	branch !(v154_373 & 1<32>) l00111B37
l00111B26:
	loc12_1272 = ___cxa_find_matching_catch_2()
	goto l00111EF7
l00111B37:
	v169_390 = Mem376[arg5 + 0xB<32>:int8]
	v154_391 = CONVERT(v169_390, int8, word32)
	v154_409 = Mem376[arg5 + 4<32>:word32]
	branch v169_390 >= 0<8> l00111B61
l00111B5E:
	v154_416 = v154_409
	goto l00111B63
l00111B61:
	v154_416 = v154_391 & 0xFF<32>
l00111B63:
	v154_423 = Mem376[v154_2 + 0xC<32>:word32]
	branch v154_416 <= v154_423 l00111C1A
l00111B78:
	v170_522 = Mem376[v154_2 + 0x1B<32>:int8]
	v154_511 = v154_416 - v154_423
	v154_523 = CONVERT(v170_522, int8, word32)
	v154_538 = Mem376[v154_2 + 0x14<32>:word32]
	branch v170_522 >= 0<8> l00111BBE
l00111BBB:
	v154_545 = v154_538
	goto l00111BC0
l00111BBE:
	v154_545 = v154_523 & 0xFF<32>
l00111BC0:
	v171_556 = Mem376[v154_2 + 0x27<32>:int8]
	v154_557 = CONVERT(v171_556, int8, word32)
	v154_572 = Mem376[v154_2 + 0x20<32>:word32]
	branch v171_556 >= 0<8> l00111BFB
l00111BF8:
	v154_579 = v154_572
	goto l00111BFD
l00111BFB:
	v154_579 = v154_557 & 0xFF<32>
l00111BFD:
	loc17_508 = v154_545 + (v154_511 << 1<32> | 1<32>) + v154_579
	goto l00111CC1
l00111C1A:
	v172_436 = Mem376[v154_2 + 0x1B<32>:int8]
	v154_437 = CONVERT(v172_436, int8, word32)
	v154_452 = Mem376[v154_2 + 0x14<32>:word32]
	branch v172_436 >= 0<8> l00111C57
l00111C53:
	v154_459 = v154_452
	goto l00111C5A
l00111C57:
	v154_459 = v154_437 & 0xFF<32>
l00111C5A:
	v173_471 = Mem376[v154_2 + 0x27<32>:int8]
	v154_472 = CONVERT(v173_471, int8, word32)
	v154_487 = Mem376[v154_2 + 0x20<32>:word32]
	branch v173_471 >= 0<8> l00111CA2
l00111C9E:
	v154_494 = v154_487
	goto l00111CA5
l00111CA2:
	v154_494 = v154_472 & 0xFF<32>
l00111CA5:
	loc17_508 = v154_459 + 2<32> + v154_494
l00111CC1:
	v154_608 = loc17_508 + v154_423
l00111CD4:
	branch v154_608 <=u 0x64<32> l00111D80
l00111CDB:
	v154_653 = _malloc(v154_608)
	branch v154_653 != 0<32> l00111D63
l00111CF8:
	Mem675[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v154_677 = Mem675[0x00140048<p32>:word32]
	Mem680[0x00140048<p32>:word32] = 0<32>
	branch !(v154_677 & 1<32>) l00111D30
l00111D18:
	loc6 = ___cxa_find_matching_catch_2()
	loc22 = v154_653
	goto l00111D9A
l00111D30:
	loc10 = 0<32>
	loc21 = v154_653
	loc33 = CONVERT(Mem680[arg5 + 0xB<32>:int8], int8, word32)
	loc39 = Mem680[arg5 + 4<32>:word32]
	loc43 = Mem680[v154_2 + 0xC<32>:word32]
	loc155 = 0x1A<32>
	goto l00111D9A
l00111D63:
l00111D7E:
	loc21 = v154_653
	loc10 = v154_653
	goto l00111D99
l00111D80:
	loc10 = v154_2 + 0x3C<32>
	loc21 = 0<32>
l00111D99:
	loc43 = v154_423
	loc39 = v154_409
	loc33 = v154_391
	Mem778 = Mem376
	loc155 = 0x1A<32>
l00111D9A:
	branch loc155 != 0x1A<32> l00111ED9
l00111DA3:
	v154_783 = Mem777[arg3 + 4<32>:word32]
	v156_809 = SLICE(loc33, byte, 0) < 0<8>
	v154_827 = Mem777[arg5:word32]
	branch !v156_809 l00111DCC
l00111DC9:
	v154_830 = v154_827
	goto l00111DCE
l00111DCC:
	v154_830 = arg5
l00111DCE:
	v154_837 = loc33 & 0xFF<32>
	branch !v156_809 l00111DE0
l00111DDD:
	v154_841 = loc39
	goto l00111DE2
l00111DE0:
	v154_841 = v154_837
l00111DE2:
	v154_884 = CONVERT(Mem777[v154_2 + 0xA1<32>:int8], int8, word32)
	v154_899 = CONVERT(Mem777[v154_2 + 0xA0<32>:int8], int8, word32)
	Mem902[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiiiiiiii(0x1B5<32>, loc10, v154_2 + 8<32>, v154_2 + 4<32>, v154_783, v154_830, v154_830 + v154_841, v154_77, loc94_185, v154_2 + 0xA4<32>, v154_884, v154_899, v154_2 + 0x28<32>, v154_2 + 0x1C<32>, v154_2 + 0x10<32>, loc43)
	v154_1064 = Mem902[0x00140048<p32>:word32]
	Mem1067[0x00140048<p32>:word32] = 0<32>
	branch (v154_1064 & 1<32>) != 0<32> l00111EC4
l00111E37:
	Mem1118[v154_2:word32] = Mem1067[arg1:word32]
	v154_1120 = Mem1118[v154_2 + 8<32>:word32]
	v154_1123 = Mem1118[v154_2 + 4<32>:word32]
	Mem1126[0x00140048<p32>:word32] = 0<32>
	Mem1148[v154_2 + 0x38<32>:word32] = Mem1126[v154_2:word32]
	v154_1179 = invoke_iiiiiii(0x168<32>, v154_2 + 0x38<32>, loc10, v154_1120, v154_1123, arg3, arg4)
	v154_1181 = Mem1148[0x00140048<p32>:word32]
	Mem1184[0x00140048<p32>:word32] = 0<32>
	branch (v154_1181 & 1<32>) != 0<32> l00111EC3
l00111E88:
	branch loc21 == 0<32> != 0<32> l00111E9E
l00111E94:
	_free(loc21)
l00111E9E:
	fn0011BAF7(v154_2 + 0x10<32>)
	fn0011BAF7(v154_2 + 0x1C<32>)
	fn0011BAF7(v154_2 + 0x28<32>)
	fn0011B43F(Mem1184[v154_2 + 0x34<32>:word32])
	Mem1348[0x00140030<p32>:word32] = v154_2
	return v154_1179
l00111EC3:
l00111EC4:
	loc6 = ___cxa_find_matching_catch_2()
	loc22 = loc21
l00111ED9:
	branch loc22 == 0<32> != 0<32> l00111EEF
l00111EE5:
	_free(loc22)
l00111EEF:
	loc12_1272 = loc6
l00111EF7:
	fn0011BAF7(v154_2 + 0x10<32>)
	fn0011BAF7(v154_2 + 0x1C<32>)
	fn0011BAF7(v154_2 + 0x28<32>)
	loc14_1376 = loc12_1272
l00111F0F:
l00111F10:
	fn0011B43F(Mem1395[v154_2 + 0x34<32>:word32])
	___resumeException(loc14_1376)
	return 0<32>
fn0011187C_exit:


void fn00111F27(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00111F27_entry:
l00111F27:
	v190_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x70<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00111F43
l00111F3D:
	abortStackOverflow(0x70<32>)
l00111F43:
	branch !arg0 l001124FE
l00111FA9:
	v190_748 = fn000EA9F7(arg2, 0x5328<32>)
	branch !arg1 l001120E8
l00111FB8:
	Mem919[arg3:word32] = Mem7[v190_2 + 0x6C<32>:word32]
	branch Mem919[arg8 + 0xB<32>:int8] >= 0<8> l0011204E
l00112031:
	Mem968[Mem919[arg8:word32]:byte] = 0<8>
	Mem975[arg8 + 4<32>:word32] = 0<32>
	goto l0011205C
l0011204E:
	Mem957[arg8:byte] = 0<8>
	Mem961[arg8 + 0xB<32>:byte] = 0<8>
l0011205C:
	Mem977[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg8, 0<32>)
	v197_982 = Mem977[0x00140048<p32>:word32]
	Mem985[0x00140048<p32>:word32] = 0<32>
	branch !(v197_982 & 1<32>) l0011208C
l0011207D:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011208C:
	Mem1004[arg8:word64] = Mem985[v190_2 + 0x60<32>:word64]
	Mem1012[arg8 + 8<32>:word32] = Mem1004[v190_2 + 0x68<32>:word32]
	loc10_1014 = 0<32>
l001120AC:
	branch loc10_1014 != 3<32> l001120BE
l001120BB:
	goto l001120DC
l001120BE:
	Mem1030[v190_2 + 0x60<32> + (loc10_1014 << 2<32>):word32] = 0<32>
	loc10_1014 = loc10_1014 + 1<32>
	goto l001120AC
l001120DC:
	fn0011BAF7(v190_2 + 0x60<32>)
	goto l00112239
l001120E8:
	Mem773[arg3:word32] = Mem7[v190_2 + 0x5C<32>:word32]
	branch Mem773[arg8 + 0xB<32>:int8] >= 0<8> l00112194
l00112173:
	Mem822[Mem773[arg8:word32]:byte] = 0<8>
	Mem829[arg8 + 4<32>:word32] = 0<32>
	goto l001121A3
l00112194:
	Mem811[arg8:byte] = 0<8>
	Mem815[arg8 + 0xB<32>:byte] = 0<8>
l001121A3:
	Mem831[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg8, 0<32>)
	v197_836 = Mem831[0x00140048<p32>:word32]
	Mem839[0x00140048<p32>:word32] = 0<32>
	branch !(v197_836 & 1<32>) l001121DA
l001121C8:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001121DA:
	Mem858[arg8:word64] = Mem839[v190_2 + 0x50<32>:word64]
	Mem866[arg8 + 8<32>:word32] = Mem858[v190_2 + 0x58<32>:word32]
	loc11_868 = 0<32>
l001121FA:
	branch loc11_868 != 3<32> l0011220C
l00112209:
	goto l0011222E
l0011220C:
	Mem884[v190_2 + 0x50<32> + (loc11_868 << 2<32>):word32] = 0<32>
	loc11_868 = loc11_868 + 1<32>
	goto l001121FA
l0011222E:
	fn0011BAF7(v190_2 + 0x50<32>)
l00112239:
	Mem1074[arg4:byte] = Mem1045[Mem1045[v190_748:word32] + 0xC<32>:byte]
	Mem1102[arg5:byte] = Mem1074[Mem1074[v190_748:word32] + 0x10<32>:byte]
	branch Mem1102[arg6 + 0xB<32>:int8] >= 0<8> l00112316
l001122F5:
	Mem1166[Mem1102[arg6:word32]:byte] = 0<8>
	Mem1173[arg6 + 4<32>:word32] = 0<32>
	goto l00112325
l00112316:
	Mem1155[arg6:byte] = 0<8>
	Mem1159[arg6 + 0xB<32>:byte] = 0<8>
l00112325:
	Mem1175[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg6, 0<32>)
	v196_1180 = Mem1175[0x00140048<p32>:word32]
	Mem1183[0x00140048<p32>:word32] = 0<32>
	branch !(v196_1180 & 1<32>) l0011235C
l0011234A:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011235C:
	Mem1202[arg6:word64] = Mem1183[v190_2 + 0x44<32>:word64]
	Mem1210[arg6 + 8<32>:word32] = Mem1202[v190_2 + 0x4C<32>:word32]
	loc12_1212 = 0<32>
l0011237C:
	branch loc12_1212 != 3<32> l0011238E
l0011238B:
	goto l001123B0
l0011238E:
	Mem1228[v190_2 + 0x44<32> + (loc12_1212 << 2<32>):word32] = 0<32>
	loc12_1212 = loc12_1212 + 1<32>
	goto l0011237C
l001123B0:
	fn0011BAF7(v190_2 + 0x44<32>)
	branch Mem1240[arg7 + 0xB<32>:int8] >= 0<8> l00112429
l00112408:
	Mem1311[Mem1240[arg7:word32]:byte] = 0<8>
	Mem1318[arg7 + 4<32>:word32] = 0<32>
	goto l00112438
l00112429:
	Mem1300[arg7:byte] = 0<8>
	Mem1304[arg7 + 0xB<32>:byte] = 0<8>
l00112438:
	Mem1320[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg7, 0<32>)
	v204_1325 = Mem1320[0x00140048<p32>:word32]
	Mem1328[0x00140048<p32>:word32] = 0<32>
	branch !(v204_1325 & 1<32>) l0011246F
l0011245D:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011246F:
	Mem1347[arg7:word64] = Mem1328[v190_2 + 0x38<32>:word64]
	Mem1355[arg7 + 8<32>:word32] = Mem1347[v190_2 + 0x40<32>:word32]
	loc13_1357 = 0<32>
l0011248F:
	branch loc13_1357 != 3<32> l001124A1
l0011249E:
	goto l001124C3
l001124A1:
	Mem1373[v190_2 + 0x38<32> + (loc13_1357 << 2<32>):word32] = 0<32>
	loc13_1357 = loc13_1357 + 1<32>
	goto l0011248F
l001124C3:
	fn0011BAF7(v190_2 + 0x38<32>)
	loc194_1403 = (Mem1385[Mem1385[v190_748:word32] + 0x24<32>:word32] & 0x1FF<32>) + 0xB00<32>
	goto l001129F3
l001124FE:
	v190_68 = fn000EA9F7(arg2, 0x5320<32>)
	branch !arg1 l00112643
l0011250E:
	Mem249[arg3:word32] = Mem7[v190_2 + 0x34<32>:word32]
	branch Mem249[arg8 + 0xB<32>:int8] >= 0<8> l001125A8
l0011258B:
	Mem298[Mem249[arg8:word32]:byte] = 0<8>
	Mem305[arg8 + 4<32>:word32] = 0<32>
	goto l001125B6
l001125A8:
	Mem287[arg8:byte] = 0<8>
	Mem291[arg8 + 0xB<32>:byte] = 0<8>
l001125B6:
	Mem307[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg8, 0<32>)
	v197_312 = Mem307[0x00140048<p32>:word32]
	Mem315[0x00140048<p32>:word32] = 0<32>
	branch !(v197_312 & 1<32>) l001125E6
l001125D7:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001125E6:
	Mem334[arg8:word64] = Mem315[v190_2 + 0x28<32>:word64]
	Mem342[arg8 + 8<32>:word32] = Mem334[v190_2 + 0x30<32>:word32]
	loc14_344 = 0<32>
l00112606:
	branch loc14_344 != 3<32> l00112618
l00112615:
	goto l00112636
l00112618:
	Mem360[v190_2 + 0x28<32> + (loc14_344 << 2<32>):word32] = 0<32>
	loc14_344 = loc14_344 + 1<32>
	goto l00112606
l00112636:
	fn0011BAF7(v190_2 + 0x28<32>)
	goto l00112777
l00112643:
	Mem100[arg3:word32] = Mem7[v190_2 + 0x24<32>:word32]
	branch Mem100[arg8 + 0xB<32>:int8] >= 0<8> l001126DD
l001126C0:
	Mem152[Mem100[arg8:word32]:byte] = 0<8>
	Mem159[arg8 + 4<32>:word32] = 0<32>
	goto l001126EB
l001126DD:
	Mem141[arg8:byte] = 0<8>
	Mem145[arg8 + 0xB<32>:byte] = 0<8>
l001126EB:
	Mem161[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg8, 0<32>)
	v197_166 = Mem161[0x00140048<p32>:word32]
	Mem169[0x00140048<p32>:word32] = 0<32>
	branch !(v197_166 & 1<32>) l0011271B
l0011270C:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011271B:
	Mem188[arg8:word64] = Mem169[v190_2 + 0x18<32>:word64]
	Mem196[arg8 + 8<32>:word32] = Mem188[v190_2 + 0x20<32>:word32]
	loc15_198 = 0<32>
l0011273B:
	branch loc15_198 != 3<32> l0011274D
l0011274A:
	goto l0011276B
l0011274D:
	Mem214[v190_2 + 0x18<32> + (loc15_198 << 2<32>):word32] = 0<32>
	loc15_198 = loc15_198 + 1<32>
	goto l0011273B
l0011276B:
	fn0011BAF7(v190_2 + 0x18<32>)
l00112777:
	Mem407[arg4:byte] = Mem375[Mem375[v190_68:word32] + 0xC<32>:byte]
	Mem438[arg5:byte] = Mem407[Mem407[v190_68:word32] + 0x10<32>:byte]
	branch Mem438[arg6 + 0xB<32>:int8] >= 0<8> l00112839
l0011281C:
	Mem505[Mem438[arg6:word32]:byte] = 0<8>
	Mem512[arg6 + 4<32>:word32] = 0<32>
	goto l00112847
l00112839:
	Mem494[arg6:byte] = 0<8>
	Mem498[arg6 + 0xB<32>:byte] = 0<8>
l00112847:
	Mem514[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg6, 0<32>)
	v196_519 = Mem514[0x00140048<p32>:word32]
	Mem522[0x00140048<p32>:word32] = 0<32>
	branch !(v196_519 & 1<32>) l00112877
l00112868:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00112877:
	Mem541[arg6:word64] = Mem522[v190_2 + 0xC<32>:word64]
	Mem549[arg6 + 8<32>:word32] = Mem541[v190_2 + 0x14<32>:word32]
	loc16_551 = 0<32>
l00112897:
	branch loc16_551 != 3<32> l001128A9
l001128A6:
	goto l001128C7
l001128A9:
	Mem567[v190_2 + 0xC<32> + (loc16_551 << 2<32>):word32] = 0<32>
	loc16_551 = loc16_551 + 1<32>
	goto l00112897
l001128C7:
	fn0011BAF7(v190_2 + 0xC<32>)
	branch Mem579[arg7 + 0xB<32>:int8] >= 0<8> l00112931
l00112914:
	Mem653[Mem579[arg7:word32]:byte] = 0<8>
	Mem660[arg7 + 4<32>:word32] = 0<32>
	goto l0011293F
l00112931:
	Mem642[arg7:byte] = 0<8>
	Mem646[arg7 + 0xB<32>:byte] = 0<8>
l0011293F:
	Mem662[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg7, 0<32>)
	v204_667 = Mem662[0x00140048<p32>:word32]
	Mem670[0x00140048<p32>:word32] = 0<32>
	branch !(v204_667 & 1<32>) l0011296F
l00112960:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011296F:
	Mem689[arg7:word64] = Mem670[v190_2:word64]
	Mem697[arg7 + 8<32>:word32] = Mem689[v190_2 + 8<32>:word32]
	loc17_699 = 0<32>
l0011298F:
	branch loc17_699 != 3<32> l001129A1
l0011299E:
	goto l001129BF
l001129A1:
	Mem715[v190_2 + (loc17_699 << 2<32>):word32] = 0<32>
	loc17_699 = loc17_699 + 1<32>
	goto l0011298F
l001129BF:
	fn0011BAF7(v190_2)
	loc194_1403 = (Mem727[Mem727[v190_68:word32] + 0x24<32>:word32] & 0x1FF<32>) + 0xB00<32>
l001129F3:
	Mem1437[arg9:word32] = loc194_1403
	Mem1466[0x00140030<p32>:word32] = v190_2
	return
fn00111F27_exit:


void fn00112A04(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..7] Stack +0028:[0..7] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00112A04_entry:
l00112A04:
	Mem13[arg2:word32] = arg0
	v171_42 = (arg3 & 0x200<32>) == 0<32>
	loc22_67 = 0<32>
	loc26_71 = arg4
l00112A63:
	branch loc22_67 != 4<32> l00112A75
l00112A72:
	goto l001130D9
l00112A75:
	v169_92 = CONVERT(Mem84[arg8 + loc22_67:int8], byte, int32)
l00112A8D:
	switch (v169_92) { l00112AAA l00112AC2 l00112B9E l00112B1E l00112C7B }
l00112AAA:
	Mem951[arg1:word32] = Mem84[arg2:word32]
	loc33_716 = loc26_71
	goto l001130C6
l00112AC2:
	Mem907[arg1:word32] = Mem84[arg2:word32]
	v173_925 = (Mem907[Mem907[arg6:word32] + 0x1C<32>:word32] & 0x1FF<32>) + 0x1B20<32>
	v173_928 = Mem907[arg2:word32]
	Mem936[arg2:word32] = v173_928 + 1<32>
	Mem940[v173_928:byte] = SLICE(v173_925, byte, 0)
	loc33_716 = loc26_71
	goto l001130C6
l00112B1E:
	Mem828 = Mem84
	v176_829 = Mem828[arg13 + 0xB<32>:int8]
	v169_830 = CONVERT(v176_829, int8, word32)
	v169_836 = CONVERT(v176_829, byte, int32)
	v169_842 = Mem828[arg13 + 4<32>:word32]
	branch v169_836 >= 0<32> l00112B4B
l00112B48:
	v169_849 = v169_842
	goto l00112B4D
l00112B4B:
	v169_849 = v169_830 & 0xFF<32>
l00112B4D:
	branch v169_849 != 0<32> l00112B60
l00112B5B:
	goto l00112B9A
l00112B60:
	v169_862 = Mem828[arg13:word32]
	branch v169_836 >= 0<32> l00112B6E
l00112B6B:
	v169_866 = v169_862
	goto l00112B70
l00112B6E:
	v169_866 = arg13
l00112B70:
	v177_872 = Mem828[v169_866:int8]
	v169_879 = Mem828[arg2:word32]
	Mem887[arg2:word32] = v169_879 + 1<32>
	Mem891[v169_879:byte] = v177_872
l00112B9A:
	loc33_716 = loc26_71
	goto l001130C6
l00112B9E:
	Mem721 = Mem84
	v179_722 = Mem721[arg12 + 0xB<32>:int8]
	v169_723 = CONVERT(v179_722, int8, word32)
	v169_729 = CONVERT(v179_722, byte, int32)
	v169_735 = Mem721[arg12 + 4<32>:word32]
	branch v169_729 >= 0<32> l00112BD3
l00112BCF:
	v169_742 = v169_735
	goto l00112BD6
l00112BD3:
	v169_742 = v169_723 & 0xFF<32>
l00112BD6:
	branch !(v171_42 | v169_742 == 0<32>) l00112BF6
l00112BF1:
	goto l00112C77
l00112BF6:
	v169_761 = Mem721[arg12:word32]
	branch v169_729 >= 0<32> l00112C07
l00112C03:
	v169_765 = v169_761
	goto l00112C09
l00112C07:
	v169_765 = arg12
l00112C09:
	v169_772 = v169_765 + v169_742
	loc20_782 = Mem721[arg2:word32]
	loc38_784 = v169_765
l00112C2B:
	branch loc38_784 != v169_772 l00112C3E
l00112C3B:
	goto l00112C6A
l00112C3E:
	Mem801[loc20_782:byte] = Mem793[loc38_784:int8]
	loc20_782 = loc20_782 + 1<32>
	loc38_784 = loc38_784 + 1<32>
	goto l00112C2B
l00112C6A:
	Mem817[arg2:word32] = loc20_782
l00112C77:
	loc33_716 = loc26_71
	goto l001130C6
l00112C7B:
	Mem99 = Mem84
	v169_100 = Mem99[arg2:word32]
	v169_105 = loc26_71 + 1<32>
	branch !arg7 l00112C96
l00112C92:
	v169_109 = v169_105
	goto l00112C98
l00112C96:
	v169_109 = loc26_71
l00112C98:
	loc21_114 = v169_109
l00112CA1:
	branch loc21_114 <u arg5 != 0<32> l00112CB4
l00112CB1:
	goto l00112D2E
l00112CB4:
	v182_125 = Mem99[loc21_114:int8]
	branch v182_125 > 0xFF<8> != 0<32> l00112CD4
l00112CD1:
	goto l00112D2E
l00112CD4:
	branch (Mem99[Mem99[arg6 + 8<32>:word32] + (CONVERT(v182_125, byte, int32) << 1<32>):int16] & 0x800<16>) != 0<16> l00112D1F
l00112D1C:
	goto l00112D2E
l00112D1F:
	loc21_114 = loc21_114 + 1<32>
	goto l00112CA1
l00112D2E:
	branch arg14 <= 0<32> l00112E46
l00112D34:
	loc27_190 = arg14
	loc30_192 = loc21_114
l00112D3E:
	v171_202 = loc27_190 > 0<32>
	branch (loc30_192 >u v169_109 & v171_202) != 0<32> l00112D63
l00112D60:
	goto l00112DAA
l00112D63:
	v169_212 = loc30_192 + 0xFFFFFFFF<32>
	v184_216 = Mem215[v169_212:int8]
	v169_221 = Mem215[arg2:word32]
	Mem229[arg2:word32] = v169_221 + 1<32>
	Mem233[v169_221:byte] = v184_216
	loc27_190 = loc27_190 + 0xFFFFFFFF<32>
	loc30_192 = v169_212
	goto l00112D3E
l00112DAA:
	branch !v171_202 l00112DE7
l00112DB1:
	loc168_1456 = (Mem215[Mem215[arg6:word32] + 0x1C<32>:word32] & 0x1FF<32>) + 0x1B20<32>
	goto l00112DEC
l00112DE7:
	loc168_1456 = 0<32>
l00112DEC:
	loc29_272 = loc27_190
l00112DF3:
	v169_281 = Mem280[arg2:word32]
	Mem289[arg2:word32] = v169_281 + 1<32>
	branch loc29_272 > 0<32> != 0<32> l00112E1F
l00112E1C:
	goto l00112E37
l00112E1F:
	Mem296[v169_281:byte] = SLICE(loc168_1456, byte, 0)
	loc29_272 = loc29_272 + 0xFFFFFFFF<32>
	goto l00112DF3
l00112E37:
	Mem313[v169_281:byte] = SLICE(arg9, byte, 0)
	loc34_184 = loc30_192
	goto l00112E4A
l00112E46:
	loc34_184 = loc21_114
l00112E4A:
	v171_326 = loc34_184 == v169_109
l00112E53:
	branch !v171_326 l00112EA7
l00112E5A:
	v173_625 = (Mem338[Mem338[arg6:word32] + 0x1C<32>:word32] & 0x1FF<32>) + 0x1B20<32>
	v173_632 = Mem338[arg2:word32]
	Mem640[arg2:word32] = v173_632 + 1<32>
	Mem644[v173_632:byte] = SLICE(v173_625, byte, 0)
	goto l00113050
l00112EA7:
	v189_340 = Mem338[arg11 + 0xB<32>:int8]
	v169_341 = CONVERT(v189_340, int8, word32)
	v169_347 = CONVERT(v189_340, byte, int32)
	v169_360 = Mem338[arg11 + 4<32>:word32]
	branch v169_347 >= 0<32> l00112ED1
l00112ECE:
	v169_367 = v169_360
	goto l00112ED3
l00112ED1:
	v169_367 = v169_341 & 0xFF<32>
l00112ED3:
	branch v169_367 != 0<32> l00112EF2
l00112EE1:
	loc17_1547 = 0xFFFFFFFF<32>
	goto l00112F26
l00112EF2:
	v169_387 = Mem338[arg11:word32]
	branch v169_347 >= 0<32> l00112F00
l00112EFD:
	v169_391 = v169_387
	goto l00112F02
l00112F00:
	v169_391 = arg11
l00112F02:
	loc17_1547 = CONVERT(Mem338[v169_391:int8], byte, int32)
l00112F26:
	loc24_1548 = 0<32>
	loc25_1546 = 0<32>
	loc35_1537 = loc34_184
l00112F29:
	branch loc35_1537 != v169_109 l00112F37
l00112F34:
	goto l00113051
l00112F37:
	branch loc25_1546 != loc17_1547 l00112FFF
l00112F42:
	v169_448 = Mem447[arg2:word32]
	Mem456[arg2:word32] = v169_448 + 1<32>
	Mem461[v169_448:byte] = SLICE(arg10, byte, 0)
	v192_468 = Mem461[arg11 + 0xB<32>:int8]
	v169_464 = loc24_1548 + 1<32>
	v169_469 = CONVERT(v192_468, int8, word32)
	v169_475 = CONVERT(v192_468, byte, int32)
	v169_481 = Mem461[arg11 + 4<32>:word32]
	branch v169_475 >= 0<32> l00112F8F
l00112F8C:
	v169_488 = v169_481
	goto l00112F91
l00112F8F:
	v169_488 = v169_469 & 0xFF<32>
l00112F91:
	branch v169_464 >=u v169_488 l00112FF1
l00112F9F:
	v169_509 = Mem461[arg11:word32]
	branch v169_475 >= 0<32> l00112FAD
l00112FAA:
	v169_513 = v169_509
	goto l00112FAF
l00112FAD:
	v169_513 = arg11
l00112FAF:
	v193_524 = Mem461[v169_513 + v169_464:int8]
	v169_539 = CONVERT(v193_524, byte, int32)
	branch v193_524 != 0x7F<8> l00112FDF
l00112FDC:
	v169_542 = 0xFFFFFFFF<32>
	goto l00112FE1
l00112FDF:
	v169_542 = v169_539
l00112FE1:
	loc28_439 = v169_542
	goto l00112FFD
l00112FF1:
	loc28_439 = loc25_1546
l00112FFD:
	loc31_442 = v169_464
	loc32_444 = 0<32>
	goto l0011300B
l00112FFF:
	loc28_439 = loc17_1547
	loc31_442 = loc24_1548
	loc32_444 = loc25_1546
l0011300B:
	v169_560 = loc35_1537 + 0xFFFFFFFF<32>
	v194_566 = Mem563[v169_560:int8]
	v169_575 = Mem563[arg2:word32]
	Mem583[arg2:word32] = v169_575 + 1<32>
	Mem587[v169_575:byte] = v194_566
	loc17_1547 = loc28_439
	loc24_1548 = loc31_442
	loc25_1546 = loc32_444 + 1<32>
	loc35_1537 = v169_560
	goto l00112F29
l00113050:
l00113051:
	v169_648 = Mem647[arg2:word32]
	branch v169_100 != v169_648 l0011306A
l00113065:
	loc33_716 = v169_109
	goto l001130BD
l0011306A:
	loc19_673 = v169_648
	loc23_675 = v169_100
l00113075:
	v169_679 = loc19_673 + 0xFFFFFFFF<32>
	branch loc23_675 <u v169_679 != 0<32> l0011308F
l00113088:
	loc33_716 = v169_109
	goto l001130C7
l0011308F:
	v196_690 = Mem689[loc23_675:int8]
	Mem700[loc23_675:byte] = Mem689[v169_679:int8]
	Mem704[v169_679:byte] = v196_690
	loc19_673 = v169_679
	loc23_675 = loc23_675 + 1<32>
	goto l00113075
l001130BD:
l001130C6:
l001130C7:
	loc22_67 = loc22_67 + 1<32>
	loc26_71 = loc33_716
	goto l00112A63
l001130D9:
	v200_1032 = Mem84[arg13 + 0xB<32>:int8]
	v169_1033 = CONVERT(v200_1032, int8, word32)
	v169_1039 = CONVERT(v200_1032, byte, int32)
	v169_1076 = Mem84[arg13 + 4<32>:word32]
	branch v169_1039 >= 0<32> l00113105
l00113102:
	v169_1083 = v169_1076
	goto l00113107
l00113105:
	v169_1083 = v169_1033 & 0xFF<32>
l00113107:
	branch v169_1083 <=u 1<32> l00113180
l00113115:
	v169_1126 = Mem84[arg13:word32]
	branch v169_1039 >= 0<32> l00113123
l00113120:
	v169_1130 = v169_1126
	goto l00113125
l00113123:
	v169_1130 = arg13
l00113125:
	v169_1137 = v169_1130 + v169_1083
	loc18_1146 = Mem84[arg2:word32]
	loc36_1148 = v169_1130
l00113140:
	v169_1152 = loc36_1148 + 1<32>
	branch v169_1152 != v169_1137 l00113157
l00113154:
	goto l00113176
l00113157:
	Mem1169[loc18_1146:byte] = Mem1161[v169_1152:int8]
	loc18_1146 = loc18_1146 + 1<32>
	loc36_1148 = v169_1152
	goto l00113140
l00113176:
	Mem1181[arg2:word32] = loc18_1146
l00113180:
l00113191:
	switch (CONVERT(SLICE(arg3, byte, 0) & 0xB0<8>, byte, int32) - 0x10<32>) { l001131CD l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131D0 l001131B9 }
l001131B9:
	Mem1287[arg1:word32] = Mem1282[arg2:word32]
	goto l001131D8
l001131CD:
	goto l001131D8
l001131D0:
	Mem1279[arg1:word32] = arg0
l001131D8:
	return
fn00112A04_exit:


void fn001131DC(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn001131DC_entry:
l001131DC:
	return
fn001131DC_exit:


void fn001131E5(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001131E5_entry:
l001131E5:
	fn0011B709(arg0)
	return
fn001131E5_exit:


word32 fn001131F3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..63]
// LiveOut:
// Trashed: stack
// Preserved:
fn001131F3_entry:
l001131F3:
	v187_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x3F0<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011320F
l00113209:
	abortStackOverflow(0x3F0<32>)
l0011320F:
	Mem85[v187_2 + 0x378<32>:word32] = v187_2 + 0x384<32>
	Mem91[v187_2:real64] = arg5
	v187_96 = fn000DB3DF(v187_2 + 0x384<32>, 0x64<32>, 0x3DC0<32>, v187_2)
l001132D9:
	branch v187_96 <=u 0x63<32> l00113417
l001132DF:
	Mem114[0x00140048<p32>:word32] = 0<32>
	v187_116 = invoke_i(0x17B<32>)
	v187_118 = Mem114[0x00140048<p32>:word32]
	Mem121[0x00140048<p32>:word32] = 0<32>
	branch !(v187_118 & 1<32>) l0011330B
l001132FD:
	loc27 = 0<32>
	loc30 = 0<32>
	loc188_112 = 8<32>
	goto l00113415
l0011330B:
	Mem128[0x00140048<p32>:word32] = 0<32>
	Mem131[v187_2 + 8<32>:real64] = arg5
	v187_137 = invoke_iiiii(0x18D<32>, v187_2 + 0x378<32>, v187_116, 0x3DC0<32>, v187_2 + 8<32>)
	v187_139 = Mem131[0x00140048<p32>:word32]
	Mem142[0x00140048<p32>:word32] = 0<32>
	branch !(v187_139 & 1<32>) l0011334B
l0011333D:
	loc27 = 0<32>
	loc30 = 0<32>
	loc188_112 = 8<32>
	goto l00113414
l0011334B:
	v187_149 = Mem142[v187_2 + 0x378<32>:word32]
	branch v187_149 != 0<32> l00113397
l0011335E:
	Mem161[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v187_163 = Mem161[0x00140048<p32>:word32]
	Mem166[0x00140048<p32>:word32] = 0<32>
	branch !(v187_163 & 1<32>) l0011338A
l0011337A:
	loc27 = 0<32>
	loc30 = 0<32>
	loc188_112 = 8<32>
	goto l0011342E
l0011338A:
	loc94_159 = Mem166[v187_2 + 0x378<32>:word32]
	goto l0011339F
l00113397:
	loc94_159 = v187_149
l0011339F:
	v187_183 = _malloc(v187_137 << 2<32>)
	branch v187_183 != 0<32> l001133FE
l001133BD:
	Mem204[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v187_206 = Mem204[0x00140048<p32>:word32]
	Mem209[0x00140048<p32>:word32] = 0<32>
	branch !(v187_206 & 1<32>) l001133E7
l001133D9:
	loc27 = v187_183
	loc30 = loc94_159
	loc188_112 = 8<32>
	goto l001133FC
l001133E7:
	loc6 = 0<32>
	loc11 = v187_137
	loc28 = v187_183
	loc31 = loc94_159
	loc188_112 = 0xB<32>
l001133FC:
	goto l00113413
l001133FE:
	loc6 = v187_183
	loc11 = v187_137
	loc28 = v187_183
	loc31 = loc94_159
	loc188_112 = 0xB<32>
l00113413:
l00113414:
l00113415:
	goto l0011342D
l00113417:
	loc6 = v187_2 + 0x1E8<32>
	loc11 = v187_96
	loc28 = 0<32>
	loc31 = 0<32>
	loc188_112 = 0xB<32>
l0011342D:
l0011342E:
	branch loc188_112 != 0xB<32> l00113A5D
l00113437:
	Mem259[0x00140048<p32>:word32] = 0<32>
	v187_272 = invoke_ii(0x167<32>, arg3)
	v187_274 = Mem259[0x00140048<p32>:word32]
	Mem277[0x00140048<p32>:word32] = 0<32>
	branch !(v187_274 & 1<32>) l00113465
l00113457:
	loc27 = loc28
	loc30 = loc31
	loc188_112 = 8<32>
	goto l00113A5B
l00113465:
	Mem292[v187_2 + 0x1E0<32>:word32] = v187_272
	Mem294[0x00140048<p32>:word32] = 0<32>
	v187_298 = invoke_iii(0x164<32>, v187_2 + 0x1E0<32>, 0x4C90<32>)
	v187_300 = Mem294[0x00140048<p32>:word32]
	Mem303[0x00140048<p32>:word32] = 0<32>
l0011348E:
	branch !(v187_300 & 1<32>) l001134A9
l00113494:
	loc16_1536 = ___cxa_find_matching_catch_2()
	loc89_1541 = v187_272
	goto l00113A43
l001134A9:
	v187_317 = Mem303[v187_2 + 0x378<32>:word32]
	v187_340 = Mem303[Mem303[v187_298:word32] + 0x30<32>:word32]
	Mem343[0x00140048<p32>:word32] = 0<32>
	invoke_iiiii(v187_340, v187_298, v187_317, v187_317 + loc11, loc6)
	v187_359 = Mem343[0x00140048<p32>:word32]
	Mem362[0x00140048<p32>:word32] = 0<32>
	branch !(v187_359 & 1<32>) l00113514
l001134FD:
	loc16_1536 = ___cxa_find_matching_catch_2()
	loc89_1541 = v187_272
	goto l00113A44
l00113514:
	branch loc11 != 0<32> l00113527
l00113521:
	loc145_389 = 0<32>
	goto l0011354E
l00113527:
	loc145_389 = Mem362[Mem362[v187_2 + 0x378<32>:word32]:int8] == 0x2D<8>
l0011354E:
	Mem402[v187_2 + 0x1CC<32>:word64] = 0<64>
	Mem407[v187_2 + 0x1D4<32>:word32] = 0<32>
	loc7_409 = 0<32>
l00113566:
	branch loc7_409 != 3<32> l00113578
l00113575:
	goto l0011359A
l00113578:
	Mem425[v187_2 + 0x1CC<32> + (loc7_409 << 2<32>):word32] = 0<32>
	loc7_409 = loc7_409 + 1<32>
	goto l00113566
l0011359A:
	Mem443[v187_2 + 0x1C0<32>:word64] = 0<64>
	Mem448[v187_2 + 0x1C8<32>:word32] = 0<32>
	loc8_450 = 0<32>
l001135B3:
	branch loc8_450 != 3<32> l001135C5
l001135C2:
	goto l001135E7
l001135C5:
	Mem466[v187_2 + 0x1C0<32> + (loc8_450 << 2<32>):word32] = 0<32>
	loc8_450 = loc8_450 + 1<32>
	goto l001135B3
l001135E7:
	Mem485[v187_2 + 0x1B4<32>:word64] = 0<64>
	Mem490[v187_2 + 0x1BC<32>:word32] = 0<32>
	loc9_492 = 0<32>
l00113600:
	branch loc9_492 != 3<32> l00113612
l0011360F:
	goto l00113634
l00113612:
	Mem508[v187_2 + 0x1B4<32> + (loc9_492 << 2<32>):word32] = 0<32>
	loc9_492 = loc9_492 + 1<32>
	goto l00113600
l00113634:
	Mem516[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiii(0x1B6<32>, arg2, loc145_389, v187_2 + 0x1E0<32>, v187_2 + 0x380<32>, v187_2 + 0x1DC<32>, v187_2 + 0x1D8<32>, v187_2 + 0x1CC<32>, v187_2 + 0x1C0<32>, v187_2 + 0x1B4<32>, v187_2 + 0x1B0<32>)
	v187_597 = Mem516[0x00140048<p32>:word32]
	Mem600[0x00140048<p32>:word32] = 0<32>
	branch !(v187_597 & 1<32>) l0011367D
l0011366C:
	loc14_1354 = ___cxa_find_matching_catch_2()
	goto l00113A1F
l0011367D:
	v187_607 = Mem600[v187_2 + 0x1B0<32>:word32]
	branch loc11 <= v187_607 l00113770
l00113693:
	v202_720 = Mem600[v187_2 + 0x1BF<32>:int8]
	v187_705 = loc11 - v187_607
	v187_721 = CONVERT(v202_720, int8, word32)
	v187_736 = Mem600[v187_2 + 0x1B8<32>:word32]
	branch v202_720 >= 0<8> l001136F2
l001136EE:
	v187_743 = v187_736
	goto l001136F5
l001136F2:
	v187_743 = v187_721 & 0xFF<32>
l001136F5:
	v203_758 = Mem600[v187_2 + 0x1CB<32>:int8]
	v187_759 = CONVERT(v203_758, int8, word32)
	v187_774 = Mem600[v187_2 + 0x1C4<32>:word32]
	branch v203_758 >= 0<8> l00113746
l00113742:
	v187_781 = v187_774
	goto l00113749
l00113746:
	v187_781 = v187_759 & 0xFF<32>
l00113749:
	loc21_702 = v187_743 + (v187_705 << 1<32> | 1<32>) + v187_781
	goto l0011381D
l00113770:
	v204_627 = Mem600[v187_2 + 0x1BF<32>:int8]
	v187_628 = CONVERT(v204_627, int8, word32)
	v187_643 = Mem600[v187_2 + 0x1B8<32>:word32]
	branch v204_627 >= 0<8> l001137BD
l001137B9:
	v187_650 = v187_643
	goto l001137C0
l001137BD:
	v187_650 = v187_628 & 0xFF<32>
l001137C0:
	v205_665 = Mem600[v187_2 + 0x1CB<32>:int8]
	v187_666 = CONVERT(v205_665, int8, word32)
	v187_681 = Mem600[v187_2 + 0x1C4<32>:word32]
	branch v205_665 >= 0<8> l00113805
l00113802:
	v187_688 = v187_681
	goto l00113807
l00113805:
	v187_688 = v187_666 & 0xFF<32>
l00113807:
	loc21_702 = v187_650 + 2<32> + v187_688
l0011381D:
	v187_810 = loc21_702 + v187_607
l0011382E:
	branch v187_810 <=u 0x64<32> l001138B4
l00113834:
	v187_846 = _malloc(v187_810 << 2<32>)
	branch v187_846 != 0<32> l001138A0
l00113851:
	Mem864[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v187_866 = Mem864[0x00140048<p32>:word32]
	Mem869[0x00140048<p32>:word32] = 0<32>
	branch !(v187_866 & 1<32>) l00113884
l0011386D:
	loc12 = ___cxa_find_matching_catch_2()
	loc26 = v187_846
	goto l001138C7
l00113884:
	loc10 = 0<32>
	loc25 = v187_846
	loc67 = Mem869[v187_2 + 0x1B0<32>:word32]
	loc188_112 = 0x25<32>
	goto l001138C7
l001138A0:
l001138B2:
	loc25 = v187_846
	loc10 = v187_846
	goto l001138C6
l001138B4:
	loc10 = v187_2 + 0x20<32>
	loc25 = 0<32>
l001138C6:
	loc67 = v187_607
	Mem934 = Mem600
	loc188_112 = 0x25<32>
l001138C7:
	branch loc188_112 != 0x25<32> l00113A01
l001138D0:
	v187_939 = Mem933[arg3 + 4<32>:word32]
	v187_976 = Mem933[v187_2 + 0x1DC<32>:word32]
	v187_987 = Mem933[v187_2 + 0x1D8<32>:word32]
	Mem990[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiiiiiiii(0x1B7<32>, loc10, v187_2 + 0x18<32>, v187_2 + 0x14<32>, v187_939, loc6, loc6 + (loc11 << 2<32>), v187_298, loc145_389, v187_2 + 0x380<32>, v187_976, v187_987, v187_2 + 0x1CC<32>, v187_2 + 0x1C0<32>, v187_2 + 0x1B4<32>, loc67)
	v187_1137 = Mem990[0x00140048<p32>:word32]
	Mem1140[0x00140048<p32>:word32] = 0<32>
	branch (v187_1137 & 1<32>) != 0<32> l001139EC
l00113932:
	Mem1193[v187_2 + 0x10<32>:word32] = Mem1140[arg1:word32]
	v187_1195 = Mem1193[v187_2 + 0x18<32>:word32]
	v187_1198 = Mem1193[v187_2 + 0x14<32>:word32]
	Mem1201[0x00140048<p32>:word32] = 0<32>
	Mem1224[v187_2 + 0x37C<32>:word32] = Mem1201[v187_2 + 0x10<32>:word32]
	v187_1254 = invoke_iiiiiii(0x194<32>, v187_2 + 0x37C<32>, loc10, v187_1195, v187_1198, arg3, arg4)
	v187_1256 = Mem1224[0x00140048<p32>:word32]
	Mem1259[0x00140048<p32>:word32] = 0<32>
	branch (v187_1256 & 1<32>) != 0<32> l001139EB
l00113983:
	branch loc25 == 0<32> != 0<32> l00113999
l0011398F:
	_free(loc25)
l00113999:
	fn0011C7BA(v187_2 + 0x1B4<32>)
	fn0011C7BA(v187_2 + 0x1C0<32>)
	fn0011BAF7(v187_2 + 0x1CC<32>)
	fn0011B43F(Mem1259[v187_2 + 0x1E0<32>:word32])
	branch loc28 == 0<32> != 0<32> l001139CC
l001139C2:
	_free(loc28)
l001139CC:
	branch loc31 == 0<32> != 0<32> l001139E2
l001139D8:
	_free(loc31)
l001139E2:
	Mem1496[0x00140030<p32>:word32] = v187_2
	return v187_1254
l001139EB:
l001139EC:
	loc12 = ___cxa_find_matching_catch_2()
	loc26 = loc25
l00113A01:
	branch loc26 == 0<32> != 0<32> l00113A17
l00113A0D:
	_free(loc26)
l00113A17:
	loc14_1354 = loc12
l00113A1F:
	fn0011C7BA(v187_2 + 0x1B4<32>)
	fn0011C7BA(v187_2 + 0x1C0<32>)
	fn0011BAF7(v187_2 + 0x1CC<32>)
	loc16_1536 = loc14_1354
	loc89_1541 = Mem1529[v187_2 + 0x1E0<32>:word32]
l00113A43:
l00113A44:
	fn0011B43F(loc89_1541)
	loc18 = loc16_1536
	loc29 = loc28
	loc32 = loc31
l00113A5B:
l00113A5D:
	branch loc188_112 != 8<32> l00113A7E
l00113A65:
	loc18 = ___cxa_find_matching_catch_2()
	loc29 = loc27
	loc32 = loc30
l00113A7E:
	branch loc29 == 0<32> != 0<32> l00113A94
l00113A8A:
	_free(loc29)
l00113A94:
	branch loc32 == 0<32> != 0<32> l00113AAA
l00113AA0:
	_free(loc32)
l00113AAA:
	___resumeException(loc18)
	return 0<32>
fn001131F3_exit:


word32 fn00113AB3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00113AB3_entry:
l00113AB3:
	v160_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x1E0<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00113ACF
l00113AC9:
	abortStackOverflow(0x1E0<32>)
l00113ACF:
	Mem71[v160_2 + 0x1D0<32>:word32] = fn000E64CA(arg3)
	Mem73[0x00140048<p32>:word32] = 0<32>
	v160_77 = invoke_iii(0x164<32>, v160_2 + 0x1D0<32>, 0x4C90<32>)
	v160_79 = Mem73[0x00140048<p32>:word32]
	Mem82[0x00140048<p32>:word32] = 0<32>
l00113B6D:
	branch !(v160_79 & 1<32>) l00113B84
l00113B73:
	loc14_1391 = ___cxa_find_matching_catch_2()
	goto l00114178
l00113B84:
	v164_100 = Mem82[arg5 + 0xB<32>:int8]
	v160_101 = CONVERT(v164_100, int8, word32)
	v160_107 = CONVERT(v164_100, byte, int32)
	v160_116 = Mem82[arg5 + 4<32>:word32]
	branch v160_107 >= 0<32> l00113BC3
l00113BC0:
	v160_123 = v160_116
	goto l00113BC5
l00113BC3:
	v160_123 = v160_101 & 0xFF<32>
l00113BC5:
	v162_129 = v160_123 == 0<32>
l00113BCF:
	branch !v162_129 l00113BDA
l00113BD5:
	goto l00113C4B
l00113BDA:
	v160_135 = Mem82[arg5:word32]
	branch v160_107 >= 0<32> l00113BE8
l00113BE5:
	v160_139 = v160_135
	goto l00113BEA
l00113BE8:
	v160_139 = arg5
l00113BEA:
	v160_145 = Mem82[v160_139:word32]
	v160_157 = Mem82[Mem82[v160_77:word32] + 0x2C<32>:word32]
	Mem160[0x00140048<p32>:word32] = 0<32>
	v160_164 = invoke_iii(v160_157, v160_77, 0x2D<32>)
	v160_166 = Mem160[0x00140048<p32>:word32]
	Mem169[0x00140048<p32>:word32] = 0<32>
	branch !(v160_166 & 1<32>) l00113C3D
l00113C2A:
	loc14_1391 = ___cxa_find_matching_catch_2()
	goto l00114179
l00113C3D:
	loc101_180 = v160_145 == v160_164
	goto l00113C4C
l00113C4B:
	loc101_180 = 0<32>
l00113C4C:
	Mem197[v160_2 + 0x1BC<32>:word64] = 0<64>
	Mem202[v160_2 + 0x1C4<32>:word32] = 0<32>
	loc7_204 = 0<32>
l00113C64:
	branch loc7_204 != 3<32> l00113C76
l00113C73:
	goto l00113C94
l00113C76:
	Mem220[v160_2 + 0x1BC<32> + (loc7_204 << 2<32>):word32] = 0<32>
	loc7_204 = loc7_204 + 1<32>
	goto l00113C64
l00113C94:
	Mem234[v160_2 + 0x1B0<32>:word64] = 0<64>
	Mem239[v160_2 + 0x1B8<32>:word32] = 0<32>
	loc8_241 = 0<32>
l00113CAD:
	branch loc8_241 != 3<32> l00113CBF
l00113CBC:
	goto l00113CDD
l00113CBF:
	Mem257[v160_2 + 0x1B0<32> + (loc8_241 << 2<32>):word32] = 0<32>
	loc8_241 = loc8_241 + 1<32>
	goto l00113CAD
l00113CDD:
	Mem272[v160_2 + 0x1A4<32>:word64] = 0<64>
	Mem277[v160_2 + 0x1AC<32>:word32] = 0<32>
	loc9_279 = 0<32>
l00113CF6:
	branch loc9_279 != 3<32> l00113D08
l00113D05:
	goto l00113D26
l00113D08:
	Mem295[v160_2 + 0x1A4<32> + (loc9_279 << 2<32>):word32] = 0<32>
	loc9_279 = loc9_279 + 1<32>
	goto l00113CF6
l00113D26:
	Mem303[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiii(0x1B6<32>, arg2, loc101_180, v160_2 + 0x1D0<32>, v160_2 + 0x1D8<32>, v160_2 + 0x1CC<32>, v160_2 + 0x1C8<32>, v160_2 + 0x1BC<32>, v160_2 + 0x1B0<32>, v160_2 + 0x1A4<32>, v160_2 + 0x1A0<32>)
	v160_368 = Mem303[0x00140048<p32>:word32]
	Mem371[0x00140048<p32>:word32] = 0<32>
	branch !(v160_368 & 1<32>) l00113D6B
l00113D5A:
	loc12_1287 = ___cxa_find_matching_catch_2()
	goto l00114160
l00113D6B:
	v174_385 = Mem371[arg5 + 0xB<32>:int8]
	v160_386 = CONVERT(v174_385, int8, word32)
	v160_404 = Mem371[arg5 + 4<32>:word32]
	branch v174_385 >= 0<8> l00113D95
l00113D92:
	v160_411 = v160_404
	goto l00113D97
l00113D95:
	v160_411 = v160_386 & 0xFF<32>
l00113D97:
	v160_418 = Mem371[v160_2 + 0x1A0<32>:word32]
	branch v160_411 <= v160_418 l00113E68
l00113DAC:
	v175_529 = Mem371[v160_2 + 0x1AF<32>:int8]
	v160_514 = v160_411 - v160_418
	v160_530 = CONVERT(v175_529, int8, word32)
	v160_545 = Mem371[v160_2 + 0x1A8<32>:word32]
	branch v175_529 >= 0<8> l00113DF9
l00113DF6:
	v160_552 = v160_545
	goto l00113DFB
l00113DF9:
	v160_552 = v160_530 & 0xFF<32>
l00113DFB:
	v176_567 = Mem371[v160_2 + 0x1BB<32>:int8]
	v160_568 = CONVERT(v176_567, int8, word32)
	v160_583 = Mem371[v160_2 + 0x1B4<32>:word32]
	branch v176_567 >= 0<8> l00113E40
l00113E3C:
	v160_590 = v160_583
	goto l00113E43
l00113E40:
	v160_590 = v160_568 & 0xFF<32>
l00113E43:
	loc17_511 = v160_552 + (v160_514 << 1<32> | 1<32>) + v160_590
	goto l00113F28
l00113E68:
	v177_435 = Mem371[v160_2 + 0x1AF<32>:int8]
	v160_436 = CONVERT(v177_435, int8, word32)
	v160_451 = Mem371[v160_2 + 0x1A8<32>:word32]
	branch v177_435 >= 0<8> l00113EB5
l00113EB1:
	v160_458 = v160_451
	goto l00113EB8
l00113EB5:
	v160_458 = v160_436 & 0xFF<32>
l00113EB8:
	v178_474 = Mem371[v160_2 + 0x1BB<32>:int8]
	v160_475 = CONVERT(v178_474, int8, word32)
	v160_490 = Mem371[v160_2 + 0x1B4<32>:word32]
	branch v178_474 >= 0<8> l00113F09
l00113F05:
	v160_497 = v160_490
	goto l00113F0C
l00113F09:
	v160_497 = v160_475 & 0xFF<32>
l00113F0C:
	loc17_511 = v160_458 + 2<32> + v160_497
l00113F28:
	v160_619 = loc17_511 + v160_418
l00113F3B:
	branch v160_619 <=u 0x64<32> l00113FE6
l00113F42:
	v160_668 = _malloc(v160_619 << 2<32>)
	branch v160_668 != 0<32> l00113FCA
l00113F65:
	Mem690[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x18A<32>)
	v160_692 = Mem690[0x00140048<p32>:word32]
	Mem695[0x00140048<p32>:word32] = 0<32>
	branch !(v160_692 & 1<32>) l00113F98
l00113F81:
	loc6 = ___cxa_find_matching_catch_2()
	loc22 = v160_668
	goto l00114000
l00113F98:
	loc10 = 0<32>
	loc21 = v160_668
	loc40 = CONVERT(Mem695[arg5 + 0xB<32>:int8], int8, word32)
	loc46 = Mem695[arg5 + 4<32>:word32]
	loc50 = Mem695[v160_2 + 0x1A0<32>:word32]
	loc161 = 0x1A<32>
	goto l00114000
l00113FCA:
l00113FE4:
	loc21 = v160_668
	loc10 = v160_668
	goto l00113FFF
l00113FE6:
	loc10 = v160_2 + 0x10<32>
	loc21 = 0<32>
l00113FFF:
	loc50 = v160_418
	loc46 = v160_404
	loc40 = v160_386
	Mem793 = Mem371
	loc161 = 0x1A<32>
l00114000:
	branch loc161 != 0x1A<32> l00114142
l00114009:
	v160_798 = Mem792[arg3 + 4<32>:word32]
	v162_824 = SLICE(loc40, byte, 0) < 0<8>
	v160_842 = Mem792[arg5:word32]
	branch !v162_824 l00114032
l0011402F:
	v160_845 = v160_842
	goto l00114034
l00114032:
	v160_845 = arg5
l00114034:
	v160_852 = loc40 & 0xFF<32>
	branch !v162_824 l00114046
l00114043:
	v160_856 = loc46
	goto l00114048
l00114046:
	v160_856 = v160_852
l00114048:
	v160_900 = Mem792[v160_2 + 0x1CC<32>:word32]
	v160_914 = Mem792[v160_2 + 0x1C8<32>:word32]
	Mem917[0x00140048<p32>:word32] = 0<32>
	invoke_viiiiiiiiiiiiiii(0x1B7<32>, loc10, v160_2 + 8<32>, v160_2 + 4<32>, v160_798, v160_845, v160_845 + (v160_856 << 2<32>), v160_77, loc101_180, v160_2 + 0x1D8<32>, v160_900, v160_914, v160_2 + 0x1BC<32>, v160_2 + 0x1B0<32>, v160_2 + 0x1A4<32>, loc50)
	v160_1079 = Mem917[0x00140048<p32>:word32]
	Mem1082[0x00140048<p32>:word32] = 0<32>
	branch (v160_1079 & 1<32>) != 0<32> l0011412D
l001140A0:
	Mem1133[v160_2:word32] = Mem1082[arg1:word32]
	v160_1135 = Mem1133[v160_2 + 8<32>:word32]
	v160_1138 = Mem1133[v160_2 + 4<32>:word32]
	Mem1141[0x00140048<p32>:word32] = 0<32>
	Mem1163[v160_2 + 0x1D4<32>:word32] = Mem1141[v160_2:word32]
	v160_1194 = invoke_iiiiiii(0x194<32>, v160_2 + 0x1D4<32>, loc10, v160_1135, v160_1138, arg3, arg4)
	v160_1196 = Mem1163[0x00140048<p32>:word32]
	Mem1199[0x00140048<p32>:word32] = 0<32>
	branch (v160_1196 & 1<32>) != 0<32> l0011412C
l001140F1:
	branch loc21 == 0<32> != 0<32> l00114107
l001140FD:
	_free(loc21)
l00114107:
	fn0011C7BA(v160_2 + 0x1A4<32>)
	fn0011C7BA(v160_2 + 0x1B0<32>)
	fn0011BAF7(v160_2 + 0x1BC<32>)
	fn0011B43F(Mem1199[v160_2 + 0x1D0<32>:word32])
	Mem1363[0x00140030<p32>:word32] = v160_2
	return v160_1194
l0011412C:
l0011412D:
	loc6 = ___cxa_find_matching_catch_2()
	loc22 = loc21
l00114142:
	branch loc22 == 0<32> != 0<32> l00114158
l0011414E:
	_free(loc22)
l00114158:
	loc12_1287 = loc6
l00114160:
	fn0011C7BA(v160_2 + 0x1A4<32>)
	fn0011C7BA(v160_2 + 0x1B0<32>)
	fn0011BAF7(v160_2 + 0x1BC<32>)
	loc14_1391 = loc12_1287
l00114178:
l00114179:
	fn0011B43F(Mem1410[v160_2 + 0x1D0<32>:word32])
	___resumeException(loc14_1391)
	return 0<32>
fn00113AB3_exit:


void fn00114190(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00114190_entry:
l00114190:
	v194_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x70<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l001141AC
l001141A6:
	abortStackOverflow(0x70<32>)
l001141AC:
	branch !arg0 l0011477D
l00114212:
	v194_744 = fn000EA9F7(arg2, 0x5338<32>)
	branch !arg1 l0011435B
l00114221:
	Mem912[arg3:word32] = Mem7[v194_2 + 0x6C<32>:word32]
	branch Mem912[arg8 + 0xB<32>:int8] >= 0<8> l001142BE
l001142A1:
	Mem963[Mem912[arg8:word32]:word32] = 0<32>
	Mem970[arg8 + 4<32>:word32] = 0<32>
	goto l001142CC
l001142BE:
	Mem953[arg8:word32] = 0<32>
	Mem957[arg8 + 0xB<32>:byte] = 0<8>
l001142CC:
	Mem972[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg8, 0<32>)
	v201_977 = Mem972[0x00140048<p32>:word32]
	Mem980[0x00140048<p32>:word32] = 0<32>
	branch !(v201_977 & 1<32>) l001142FF
l001142ED:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001142FF:
	Mem999[arg8:word64] = Mem980[v194_2 + 0x60<32>:word64]
	Mem1007[arg8 + 8<32>:word32] = Mem999[v194_2 + 0x68<32>:word32]
	loc10_1009 = 0<32>
l0011431F:
	branch loc10_1009 != 3<32> l00114331
l0011432E:
	goto l00114353
l00114331:
	Mem1025[v194_2 + 0x60<32> + (loc10_1009 << 2<32>):word32] = 0<32>
	loc10_1009 = loc10_1009 + 1<32>
	goto l0011431F
l00114353:
	fn0011C7BA(v194_2 + 0x60<32>)
	goto l001144B3
l0011435B:
	Mem769[arg3:word32] = Mem7[v194_2 + 0x5C<32>:word32]
	branch Mem769[arg8 + 0xB<32>:int8] >= 0<8> l00114412
l001143F1:
	Mem820[Mem769[arg8:word32]:word32] = 0<32>
	Mem827[arg8 + 4<32>:word32] = 0<32>
	goto l00114421
l00114412:
	Mem810[arg8:word32] = 0<32>
	Mem814[arg8 + 0xB<32>:byte] = 0<8>
l00114421:
	Mem829[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg8, 0<32>)
	v201_834 = Mem829[0x00140048<p32>:word32]
	Mem837[0x00140048<p32>:word32] = 0<32>
	branch !(v201_834 & 1<32>) l00114458
l00114446:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00114458:
	Mem856[arg8:word64] = Mem837[v194_2 + 0x50<32>:word64]
	Mem864[arg8 + 8<32>:word32] = Mem856[v194_2 + 0x58<32>:word32]
	loc11_866 = 0<32>
l00114478:
	branch loc11_866 != 3<32> l0011448A
l00114487:
	goto l001144AC
l0011448A:
	Mem882[v194_2 + 0x50<32> + (loc11_866 << 2<32>):word32] = 0<32>
	loc11_866 = loc11_866 + 1<32>
	goto l00114478
l001144AC:
	fn0011C7BA(v194_2 + 0x50<32>)
l001144B3:
	Mem1069[arg4:word32] = (Mem1041[Mem1041[v194_744:word32] + 0xC<32>:word32] & 0x1FF<32>) + 0xB00<32>
	Mem1096[arg5:word32] = (Mem1069[Mem1069[v194_744:word32] + 0x10<32>:word32] & 0x1FF<32>) + 0xB00<32>
	branch Mem1096[arg6 + 0xB<32>:int8] >= 0<8> l00114590
l0011456F:
	Mem1159[Mem1096[arg6:word32]:byte] = 0<8>
	Mem1166[arg6 + 4<32>:word32] = 0<32>
	goto l0011459F
l00114590:
	Mem1148[arg6:byte] = 0<8>
	Mem1152[arg6 + 0xB<32>:byte] = 0<8>
l0011459F:
	Mem1168[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg6, 0<32>)
	v200_1173 = Mem1168[0x00140048<p32>:word32]
	Mem1176[0x00140048<p32>:word32] = 0<32>
	branch !(v200_1173 & 1<32>) l001145D6
l001145C4:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001145D6:
	Mem1195[arg6:word64] = Mem1176[v194_2 + 0x44<32>:word64]
	Mem1203[arg6 + 8<32>:word32] = Mem1195[v194_2 + 0x4C<32>:word32]
	loc12_1205 = 0<32>
l001145F6:
	branch loc12_1205 != 3<32> l00114608
l00114605:
	goto l0011462A
l00114608:
	Mem1221[v194_2 + 0x44<32> + (loc12_1205 << 2<32>):word32] = 0<32>
	loc12_1205 = loc12_1205 + 1<32>
	goto l001145F6
l0011462A:
	fn0011BAF7(v194_2 + 0x44<32>)
	branch Mem1233[arg7 + 0xB<32>:int8] >= 0<8> l001146AC
l0011468B:
	Mem1303[Mem1233[arg7:word32]:word32] = 0<32>
	Mem1310[arg7 + 4<32>:word32] = 0<32>
	goto l001146BB
l001146AC:
	Mem1293[arg7:word32] = 0<32>
	Mem1297[arg7 + 0xB<32>:byte] = 0<8>
l001146BB:
	Mem1312[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg7, 0<32>)
	v206_1317 = Mem1312[0x00140048<p32>:word32]
	Mem1320[0x00140048<p32>:word32] = 0<32>
	branch !(v206_1317 & 1<32>) l001146F2
l001146E0:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001146F2:
	Mem1339[arg7:word64] = Mem1320[v194_2 + 0x38<32>:word64]
	Mem1347[arg7 + 8<32>:word32] = Mem1339[v194_2 + 0x40<32>:word32]
	loc13_1349 = 0<32>
l00114712:
	branch loc13_1349 != 3<32> l00114724
l00114721:
	goto l00114746
l00114724:
	Mem1365[v194_2 + 0x38<32> + (loc13_1349 << 2<32>):word32] = 0<32>
	loc13_1349 = loc13_1349 + 1<32>
	goto l00114712
l00114746:
	fn0011C7BA(v194_2 + 0x38<32>)
	loc198_1395 = (Mem1377[Mem1377[v194_744:word32] + 0x24<32>:word32] & 0x1FF<32>) + 0xB00<32>
	goto l00114C6C
l0011477D:
	v194_68 = fn000EA9F7(arg2, 0x5330<32>)
	branch !arg1 l001148BF
l0011478C:
	Mem246[arg3:word32] = Mem7[v194_2 + 0x34<32>:word32]
	branch Mem246[arg8 + 0xB<32>:int8] >= 0<8> l00114829
l0011480C:
	Mem297[Mem246[arg8:word32]:word32] = 0<32>
	Mem304[arg8 + 4<32>:word32] = 0<32>
	goto l00114837
l00114829:
	Mem287[arg8:word32] = 0<32>
	Mem291[arg8 + 0xB<32>:byte] = 0<8>
l00114837:
	Mem306[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg8, 0<32>)
	v201_311 = Mem306[0x00140048<p32>:word32]
	Mem314[0x00140048<p32>:word32] = 0<32>
	branch !(v201_311 & 1<32>) l00114867
l00114858:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00114867:
	Mem333[arg8:word64] = Mem314[v194_2 + 0x28<32>:word64]
	Mem341[arg8 + 8<32>:word32] = Mem333[v194_2 + 0x30<32>:word32]
	loc14_343 = 0<32>
l00114887:
	branch loc14_343 != 3<32> l00114899
l00114896:
	goto l001148B7
l00114899:
	Mem359[v194_2 + 0x28<32> + (loc14_343 << 2<32>):word32] = 0<32>
	loc14_343 = loc14_343 + 1<32>
	goto l00114887
l001148B7:
	fn0011C7BA(v194_2 + 0x28<32>)
	goto l001149F1
l001148BF:
	Mem100[arg3:word32] = Mem7[v194_2 + 0x24<32>:word32]
	branch Mem100[arg8 + 0xB<32>:int8] >= 0<8> l0011495C
l0011493F:
	Mem154[Mem100[arg8:word32]:word32] = 0<32>
	Mem161[arg8 + 4<32>:word32] = 0<32>
	goto l0011496A
l0011495C:
	Mem144[arg8:word32] = 0<32>
	Mem148[arg8 + 0xB<32>:byte] = 0<8>
l0011496A:
	Mem163[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg8, 0<32>)
	v201_168 = Mem163[0x00140048<p32>:word32]
	Mem171[0x00140048<p32>:word32] = 0<32>
	branch !(v201_168 & 1<32>) l0011499A
l0011498B:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011499A:
	Mem190[arg8:word64] = Mem171[v194_2 + 0x18<32>:word64]
	Mem198[arg8 + 8<32>:word32] = Mem190[v194_2 + 0x20<32>:word32]
	loc15_200 = 0<32>
l001149BA:
	branch loc15_200 != 3<32> l001149CC
l001149C9:
	goto l001149EA
l001149CC:
	Mem216[v194_2 + 0x18<32> + (loc15_200 << 2<32>):word32] = 0<32>
	loc15_200 = loc15_200 + 1<32>
	goto l001149BA
l001149EA:
	fn0011C7BA(v194_2 + 0x18<32>)
l001149F1:
	Mem406[arg4:word32] = (Mem375[Mem375[v194_68:word32] + 0xC<32>:word32] & 0x1FF<32>) + 0xB00<32>
	Mem436[arg5:word32] = (Mem406[Mem406[v194_68:word32] + 0x10<32>:word32] & 0x1FF<32>) + 0xB00<32>
	branch Mem436[arg6 + 0xB<32>:int8] >= 0<8> l00114AAE
l00114A91:
	Mem502[Mem436[arg6:word32]:byte] = 0<8>
	Mem509[arg6 + 4<32>:word32] = 0<32>
	goto l00114ABC
l00114AAE:
	Mem491[arg6:byte] = 0<8>
	Mem495[arg6 + 0xB<32>:byte] = 0<8>
l00114ABC:
	Mem511[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AC<32>, arg6, 0<32>)
	v200_516 = Mem511[0x00140048<p32>:word32]
	Mem519[0x00140048<p32>:word32] = 0<32>
	branch !(v200_516 & 1<32>) l00114AEC
l00114ADD:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00114AEC:
	Mem538[arg6:word64] = Mem519[v194_2 + 0xC<32>:word64]
	Mem546[arg6 + 8<32>:word32] = Mem538[v194_2 + 0x14<32>:word32]
	loc16_548 = 0<32>
l00114B0C:
	branch loc16_548 != 3<32> l00114B1E
l00114B1B:
	goto l00114B3C
l00114B1E:
	Mem564[v194_2 + 0xC<32> + (loc16_548 << 2<32>):word32] = 0<32>
	loc16_548 = loc16_548 + 1<32>
	goto l00114B0C
l00114B3C:
	fn0011BAF7(v194_2 + 0xC<32>)
	branch Mem576[arg7 + 0xB<32>:int8] >= 0<8> l00114BAC
l00114B8F:
	Mem649[Mem576[arg7:word32]:word32] = 0<32>
	Mem656[arg7 + 4<32>:word32] = 0<32>
	goto l00114BBA
l00114BAC:
	Mem639[arg7:word32] = 0<32>
	Mem643[arg7 + 0xB<32>:byte] = 0<8>
l00114BBA:
	Mem658[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1B3<32>, arg7, 0<32>)
	v206_663 = Mem658[0x00140048<p32>:word32]
	Mem666[0x00140048<p32>:word32] = 0<32>
	branch !(v206_663 & 1<32>) l00114BEA
l00114BDB:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00114BEA:
	Mem685[arg7:word64] = Mem666[v194_2:word64]
	Mem693[arg7 + 8<32>:word32] = Mem685[v194_2 + 8<32>:word32]
	loc17_695 = 0<32>
l00114C0A:
	branch loc17_695 != 3<32> l00114C1C
l00114C19:
	goto l00114C3A
l00114C1C:
	Mem711[v194_2 + (loc17_695 << 2<32>):word32] = 0<32>
	loc17_695 = loc17_695 + 1<32>
	goto l00114C0A
l00114C3A:
	fn0011C7BA(v194_2)
	loc198_1395 = (Mem723[Mem723[v194_68:word32] + 0x24<32>:word32] & 0x1FF<32>) + 0xB00<32>
l00114C6C:
	Mem1429[arg9:word32] = loc198_1395
	Mem1458[0x00140030<p32>:word32] = v194_2
	return
fn00114190_exit:


void fn00114C7D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00114C7D_entry:
l00114C7D:
	Mem13[arg2:word32] = arg0
	v173_50 = (arg3 & 0x200<32>) == 0<32>
	loc23_69 = 0<32>
	loc27_73 = arg4
l00114CE3:
	branch loc23_69 != 4<32> l00114CF5
l00114CF2:
	goto l00115335
l00114CF5:
	v171_94 = CONVERT(Mem86[arg8 + loc23_69:int8], byte, int32)
l00114D0D:
	switch (v171_94) { l00114D2A l00114D42 l00114E23 l00114D9E l00114F16 }
l00114D2A:
	Mem905[arg1:word32] = Mem86[arg2:word32]
	loc33_665 = loc27_73
	goto l00115322
l00114D42:
	Mem862[arg1:word32] = Mem86[arg2:word32]
	v175_880 = (Mem862[Mem862[arg6:word32] + 0x2C<32>:word32] & 0x1FF<32>) + 0x1B20<32>
	v175_883 = Mem862[arg2:word32]
	Mem891[arg2:word32] = v175_883 + 4<32>
	Mem894[v175_883:word32] = v175_880
	loc33_665 = loc27_73
	goto l00115322
l00114D9E:
	Mem785 = Mem86
	v177_786 = Mem785[arg13 + 0xB<32>:int8]
	v171_787 = CONVERT(v177_786, int8, word32)
	v171_793 = CONVERT(v177_786, byte, int32)
	v171_799 = Mem785[arg13 + 4<32>:word32]
	branch v171_793 >= 0<32> l00114DCB
l00114DC8:
	v171_806 = v171_799
	goto l00114DCD
l00114DCB:
	v171_806 = v171_787 & 0xFF<32>
l00114DCD:
	branch v171_806 != 0<32> l00114DE0
l00114DDB:
	goto l00114E1F
l00114DE0:
	v171_819 = Mem785[arg13:word32]
	branch v171_793 >= 0<32> l00114DEE
l00114DEB:
	v171_823 = v171_819
	goto l00114DF0
l00114DEE:
	v171_823 = arg13
l00114DF0:
	v171_829 = Mem785[v171_823:word32]
	v171_835 = Mem785[arg2:word32]
	Mem843[arg2:word32] = v171_835 + 4<32>
	Mem846[v171_835:word32] = v171_829
l00114E1F:
	loc33_665 = loc27_73
	goto l00115322
l00114E23:
	Mem670 = Mem86
	v178_671 = Mem670[arg12 + 0xB<32>:int8]
	v171_672 = CONVERT(v178_671, int8, word32)
	v171_678 = CONVERT(v178_671, byte, int32)
	v171_684 = Mem670[arg12 + 4<32>:word32]
	branch v171_678 >= 0<32> l00114E58
l00114E54:
	v171_691 = v171_684
	goto l00114E5B
l00114E58:
	v171_691 = v171_672 & 0xFF<32>
l00114E5B:
	branch !(v173_50 | v171_691 == 0<32>) l00114E7B
l00114E76:
	goto l00114F12
l00114E7B:
	v171_710 = Mem670[arg12:word32]
	branch v171_678 >= 0<32> l00114E8C
l00114E88:
	v171_714 = v171_710
	goto l00114E8E
l00114E8C:
	v171_714 = arg12
l00114E8E:
	v171_730 = Mem670[arg2:word32]
	v171_723 = v171_714 + (v171_691 << 2<32>)
	loc20_733 = v171_730
	loc141_735 = v171_714
l00114EB4:
	branch loc141_735 != v171_723 l00114EC8
l00114EC5:
	goto l00114EF7
l00114EC8:
	Mem750[loc20_733:word32] = Mem744[loc141_735:word32]
	loc20_733 = loc20_733 + 4<32>
	loc141_735 = loc141_735 + 4<32>
	goto l00114EB4
l00114EF7:
	Mem774[arg2:word32] = v171_730 + (v171_691 << 2<32>)
l00114F12:
	loc33_665 = loc27_73
	goto l00115322
l00114F16:
	Mem101 = Mem86
	v171_102 = Mem101[arg2:word32]
	v171_107 = loc27_73 + 4<32>
	branch !arg7 l00114F31
l00114F2D:
	v171_111 = v171_107
	goto l00114F33
l00114F31:
	v171_111 = loc27_73
l00114F33:
	loc22_116 = v171_111
l00114F3C:
	branch loc22_116 <u arg5 != 0<32> l00114F4F
l00114F4C:
	goto l00114FA2
l00114F4F:
	branch (Mem101[Mem101[arg6:word32] + 0xC<32>:word32] & 0x1FF<32>) != 0xFFFFF0E0<32> l00114F93
l00114F90:
	goto l00114FA2
l00114F93:
	loc22_116 = loc22_116 + 4<32>
	goto l00114F3C
l00114FA2:
	branch arg14 <= 0<32> l001150C4
l00114FA8:
	loc21_170 = arg14
	loc30_172 = loc22_116
l00114FB2:
	v173_182 = loc21_170 > 0<32>
	branch (loc30_172 >u v171_111 & v173_182) != 0<32> l00114FD7
l00114FD4:
	goto l0011501E
l00114FD7:
	v171_192 = loc30_172 + 0xFFFFFFFC<32>
	v171_196 = Mem195[v171_192:word32]
	v171_200 = Mem195[arg2:word32]
	Mem208[arg2:word32] = v171_200 + 4<32>
	Mem211[v171_200:word32] = v171_196
	loc21_170 = loc21_170 + 0xFFFFFFFF<32>
	loc30_172 = v171_192
	goto l00114FB2
l0011501E:
	branch !v173_182 l0011505B
l00115025:
	loc169_1398 = (Mem195[Mem195[arg6:word32] + 0x2C<32>:word32] & 0x1FF<32>) + 0x1B20<32>
	goto l00115060
l0011505B:
	loc169_1398 = 0<32>
l00115060:
	loc29_252 = loc21_170
	loc168_254 = Mem195[arg2:word32]
l00115073:
	v171_263 = loc168_254 + 4<32>
	branch loc29_252 > 0<32> != 0<32> l0011508F
l0011508C:
	goto l001150AD
l0011508F:
	Mem270[loc168_254:word32] = loc169_1398
	loc29_252 = loc29_252 + 0xFFFFFFFF<32>
	loc168_254 = v171_263
	goto l00115073
l001150AD:
	Mem282[arg2:word32] = v171_263
	Mem292[loc168_254:word32] = arg9
	loc34_164 = loc30_172
	goto l001150C8
l001150C4:
	loc34_164 = loc22_116
l001150C8:
	branch loc34_164 != v171_111 l00115127
l001150D6:
	v175_582 = (Mem317[Mem317[arg6:word32] + 0x2C<32>:word32] & 0x1FF<32>) + 0x1B20<32>
	v175_589 = Mem317[arg2:word32]
	Mem597[arg2:word32] = v175_589 + 4<32>
	Mem600[v175_589:word32] = v175_582
	loc68_562 = v175_589 + 4<32>
	goto l001152B4
l00115127:
	v181_319 = Mem317[arg11 + 0xB<32>:int8]
	v171_320 = CONVERT(v181_319, int8, word32)
	v171_326 = CONVERT(v181_319, byte, int32)
	v171_339 = Mem317[arg11 + 4<32>:word32]
	branch v171_326 >= 0<32> l00115151
l0011514E:
	v171_346 = v171_339
	goto l00115153
l00115151:
	v171_346 = v171_320 & 0xFF<32>
l00115153:
	branch v171_346 != 0<32> l00115172
l00115161:
	loc17_1503 = 0xFFFFFFFF<32>
	goto l001151A6
l00115172:
	v171_366 = Mem317[arg11:word32]
	branch v171_326 >= 0<32> l00115180
l0011517D:
	v171_370 = v171_366
	goto l00115182
l00115180:
	v171_370 = arg11
l00115182:
	loc17_1503 = CONVERT(Mem317[v171_370:int8], byte, int32)
l001151A6:
	loc25_1508 = 0<32>
	loc26_1502 = 0<32>
	loc35_1494 = loc34_164
l001151A9:
	branch loc35_1494 != v171_111 l001151B9
l001151B6:
	goto l001152A7
l001151B9:
	v171_419 = Mem418[arg2:word32]
	branch loc26_1502 != loc17_1503 l0011525A
l001151CB:
	Mem437[arg2:word32] = v171_419 + 4<32>
	Mem441[v171_419:word32] = arg10
	v171_444 = loc25_1508 + 1<32>
	branch v171_444 >=u v171_346 l00115248
l001151F2:
	v171_462 = Mem441[arg11:word32]
	branch v171_326 >= 0<32> l00115200
l001151FD:
	v171_466 = v171_462
	goto l00115202
l00115200:
	v171_466 = arg11
l00115202:
	v183_477 = Mem441[v171_466 + v171_444:int8]
	v171_492 = CONVERT(v183_477, byte, int32)
	branch v183_477 != 0x7F<8> l00115232
l0011522F:
	v171_495 = 0xFFFFFFFF<32>
	goto l00115234
l00115232:
	v171_495 = v171_492
l00115234:
	loc28_423 = v171_495
	goto l00115258
l00115248:
	loc28_423 = loc26_1502
l00115258:
	loc31_426 = v171_444
	loc32_428 = 0<32>
	loc65_430 = v171_419 + 4<32>
	goto l0011526A
l0011525A:
	loc28_423 = loc17_1503
	loc31_426 = loc25_1508
	loc32_428 = loc26_1502
	loc65_430 = v171_419
l0011526A:
	v171_516 = loc35_1494 + 0xFFFFFFFC<32>
	v171_522 = Mem519[v171_516:word32]
	Mem536[arg2:word32] = loc65_430 + 4<32>
	Mem539[loc65_430:word32] = v171_522
	loc17_1503 = loc28_423
	loc25_1508 = loc31_426
	loc26_1502 = loc32_428 + 1<32>
	loc35_1494 = v171_516
	goto l001151A9
l001152A7:
	loc68_562 = Mem418[arg2:word32]
l001152B4:
	branch v171_102 != loc68_562 l001152C6
l001152C1:
	loc33_665 = v171_111
	goto l00115319
l001152C6:
	loc19_626 = loc68_562
	loc24_628 = v171_102
l001152D1:
	v171_632 = loc19_626 + 0xFFFFFFFC<32>
	branch loc24_628 <u v171_632 != 0<32> l001152EB
l001152E4:
	loc33_665 = v171_111
	goto l00115323
l001152EB:
	v171_643 = Mem642[loc24_628:word32]
	Mem650[loc24_628:word32] = Mem642[v171_632:word32]
	Mem653[v171_632:word32] = v171_643
	loc19_626 = v171_632
	loc24_628 = loc24_628 + 4<32>
	goto l001152D1
l00115319:
l00115322:
l00115323:
	loc23_69 = loc23_69 + 1<32>
	loc27_73 = loc33_665
	goto l00114CE3
l00115335:
	v184_984 = Mem86[arg13 + 0xB<32>:int8]
	v171_985 = CONVERT(v184_984, int8, word32)
	v171_991 = CONVERT(v184_984, byte, int32)
	v171_1027 = Mem86[arg13 + 4<32>:word32]
	branch v171_991 >= 0<32> l00115361
l0011535E:
	v171_1034 = v171_1027
	goto l00115363
l00115361:
	v171_1034 = v171_985 & 0xFF<32>
l00115363:
	branch v171_1034 <=u 1<32> l00115408
l00115371:
	v171_1076 = Mem86[arg13:word32]
	branch v171_991 >= 0<32> l0011537F
l0011537C:
	v171_1080 = v171_1076
	goto l00115381
l0011537F:
	v171_1080 = arg13
l00115381:
	v171_1086 = v171_1080 + 4<32>
	v171_1093 = v171_1080 + (v171_1034 << 2<32>)
	v171_1099 = Mem86[arg2:word32]
	v171_1107 = v171_1093 - v171_1086
	loc18_1110 = v171_1099
	loc84_1112 = v171_1086
l001153B5:
	branch loc84_1112 != v171_1093 l001153C5
l001153C2:
	goto l001153EB
l001153C5:
	Mem1127[loc18_1110:word32] = Mem1121[loc84_1112:word32]
	loc18_1110 = loc18_1110 + 4<32>
	loc84_1112 = loc84_1112 + 4<32>
	goto l001153B5
l001153EB:
	Mem1155[arg2:word32] = v171_1099 + ((v171_1107 >>u 2<32>) << 2<32>)
l00115408:
l00115419:
	switch (CONVERT(SLICE(arg3, byte, 0) & 0xB0<8>, byte, int32) - 0x10<32>) { l00115455 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115458 l00115441 }
l00115441:
	Mem1259[arg1:word32] = Mem1254[arg2:word32]
	goto l00115460
l00115455:
	goto l00115460
l00115458:
	Mem1251[arg1:word32] = arg0
l00115460:
	return
fn00114C7D_exit:


void fn00115464(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn00115464_entry:
l00115464:
	return
fn00115464_exit:


void fn0011546D(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011546D_entry:
l0011546D:
	fn0011B709(arg0)
	return
fn0011546D_exit:


word32 fn0011547B(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011547B_entry:
l0011547B:
	v15_23 = Mem0[arg1:word32]
	branch Mem0[arg1 + 0xB<32>:int8] >= 0<8> l001154AA
l001154A7:
	v15_26 = v15_23
	goto l001154AC
l001154AA:
	v15_26 = arg1
l001154AC:
	fn000DAF17(v15_26, 1<32>)
	return <invalid>
fn0011547B_exit:


void fn001154D6(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001154D6_entry:
l001154D6:
	v58_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l001154EF
l001154EA:
	abortStackOverflow(0x10<32>)
l001154EF:
	Mem17[v58_2:word64] = 0<64>
	Mem22[v58_2 + 8<32>:word32] = 0<32>
	loc7_24 = 0<32>
l0011550A:
	branch loc7_24 != 3<32> l0011551A
l00115517:
	goto l00115538
l0011551A:
	Mem40[v58_2 + (loc7_24 << 2<32>):word32] = 0<32>
	loc7_24 = loc7_24 + 1<32>
	goto l0011550A
l00115538:
	v63_57 = Mem56[arg5 + 0xB<32>:int8]
	v58_58 = CONVERT(v63_57, int8, word32)
	v58_64 = CONVERT(v63_57, byte, int32)
	v58_69 = Mem56[arg5:word32]
	branch v58_64 >= 0<32> l00115563
l00115560:
	v58_72 = v58_69
	goto l00115565
l00115563:
	v58_72 = arg5
l00115565:
	v58_83 = Mem56[arg5 + 4<32>:word32]
	branch v58_64 >= 0<32> l00115585
l00115582:
	v58_92 = v58_83
	goto l00115587
l00115585:
	v58_92 = v58_58 & 0xFF<32>
l00115587:
	v58_99 = v58_72 + v58_92
	loc9_102 = v58_72
l00115597:
	branch loc9_102 <u v58_99 != 0<32> l001155AC
l001155A5:
	loc59_138 = 8<32>
	goto l001155E7
l001155AC:
	v58_114 = CONVERT(Mem112[loc9_102:int8], int8, word32)
	Mem117[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1A7<32>, v58_2, v58_114)
	v58_122 = Mem117[0x00140048<p32>:word32]
	Mem125[0x00140048<p32>:word32] = 0<32>
	branch !(v58_122 & 1<32>) l001155DA
l001155D3:
	loc59_138 = 9<32>
	goto l001155E7
l001155DA:
	loc9_102 = loc9_102 + 1<32>
	goto l00115597
l001155E7:
	branch loc59_138 != 8<32> l00115757
l001155F2:
	branch arg2 != 0xFFFFFFFF<32> l0011560B
l00115608:
	v58_176 = 0xFFFFFFFF<32>
	goto l0011560D
l0011560B:
	v58_176 = arg2 << 1<32>
l0011560D:
	v58_200 = Mem150[v58_2:word32]
	branch Mem150[v58_2 + 0xB<32>:int8] >= 0<8> l00115639
l00115636:
	v58_203 = v58_200
	goto l0011563B
l00115639:
	v58_203 = v58_2
l0011563B:
	Mem208[0x00140048<p32>:word32] = 0<32>
	v58_235 = invoke_iiiii(0x1B8<32>, v58_176, arg3, arg4, v58_203)
	v58_237 = Mem208[0x00140048<p32>:word32]
	Mem240[0x00140048<p32>:word32] = 0<32>
	branch !(v58_237 & 1<32>) l00115677
l00115664:
	loc10 = ___cxa_find_matching_catch_2()
	goto l00115770
l00115677:
	Mem258[arg0:word64] = 0<64>
	Mem263[arg0 + 8<32>:word32] = 0<32>
	loc8_265 = 0<32>
l0011568E:
	branch loc8_265 != 3<32> l0011569E
l0011569B:
	goto l001156BC
l0011569E:
	Mem281[arg0 + (loc8_265 << 2<32>):word32] = 0<32>
	loc8_265 = loc8_265 + 1<32>
	goto l0011568E
l001156BC:
	v58_294 = v58_235 + fn000DAF30(v58_235)
	loc6_297 = v58_235
l001156D2:
	branch loc6_297 <u v58_294 != 0<32> l001156E7
l001156E0:
	loc59_333 = 0x13<32>
	goto l00115722
l001156E7:
	v58_309 = CONVERT(Mem307[loc6_297:int8], int8, word32)
	Mem312[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1A7<32>, arg0, v58_309)
	v58_317 = Mem312[0x00140048<p32>:word32]
	Mem320[0x00140048<p32>:word32] = 0<32>
	branch !(v58_317 & 1<32>) l00115715
l0011570E:
	loc59_333 = 0x12<32>
	goto l00115722
l00115715:
	loc6_297 = loc6_297 + 1<32>
	goto l001156D2
l00115722:
	branch loc59_333 != 0x12<32> l00115743
l0011572B:
	v58_360 = ___cxa_find_matching_catch_2()
	fn0011BAF7(arg0)
	loc10 = v58_360
	goto l00115770
l00115743:
	branch loc59_333 != 0x13<32> l00115755
l0011574A:
	fn0011BAF7(v58_2)
	Mem359[0x00140030<p32>:word32] = v58_2
	return
l00115755:
l00115755:
	goto l0011576F
l00115757:
	branch loc59_138 != 9<32> l0011576F
l0011575E:
	loc10 = ___cxa_find_matching_catch_2()
l0011576F:
l0011576F:
l00115770:
	fn0011BAF7(v58_2)
	___resumeException(loc10)
l0011577A:
	return
fn001154D6_exit:


void fn0011577C(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011577C_entry:
l0011577C:
	return
fn0011577C_exit:


void fn00115785(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn00115785_entry:
l00115785:
	return
fn00115785_exit:


void fn0011578E(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011578E_entry:
l0011578E:
	fn0011B709(arg0)
	return
fn0011578E_exit:


word32 fn0011579C(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011579C_entry:
l0011579C:
	v15_23 = Mem0[arg1:word32]
	branch Mem0[arg1 + 0xB<32>:int8] >= 0<8> l001157CB
l001157C8:
	v15_26 = v15_23
	goto l001157CD
l001157CB:
	v15_26 = arg1
l001157CD:
	fn000DAF17(v15_26, 1<32>)
	return <invalid>
fn0011579C_exit:


void fn001157F7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001157F7_entry:
l001157F7:
	v127_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0xE0<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00115813
l0011580D:
	abortStackOverflow(0xE0<32>)
l00115813:
	Mem57[v127_2 + 0x10<32>:word64] = 0<64>
	Mem62[v127_2 + 0x18<32>:word32] = 0<32>
	loc7_64 = 0<32>
l00115884:
	branch loc7_64 != 3<32> l00115894
l00115891:
	goto l001158B2
l00115894:
	Mem80[v127_2 + 0x10<32> + (loc7_64 << 2<32>):word32] = 0<32>
	loc7_64 = loc7_64 + 1<32>
	goto l00115884
l001158B2:
	Mem94[v127_2 + 0xC<32>:word32] = 0<32>
	Mem97[v127_2 + 8<32>:word32] = 0x2418<32>
	v132_111 = Mem97[arg5 + 0xB<32>:int8]
	v127_112 = CONVERT(v132_111, int8, word32)
	v127_118 = CONVERT(v132_111, byte, int32)
	v127_123 = Mem97[arg5:word32]
	branch v127_118 >= 0<32> l001158FB
l001158F8:
	v127_126 = v127_123
	goto l001158FD
l001158FB:
	v127_126 = arg5
l001158FD:
	v127_137 = Mem97[arg5 + 4<32>:word32]
	branch v127_118 >= 0<32> l0011591D
l0011591A:
	v127_146 = v127_137
	goto l0011591F
l0011591D:
	v127_146 = v127_112 & 0xFF<32>
l0011591F:
	v127_155 = v127_126 + (v127_146 << 2<32>)
	loc10_165 = v127_126
	loc11_167 = 0<32>
l0011593D:
	branch (loc11_167 != 2<32> & loc10_165 <u v127_155) != 0<32> l00115961
l00115959:
	loc128_282 = 0xD<32>
	goto l00115A48
l00115961:
	Mem188[v127_2 + 0xB0<32>:word32] = loc10_165
	v127_198 = Mem188[Mem188[v127_2 + 8<32>:word32] + 0xC<32>:word32]
	Mem201[0x00140048<p32>:word32] = 0<32>
	v127_215 = invoke_iiiiiiiii(v127_198, v127_2 + 8<32>, v127_2 + 0xB8<32>, loc10_165, v127_155, v127_2 + 0xB0<32>, v127_2 + 0xC0<32>, v127_2 + 0xE0<32>, v127_2 + 0xB4<32>)
	v127_217 = Mem201[0x00140048<p32>:word32]
	Mem220[0x00140048<p32>:word32] = 0<32>
	branch !(v127_217 & 1<32>) l001159B2
l001159AA:
	loc128_282 = 0xF<32>
	goto l00115A48
l001159B2:
	branch !(v127_215 == 2<32> | Mem220[v127_2 + 0xB0<32>:word32] == loc10_165) l001159DA
l001159D2:
	loc128_282 = 8<32>
	goto l00115A48
l001159DA:
	loc9_243 = v127_2 + 0xC0<32>
l001159DE:
l001159E1:
	branch loc9_243 <u Mem246[v127_2 + 0xB4<32>:word32] != 0<32> l001159F9
l001159F6:
	goto l00115A35
l001159F9:
	v127_258 = CONVERT(Mem246[loc9_243:int8], int8, word32)
	Mem261[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1A7<32>, v127_2 + 0x10<32>, v127_258)
	v127_266 = Mem261[0x00140048<p32>:word32]
	Mem269[0x00140048<p32>:word32] = 0<32>
	branch !(v127_266 & 1<32>) l00115A28
l00115A20:
	loc128_282 = 0xE<32>
	goto l00115A48
l00115A28:
	loc9_243 = loc9_243 + 1<32>
	goto l001159E1
l00115A35:
	loc10_165 = Mem246[v127_2 + 0xB0<32>:word32]
	loc11_167 = v127_215
	goto l0011593D
l00115A48:
	branch loc128_282 != 8<32> l00115A7F
l00115A54:
	Mem800[0x00140048<p32>:word32] = 0<32>
	invoke_vi(0x1A6<32>, 0x3BF9<32>)
	Mem806[0x00140048<p32>:word32] = 0<32>
	loc124 = ___cxa_find_matching_catch_2()
	loc128_282 = 0x10<32>
	goto l00115D83
l00115A7F:
	branch loc128_282 != 0xD<32> l00115D45
l00115A87:
	branch arg2 != 0xFFFFFFFF<32> l00115AA0
l00115A9D:
	v127_354 = 0xFFFFFFFF<32>
	goto l00115AA2
l00115AA0:
	v127_354 = arg2 << 1<32>
l00115AA2:
	v127_381 = Mem313[v127_2 + 0x10<32>:word32]
	branch Mem313[v127_2 + 0x1B<32>:int8] >= 0<8> l00115ACE
l00115ACB:
	v127_384 = v127_381
	goto l00115AD0
l00115ACE:
	v127_384 = v127_2 + 0x10<32>
l00115AD0:
	Mem389[0x00140048<p32>:word32] = 0<32>
	v127_418 = invoke_iiiii(0x1B8<32>, v127_354, arg3, arg4, v127_384)
	v127_420 = Mem389[0x00140048<p32>:word32]
	Mem423[0x00140048<p32>:word32] = 0<32>
	branch !(v127_420 & 1<32>) l00115B0C
l00115AF9:
	loc14 = ___cxa_find_matching_catch_2()
	goto l00115D84
l00115B0C:
	Mem442[arg0:word64] = 0<64>
	Mem447[arg0 + 8<32>:word32] = 0<32>
	loc8_449 = 0<32>
l00115B23:
	branch loc8_449 != 3<32> l00115B33
l00115B30:
	goto l00115B51
l00115B33:
	Mem465[arg0 + (loc8_449 << 2<32>):word32] = 0<32>
	loc8_449 = loc8_449 + 1<32>
	goto l00115B23
l00115B51:
	Mem487[v127_2 + 4<32>:word32] = 0<32>
	Mem490[v127_2:word32] = 0x2448<32>
	v127_497 = v127_418 + fn000DAF30(v127_418)
	loc12_515 = v127_418
	loc13_517 = 0<32>
l00115B8E:
	branch (loc13_517 != 2<32> & loc12_515 <u v127_497) != 0<32> l00115BB2
l00115BAA:
	loc128_282 = 0x1D<32>
	goto l00115CBE
l00115BB2:
	Mem538[v127_2 + 0x1C<32>:word32] = loc12_515
	v127_548 = Mem538[Mem538[v127_2:word32] + 0x10<32>:word32]
	v127_563 = loc12_515 + 0x20<32>
	branch v127_497 - loc12_515 <= 0x20<32> l00115BEE
l00115BEB:
	v127_566 = v127_563
	goto l00115BF0
l00115BEE:
	v127_566 = v127_497
l00115BF0:
	Mem571[0x00140048<p32>:word32] = 0<32>
	v127_593 = invoke_iiiiiiiii(v127_548, v127_2, v127_2 + 0xA8<32>, loc12_515, v127_566, v127_2 + 0x1C<32>, v127_2 + 0x28<32>, v127_2 + 0xA8<32>, v127_2 + 0x20<32>)
	v127_595 = Mem571[0x00140048<p32>:word32]
	Mem598[0x00140048<p32>:word32] = 0<32>
	branch !(v127_595 & 1<32>) l00115C28
l00115C20:
	loc128_282 = 0x20<32>
	goto l00115CBE
l00115C28:
	branch !(v127_593 == 2<32> | Mem598[v127_2 + 0x1C<32>:word32] == loc12_515) l00115C50
l00115C48:
	loc128_282 = 0x18<32>
	goto l00115CBE
l00115C50:
	loc6_621 = v127_2 + 0x28<32>
l00115C54:
l00115C57:
	branch loc6_621 <u Mem624[v127_2 + 0x20<32>:word32] != 0<32> l00115C6F
l00115C6C:
	goto l00115CAB
l00115C6F:
	v127_635 = Mem624[loc6_621:word32]
	Mem638[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1AF<32>, arg0, v127_635)
	v127_643 = Mem638[0x00140048<p32>:word32]
	Mem646[0x00140048<p32>:word32] = 0<32>
	branch !(v127_643 & 1<32>) l00115C9E
l00115C96:
	loc128_282 = 0x1F<32>
	goto l00115CBE
l00115C9E:
	loc6_621 = loc6_621 + 4<32>
	goto l00115C57
l00115CAB:
	loc12_515 = Mem624[v127_2 + 0x1C<32>:word32]
	loc13_517 = v127_593
	goto l00115B8E
l00115CBE:
	branch loc128_282 != 0x18<32> l00115CEE
l00115CC8:
	Mem729[0x00140048<p32>:word32] = 0<32>
	invoke_vi(0x1A6<32>, 0x3BF9<32>)
	Mem735[0x00140048<p32>:word32] = 0<32>
	loc122 = ___cxa_find_matching_catch_2()
	goto l00115D36
l00115CEE:
	branch loc128_282 != 0x1D<32> l00115D02
l00115CF6:
	fn0011BAF7(v127_2 + 0x10<32>)
	Mem727[0x00140030<p32>:word32] = v127_2
	return
l00115D02:
	branch loc128_282 != 0x1F<32> l00115D1B
l00115D0A:
	loc122 = ___cxa_find_matching_catch_2()
	goto l00115D34
l00115D1B:
	branch loc128_282 != 0x20<32> l00115D34
l00115D23:
	loc122 = ___cxa_find_matching_catch_2()
l00115D34:
l00115D34:
l00115D35:
l00115D36:
	fn0011C7BA(arg0)
	loc14 = loc122
	goto l00115D82
l00115D45:
	branch loc128_282 != 0xE<32> l00115D63
l00115D4D:
	loc124 = ___cxa_find_matching_catch_2()
	loc128_282 = 0x10<32>
	goto l00115D81
l00115D63:
	branch loc128_282 != 0xF<32> l00115D81
l00115D6B:
	loc124 = ___cxa_find_matching_catch_2()
	loc128_282 = 0x10<32>
l00115D81:
l00115D81:
l00115D82:
l00115D83:
l00115D84:
	branch loc128_282 != 0x10<32> l00115D96
l00115D8D:
	loc14 = loc124
l00115D96:
	fn0011BAF7(v127_2 + 0x10<32>)
	___resumeException(loc14)
l00115D9F:
	return
fn001157F7_exit:


void fn00115DA1(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn00115DA1_entry:
l00115DA1:
	return
fn00115DA1_exit:


void fn00115DAA(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00117F62
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn00115DAA_entry:
l00115DAA:
	return
fn00115DAA_exit:


void fn00115DB3(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00115DB3_entry:
l00115DB3:
	fn0011B709(arg0)
	return
fn00115DB3_exit:


word32 fn00115DC1(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00115DC1_entry:
l00115DC1:
	v10_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00115DDA
l00115DD5:
	abortStackOverflow(0x10<32>)
l00115DDA:
	Mem24[v10_2 + 4<32>:word32] = arg2
	Mem30[v10_2:word32] = arg5
	v10_45 = fn00116A09(arg2, arg3, v10_2 + 4<32>, arg5, arg6, v10_2, 0x10FFFF<32>, 0<32>)
	Mem55[arg4:word32] = Mem30[v10_2 + 4<32>:word32]
	Mem64[arg7:word32] = Mem55[v10_2:word32]
	Mem66[0x00140030<p32>:word32] = v10_2
	return <invalid>
fn00115DC1_exit:


word32 fn00115E30(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00115E30_entry:
l00115E30:
	v10_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00115E49
l00115E44:
	abortStackOverflow(0x10<32>)
l00115E49:
	Mem24[v10_2 + 4<32>:word32] = arg2
	Mem30[v10_2:word32] = arg5
	v10_45 = fn001164A4(arg2, arg3, v10_2 + 4<32>, arg5, arg6, v10_2, 0x10FFFF<32>, 0<32>)
	Mem55[arg4:word32] = Mem30[v10_2 + 4<32>:word32]
	Mem64[arg7:word32] = Mem55[v10_2:word32]
	Mem66[0x00140030<p32>:word32] = v10_2
	return <invalid>
fn00115E30_exit:


word32 fn00115E9F(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00115E9F_entry:
l00115E9F:
	Mem10[arg4:word32] = arg2
	return <invalid>
fn00115E9F_exit:


word32 fn00115EB1(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00115EB1_entry:
l00115EB1:
	return <invalid>
fn00115EB1_exit:


word32 fn00115EBC(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00115EBC_entry:
l00115EBC:
	return <invalid>
fn00115EBC_exit:


word32 fn00115EC7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00115EC7_entry:
l00115EC7:
	return <invalid>
fn00115EC7_exit:


word32 fn00115EE4(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00115EE4_entry:
l00115EE4:
	return <invalid>
fn00115EE4_exit:


word32 fn00115EEF(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00115EC7
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00115EEF_entry:
l00115EEF:
	branch (arg4 & 4<32>) != 0<32> l00115F15
l00115F0C:
	loc7_102 = arg0
	goto l00115FB8
l00115F15:
	branch arg1 - arg0 <= 2<32> l00115FAF
l00115F2B:
	branch Mem0[arg0:int8] != 0xEF<8> l00115FA5
l00115F43:
	branch Mem0[arg0 + 1<32>:int8] != 0xBB<8> l00115F9B
l00115F63:
	branch Mem0[arg0 + 2<32>:int8] != 0xBF<8> l00115F8D
l00115F8A:
	v127_95 = arg0 + 3<32>
	goto l00115F8F
l00115F8D:
	v127_95 = arg0
l00115F8F:
	loc7_102 = v127_95
	goto l00115FA3
l00115F9B:
	loc7_102 = arg0
l00115FA3:
	goto l00115FAD
l00115FA5:
	loc7_102 = arg0
l00115FAD:
	goto l00115FB7
l00115FAF:
	loc7_102 = arg0
l00115FB7:
l00115FB8:
	loc6_113 = 0<32>
l00115FBB:
	Mem126 = Mem0 (alias)
	branch (loc6_113 <u arg2 & loc7_102 <u arg1) != 0<32> l00115FDE
l00115FD7:
	loc127_234 = 0x28<32>
	goto l001163F2
l00115FDE:
	v133_127 = Mem126[loc7_102:int8]
	v127_128 = CONVERT(v133_127, int8, word32)
	v127_138 = CONVERT(v133_127, byte, int32)
l00115FFA:
	branch v127_138 <= 0xFFFFFFFF<32> l0011601E
l00116000:
	branch (v127_128 & 0xFF<32>) <=u arg3 l00116012
l0011600B:
	loc127_234 = 0x28<32>
	goto l001163F2
l00116012:
	loc9_368 = loc7_102 + 1<32>
	goto l001163DF
l0011601E:
	branch (v127_128 & 0xFF<32>) >= 0xC2<32> l00116035
l0011602E:
	loc127_234 = 0x28<32>
	goto l001163F2
l00116035:
	branch (v127_128 & 0xFF<32>) >= 0xE0<32> l001160D1
l00116045:
	branch arg1 - loc7_102 >= 2<32> l00116062
l0011605B:
	loc127_234 = 0x28<32>
	goto l001163F2
l00116062:
	v127_560 = CONVERT(Mem126[loc7_102 + 1<32>:int8], int8, word32)
	branch (v127_560 & 0xC0<32>) == 0x80<32> != 0<32> l00116094
l0011608D:
	loc127_234 = 0x28<32>
	goto l001163F2
l00116094:
	branch (v127_560 & 0x3F<32> | (v127_128 & 0xFF<32>) << 6<32> & 0x7C0<32>) <=u arg3 l001160C3
l001160BC:
	loc127_234 = 0x28<32>
	goto l001163F2
l001160C3:
	loc9_368 = loc7_102 + 2<32>
	goto l001163E0
l001160D1:
	branch (v127_128 & 0xFF<32>) >= 0xF0<32> l00116233
l001160E1:
	branch arg1 - loc7_102 >= 3<32> l001160FE
l001160F7:
	loc127_234 = 0x28<32>
	goto l001163F2
l001160FE:
	v127_399 = CONVERT(Mem126[loc7_102 + 1<32>:int8], int8, word32)
	v127_407 = CONVERT(Mem126[loc7_102 + 2<32>:int8], int8, word32)
l0011611A:
	switch (CONVERT(v133_127, byte, int32) - 0xFFFFFFE0<32>) { l0011613E l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l0011618C l00116165 }
l0011613E:
	branch (SLICE(v127_399, byte, 0) & 0xE0<8>) == 0xA0<8> != 0<32> l00116162
l0011615B:
	loc127_234 = 0x14<32>
	goto l001163F2
l00116162:
	goto l001161B1
l00116165:
	branch (SLICE(v127_399, byte, 0) & 0xE0<8>) == 0x80<8> != 0<32> l00116189
l00116182:
	loc127_234 = 0x16<32>
	goto l001163F2
l00116189:
	goto l001161B1
l0011618C:
	branch (SLICE(v127_399, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l001161B0
l001161A9:
	loc127_234 = 0x18<32>
	goto l001163F2
l001161B0:
l001161B0:
l001161B1:
	branch (v127_407 & 0xC0<32>) == 0x80<32> != 0<32> l001161D6
l001161CF:
	loc127_234 = 0x28<32>
	goto l001163F2
l001161D6:
	v127_530 = loc7_102 + 3<32>
	branch ((v127_399 & 0xFF<32>) << 6<32> & 0xFC0<32> | (v127_128 & 0xFF<32>) << 0xC<32> & 0xF000<32> | v127_407 & 0x3F<32>) <=u arg3 l0011622B
l00116224:
	loc127_234 = 0x28<32>
	goto l001163F2
l0011622B:
	loc9_368 = v127_530
	goto l001163E0
l00116233:
	Mem191 = Mem0 (alias)
	branch (v127_128 & 0xFF<32>) < 0xF5<32> != 0<32> l0011624B
l00116244:
	loc127_234 = 0x28<32>
	goto l001163F2
l0011624B:
	branch arg1 - loc7_102 >= 4<32> l00116268
l00116261:
	loc127_234 = 0x28<32>
	goto l001163F2
l00116268:
	v127_193 = CONVERT(Mem191[loc7_102 + 1<32>:int8], int8, word32)
	v127_201 = CONVERT(Mem191[loc7_102 + 2<32>:int8], int8, word32)
	v127_209 = CONVERT(Mem191[loc7_102 + 3<32>:int8], int8, word32)
l00116292:
	switch (CONVERT(v133_127, byte, int32) - 0xFFFFFFF0<32>) { l001162AD l001162FF l001162FF l001162FF l001162D8 }
l001162AD:
	branch (CONVERT(SLICE(v127_193, byte, 0) + 0x70<8>, byte, int32) & 0xFF<32>) < 0x30<32> != 0<32> l001162D5
l001162CE:
	loc127_234 = 0x1F<32>
	goto l001163F2
l001162D5:
	goto l00116324
l001162D8:
	branch (SLICE(v127_193, byte, 0) & 0xF0<8>) == 0x80<8> != 0<32> l001162FC
l001162F5:
	loc127_234 = 0x21<32>
	goto l001163F2
l001162FC:
	goto l00116324
l001162FF:
	branch (SLICE(v127_193, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00116323
l0011631C:
	loc127_234 = 0x23<32>
	goto l001163F2
l00116323:
l00116323:
l00116324:
	branch (v127_201 & 0xC0<32>) == 0x80<32> != 0<32> l00116349
l00116342:
	loc127_234 = 0x28<32>
	goto l001163F2
l00116349:
	branch (v127_209 & 0xC0<32>) == 0x80<32> != 0<32> l0011636D
l00116366:
	loc127_234 = 0x28<32>
	goto l001163F2
l0011636D:
	v127_364 = loc7_102 + 4<32>
	branch ((v127_193 & 0xFF<32>) << 0xC<32> & 0x3F000<32> | (v127_128 & 0xFF<32>) << 0x12<32> & 0x1C0000<32> | (v127_201 & 0xFF<32>) << 6<32> & 0xFC0<32> | v127_209 & 0x3F<32>) <=u arg3 l001163DA
l001163D3:
	loc127_234 = 0x28<32>
	goto l001163F2
l001163DA:
	loc9_368 = v127_364
l001163DE:
l001163DF:
l001163E0:
	loc6_113 = loc6_113 + 1<32>
	loc7_102 = loc9_368
	goto l00115FBB
l001163F2:
	branch loc127_234 != 0x14<32> l0011640B
l001163FB:
	goto l0011649E
l0011640B:
	branch loc127_234 != 0x16<32> l00116422
l00116412:
	goto l0011649D
l00116422:
	branch loc127_234 != 0x18<32> l00116439
l00116429:
	goto l0011649C
l00116439:
	branch loc127_234 != 0x1F<32> l00116450
l00116440:
	goto l0011649B
l00116450:
	branch loc127_234 != 0x21<32> l00116467
l00116457:
	goto l0011649A
l00116467:
	branch loc127_234 != 0x23<32> l0011647E
l0011646E:
	goto l00116499
l0011647E:
	branch loc127_234 != 0x28<32> l00116499
l00116485:
l00116499:
l00116499:
l0011649A:
l0011649B:
l0011649C:
l0011649D:
l0011649E:
	return <invalid>
fn00115EEF_exit:


word32 fn001164A4(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00115E30
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001164A4_entry:
l001164A4:
	Mem10[arg2:word32] = arg0
	Mem17[arg5:word32] = arg3
	branch (arg7 & 4<32>) != 0<32> l001164D3
l001164CA:
	goto l00116576
l001164D3:
	v114_30 = Mem17[arg2:word32]
	branch arg1 - v114_30 <= 2<32> l00116571
l001164F4:
	branch Mem17[v114_30:int8] != 0xEF<8> l0011656B
l0011650C:
	branch Mem17[v114_30 + 1<32>:int8] != 0xBB<8> l00116565
l0011652C:
	branch Mem17[v114_30 + 2<32>:int8] != 0xBF<8> l0011655F
l0011654C:
	Mem108[arg2:word32] = v114_30 + 3<32>
	goto l00116563
l0011655F:
l00116563:
	goto l00116569
l00116565:
l00116569:
	goto l0011656F
l0011656B:
l0011656F:
	goto l00116575
l00116571:
l00116575:
l00116576:
l00116579:
	v114_118 = Mem117[arg2:word32]
	loc117_679 = loc117 (alias)
	branch v114_118 <u arg1 != 0<32> l00116595
l0011658E:
	loc117_679 = 0x28<32>
	goto l001169EF
l00116595:
	v114_129 = Mem117[arg5:word32]
	branch v114_129 <u arg4 != 0<32> l001165AF
l001165A8:
	loc117_679 = 0x28<32>
	goto l001169EF
l001165AF:
	v120_139 = Mem117[v114_118:int8]
	v114_140 = CONVERT(v120_139, int8, word32)
	v114_150 = CONVERT(v120_139, byte, int32)
l001165CB:
	branch v114_150 <= 0xFFFFFFFF<32> l001165F9
l001165D1:
	branch (v114_140 & 0xFF<32>) <=u arg6 l001165E3
l001165DC:
	goto l001169EF
l001165E3:
	Mem648[v114_129:word32] = v114_140 & 0xFF<32>
	Mem655[arg2:word32] = v114_118 + 1<32>
	goto l001169D6
l001165F9:
	branch (v114_140 & 0xFF<32>) >= 0xC2<32> l00116610
l00116609:
	goto l001169EF
l00116610:
	branch (v114_140 & 0xFF<32>) >= 0xE0<32> l001166B6
l00116620:
	branch arg1 - v114_118 >= 2<32> l0011663D
l00116636:
	goto l001169EF
l0011663D:
	v114_586 = CONVERT(Mem117[v114_118 + 1<32>:int8], int8, word32)
	branch (v114_586 & 0xC0<32>) == 0x80<32> != 0<32> l0011666F
l00116668:
	goto l001169EF
l0011666F:
	v114_616 = v114_586 & 0x3F<32> | (v114_140 & 0xFF<32>) << 6<32> & 0x7C0<32>
	branch v114_616 <=u arg6 l0011669E
l00116697:
	goto l001169EF
l0011669E:
	Mem625[v114_129:word32] = v114_616
	Mem632[arg2:word32] = v114_118 + 2<32>
	goto l001169D7
l001166B6:
	branch (v114_140 & 0xFF<32>) >= 0xF0<32> l00116821
l001166C6:
	branch arg1 - v114_118 >= 3<32> l001166E3
l001166DC:
	goto l001169EF
l001166E3:
	v114_416 = CONVERT(Mem117[v114_118 + 1<32>:int8], int8, word32)
	v114_424 = CONVERT(Mem117[v114_118 + 2<32>:int8], int8, word32)
l001166FF:
	switch (CONVERT(v120_139, byte, int32) - 0xFFFFFFE0<32>) { l00116723 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l00116771 l0011674A }
l00116723:
	branch (SLICE(v114_416, byte, 0) & 0xE0<8>) == 0xA0<8> != 0<32> l00116747
l00116740:
	goto l001169EF
l00116747:
	goto l00116796
l0011674A:
	loc117_679 = loc117 (alias)
	branch (SLICE(v114_416, byte, 0) & 0xE0<8>) == 0x80<8> != 0<32> l0011676E
l00116767:
	goto l001169EF
l0011676E:
	goto l00116796
l00116771:
	loc117_679 = loc117 (alias)
	branch (SLICE(v114_416, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00116795
l0011678E:
	goto l001169EF
l00116795:
l00116795:
l00116796:
	loc117_679 = loc117 (alias)
	branch (v114_424 & 0xC0<32>) == 0x80<32> != 0<32> l001167BB
l001167B4:
	goto l001169EF
l001167BB:
	v114_532 = (v114_416 & 0xFF<32>) << 6<32> & 0xFC0<32> | (v114_140 & 0xFF<32>) << 0xC<32> & 0xF000<32> | v114_424 & 0x3F<32>
	branch v114_532 <=u arg6 l00116809
l00116802:
	goto l001169EF
l00116809:
	Mem547[v114_129:word32] = v114_532
	Mem560[arg2:word32] = v114_118 + 3<32>
	goto l001169D7
l00116821:
	branch (v114_140 & 0xFF<32>) < 0xF5<32> != 0<32> l00116839
l00116832:
	goto l001169EF
l00116839:
	branch arg1 - v114_118 >= 4<32> l00116856
l0011684F:
	goto l001169EF
l00116856:
	v114_202 = CONVERT(Mem117[v114_118 + 1<32>:int8], int8, word32)
	v114_210 = CONVERT(Mem117[v114_118 + 2<32>:int8], int8, word32)
	v114_218 = CONVERT(Mem117[v114_118 + 3<32>:int8], int8, word32)
l00116880:
	switch (CONVERT(v120_139, byte, int32) - 0xFFFFFFF0<32>) { l0011689B l001168ED l001168ED l001168ED l001168C6 }
l0011689B:
	branch (CONVERT(SLICE(v114_202, byte, 0) + 0x70<8>, byte, int32) & 0xFF<32>) < 0x30<32> != 0<32> l001168C3
l001168BC:
	goto l001169EF
l001168C3:
	goto l00116912
l001168C6:
	loc117_679 = loc117 (alias)
	branch (SLICE(v114_202, byte, 0) & 0xF0<8>) == 0x80<8> != 0<32> l001168EA
l001168E3:
	goto l001169EF
l001168EA:
	goto l00116912
l001168ED:
	loc117_679 = loc117 (alias)
	branch (SLICE(v114_202, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00116911
l0011690A:
	goto l001169EF
l00116911:
l00116911:
l00116912:
	loc117_679 = loc117 (alias)
	branch (v114_210 & 0xC0<32>) == 0x80<32> != 0<32> l00116937
l00116930:
	goto l001169EF
l00116937:
	branch (v114_218 & 0xC0<32>) == 0x80<32> != 0<32> l0011695B
l00116954:
	goto l001169EF
l0011695B:
	v114_357 = (v114_202 & 0xFF<32>) << 0xC<32> & 0x3F000<32> | (v114_140 & 0xFF<32>) << 0x12<32> & 0x1C0000<32> | (v114_210 & 0xFF<32>) << 6<32> & 0xFC0<32> | v114_218 & 0x3F<32>
	branch v114_357 <=u arg6 l001169C1
l001169BA:
	goto l001169EF
l001169C1:
	Mem373[v114_129:word32] = v114_357
	Mem386[arg2:word32] = v114_118 + 4<32>
l001169D6:
l001169D7:
	Mem675[arg5:word32] = Mem665[arg5:word32] + 4<32>
	goto l00116579
l001169EF:
	branch loc117_679 != 0x28<32> l00116A04
l001169F8:
l00116A04:
	return <invalid>
fn001164A4_exit:


word32 fn00116A09(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00115DC1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00116A09_entry:
l00116A09:
	Mem10[arg2:word32] = arg0
	Mem17[arg5:word32] = arg3
	branch (arg7 & 2<32>) != 0<32> l00116A38
l00116A33:
	loc93 = 4<32>
	goto l00116AA7
l00116A38:
	branch arg4 - arg3 >= 3<32> l00116A53
l00116A4E:
	goto l00116AA6
l00116A53:
	Mem50[arg5:word32] = arg3 + 1<32>
	Mem54[arg3:byte] = 0xEF<8>
	v90_56 = Mem54[arg5:word32]
	Mem64[arg5:word32] = v90_56 + 1<32>
	Mem68[v90_56:byte] = 0xBB<8>
	v90_70 = Mem68[arg5:word32]
	Mem78[arg5:word32] = v90_70 + 1<32>
	Mem82[v90_70:byte] = 0xBF<8>
	loc93 = 4<32>
l00116AA6:
l00116AA7:
	branch loc93 != 4<32> l00116DB8
l00116AB1:
	loc20_103 = Mem98[arg2:word32]
l00116ABE:
	branch loc20_103 <u arg1 != 0<32> l00116AD1
l00116ACA:
	goto l00116DB8
l00116AD1:
	v90_114 = Mem113[loc20_103:word32]
	branch !(v90_114 >u arg6 | (v90_114 & 0xFFFFF800<32>) == 0xD800<32>) l00116B02
l00116AFB:
	goto l00116DB8
l00116B02:
l00116B0A:
	branch v90_114 >=u 0x80<32> l00116B52
l00116B10:
	v90_428 = Mem113[arg5:word32]
	branch arg4 - v90_428 >= 1<32> l00116B34
l00116B2D:
	goto l00116DB8
l00116B34:
	Mem451[arg5:word32] = v90_428 + 1<32>
	Mem455[v90_428:byte] = SLICE(v90_114, byte, 0)
	goto l00116D99
l00116B52:
	branch v90_114 >=u 0x800<32> l00116BE4
l00116B5E:
	v90_363 = Mem113[arg5:word32]
	branch arg4 - v90_363 >= 2<32> l00116B82
l00116B7B:
	goto l00116DB8
l00116B82:
	Mem394[arg5:word32] = v90_363 + 1<32>
	Mem398[v90_363:byte] = SLICE(v90_114 >>u 6<32>, byte, 0) | 0xC0<8>
	v90_412 = Mem398[arg5:word32]
	Mem420[arg5:word32] = v90_412 + 1<32>
	Mem424[v90_412:byte] = SLICE(v90_114, byte, 0) & 0x3F<8> | 0x80<8>
	goto l00116D9A
l00116BE4:
	v90_150 = Mem113[arg5:word32]
	v90_157 = arg4 - v90_150
	branch v90_114 >=u 0x10000<32> l00116CB1
l00116C03:
	branch v90_157 >= 3<32> l00116C15
l00116C0E:
	goto l00116DB8
l00116C15:
	Mem299[arg5:word32] = v90_150 + 1<32>
	Mem303[v90_150:byte] = SLICE(v90_114 >>u 0xC<32>, byte, 0) | 0xE0<8>
	v90_321 = Mem303[arg5:word32]
	Mem329[arg5:word32] = v90_321 + 1<32>
	Mem333[v90_321:byte] = SLICE(v90_114 >>u 6<32>, byte, 0) & 0x3F<8> | 0x80<8>
	v90_347 = Mem333[arg5:word32]
	Mem355[arg5:word32] = v90_347 + 1<32>
	Mem359[v90_347:byte] = SLICE(v90_114, byte, 0) & 0x3F<8> | 0x80<8>
	goto l00116D9A
l00116CB1:
	branch v90_157 >= 4<32> l00116CC3
l00116CBC:
	goto l00116DB8
l00116CC3:
	Mem183[arg5:word32] = v90_150 + 1<32>
	Mem187[v90_150:byte] = SLICE(v90_114 >>u 0x12<32>, byte, 0) | 0xF0<8>
	v90_205 = Mem187[arg5:word32]
	Mem213[arg5:word32] = v90_205 + 1<32>
	Mem217[v90_205:byte] = SLICE(v90_114 >>u 0xC<32>, byte, 0) & 0x3F<8> | 0x80<8>
	v90_235 = Mem217[arg5:word32]
	Mem243[arg5:word32] = v90_235 + 1<32>
	Mem247[v90_235:byte] = SLICE(v90_114 >>u 6<32>, byte, 0) & 0x3F<8> | 0x80<8>
	v90_261 = Mem247[arg5:word32]
	Mem269[arg5:word32] = v90_261 + 1<32>
	Mem273[v90_261:byte] = SLICE(v90_114, byte, 0) & 0x3F<8> | 0x80<8>
	goto l00116D9A
l00116D99:
	Mem461 = Mem455
l00116D9A:
	v90_462 = Mem460[arg2:word32]
	Mem470[arg2:word32] = v90_462 + 4<32>
	loc20_103 = v90_462 + 4<32>
	goto l00116ABE
l00116DB8:
l00116DB8:
	return <invalid>
fn00116A09_exit:


void fn00116DBE(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00116DBE_entry:
l00116DBE:
	fn0011B709(arg0)
	return
fn00116DBE_exit:


word32 fn00116DCC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00116DCC_entry:
l00116DCC:
	Mem10[arg4:word32] = arg2
	Mem17[arg7:word32] = arg5
	return <invalid>
fn00116DCC_exit:


word32 fn00116DE5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00116DE5_entry:
l00116DE5:
	Mem10[arg4:word32] = arg2
	Mem17[arg7:word32] = arg5
	return <invalid>
fn00116DE5_exit:


word32 fn00116DFE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00116DFE_entry:
l00116DFE:
	Mem10[arg4:word32] = arg2
	return <invalid>
fn00116DFE_exit:


word32 fn00116E10(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00116E10_entry:
l00116E10:
	return <invalid>
fn00116E10_exit:


word32 fn00116E1B(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00116E1B_entry:
l00116E1B:
	return <invalid>
fn00116E1B_exit:


word32 fn00116E26(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00116E26_entry:
l00116E26:
	branch arg3 - arg2 >=u arg4 l00116E49
l00116E46:
	goto l00116E4B
l00116E49:
l00116E4B:
	return <invalid>
fn00116E26_exit:


word32 fn00116E53(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00116E53_entry:
l00116E53:
	return <invalid>
fn00116E53_exit:


word32 fn00116E5E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00116E5E_entry:
	arg7_1019 = arg7
	arg4_1029 = arg4
	arg6_1021 = arg6
	arg1_1027 = arg1
	arg3_1024 = arg3
l00116E5E:
	v124_228 = Mem0[0x00140030<p32>:word32]
	Mem233[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	loc127 = v124_228
	branch Mem233[0x00140030<p32>:word32] < Mem233[0x00140034<p32>:word32] l00116E77
l00116E72:
	abortStackOverflow(0x10<32>)
l00116E77:
	loc102 = v124_228
	loc10_249 = arg2
l00116E88:
	branch loc10_249 != arg3 l00116E9C
l00116E95:
	loc11_273 = arg3
	goto l00116EC2
l00116E9C:
	branch Mem233[loc10_249:word32] != 0<32> l00116EB5
l00116EAE:
	loc11_273 = loc10_249
	goto l00116EC2
l00116EB5:
	loc10_249 = loc10_249 + 4<32>
	goto l00116E88
l00116EC2:
	Mem288[arg7:word32] = arg5
	Mem298[arg4:word32] = arg2
	loc37 = arg6
	loc38 = arg0 + 8<32>
	loc12_218 = arg2
	loc13_221 = arg5
	loc14_224 = loc11_273
l00116EEB:
	branch !(loc13_221 == arg6_1021 | loc12_218 == arg3_1024) l00116F11
l00116F06:
	loc126_461 = 0x35<32>
	goto l001171A0
l00116F11:
	Mem374[loc102:word64] = Mem359[arg1_1027:word64]
	v124_409 = fn000DB419(Mem374[loc38:word32])
	Mem412[0x00140048<p32>:word32] = 0<32>
	v124_423 = invoke_iiiiii(0x1B9<32>, loc13_221, arg4_1029, loc14_224 - loc12_218 >> 2<32>, loc37 - loc13_221, arg1_1027)
	v124_425 = Mem412[0x00140048<p32>:word32]
	Mem428[0x00140048<p32>:word32] = 0<32>
	loc48 = v124_409
	branch !(v124_425 & 1<32>) l00116F7F
l00116F78:
	loc126_461 = 0xB<32>
	goto l001171A0
l00116F7F:
	branch v124_409 == 0<32> != 0<32> l00116FB2
l00116F8B:
	Mem441[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v124_409)
	v124_445 = Mem441[0x00140048<p32>:word32]
	Mem448[0x00140048<p32>:word32] = 0<32>
	branch !(v124_445 & 1<32>) l00116FB1
l00116FAA:
	loc126_461 = 0xA<32>
	goto l001171A0
l00116FB1:
l00116FB2:
	switch (v124_423 - 0xFFFFFFFF<32>) { l00116FC4 l00116FD0 }
l00116FC4:
	loc126_461 = 0x10<32>
	goto l001171A0
l00116FD0:
	loc48 = v124_409
	loc126_461 = 0x32<32>
	goto l001171A0
l001170DA:
	Mem112 = Mem130
	branch v124_137 != 0xFFFFFFFF<32> l001170EA
l001170E7:
	goto l00117125
l001170EA:
	v133_113 = Mem112[v124_135 + 0xFFFFFFFF<32>:int8]
	v124_118 = Mem112[arg7_1019:word32]
	Mem126[arg7_1019:word32] = v124_118 + 1<32>
	Mem130[v124_118:byte] = v133_113
	goto l001170DA
l00117125:
	v124_143 = Mem112[arg4_1029:word32]
	Mem151[arg4_1029:word32] = v124_143 + 4<32>
	loc17_153 = v124_143 + 4<32>
l00117142:
	branch loc17_153 != arg3_1024 l00117156
l0011714F:
	loc18_177 = arg3_1024
	goto l0011717C
l00117156:
	branch Mem151[loc17_153:word32] != 0<32> l0011716F
l00117168:
	loc18_177 = loc17_153
	goto l0011717C
l0011716F:
	loc17_153 = loc17_153 + 4<32>
	goto l00117142
l0011717C:
	v124_184 = Mem151[arg7_1019:word32]
l00117191:
	loc94 = loc94_33
	Mem360 = Mem151
	loc12_218 = v124_143 + 4<32>
	loc13_221 = v124_184
	loc14_224 = loc18_177
	goto l00116EEB
l001171A0:
	branch loc126_461 != 0xA<32> l001171BA
l001171AB:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l001173FB
l001171BA:
	branch loc126_461 != 0xB<32> l00117209
l001171C1:
	v124_773 = ___cxa_find_matching_catch_2()
	branch loc48 == 0<32> != 0<32> l00117204
l001171D5:
	Mem798[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc48)
	v124_802 = Mem798[0x00140048<p32>:word32]
	Mem805[0x00140048<p32>:word32] = 0<32>
	branch !(v124_802 & 1<32>) l00117203
l001171F4:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117203:
l00117204:
	___resumeException(v124_773)
	goto l001173FA
l00117209:
	branch loc126_461 != 0x10<32> l0011736A
l00117210:
	Mem590[arg7_1019:word32] = loc13_221
	loc16_597 = loc12_218
	loc69_599 = loc13_221
l00117221:
	branch loc16_597 != Mem602[arg4_1029:word32] l0011723C
l00117235:
	loc126_461 = 0x1C<32>
	goto l001172E7
l0011723C:
	v124_612 = Mem602[loc16_597:word32]
	v124_619 = fn000DB419(Mem602[loc38:word32])
	Mem622[0x00140048<p32>:word32] = 0<32>
	v124_629 = invoke_iiii(0x1BA<32>, loc69_599, v124_612, loc102)
	v124_631 = Mem622[0x00140048<p32>:word32]
	Mem634[0x00140048<p32>:word32] = 0<32>
	loc68 = v124_619
	branch !(v124_631 & 1<32>) l0011727C
l00117275:
	loc126_461 = 0x16<32>
	goto l001172E7
l0011727C:
	branch v124_619 == 0<32> != 0<32> l001172AF
l00117288:
	Mem647[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v124_619)
	v124_651 = Mem647[0x00140048<p32>:word32]
	Mem654[0x00140048<p32>:word32] = 0<32>
	branch !(v124_651 & 1<32>) l001172AE
l001172A7:
	loc126_461 = 0x15<32>
	goto l001172E7
l001172AE:
l001172AF:
	branch v124_629 != 0xFFFFFFFF<32> l001172C1
l001172BA:
	loc126_461 = 0x1C<32>
	goto l001172E7
l001172C1:
	v124_674 = Mem669[arg7_1019:word32] + v124_629
	Mem678[arg7_1019:word32] = v124_674
	loc16_597 = loc16_597 + 4<32>
	loc69_599 = v124_674
	goto l00117221
l001172E7:
	branch loc126_461 != 0x15<32> l001172FF
l001172F0:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00117368
l001172FF:
	branch loc126_461 != 0x16<32> l0011734E
l00117306:
	v124_716 = ___cxa_find_matching_catch_2()
	branch loc68 == 0<32> != 0<32> l00117349
l0011731A:
	Mem745[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc68)
	v124_749 = Mem745[0x00140048<p32>:word32]
	Mem752[0x00140048<p32>:word32] = 0<32>
	branch !(v124_749 & 1<32>) l00117348
l00117339:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117348:
l00117349:
	___resumeException(v124_716)
	goto l00117367
l0011734E:
	branch loc126_461 != 0x1C<32> l00117367
l00117355:
	Mem711[arg4_1029:word32] = loc16_597
	loc126_461 = 0x32<32>
	goto l001173FC
l00117367:
l00117367:
l00117368:
	goto l001173F9
l0011736A:
	branch loc126_461 != 0x23<32> l00117380
l00117371:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l001173F8
l00117380:
	branch loc126_461 != 0x24<32> l001173CF
l00117387:
	v124_525 = ___cxa_find_matching_catch_2()
	branch loc94 == 0<32> != 0<32> l001173CA
l0011739B:
	Mem550[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc94)
	v124_554 = Mem550[0x00140048<p32>:word32]
	Mem557[0x00140048<p32>:word32] = 0<32>
	branch !(v124_554 & 1<32>) l001173C9
l001173BA:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001173C9:
l001173CA:
	___resumeException(v124_525)
	goto l001173F7
l001173CF:
	branch loc126_461 != 0x31<32> l001173DF
l001173D6:
	loc126_461 = 0x32<32>
	goto l001173F6
l001173DF:
	branch loc126_461 != 0x33<32> l001173F6
l001173E6:
	loc126_461 = 0x35<32>
l001173F6:
l001173F6:
l001173F7:
l001173F8:
l001173F9:
l001173FA:
l001173FB:
l001173FC:
	branch loc126_461 != 0x32<32> l00117409
l00117404:
	goto l00117423
l00117409:
	branch loc126_461 != 0x35<32> l00117423
l00117410:
l00117423:
l00117423:
	Mem982[0x00140030<p32>:word32] = loc127
	return <invalid>
fn00116E5E_exit:


word32 fn0011742D(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011742D_entry:
l0011742D:
	v118_10 = Mem0[0x00140030<p32>:word32]
	Mem15[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem15[0x00140030<p32>:word32] < Mem15[0x00140034<p32>:word32] l00117446
l00117441:
	abortStackOverflow(0x10<32>)
l00117446:
	loc8_27 = arg2
l00117450:
	branch loc8_27 != arg3 l00117464
l0011745D:
	loc9_102 = arg3
	goto l00117490
l00117464:
	branch Mem15[loc8_27:int8] != 0<8> l00117483
l0011747C:
	loc9_102 = loc8_27
	goto l00117490
l00117483:
	loc8_27 = loc8_27 + 1<32>
	goto l00117450
l00117490:
	Mem71[arg7:word32] = arg5
	Mem81[arg4:word32] = arg2
	loc10_105 = arg2
	loc11_101 = arg5
	loc12_104 = loc9_102
l001174B9:
	branch !(loc11_101 == arg6 | loc10_105 == arg3) l001174DF
l001174D4:
	loc120_363 = 0x33<32>
	goto l001176FA
l001174DF:
	Mem130[v118_10:word64] = Mem124[arg1:word64]
	v118_156 = fn000DB419(Mem130[arg0 + 8<32>:word32])
	Mem159[0x00140048<p32>:word32] = 0<32>
	v118_167 = invoke_iiiiii(0x1BB<32>, loc11_101, arg4, loc12_104 - loc10_105, arg6 - loc11_101 >> 2<32>, arg1)
	v118_169 = Mem159[0x00140048<p32>:word32]
	Mem172[0x00140048<p32>:word32] = 0<32>
	loc32 = loc12_104
	loc39 = v118_156
	branch !(v118_169 & 1<32>) l0011754B
l00117544:
	loc120_363 = 0xB<32>
	goto l001176FA
l0011754B:
	branch v118_156 == 0<32> != 0<32> l0011757E
l00117557:
	Mem185[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v118_156)
	v118_189 = Mem185[0x00140048<p32>:word32]
	Mem192[0x00140048<p32>:word32] = 0<32>
	branch !(v118_189 & 1<32>) l0011757D
l00117576:
	loc120_363 = 0xA<32>
	goto l001176FA
l0011757D:
l0011757E:
	branch v118_167 != 0xFFFFFFFF<32> l00117598
l00117589:
	loc14 = loc10_105
	loc119 = loc11_101
	loc120_363 = 0x10<32>
	goto l001176FA
l00117598:
	v118_214 = Mem207[arg7:word32] + (v118_167 << 2<32>)
	Mem218[arg7:word32] = v118_214
	branch v118_214 != arg6 l001175C2
l001175BB:
	loc120_363 = 0x30<32>
	goto l001176FA
l001175C2:
	v118_233 = Mem218[arg4:word32]
	branch loc12_104 != arg3 l001175E1
l001175D4:
	loc19_353 = arg3
	loc24_355 = v118_214
	loc25_359 = v118_233
	goto l001176EB
l001175E1:
	v118_241 = fn000DB419(Mem218[arg0 + 8<32>:word32])
	Mem244[0x00140048<p32>:word32] = 0<32>
	v118_251 = invoke_iiiii(0x1BC<32>, v118_214, v118_233, 1<32>, arg1)
	v118_253 = Mem244[0x00140048<p32>:word32]
	Mem256[0x00140048<p32>:word32] = 0<32>
	loc87 = v118_241
	branch !(v118_253 & 1<32>) l0011761C
l00117615:
	loc120_363 = 0x26<32>
	goto l001176FA
l0011761C:
	branch v118_241 == 0<32> != 0<32> l0011764F
l00117628:
	Mem269[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v118_241)
	v118_273 = Mem269[0x00140048<p32>:word32]
	Mem276[0x00140048<p32>:word32] = 0<32>
	branch !(v118_273 & 1<32>) l0011764E
l00117647:
	loc120_363 = 0x25<32>
	goto l001176FA
l0011764E:
l0011764F:
	branch v118_251 == 0<32> != 0<32> l00117666
l0011765B:
	loc120_363 = 0x2F<32>
	goto l001176FA
l00117666:
	Mem300[arg7:word32] = Mem291[arg7:word32] + 4<32>
	v118_303 = Mem300[arg4:word32]
	Mem311[arg4:word32] = v118_303 + 1<32>
	loc15_313 = v118_303 + 1<32>
l00117696:
	branch loc15_313 != arg3 l001176AA
l001176A3:
	loc16_342 = arg3
	goto l001176D6
l001176AA:
	branch Mem311[loc15_313:int8] != 0<8> l001176C9
l001176C2:
	loc16_342 = loc15_313
	goto l001176D6
l001176C9:
	loc15_313 = loc15_313 + 1<32>
	goto l00117696
l001176D6:
	loc19_353 = loc16_342
	loc24_355 = Mem311[arg7:word32]
	loc25_359 = v118_303 + 1<32>
l001176EB:
	loc10_105 = loc25_359
	loc11_101 = loc24_355
	loc12_104 = loc19_353
	goto l001174B9
l001176FA:
	branch loc120_363 != 0xA<32> l00117714
l00117705:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l001179BA
l00117714:
	branch loc120_363 != 0xB<32> l00117763
l0011771B:
	v118_710 = ___cxa_find_matching_catch_2()
	branch loc39 == 0<32> != 0<32> l0011775E
l0011772F:
	Mem732[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc39)
	v118_736 = Mem732[0x00140048<p32>:word32]
	Mem739[0x00140048<p32>:word32] = 0<32>
	branch !(v118_736 & 1<32>) l0011775D
l0011774E:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011775D:
l0011775E:
	___resumeException(v118_710)
	goto l001179B9
l00117763:
	branch loc120_363 != 0x10<32> l0011793A
l0011776A:
l0011776C:
	Mem485[arg7:word32] = loc119
	branch loc14 != Mem485[arg4:word32] l00117792
l0011778B:
	loc120_363 = 0x1F<32>
	goto l00117875
l00117792:
	v118_508 = fn000DB419(Mem485[arg0 + 8<32>:word32])
	Mem511[0x00140048<p32>:word32] = 0<32>
	v118_518 = invoke_iiiii(0x1BC<32>, loc119, loc14, loc32 - loc14, v118_10)
	v118_520 = Mem511[0x00140048<p32>:word32]
	Mem523[0x00140048<p32>:word32] = 0<32>
	loc61 = v118_508
	branch !(v118_520 & 1<32>) l001177D8
l001177D1:
	loc120_363 = 0x15<32>
	goto l00117875
l001177D8:
	branch v118_508 == 0<32> != 0<32> l0011780B
l001177E4:
	Mem536[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v118_508)
	v118_540 = Mem536[0x00140048<p32>:word32]
	Mem543[0x00140048<p32>:word32] = 0<32>
	branch !(v118_540 & 1<32>) l0011780A
l00117803:
	loc120_363 = 0x14<32>
	goto l00117875
l0011780A:
l0011780B:
	switch (v118_518 - 0xFFFFFFFE<32>) { l0011782C l00117820 l00117838 }
l00117820:
	loc120_363 = 0x1B<32>
	goto l00117875
l0011782C:
	loc61 = v118_508
	loc120_363 = 0x1C<32>
	goto l00117875
l00117838:
	v118_556 = loc14 + 1<32>
l00117858:
	loc61 = v118_508
	loc14 = v118_556
	loc119 = Mem653[arg7:word32] + 4<32>
	goto l0011776C
l00117875:
	branch loc120_363 != 0x14<32> l0011788D
l0011787E:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00117938
l0011788D:
	branch loc120_363 != 0x15<32> l001178DC
l00117894:
	v118_650 = ___cxa_find_matching_catch_2()
	branch loc61 == 0<32> != 0<32> l001178D7
l001178A8:
	Mem682[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc61)
	v118_686 = Mem682[0x00140048<p32>:word32]
	Mem689[0x00140048<p32>:word32] = 0<32>
	branch !(v118_686 & 1<32>) l001178D6
l001178C7:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l001178D6:
l001178D7:
	___resumeException(v118_650)
	goto l00117937
l001178DC:
	branch loc120_363 != 0x1B<32> l001178F5
l001178E3:
	Mem645[arg4:word32] = loc14
	loc120_363 = 0x2F<32>
	goto l001179BB
l001178F5:
	branch loc120_363 != 0x1C<32> l0011790E
l001178FC:
	Mem638[arg4:word32] = loc14
	loc120_363 = 0x2F<32>
	goto l001179BB
l0011790E:
	branch loc120_363 != 0x1F<32> l00117935
l00117915:
	Mem614[arg4:word32] = loc14
	loc120_363 = 0x2F<32>
	goto l001179BB
l00117935:
l00117935:
l00117936:
l00117937:
l00117938:
	goto l001179B8
l0011793A:
	branch loc120_363 != 0x25<32> l00117950
l00117941:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l001179B7
l00117950:
	branch loc120_363 != 0x26<32> l0011799F
l00117957:
	v118_429 = ___cxa_find_matching_catch_2()
	branch loc87 == 0<32> != 0<32> l0011799A
l0011796B:
	Mem451[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc87)
	v118_455 = Mem451[0x00140048<p32>:word32]
	Mem458[0x00140048<p32>:word32] = 0<32>
	branch !(v118_455 & 1<32>) l00117999
l0011798A:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117999:
l0011799A:
	___resumeException(v118_429)
	goto l001179B6
l0011799F:
	branch loc120_363 != 0x30<32> l001179B6
l001179A6:
	loc120_363 = 0x33<32>
l001179B6:
l001179B6:
l001179B7:
l001179B8:
l001179B9:
l001179BA:
l001179BB:
	branch loc120_363 != 0x2F<32> l001179C8
l001179C3:
	goto l001179E2
l001179C8:
	branch loc120_363 != 0x33<32> l001179E2
l001179CF:
l001179E2:
l001179E2:
	Mem908[0x00140030<p32>:word32] = v118_10
	return <invalid>
fn0011742D_exit:


word32 fn001179EC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001179EC_entry:
l001179EC:
	v38_72 = Mem0[0x00140030<p32>:word32]
	Mem77[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem77[0x00140030<p32>:word32] < Mem77[0x00140034<p32>:word32] l00117A05
l00117A00:
	abortStackOverflow(0x10<32>)
l00117A05:
	Mem93[arg4:word32] = arg2
	v38_105 = fn000DB419(Mem93[arg0 + 8<32>:word32])
	Mem108[0x00140048<p32>:word32] = 0<32>
	v38_116 = invoke_iiii(0x1BA<32>, v38_72, 0<32>, arg1)
	v38_118 = Mem108[0x00140048<p32>:word32]
	Mem121[0x00140048<p32>:word32] = 0<32>
	branch !(v38_118 & 1<32>) l00117A91
l00117A49:
	v38_127 = ___cxa_find_matching_catch_2()
	branch v38_105 == 0<32> != 0<32> l00117A8C
l00117A5D:
	Mem138[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v38_105)
	v38_142 = Mem138[0x00140048<p32>:word32]
	Mem145[0x00140048<p32>:word32] = 0<32>
	branch !(v38_142 & 1<32>) l00117A8B
l00117A7C:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117A8B:
l00117A8C:
	___resumeException(v38_127)
l00117A91:
	branch v38_105 == 0<32> != 0<32> l00117ACC
l00117A9D:
	Mem170[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v38_105)
	v38_174 = Mem170[0x00140048<p32>:word32]
	Mem177[0x00140048<p32>:word32] = 0<32>
	branch !(v38_174 & 1<32>) l00117ACB
l00117ABC:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117ACB:
l00117ACC:
	switch (v38_116 - 0xFFFFFFFF<32>) { l00117AE2 l00117AE0 }
l00117AE0:
l00117AE2:
	goto l00117B72
l00117B22:
	Mem40 = Mem58
	branch v38_65 != 0xFFFFFFFF<32> l00117B34
l00117B2D:
	goto l00117B73
l00117B34:
	v43_41 = Mem40[v38_63 + 0xFFFFFFFF<32>:int8]
	v38_46 = Mem40[arg4_215:word32]
	Mem54[arg4_215:word32] = v38_46 + 1<32>
	Mem58[v38_46:byte] = v43_41
	goto l00117B22
l00117B72:
	loc39 = v38_72
l00117B73:
	Mem210[0x00140030<p32>:word32] = loc39
	return <invalid>
fn001179EC_exit:


word32 fn00117B7D(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00117B7D_entry:
l00117B7D:
	v40_11 = Mem0[arg0 + 8<32>:word32]
	Mem14[0x00140048<p32>:word32] = 0<32>
	v40_17 = invoke_ii(0x17E<32>, v40_11)
	v40_19 = Mem14[0x00140048<p32>:word32]
	Mem22[0x00140048<p32>:word32] = 0<32>
l00117BAD:
	branch !(v40_19 & 1<32>) l00117BB8
l00117BB3:
	loc36 = 0x10<32>
	goto l00117D00
l00117BB8:
	Mem29[0x00140048<p32>:word32] = 0<32>
	v40_34 = invoke_iiii(0x1BD<32>, 0<32>, 0<32>, 4<32>)
	v40_36 = Mem29[0x00140048<p32>:word32]
	Mem39[0x00140048<p32>:word32] = 0<32>
	branch !(v40_36 & 1<32>) l00117C2E
l00117BDC:
	v40_46 = ___cxa_find_matching_catch_3(0<32>)
	branch v40_17 != 0<32> l00117BF8
l00117BF1:
	loc34 = v40_46
	goto l00117D01
l00117BF8:
	Mem56[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v40_17)
	v40_60 = Mem56[0x00140048<p32>:word32]
	Mem63[0x00140048<p32>:word32] = 0<32>
	branch (v40_60 & 1<32>) != 0<32> l00117C1F
l00117C18:
	loc34 = v40_46
	goto l00117D01
l00117C1F:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117C2E:
	branch v40_17 == 0<32> != 0<32> l00117C69
l00117C3A:
	Mem84[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v40_17)
	v40_88 = Mem84[0x00140048<p32>:word32]
	Mem91[0x00140048<p32>:word32] = 0<32>
	branch !(v40_88 & 1<32>) l00117C68
l00117C59:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117C68:
l00117C69:
	branch v40_34 != 0<32> l00117CF8
l00117C74:
	v40_120 = Mem117[arg0 + 8<32>:word32]
	branch v40_120 != 0<32> l00117C8B
l00117C86:
	loc35 = 1<32>
	goto l00117CF6
l00117C8B:
	Mem128[0x00140048<p32>:word32] = 0<32>
	v40_131 = invoke_ii(0x17E<32>, v40_120)
	v40_133 = Mem128[0x00140048<p32>:word32]
	Mem136[0x00140048<p32>:word32] = 0<32>
	branch !(v40_133 & 1<32>) l00117CB2
l00117CAB:
	loc36 = 0x10<32>
	goto l00117D01
l00117CB2:
	branch v40_131 != 0<32> l00117CC2
l00117CBD:
	loc35 = 0<32>
	goto l00117CF5
l00117CC2:
	Mem148[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v40_131)
	v40_152 = Mem148[0x00140048<p32>:word32]
	Mem155[0x00140048<p32>:word32] = 0<32>
	branch !(v40_152 & 1<32>) l00117CF0
l00117CE1:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00117CF4
l00117CF0:
	loc35 = 0<32>
l00117CF4:
l00117CF5:
l00117CF6:
	goto l00117CFC
l00117CF8:
	loc35 = 0xFFFFFFFF<32>
l00117CFC:
	return loc35
l00117D00:
l00117D01:
	branch loc36 != 0x10<32> l00117D18
l00117D09:
	loc34 = ___cxa_find_matching_catch_3(0<32>)
l00117D18:
	fn000D0E65(loc34)
	return 0<32>
fn00117B7D_exit:


word32 fn00117D21(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00117D21_entry:
l00117D21:
	return <invalid>
fn00117D21_exit:


word32 fn00117D2C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00117D2C_entry:
l00117D2C:
	loc5_131 = 0<32>
	loc6_133 = 0<32>
	loc7_136 = arg2
l00117D4B:
	branch !(loc7_136 == arg3 | loc5_131 >=u arg4) l00117D6D
l00117D66:
	loc38_138 = 0xF<32>
	goto l00117E4C
l00117D6D:
	v38_62 = fn000DB419(Mem58[arg0 + 8<32>:word32])
	Mem65[0x00140048<p32>:word32] = 0<32>
	v38_71 = invoke_iiii(0x1BE<32>, loc7_136, arg3 - loc7_136, arg1)
	v38_73 = Mem65[0x00140048<p32>:word32]
	Mem76[0x00140048<p32>:word32] = 0<32>
	loc13 = v38_62
	branch !(v38_73 & 1<32>) l00117DB1
l00117DAA:
	loc38_138 = 7<32>
	goto l00117E4C
l00117DB1:
	branch v38_62 == 0<32> != 0<32> l00117DE4
l00117DBD:
	Mem89[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v38_62)
	v38_93 = Mem89[0x00140048<p32>:word32]
	Mem96[0x00140048<p32>:word32] = 0<32>
	branch !(v38_93 & 1<32>) l00117DE3
l00117DDC:
	loc38_138 = 6<32>
	goto l00117E4C
l00117DE3:
l00117DE4:
	switch (v38_71 - 0xFFFFFFFE<32>) { l00117DF9 l00117DFB l00117E07 }
l00117DF9:
l00117DFB:
	loc38_138 = 0xF<32>
	goto l00117E4C
l00117E07:
	v38_109 = loc7_136 + 1<32>
l00117E2F:
	Mem227 = Mem164
	loc13 = v38_62
	loc5_131 = loc5_131 + 1<32>
	loc6_133 = loc6_133 + 1<32>
	loc7_136 = v38_109
	goto l00117D4B
l00117E4C:
	branch loc38_138 != 6<32> l00117E64
l00117E55:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00117EBF
l00117E64:
	branch loc38_138 != 7<32> l00117EB3
l00117E6B:
	v38_160 = ___cxa_find_matching_catch_2()
	branch loc13 == 0<32> != 0<32> l00117EAE
l00117E7F:
	Mem182[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, loc13)
	v38_186 = Mem182[0x00140048<p32>:word32]
	Mem189[0x00140048<p32>:word32] = 0<32>
	branch !(v38_186 & 1<32>) l00117EAD
l00117E9E:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117EAD:
l00117EAE:
	___resumeException(v38_160)
	goto l00117EBE
l00117EB3:
	branch loc38_138 != 0xF<32> l00117EBE
l00117EBA:
	return loc6_133
l00117EBE:
l00117EBE:
l00117EBF:
	return 0<32>
fn00117D2C_exit:


word32 fn00117EC5(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00117EC5_entry:
l00117EC5:
	v19_11 = Mem0[arg0 + 8<32>:word32]
	branch v19_11 != 0<32> l00117EE9
l00117EE4:
	goto l00117F5C
l00117EE9:
	Mem19[0x00140048<p32>:word32] = 0<32>
	v19_22 = invoke_ii(0x17E<32>, v19_11)
	v19_24 = Mem19[0x00140048<p32>:word32]
	Mem27[0x00140048<p32>:word32] = 0<32>
	branch !(v19_24 & 1<32>) l00117F18
l00117F09:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l00117F18:
	branch v19_22 != 0<32> l00117F28
l00117F23:
	goto l00117F5B
l00117F28:
	Mem46[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x17E<32>, v19_22)
	v19_50 = Mem46[0x00140048<p32>:word32]
	Mem53[0x00140048<p32>:word32] = 0<32>
	branch !(v19_50 & 1<32>) l00117F56
l00117F47:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00117F5A
l00117F56:
l00117F5A:
l00117F5B:
l00117F5C:
	return <invalid>
fn00117EC5_exit:


void fn00117F62(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00117FED
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00117F62_entry:
l00117F62:
	Mem8[arg0:word32] = 0x2478<32>
	v16_14 = Mem8[arg0 + 8<32>:word32]
	Mem17[0x00140048<p32>:word32] = 0<32>
	v16_19 = invoke_i(0x17B<32>)
	v16_21 = Mem17[0x00140048<p32>:word32]
	Mem24[0x00140048<p32>:word32] = 0<32>
l00117F99:
	branch (v16_21 & 1<32>) != 0<32> l00117FD7
l00117FA0:
	branch v16_14 == v16_19 != 0<32> l00117FD5
l00117FAC:
	v16_38 = Mem24[arg0 + 8<32>:word32]
	Mem41[0x00140048<p32>:word32] = 0<32>
	invoke_vi(0x1A1<32>, v16_38)
	v16_44 = Mem41[0x00140048<p32>:word32]
	Mem47[0x00140048<p32>:word32] = 0<32>
	branch !(v16_44 & 1<32>) l00117FD4
l00117FD1:
	goto l00117FD7
l00117FD4:
l00117FD5:
	return
l00117FD7:
l00117FD7:
	v16_54 = ___cxa_find_matching_catch_3(0<32>)
	fn00115DAA(arg0)
	fn000D0E65(v16_54)
l00117FEB:
	return
fn00117F62_exit:


void fn00117FED(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00117FED_entry:
l00117FED:
	fn00117F62(arg0)
	fn0011B709(arg0)
	return
fn00117FED_exit:


word32 fn00118000(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00118000_entry:
l00118000:
	v10_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00118019
l00118014:
	abortStackOverflow(0x10<32>)
l00118019:
	Mem24[v10_2 + 4<32>:word32] = arg2
	Mem30[v10_2:word32] = arg5
	v10_45 = fn00118DA0(arg2, arg3, v10_2 + 4<32>, arg5, arg6, v10_2, 0x10FFFF<32>, 0<32>)
	Mem55[arg4:word32] = Mem30[v10_2 + 4<32>:word32]
	Mem64[arg7:word32] = Mem55[v10_2:word32]
	Mem66[0x00140030<p32>:word32] = v10_2
	return <invalid>
fn00118000_exit:


word32 fn0011806F(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011806F_entry:
l0011806F:
	v10_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l00118088
l00118083:
	abortStackOverflow(0x10<32>)
l00118088:
	Mem24[v10_2 + 4<32>:word32] = arg2
	Mem30[v10_2:word32] = arg5
	v10_45 = fn00118734(arg2, arg3, v10_2 + 4<32>, arg5, arg6, v10_2, 0x10FFFF<32>, 0<32>)
	Mem55[arg4:word32] = Mem30[v10_2 + 4<32>:word32]
	Mem64[arg7:word32] = Mem55[v10_2:word32]
	Mem66[0x00140030<p32>:word32] = v10_2
	return <invalid>
fn0011806F_exit:


word32 fn001180DE(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001180DE_entry:
l001180DE:
	Mem10[arg4:word32] = arg2
	return <invalid>
fn001180DE_exit:


word32 fn001180F0(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn001180F0_entry:
l001180F0:
	return <invalid>
fn001180F0_exit:


word32 fn001180FB(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn001180FB_entry:
l001180FB:
	return <invalid>
fn001180FB_exit:


word32 fn00118106(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00118106_entry:
l00118106:
	return <invalid>
fn00118106_exit:


word32 fn00118123(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00118123_entry:
l00118123:
	return <invalid>
fn00118123_exit:


word32 fn0011812E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00118106
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011812E_entry:
l0011812E:
	branch (arg4 & 4<32>) != 0<32> l00118154
l0011814B:
	loc7_102 = arg0
	goto l001181F7
l00118154:
	branch arg1 - arg0 <= 2<32> l001181EE
l0011816A:
	branch Mem0[arg0:int8] != 0xEF<8> l001181E4
l00118182:
	branch Mem0[arg0 + 1<32>:int8] != 0xBB<8> l001181DA
l001181A2:
	branch Mem0[arg0 + 2<32>:int8] != 0xBF<8> l001181CC
l001181C9:
	v132_95 = arg0 + 3<32>
	goto l001181CE
l001181CC:
	v132_95 = arg0
l001181CE:
	loc7_102 = v132_95
	goto l001181E2
l001181DA:
	loc7_102 = arg0
l001181E2:
	goto l001181EC
l001181E4:
	loc7_102 = arg0
l001181EC:
	goto l001181F6
l001181EE:
	loc7_102 = arg0
l001181F6:
l001181F7:
	loc6_113 = 0<32>
l001181FA:
	Mem126 = Mem0 (alias)
	branch (loc6_113 <u arg2 & loc7_102 <u arg1) != 0<32> l00118220
l00118218:
	loc132_255 = 0x27<32>
	goto l0011867B
l00118220:
	v138_127 = Mem126[loc7_102:int8]
	v132_128 = CONVERT(v138_127, int8, word32)
	branch (v132_128 & 0xFF<32>) <=u arg3 l00118242
l0011823A:
	loc132_255 = 0x27<32>
	goto l0011867B
l00118242:
	v132_144 = CONVERT(v138_127, byte, int32)
l0011824F:
	branch v132_144 <= 0xFFFFFFFF<32> l00118265
l00118255:
	loc8_396 = loc6_113
	loc9_398 = loc7_102 + 1<32>
	goto l00118668
l00118265:
	branch (v132_128 & 0xFF<32>) >= 0xC2<32> l0011827D
l00118275:
	loc132_255 = 0x27<32>
	goto l0011867B
l0011827D:
	branch (v132_128 & 0xFF<32>) >= 0xE0<32> l00118321
l0011828D:
	branch arg1 - loc7_102 >= 2<32> l001182AB
l001182A3:
	loc132_255 = 0x27<32>
	goto l0011867B
l001182AB:
	v132_600 = CONVERT(Mem126[loc7_102 + 1<32>:int8], int8, word32)
	branch (v132_600 & 0xC0<32>) == 0x80<32> != 0<32> l001182DE
l001182D6:
	loc132_255 = 0x27<32>
	goto l0011867B
l001182DE:
	v132_638 = loc7_102 + 2<32>
	branch (v132_600 & 0x3F<32> | (v132_128 & 0xFF<32>) << 6<32> & 0x7C0<32>) <=u arg3 l00118315
l0011830D:
	loc132_255 = 0x27<32>
	goto l0011867B
l00118315:
	loc8_396 = loc6_113
	loc9_398 = v132_638
	goto l00118669
l00118321:
	Mem429 = Mem0 (alias)
	branch (v132_128 & 0xFF<32>) >= 0xF0<32> l0011848D
l00118331:
	branch arg1 - loc7_102 >= 3<32> l0011834F
l00118347:
	loc132_255 = 0x27<32>
	goto l0011867B
l0011834F:
	v132_431 = CONVERT(Mem429[loc7_102 + 1<32>:int8], int8, word32)
	v132_439 = CONVERT(Mem429[loc7_102 + 2<32>:int8], int8, word32)
l0011836B:
	switch (CONVERT(v138_127, byte, int32) - 0xFFFFFFE0<32>) { l0011838F l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183DF l001183B7 }
l0011838F:
	branch (SLICE(v132_431, byte, 0) & 0xE0<8>) == 0xA0<8> != 0<32> l001183B4
l001183AC:
	loc132_255 = 0x13<32>
	goto l0011867B
l001183B4:
	goto l00118405
l001183B7:
	branch (SLICE(v132_431, byte, 0) & 0xE0<8>) == 0x80<8> != 0<32> l001183DC
l001183D4:
	loc132_255 = 0x15<32>
	goto l0011867B
l001183DC:
	goto l00118405
l001183DF:
	branch (SLICE(v132_431, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00118404
l001183FC:
	loc132_255 = 0x17<32>
	goto l0011867B
l00118404:
l00118404:
l00118405:
	branch (v132_439 & 0xC0<32>) == 0x80<32> != 0<32> l0011842B
l00118423:
	loc132_255 = 0x27<32>
	goto l0011867B
l0011842B:
	v132_563 = loc7_102 + 3<32>
	branch ((v132_431 & 0xFF<32>) << 6<32> & 0xFC0<32> | (v132_128 & 0xFF<32>) << 0xC<32> & 0xF000<32> | v132_439 & 0x3F<32>) <=u arg3 l00118481
l00118479:
	loc132_255 = 0x27<32>
	goto l0011867B
l00118481:
	loc8_396 = loc6_113
	loc9_398 = v132_563
	goto l00118669
l0011848D:
	Mem212 = Mem0 (alias)
	branch (v132_128 & 0xFF<32>) < 0xF5<32> != 0<32> l001184A6
l0011849E:
	loc132_255 = 0x27<32>
	goto l0011867B
l001184A6:
	branch !(arg2 - loc6_113 <u 2<32> | arg1 - loc7_102 < 4<32>) l001184DB
l001184D3:
	loc132_255 = 0x27<32>
	goto l0011867B
l001184DB:
	v132_214 = CONVERT(Mem212[loc7_102 + 1<32>:int8], int8, word32)
	v132_222 = CONVERT(Mem212[loc7_102 + 2<32>:int8], int8, word32)
	v132_230 = CONVERT(Mem212[loc7_102 + 3<32>:int8], int8, word32)
l00118505:
	switch (CONVERT(v138_127, byte, int32) - 0xFFFFFFF0<32>) { l00118520 l00118574 l00118574 l00118574 l0011854C }
l00118520:
	branch (CONVERT(SLICE(v132_214, byte, 0) + 0x70<8>, byte, int32) & 0xFF<32>) < 0x30<32> != 0<32> l00118549
l00118541:
	loc132_255 = 0x1E<32>
	goto l0011867B
l00118549:
	goto l0011859A
l0011854C:
	branch (SLICE(v132_214, byte, 0) & 0xF0<8>) == 0x80<8> != 0<32> l00118571
l00118569:
	loc132_255 = 0x20<32>
	goto l0011867B
l00118571:
	goto l0011859A
l00118574:
	branch (SLICE(v132_214, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00118599
l00118591:
	loc132_255 = 0x22<32>
	goto l0011867B
l00118599:
l00118599:
l0011859A:
	branch (v132_222 & 0xC0<32>) == 0x80<32> != 0<32> l001185C4
l001185BC:
	loc132_255 = 0x27<32>
	goto l0011867B
l001185C4:
	branch (v132_230 & 0xC0<32>) == 0x80<32> != 0<32> l001185E9
l001185E1:
	loc132_255 = 0x27<32>
	goto l0011867B
l001185E9:
	v132_385 = loc6_113 + 1<32>
	v132_392 = loc7_102 + 4<32>
	branch ((v132_214 & 0xFF<32>) << 0xC<32> & 0x3F000<32> | (v132_128 & 0xFF<32>) << 0x12<32> & 0x1C0000<32> | (v132_222 & 0xFF<32>) << 6<32> & 0xFC0<32> | v132_230 & 0x3F<32>) <=u arg3 l0011865F
l00118657:
	loc132_255 = 0x27<32>
	goto l0011867B
l0011865F:
	loc8_396 = v132_385
	loc9_398 = v132_392
l00118667:
l00118668:
l00118669:
	loc6_113 = loc8_396 + 1<32>
	loc7_102 = loc9_398
	goto l001181FA
l0011867B:
	branch loc132_255 != 0x13<32> l00118695
l00118685:
	goto l0011872E
l00118695:
	branch loc132_255 != 0x15<32> l001186AD
l0011869D:
	goto l0011872D
l001186AD:
	branch loc132_255 != 0x17<32> l001186C5
l001186B5:
	goto l0011872C
l001186C5:
	branch loc132_255 != 0x1E<32> l001186DD
l001186CD:
	goto l0011872B
l001186DD:
	branch loc132_255 != 0x20<32> l001186F5
l001186E5:
	goto l0011872A
l001186F5:
	branch loc132_255 != 0x22<32> l0011870D
l001186FD:
	goto l00118729
l0011870D:
	branch loc132_255 != 0x27<32> l00118729
l00118715:
l00118729:
l00118729:
l0011872A:
l0011872B:
l0011872C:
l0011872D:
l0011872E:
	return <invalid>
fn0011812E_exit:


word32 fn00118734(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011806F
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00118734_entry:
l00118734:
	Mem10[arg2:word32] = arg0
	Mem17[arg5:word32] = arg3
	branch (arg7 & 4<32>) != 0<32> l00118766
l0011875D:
	goto l00118809
l00118766:
	v141_30 = Mem17[arg2:word32]
	branch arg1 - v141_30 <= 2<32> l00118804
l00118787:
	branch Mem17[v141_30:int8] != 0xEF<8> l001187FE
l0011879F:
	branch Mem17[v141_30 + 1<32>:int8] != 0xBB<8> l001187F8
l001187BF:
	branch Mem17[v141_30 + 2<32>:int8] != 0xBF<8> l001187F2
l001187DF:
	Mem108[arg2:word32] = v141_30 + 3<32>
	goto l001187F6
l001187F2:
l001187F6:
	goto l001187FC
l001187F8:
l001187FC:
	goto l00118802
l001187FE:
l00118802:
	goto l00118808
l00118804:
l00118808:
l00118809:
l00118810:
	v141_127 = Mem126[arg2:word32]
	loc144_804 = loc144 (alias)
	branch v141_127 <u arg1 != 0<32> l0011882D
l00118825:
	loc144_804 = 0x29<32>
	goto l00118D85
l0011882D:
	v141_138 = Mem126[arg5:word32]
	branch v141_138 <u arg4 != 0<32> l00118848
l00118840:
	loc144_804 = 0x29<32>
	goto l00118D85
l00118848:
	v147_148 = Mem126[v141_127:int8]
	v141_149 = CONVERT(v147_148, int8, word32)
	branch (v141_149 & 0xFF<32>) <=u arg6 l00118869
l00118862:
	goto l00118D85
l00118869:
	v141_165 = CONVERT(v147_148, byte, int32)
l00118876:
	branch v141_165 <= 0xFFFFFFFF<32> l0011889A
l0011887C:
	Mem776[v141_138:word16] = CONVERT(v147_148, int8, word16) & 0xFF<16>
	Mem783[arg2:word32] = v141_127 + 1<32>
	goto l00118D6C
l0011889A:
	branch (v141_149 & 0xFF<32>) >= 0xC2<32> l001188B1
l001188AA:
	goto l00118D85
l001188B1:
	branch (v141_149 & 0xFF<32>) >= 0xE0<32> l00118960
l001188C1:
	branch arg1 - v141_127 >= 2<32> l001188DE
l001188D7:
	goto l00118D85
l001188DE:
	v141_709 = CONVERT(Mem126[v141_127 + 1<32>:int8], int8, word32)
	branch (v141_709 & 0xC0<32>) == 0x80<32> != 0<32> l00118910
l00118909:
	goto l00118D85
l00118910:
	v141_739 = v141_709 & 0x3F<32> | (v141_149 & 0xFF<32>) << 6<32> & 0x7C0<32>
	branch v141_739 <=u arg6 l0011893F
l00118938:
	goto l00118D85
l0011893F:
	Mem753[v141_138:word16] = SLICE(v141_739, word16, 0)
	Mem760[arg2:word32] = v141_127 + 2<32>
	goto l00118D6D
l00118960:
	branch (v141_149 & 0xFF<32>) >= 0xF0<32> l00118AD4
l00118970:
	branch arg1 - v141_127 >= 3<32> l0011898D
l00118986:
	goto l00118D85
l0011898D:
	v141_534 = CONVERT(Mem126[v141_127 + 1<32>:int8], int8, word32)
	v141_542 = CONVERT(Mem126[v141_127 + 2<32>:int8], int8, word32)
l001189A9:
	switch (CONVERT(v147_148, byte, int32) - 0xFFFFFFE0<32>) { l001189CD l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l00118A1B l001189F4 }
l001189CD:
	branch (SLICE(v141_534, byte, 0) & 0xE0<8>) == 0xA0<8> != 0<32> l001189F1
l001189EA:
	goto l00118D85
l001189F1:
	goto l00118A40
l001189F4:
	loc144_804 = loc144 (alias)
	branch (SLICE(v141_534, byte, 0) & 0xE0<8>) == 0x80<8> != 0<32> l00118A18
l00118A11:
	goto l00118D85
l00118A18:
	goto l00118A40
l00118A1B:
	loc144_804 = loc144 (alias)
	branch (SLICE(v141_534, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00118A3F
l00118A38:
	goto l00118D85
l00118A3F:
l00118A3F:
l00118A40:
	loc144_804 = loc144 (alias)
	branch (v141_542 & 0xC0<32>) == 0x80<32> != 0<32> l00118A65
l00118A5E:
	goto l00118D85
l00118A65:
	v141_646 = (v141_534 & 0xFF<32>) << 6<32> & 0xFC0<32> | (v141_149 & 0xFF<32>) << 0xC<32> | v141_542 & 0x3F<32>
	branch (v141_646 & 0xFFFF<32>) <=u arg6 l00118AB3
l00118AAC:
	goto l00118D85
l00118AB3:
	Mem670[v141_138:word16] = SLICE(v141_646, word16, 0)
	Mem683[arg2:word32] = v141_127 + 3<32>
	goto l00118D6D
l00118AD4:
	branch (v141_149 & 0xFF<32>) < 0xF5<32> != 0<32> l00118AEC
l00118AE5:
	goto l00118D85
l00118AEC:
	branch arg1 - v141_127 >= 4<32> l00118B09
l00118B02:
	goto l00118D85
l00118B09:
	v141_217 = CONVERT(Mem126[v141_127 + 1<32>:int8], int8, word32)
	v141_225 = CONVERT(Mem126[v141_127 + 2<32>:int8], int8, word32)
	v141_233 = CONVERT(Mem126[v141_127 + 3<32>:int8], int8, word32)
l00118B3A:
	switch (CONVERT(v147_148, byte, int32) - 0xFFFFFFF0<32>) { l00118B55 l00118BAF l00118BAF l00118BAF l00118B83 }
l00118B55:
	branch (CONVERT(SLICE(v141_217, byte, 0) + 0x70<8>, byte, int32) & 0xFF<32>) < 0x30<32> != 0<32> l00118B80
l00118B79:
	goto l00118D85
l00118B80:
	goto l00118BD9
l00118B83:
	loc144_804 = loc144 (alias)
	branch (SLICE(v141_217, byte, 0) & 0xF0<8>) == 0x80<8> != 0<32> l00118BAC
l00118BA5:
	goto l00118D85
l00118BAC:
	goto l00118BD9
l00118BAF:
	loc144_804 = loc144 (alias)
	branch (SLICE(v141_217, byte, 0) & 0xC0<8>) == 0x80<8> != 0<32> l00118BD8
l00118BD1:
	goto l00118D85
l00118BD8:
l00118BD8:
l00118BD9:
	loc144_804 = loc144 (alias)
	branch (v141_225 & 0xC0<32>) == 0x80<32> != 0<32> l00118C05
l00118BFE:
	goto l00118D85
l00118C05:
	branch (v141_233 & 0xC0<32>) == 0x80<32> != 0<32> l00118C2E
l00118C27:
	goto l00118D85
l00118C2E:
	branch arg4 - v141_138 >= 4<32> l00118C4B
l00118C44:
	goto l00118D85
l00118C4B:
	v141_374 = (v141_225 & 0xFF<32>) << 6<32>
	branch ((v141_217 & 0xFF<32>) << 0xC<32> & 0x3F000<32> | (v141_149 & 7<32>) << 0x12<32> | v141_374 & 0xFC0<32> | v141_233 & 0x3F<32>) <=u arg6 l00118CB1
l00118CAA:
	goto l00118D85
l00118CB1:
	Mem459[v141_138:word16] = (SLICE(v141_217, word16, 0) & 0xFF<16>) << 2<16> & 0x3C<16> | SLICE((v141_225 & 0xFF<32>) >>u 4<32>, word16, 0) & 3<16> | ((SLICE((v141_217 & 0xFF<32>) >>u 4<32>, word16, 0) & 3<16> | (CONVERT(v147_148, int8, word16) & 7<16>) << 2<16>) << 6<16>) + 0x3FC0<16> | 0xD800<16>
	Mem485[arg5:word32] = v141_138 + 2<32>
	Mem489[v141_138 + 2<32>:word16] = SLICE(v141_233, word16, 0) & 0x3F<16> | SLICE(v141_374, word16, 0) & 0x3C0<16> | 0xDC00<16>
	Mem502[arg2:word32] = Mem489[arg2:word32] + 4<32>
l00118D6C:
l00118D6D:
	Mem800[arg5:word32] = Mem790[arg5:word32] + 2<32>
	goto l00118810
l00118D85:
	branch loc144_804 != 0x29<32> l00118D9B
l00118D8F:
l00118D9B:
	return <invalid>
fn00118734_exit:


word32 fn00118DA0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00118000
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00118DA0_entry:
l00118DA0:
	Mem10[arg2:word32] = arg0
	Mem17[arg5:word32] = arg3
	branch (arg7 & 2<32>) != 0<32> l00118DD3
l00118DCD:
	loc141 = 4<32>
	goto l00118E43
l00118DD3:
	branch arg4 - arg3 >= 3<32> l00118DEE
l00118DE9:
	goto l00118E42
l00118DEE:
	Mem50[arg5:word32] = arg3 + 1<32>
	Mem54[arg3:byte] = 0xEF<8>
	v138_56 = Mem54[arg5:word32]
	Mem64[arg5:word32] = v138_56 + 1<32>
	Mem68[v138_56:byte] = 0xBB<8>
	v138_70 = Mem68[arg5:word32]
	Mem78[arg5:word32] = v138_70 + 1<32>
	Mem82[v138_70:byte] = 0xBF<8>
	loc141 = 4<32>
l00118E42:
l00118E43:
	branch loc141 != 4<32> l00119351
l00118E4E:
	loc59_109 = Mem104[arg2:word32]
l00118E5F:
	branch loc59_109 <u arg1 != 0<32> l00118E72
l00118E6B:
	goto l00119351
l00118E72:
	v144_120 = Mem119[loc59_109:int16]
	v138_121 = CONVERT(v144_120, int16, word32)
	branch (v138_121 & 0xFFFF<32>) <=u arg6 l00118E94
l00118E8D:
	goto l00119351
l00118E94:
	v140_137 = (v138_121 & 0xFFFF<32>) < 0x80<32>
l00118EA1:
	branch !v140_137 l00118EE9
l00118EA7:
	v138_668 = Mem119[arg5:word32]
	branch arg4 - v138_668 >= 1<32> l00118ECB
l00118EC4:
	goto l00119351
l00118ECB:
	Mem691[arg5:word32] = v138_668 + 1<32>
	Mem695[v138_668:byte] = SLICE(v144_120, byte, 0)
	goto l00119332
l00118EE9:
	branch (v138_121 & 0xFFFF<32>) >= 0x800<32> l00118F80
l00118EFA:
	v138_603 = Mem119[arg5:word32]
	branch arg4 - v138_603 >= 2<32> l00118F1E
l00118F17:
	goto l00119351
l00118F1E:
	Mem634[arg5:word32] = v138_603 + 1<32>
	Mem638[v138_603:byte] = SLICE((v138_121 & 0xFFFF<32>) >>u 6<32>, byte, 0) | 0xC0<8>
	v138_652 = Mem638[arg5:word32]
	Mem660[arg5:word32] = v138_652 + 1<32>
	Mem664[v138_652:byte] = SLICE(v144_120, byte, 0) & 0x3F<8> | 0x80<8>
	goto l00119333
l00118F80:
	branch (v138_121 & 0xFFFF<32>) >= 0xD800<32> l00119052
l00118F92:
	v138_508 = Mem119[arg5:word32]
	branch arg4 - v138_508 >= 3<32> l00118FB6
l00118FAF:
	goto l00119351
l00118FB6:
	Mem539[arg5:word32] = v138_508 + 1<32>
	Mem543[v138_508:byte] = SLICE((v138_121 & 0xFFFF<32>) >>u 0xC<32>, byte, 0) | 0xE0<8>
	v138_561 = Mem543[arg5:word32]
	Mem569[arg5:word32] = v138_561 + 1<32>
	Mem573[v138_561:byte] = SLICE((v138_121 & 0xFFFF<32>) >>u 6<32>, byte, 0) & 0x3F<8> | 0x80<8>
	v138_587 = Mem573[arg5:word32]
	Mem595[arg5:word32] = v138_587 + 1<32>
	Mem599[v138_587:byte] = SLICE(v144_120, byte, 0) & 0x3F<8> | 0x80<8>
	goto l00119333
l00119052:
	branch (v138_121 & 0xFFFF<32>) < 0xDC00<32> != 0<32> l0011913E
l00119065:
	branch (v138_121 & 0xFFFF<32>) >= 0xE000<32> l0011907E
l00119077:
	goto l00119351
l0011907E:
	v138_411 = Mem119[arg5:word32]
	branch arg4 - v138_411 >= 3<32> l001190A2
l0011909B:
	goto l00119351
l001190A2:
	Mem442[arg5:word32] = v138_411 + 1<32>
	Mem446[v138_411:byte] = SLICE((v138_121 & 0xFFFF<32>) >>u 0xC<32>, byte, 0) | 0xE0<8>
	v138_464 = Mem446[arg5:word32]
	Mem472[arg5:word32] = v138_464 + 1<32>
	Mem476[v138_464:byte] = SLICE((v138_121 & 0xFFFF<32>) >>u 6<32>, byte, 0) & 0x3F<8> | 0x80<8>
	v138_490 = Mem476[arg5:word32]
	Mem498[arg5:word32] = v138_490 + 1<32>
	Mem502[v138_490:byte] = SLICE(v144_120, byte, 0) & 0x3F<8> | 0x80<8>
	goto l00119333
l0011913E:
	branch arg1 - loc59_109 >= 4<32> l0011915B
l00119154:
	goto l00119351
l0011915B:
	v138_176 = loc59_109 + 2<32>
	v138_180 = CONVERT(Mem119[v138_176:int16], int16, word32)
	branch (v138_180 & 0xFC00<32>) == 0xDC00<32> != 0<32> l00119190
l00119189:
	goto l00119351
l00119190:
	branch arg4 - Mem119[arg5:word32] >= 4<32> l001191B0
l001191A9:
	goto l00119351
l001191B0:
	branch (((v138_121 & 0x3C0<32>) << 0xA<32>) + 0x10000<32> | (v138_121 & 0xFFFF<32>) << 0xA<32> & 0xFC00<32> | v138_180 & 0x3FF<32>) <=u arg6 l00119200
l001191F9:
	goto l00119351
l00119200:
	Mem250[arg2:word32] = v138_176
	v138_272 = Mem250[arg5:word32]
	Mem280[arg5:word32] = v138_272 + 1<32>
	v138_253 = (v138_121 & 0x3C0<32>) >>u 6<32>
	Mem284[v138_272:byte] = SLICE(v138_253 + 1<32> >>u 2<32>, byte, 0) | 0xF0<8>
	v138_314 = Mem284[arg5:word32]
	Mem322[arg5:word32] = v138_314 + 1<32>
	Mem326[v138_314:byte] = SLICE((v138_121 & 0xFFFF<32>) >>u 2<32>, byte, 0) & 0xF<8> | SLICE(v138_253, byte, 0) + 1<8> << 4<8> & 0x30<8> | 0x80<8>
	v138_356 = Mem326[arg5:word32]
	Mem364[arg5:word32] = v138_356 + 1<32>
	Mem368[v138_356:byte] = SLICE(v144_120, byte, 0) << 4<8> & 0x30<8> | SLICE((v138_180 & 0xFFFF<32>) >>u 6<32>, byte, 0) & 0xF<8> | 0x80<8>
	v138_382 = Mem368[arg5:word32]
	Mem390[arg5:word32] = v138_382 + 1<32>
	Mem394[v138_382:byte] = SLICE(v138_180, byte, 0) & 0x3F<8> | 0x80<8>
l00119332:
l00119333:
	v138_701 = Mem699[arg2:word32]
	Mem709[arg2:word32] = v138_701 + 2<32>
	loc59_109 = v138_701 + 2<32>
	goto l00118E5F
l00119351:
l00119351:
	return <invalid>
fn00118DA0_exit:


void fn00119357(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn001193F3
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119357_entry:
l00119357:
	Mem8[arg0:word32] = 0x24A8<32>
	loc1_18 = 0<32>
l0011937A:
	v19_26 = Mem8[arg0 + 8<32>:word32]
	branch loc1_18 <u Mem8[arg0 + 0xC<32>:word32] - v19_26 >> 2<32> != 0<32> l001193A7
l001193A4:
	goto l001193DC
l001193A7:
	v19_52 = Mem8[v19_26 + (loc1_18 << 2<32>):word32]
	branch v19_52 == 0<32> != 0<32> l001193CF
l001193C8:
	fn0011B43F(v19_52)
l001193CF:
	loc1_18 = loc1_18 + 1<32>
	goto l0011937A
l001193DC:
	fn0011BAF7(arg0 + 0x90<32>)
	fn00119406(arg0 + 8<32>)
	return
fn00119357_exit:


void fn001193F3(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001193F3_entry:
l001193F3:
	fn00119357(arg0)
	fn0011B709(arg0)
	return
fn001193F3_exit:


void fn00119406(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00119357
//      fn00119EA4
//      fn0011A71F
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119406_entry:
l00119406:
	v15_7 = Mem0[arg0:word32]
l0011941A:
	branch v15_7 == 0<32> != 0<32> l00119488
l00119421:
	loc6_23 = Mem0[arg0 + 4<32>:word32]
l00119435:
	branch loc6_23 != v15_7 l00119445
l00119442:
	goto l00119459
l00119445:
	v15_33 = loc6_23 + 0xFFFFFFFC<32>
	Mem38[arg0 + 4<32>:word32] = v15_33
	loc6_23 = v15_33
	goto l00119435
l00119459:
	branch arg0 + 0x10<32> != v15_7 l0011947F
l0011946D:
	Mem59[arg0 + 0x80<32>:byte] = 0<8>
	goto l00119488
l0011947F:
	fn0011B709(v15_7)
	goto l00119488
l00119488:
l00119488:
	return
fn00119406_exit:


void fn0011948C(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn001194DF
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011948C_entry:
l0011948C:
	Mem8[arg0:word32] = 0x24BC<32>
	v11_14 = Mem8[arg0 + 8<32>:word32]
	branch v11_14 == 0<32> != 0<32> l001194DC
l001194B5:
	branch Mem8[arg0 + 0xC<32>:int8] == 0<8> != 0<32> l001194DB
l001194D5:
	fn0011B717(v11_14)
l001194DB:
l001194DC:
	return
fn0011948C_exit:


void fn001194DF(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001194DF_entry:
l001194DF:
	fn0011948C(arg0)
	fn0011B709(arg0)
	return
fn001194DF_exit:


word32 fn001194F2(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001194F2_entry:
l001194F2:
	branch SLICE(arg1, byte, 0) <= 0xFF<8> l00119534
l00119509:
	fn001197B3()
	goto l00119538
l00119534:
l00119538:
	return <invalid>
fn001194F2_exit:


word32 fn0011953E(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011953E_entry:
l0011953E:
	loc3_65 = arg1
l0011954A:
	branch loc3_65 != arg2 l0011955A
l00119557:
	goto l001195B8
l0011955A:
	v19_17 = Mem16[loc3_65:int8]
	v16_18 = CONVERT(v19_17, int8, word32)
	branch v19_17 <= 0xFF<8> l0011959F
l00119572:
	loc4_30 = Mem16[fn001197B3() + (CONVERT(v19_17, byte, int32) << 2<32>):word32] & 0xFF<32>
	goto l001195A3
l0011959F:
	loc4_30 = v16_18
l001195A3:
	Mem59[loc3_65:byte] = SLICE(loc4_30, byte, 0)
	loc3_65 = loc3_65 + 1<32>
	goto l0011954A
l001195B8:
	return <invalid>
fn0011953E_exit:


word32 fn001195BF(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001195BF_entry:
l001195BF:
	branch SLICE(arg1, byte, 0) <= 0xFF<8> l00119603
l001195D6:
	fn00119770()
	goto l00119607
l00119603:
l00119607:
	return <invalid>
fn001195BF_exit:


word32 fn0011960D(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011960D_entry:
l0011960D:
	loc3_65 = arg1
l00119619:
	branch loc3_65 != arg2 l00119629
l00119626:
	goto l00119687
l00119629:
	v19_17 = Mem16[loc3_65:int8]
	v16_18 = CONVERT(v19_17, int8, word32)
	branch v19_17 <= 0xFF<8> l0011966E
l00119641:
	loc4_30 = Mem16[fn00119770() + (CONVERT(v19_17, byte, int32) << 2<32>):word32] & 0xFF<32>
	goto l00119672
l0011966E:
	loc4_30 = v16_18
l00119672:
	Mem59[loc3_65:byte] = SLICE(loc4_30, byte, 0)
	loc3_65 = loc3_65 + 1<32>
	goto l00119619
l00119687:
	return <invalid>
fn0011960D_exit:


word32 fn0011968E(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011968E_entry:
l0011968E:
	return <invalid>
fn0011968E_exit:


word32 fn00119699(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119699_entry:
l00119699:
	loc4_24 = arg3
	loc5_11 = arg1
l001196A9:
	branch loc5_11 != arg2 l001196B9
l001196B6:
	goto l001196DF
l001196B9:
	Mem28[loc4_24:byte] = Mem20[loc5_11:int8]
	loc4_24 = loc4_24 + 1<32>
	loc5_11 = loc5_11 + 1<32>
	goto l001196A9
l001196DF:
	return <invalid>
fn00119699_exit:


word32 fn001196E6(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001196E6_entry:
l001196E6:
	branch SLICE(arg1, byte, 0) <= 0xFF<8> l00119700
l001196FD:
	goto l00119702
l00119700:
l00119702:
	return <invalid>
fn001196E6_exit:


word32 fn0011970A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..7] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011970A_entry:
l0011970A:
	loc6_39 = arg4
	loc7_11 = arg1
l0011971A:
	branch loc7_11 != arg2 l0011972A
l00119727:
	goto l00119769
l0011972A:
	v16_21 = Mem20[loc7_11:int8]
	v13_22 = CONVERT(v16_21, int8, word32)
	branch v16_21 <= 0xFF<8> l00119745
l00119742:
	v13_34 = v13_22
	goto l00119747
l00119745:
	v13_34 = arg3
l00119747:
	Mem43[loc6_39:byte] = SLICE(v13_34, byte, 0)
	loc6_39 = loc6_39 + 1<32>
	loc7_11 = loc7_11 + 1<32>
	goto l0011971A
l00119769:
	return <invalid>
fn0011970A_exit:


word32 fn00119770()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn001195BF
//      fn0011960D
//      fn00119C68
//      fn00119C9F
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn00119770_entry:
l00119770:
	Mem5[0x00140048<p32>:word32] = 0<32>
	v11_7 = invoke_i(0x1BF<32>)
	v11_9 = Mem5[0x00140048<p32>:word32]
	Mem12[0x00140048<p32>:word32] = 0<32>
	branch !(v11_9 & 1<32>) l001197A3
l00119794:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l001197AD
l001197A3:
	return Mem12[v11_7:word32]
l001197AD:
	return 0<32>
fn00119770_exit:


word32 fn001197B3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn001194F2
//      fn0011953E
//      fn00119BC7
//      fn00119BFE
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn001197B3_entry:
l001197B3:
	Mem5[0x00140048<p32>:word32] = 0<32>
	v11_7 = invoke_i(0x1C0<32>)
	v11_9 = Mem5[0x00140048<p32>:word32]
	Mem12[0x00140048<p32>:word32] = 0<32>
	branch !(v11_9 & 1<32>) l001197E6
l001197D7:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l001197F0
l001197E6:
	return Mem12[v11_7:word32]
l001197F0:
	return 0<32>
fn001197B3_exit:


word32 fn001197F6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn001199EF
//      fn00119A3A
//      fn00119AC5
//      fn00119B43
//      fn00119EA4
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn001197F6_entry:
l001197F6:
	Mem5[0x00140048<p32>:word32] = 0<32>
	v11_7 = invoke_i(0x1C1<32>)
	v11_9 = Mem5[0x00140048<p32>:word32]
	Mem12[0x00140048<p32>:word32] = 0<32>
	branch !(v11_9 & 1<32>) l00119829
l0011981A:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l00119833
l00119829:
	return Mem12[v11_7:word32]
l00119833:
	return 0<32>
fn001197F6_exit:


void fn00119839(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00119857
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119839_entry:
l00119839:
	Mem8[arg0:word32] = 0x24F0<32>
	fn0011BAF7(arg0 + 0xC<32>)
	return
fn00119839_exit:


void fn00119857(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119857_entry:
l00119857:
	fn00119839(arg0)
	fn0011B709(arg0)
	return
fn00119857_exit:


word32 fn0011986A(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011986A_entry:
l0011986A:
	return <invalid>
fn0011986A_exit:


word32 fn00119883(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119883_entry:
l00119883:
	return <invalid>
fn00119883_exit:


void fn0011989C(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011989C_entry:
l0011989C:
	fn0011B8FA(arg0, arg1 + 0xC<32>)
	return
fn0011989C_exit:


void fn001198B3(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001198B3_entry:
l001198B3:
	Mem8[arg0:word64] = 0<64>
	Mem13[arg0 + 8<32>:word32] = 0<32>
	fn0011B96D(arg0, 0x4001<32>, 4<32>)
	return
fn001198B3_exit:


void fn001198D8(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001198D8_entry:
l001198D8:
	Mem8[arg0:word64] = 0<64>
	Mem13[arg0 + 8<32>:word32] = 0<32>
	fn0011B96D(arg0, 0x3FFB<32>, 5<32>)
	return
fn001198D8_exit:


void fn001198FD(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011991B
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001198FD_entry:
l001198FD:
	Mem8[arg0:word32] = 0x2518<32>
	fn0011BAF7(arg0 + 0x10<32>)
	return
fn001198FD_exit:


void fn0011991B(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011991B_entry:
l0011991B:
	fn001198FD(arg0)
	fn0011B709(arg0)
	return
fn0011991B_exit:


word32 fn0011992E(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011992E_entry:
l0011992E:
	return <invalid>
fn0011992E_exit:


word32 fn00119947(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119947_entry:
l00119947:
	return <invalid>
fn00119947_exit:


void fn00119960(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119960_entry:
l00119960:
	fn0011B8FA(arg0, arg1 + 0x10<32>)
	return
fn00119960_exit:


void fn00119977(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119977_entry:
l00119977:
	Mem8[arg0:word64] = 0<64>
	Mem13[arg0 + 8<32>:word32] = 0<32>
	fn0011C5CF(arg0, 0x2550<32>, fn000D7B05(0x2550<32>))
	return
fn00119977_exit:


void fn001199A5(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001199A5_entry:
l001199A5:
	Mem8[arg0:word64] = 0<64>
	Mem13[arg0 + 8<32>:word32] = 0<32>
	fn0011C5CF(arg0, 0x2538<32>, fn000D7B05(0x2538<32>))
	return
fn001199A5_exit:


void fn001199D3(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001199D3_entry:
l001199D3:
	fn0011B709(arg0)
	return
fn001199D3_exit:


void fn001199E1(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn001199E1_entry:
l001199E1:
	fn0011B709(arg0)
	return
fn001199E1_exit:


word32 fn001199EF(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn001199EF_entry:
l001199EF:
	branch arg2 >=u 0x80<32> l00119A30
l00119A01:
	fn001197F6()
	goto l00119A34
l00119A30:
l00119A34:
	return <invalid>
fn001199EF_exit:


word32 fn00119A3A(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119A3A_entry:
l00119A3A:
	loc4_54 = arg3
	loc5_11 = arg1
l00119A4A:
	branch loc5_11 != arg2 l00119A5A
l00119A57:
	goto l00119ABE
l00119A5A:
	v18_21 = Mem20[loc5_11:word32]
	branch v18_21 >=u 0x80<32> l00119A91
l00119A6D:
	loc7_29 = CONVERT(Mem20[fn001197F6() + (v18_21 << 1<32>):int16], int16, word32) & 0xFFFF<32>
	goto l00119A95
l00119A91:
	loc7_29 = 0<32>
l00119A95:
	Mem58[loc4_54:word16] = SLICE(loc7_29, word16, 0)
	loc4_54 = loc4_54 + 2<32>
	loc5_11 = loc5_11 + 4<32>
	goto l00119A4A
l00119ABE:
	return <invalid>
fn00119A3A_exit:


word32 fn00119AC5(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119AC5_entry:
l00119AC5:
	loc4_57 = arg2
l00119AD1:
	branch loc4_57 != arg3 l00119AE5
l00119ADE:
	goto l00119B3C
l00119AE5:
	v16_17 = Mem0[loc4_57:word32]
	branch v16_17 >=u 0x80<32> l00119B2F
l00119AF8:
	branch (Mem0[fn001197F6() + (v16_17 << 1<32>):int16] & SLICE(arg1, word16, 0)) == 0<16> != 0<32> l00119B2E
l00119B27:
	goto l00119B3C
l00119B2E:
l00119B2F:
	loc4_57 = loc4_57 + 4<32>
	goto l00119AD1
l00119B3C:
	return <invalid>
fn00119AC5_exit:


word32 fn00119B43(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119B43_entry:
l00119B43:
	loc4_56 = arg2
l00119B4F:
	branch loc4_56 != arg3 l00119B63
l00119B5C:
	goto l00119BC0
l00119B63:
	v16_17 = Mem0[loc4_56:word32]
	branch v16_17 <u 0x80<32> != 0<32> l00119B7E
l00119B77:
	goto l00119BC0
l00119B7E:
	branch (Mem0[fn001197F6() + (v16_17 << 1<32>):int16] & SLICE(arg1, word16, 0)) != 0<16> l00119BB3
l00119BAC:
	goto l00119BC0
l00119BB3:
	loc4_56 = loc4_56 + 4<32>
	goto l00119B4F
l00119BC0:
	return <invalid>
fn00119B43_exit:


word32 fn00119BC7(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119BC7_entry:
l00119BC7:
	branch arg1 >=u 0x80<32> l00119BF4
l00119BD9:
	fn001197B3()
	goto l00119BF8
l00119BF4:
l00119BF8:
	return <invalid>
fn00119BC7_exit:


word32 fn00119BFE(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119BFE_entry:
l00119BFE:
	loc3_49 = arg1
l00119C0A:
	branch loc3_49 != arg2 l00119C1A
l00119C17:
	goto l00119C61
l00119C1A:
	v14_17 = Mem16[loc3_49:word32]
	branch v14_17 >=u 0x80<32> l00119C48
l00119C2D:
	loc9_25 = Mem16[fn001197B3() + (v14_17 << 2<32>):word32]
	goto l00119C4C
l00119C48:
	loc9_25 = v14_17
l00119C4C:
	Mem43[loc3_49:word32] = loc9_25
	loc3_49 = loc3_49 + 4<32>
	goto l00119C0A
l00119C61:
	return <invalid>
fn00119BFE_exit:


word32 fn00119C68(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119C68_entry:
l00119C68:
	branch arg1 >=u 0x80<32> l00119C95
l00119C7A:
	fn00119770()
	goto l00119C99
l00119C95:
l00119C99:
	return <invalid>
fn00119C68_exit:


word32 fn00119C9F(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119C9F_entry:
l00119C9F:
	loc3_49 = arg1
l00119CAB:
	branch loc3_49 != arg2 l00119CBB
l00119CB8:
	goto l00119D02
l00119CBB:
	v14_17 = Mem16[loc3_49:word32]
	branch v14_17 >=u 0x80<32> l00119CE9
l00119CCE:
	loc9_25 = Mem16[fn00119770() + (v14_17 << 2<32>):word32]
	goto l00119CED
l00119CE9:
	loc9_25 = v14_17
l00119CED:
	Mem43[loc3_49:word32] = loc9_25
	loc3_49 = loc3_49 + 4<32>
	goto l00119CAB
l00119D02:
	return <invalid>
fn00119C9F_exit:


word32 fn00119D09(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..7]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119D09_entry:
l00119D09:
	return <invalid>
fn00119D09_exit:


word32 fn00119D1E(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119D1E_entry:
l00119D1E:
	loc4_30 = arg3
	loc5_11 = arg1
l00119D2E:
	branch loc5_11 != arg2 l00119D3E
l00119D3B:
	goto l00119D6E
l00119D3E:
	Mem33[loc4_30:word32] = CONVERT(Mem20[loc5_11:int8], byte, int32)
	loc4_30 = loc4_30 + 4<32>
	loc5_11 = loc5_11 + 1<32>
	goto l00119D2E
l00119D6E:
	return <invalid>
fn00119D1E_exit:


word32 fn00119D75(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119D75_entry:
l00119D75:
	branch arg1 >=u 0x80<32> l00119D92
l00119D8F:
	goto l00119D94
l00119D92:
l00119D94:
	return <invalid>
fn00119D75_exit:


word32 fn00119D9C(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..7] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn00119D9C_entry:
l00119D9C:
	loc6_23 = arg4
	loc7_25 = arg1
l00119DC2:
	branch loc7_25 != arg2 l00119DD2
l00119DCF:
	goto l00119E14
l00119DD2:
	v19_35 = Mem34[loc7_25:word32]
	branch v19_35 >=u 0x80<32> l00119DF0
l00119DED:
	v19_47 = v19_35 & 0xFF<32>
	goto l00119DF2
l00119DF0:
	v19_47 = arg3
l00119DF2:
	Mem56[loc6_23:byte] = SLICE(v19_47, byte, 0)
	loc6_23 = loc6_23 + 1<32>
	loc7_25 = loc7_25 + 4<32>
	goto l00119DC2
l00119E14:
	return <invalid>
fn00119D9C_exit:


void fn00119E25(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119E25_entry:
l00119E25:
	fn0011B709(arg0)
	return
fn00119E25_exit:


void fn00119E33(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119E33_entry:
l00119E33:
	fn0011B709(arg0)
	return
fn00119E33_exit:


void fn00119E41(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119E41_entry:
l00119E41:
	fn0011B709(arg0)
	return
fn00119E41_exit:


void fn00119E4F(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011AD9F
//      fn0011B1AE
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn00119E4F_entry:
l00119E4F:
	v10_5 = ___cxa_allocate_exception(8<32>)
	Mem8[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C2<32>, v10_5, 0x4030<32>)
	v10_12 = Mem8[0x00140048<p32>:word32]
	Mem15[0x00140048<p32>:word32] = 0<32>
	branch !(v10_12 & 1<32>) l00119E8E
l00119E7D:
	v10_27 = ___cxa_find_matching_catch_2()
	___cxa_free_exception(v10_5)
	___resumeException(v10_27)
	goto l00119EA1
l00119E8E:
	Mem23[v10_5:word32] = 0x26FC<32>
	___cxa_throw(v10_5, 0x9F8<32>, 0x156<32>)
l00119EA1:
l00119EA2:
	return
fn00119E4F_exit:


void fn00119EA4(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011B2CD
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn00119EA4_entry:
l00119EA4:
	Mem18[arg0 + 4<32>:word32] = arg1 + 0xFFFFFFFF<32>
	Mem21[arg0:word32] = 0x24A8<32>
	Mem27[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C3<32>, arg0 + 8<32>, 0x1C<32>)
	v100_31 = Mem27[0x00140048<p32>:word32]
	Mem34[0x00140048<p32>:word32] = 0<32>
	branch !(v100_31 & 1<32>) l00119F00
l00119EEF:
	loc5_922 = ___cxa_find_matching_catch_2()
	goto l0011A718
l00119F00:
	Mem46[arg0 + 0x90<32>:word64] = 0<64>
	Mem51[arg0 + 0x98<32>:word32] = 0<32>
	Mem53[0x00140048<p32>:word32] = 0<32>
	invoke_viii(0x199<32>, arg0 + 0x90<32>, 0x37CF<32>, 1<32>)
	v100_58 = Mem53[0x00140048<p32>:word32]
	Mem61[0x00140048<p32>:word32] = 0<32>
	branch !(v100_58 & 1<32>) l00119F4E
l00119F3D:
	loc3_889 = ___cxa_find_matching_catch_2()
	goto l0011A70A
l00119F4E:
	v100_68 = Mem61[arg0 + 8<32>:word32]
	loc10_78 = Mem61[arg0 + 0xC<32>:word32]
l00119F69:
	branch loc10_78 != v100_68 l00119F79
l00119F76:
	goto l00119F8D
l00119F79:
	v100_88 = loc10_78 + 0xFFFFFFFC<32>
	Mem93[arg0 + 0xC<32>:word32] = v100_88
	loc10_78 = v100_88
	goto l00119F69
l00119F8D:
	Mem98[0x443C<32>:word32] = 0<32>
	Mem101[0x4438<32>:word32] = 0x1B88<32>
	Mem103[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C4<32>, arg0, 0x4438<32>)
	v100_108 = Mem103[0x00140048<p32>:word32]
	Mem111[0x00140048<p32>:word32] = 0<32>
l00119FC0:
	branch !(v100_108 & 1<32>) l00119FCB
l00119FC6:
	goto l0011A6E3
l00119FCB:
	Mem119[0x4444<32>:word32] = 0<32>
	Mem122[0x4440<32>:word32] = 0x1BA8<32>
	Mem124[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C5<32>, arg0, 0x4440<32>)
	v100_128 = Mem124[0x00140048<p32>:word32]
	Mem131[0x00140048<p32>:word32] = 0<32>
	branch !(v100_128 & 1<32>) l0011A005
l0011A000:
	goto l0011A6E2
l0011A005:
	Mem139[0x444C<32>:word32] = 0<32>
	Mem142[0x4448<32>:word32] = 0x24BC<32>
	Mem145[0x4450<32>:word32] = 0<32>
	Mem149[0x4454<32>:byte] = 0<8>
	Mem154[0x4450<32>:word32] = fn001197F6()
	Mem156[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C6<32>, arg0, 0x4448<32>)
	v100_160 = Mem156[0x00140048<p32>:word32]
	Mem163[0x00140048<p32>:word32] = 0<32>
	branch !(v100_160 & 1<32>) l0011A060
l0011A05B:
	goto l0011A6E1
l0011A060:
	Mem171[0x445C<32>:word32] = 0<32>
	Mem174[0x4458<32>:word32] = 0x2580<32>
	Mem176[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C7<32>, arg0, 0x4458<32>)
	v100_180 = Mem176[0x00140048<p32>:word32]
	Mem183[0x00140048<p32>:word32] = 0<32>
	branch !(v100_180 & 1<32>) l0011A09B
l0011A096:
	goto l0011A6E0
l0011A09B:
	Mem191[0x4464<32>:word32] = 0<32>
	Mem194[0x4460<32>:word32] = 0x25C4<32>
	Mem196[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C8<32>, arg0, 0x4460<32>)
	v100_200 = Mem196[0x00140048<p32>:word32]
	Mem203[0x00140048<p32>:word32] = 0<32>
	branch !(v100_200 & 1<32>) l0011A0D6
l0011A0D1:
	goto l0011A6DF
l0011A0D6:
	Mem210[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C9<32>, 0x4468<32>, 1<32>)
	v100_214 = Mem210[0x00140048<p32>:word32]
	Mem217[0x00140048<p32>:word32] = 0<32>
	branch !(v100_214 & 1<32>) l0011A0FD
l0011A0F8:
	goto l0011A6DE
l0011A0FD:
	Mem224[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1CA<32>, arg0, 0x4468<32>)
	v100_228 = Mem224[0x00140048<p32>:word32]
	Mem231[0x00140048<p32>:word32] = 0<32>
	branch !(v100_228 & 1<32>) l0011A124
l0011A11F:
	goto l0011A6DD
l0011A124:
	Mem239[0x447C<32>:word32] = 0<32>
	Mem242[0x4478<32>:word32] = 0x25F4<32>
	Mem244[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1CB<32>, arg0, 0x4478<32>)
	v100_248 = Mem244[0x00140048<p32>:word32]
	Mem251[0x00140048<p32>:word32] = 0<32>
	branch !(v100_248 & 1<32>) l0011A15F
l0011A15A:
	goto l0011A6DC
l0011A15F:
	Mem259[0x4484<32>:word32] = 0<32>
	Mem262[0x4480<32>:word32] = 0x2624<32>
	Mem264[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1CC<32>, arg0, 0x4480<32>)
	v100_268 = Mem264[0x00140048<p32>:word32]
	Mem271[0x00140048<p32>:word32] = 0<32>
	branch !(v100_268 & 1<32>) l0011A19A
l0011A195:
	goto l0011A6DB
l0011A19A:
	fn0011A8DF(0x4488<32>, 1<32>)
	Mem280[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1CD<32>, arg0, 0x4488<32>)
	v100_284 = Mem280[0x00140048<p32>:word32]
	Mem287[0x00140048<p32>:word32] = 0<32>
	branch !(v100_284 & 1<32>) l0011A1CA
l0011A1C5:
	goto l0011A6DA
l0011A1CA:
	fn0011A98B(0x44A0<32>, 1<32>)
	Mem296[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1CE<32>, arg0, 0x44A0<32>)
	v100_300 = Mem296[0x00140048<p32>:word32]
	Mem303[0x00140048<p32>:word32] = 0<32>
	branch !(v100_300 & 1<32>) l0011A1FA
l0011A1F5:
	goto l0011A6D9
l0011A1FA:
	Mem311[0x44C4<32>:word32] = 0<32>
	Mem314[0x44C0<32>:word32] = 0x1BC8<32>
	Mem316[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1CF<32>, arg0, 0x44C0<32>)
	v100_320 = Mem316[0x00140048<p32>:word32]
	Mem323[0x00140048<p32>:word32] = 0<32>
	branch !(v100_320 & 1<32>) l0011A234
l0011A22F:
	goto l0011A6D8
l0011A234:
	Mem331[0x44CC<32>:word32] = 0<32>
	Mem334[0x44C8<32>:word32] = 0x1C08<32>
	Mem336[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D0<32>, arg0, 0x44C8<32>)
	v100_340 = Mem336[0x00140048<p32>:word32]
	Mem343[0x00140048<p32>:word32] = 0<32>
	branch !(v100_340 & 1<32>) l0011A26E
l0011A269:
	goto l0011A6D7
l0011A26E:
	Mem351[0x44D4<32>:word32] = 0<32>
	Mem354[0x44D0<32>:word32] = 0x1C48<32>
	Mem356[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D1<32>, arg0, 0x44D0<32>)
	v100_360 = Mem356[0x00140048<p32>:word32]
	Mem363[0x00140048<p32>:word32] = 0<32>
	branch !(v100_360 & 1<32>) l0011A2A8
l0011A2A3:
	goto l0011A6D6
l0011A2A8:
	Mem371[0x44DC<32>:word32] = 0<32>
	Mem374[0x44D8<32>:word32] = 0x1C7C<32>
	Mem376[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D2<32>, arg0, 0x44D8<32>)
	v100_380 = Mem376[0x00140048<p32>:word32]
	Mem383[0x00140048<p32>:word32] = 0<32>
	branch !(v100_380 & 1<32>) l0011A2E2
l0011A2DD:
	goto l0011A6D5
l0011A2E2:
	Mem391[0x44E4<32>:word32] = 0<32>
	Mem394[0x44E0<32>:word32] = 0x2288<32>
	Mem396[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D3<32>, arg0, 0x44E0<32>)
	v100_400 = Mem396[0x00140048<p32>:word32]
	Mem403[0x00140048<p32>:word32] = 0<32>
	branch !(v100_400 & 1<32>) l0011A31F
l0011A318:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A31F:
	Mem411[0x44EC<32>:word32] = 0<32>
	Mem414[0x44E8<32>:word32] = 0x22C0<32>
	Mem416[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D4<32>, arg0, 0x44E8<32>)
	v100_420 = Mem416[0x00140048<p32>:word32]
	Mem423[0x00140048<p32>:word32] = 0<32>
	branch !(v100_420 & 1<32>) l0011A35C
l0011A355:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A35C:
	Mem431[0x44F4<32>:word32] = 0<32>
	Mem434[0x44F0<32>:word32] = 0x22F8<32>
	Mem436[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D5<32>, arg0, 0x44F0<32>)
	v100_440 = Mem436[0x00140048<p32>:word32]
	Mem443[0x00140048<p32>:word32] = 0<32>
	branch !(v100_440 & 1<32>) l0011A399
l0011A392:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A399:
	Mem451[0x44FC<32>:word32] = 0<32>
	Mem454[0x44F8<32>:word32] = 0x2330<32>
	Mem456[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D6<32>, arg0, 0x44F8<32>)
	v100_460 = Mem456[0x00140048<p32>:word32]
	Mem463[0x00140048<p32>:word32] = 0<32>
	branch !(v100_460 & 1<32>) l0011A3D6
l0011A3CF:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A3D6:
	Mem471[0x4504<32>:word32] = 0<32>
	Mem474[0x4500<32>:word32] = 0x2368<32>
	Mem476[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D7<32>, arg0, 0x4500<32>)
	v100_480 = Mem476[0x00140048<p32>:word32]
	Mem483[0x00140048<p32>:word32] = 0<32>
	branch !(v100_480 & 1<32>) l0011A413
l0011A40C:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A413:
	Mem491[0x450C<32>:word32] = 0<32>
	Mem494[0x4508<32>:word32] = 0x2384<32>
	Mem496[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D8<32>, arg0, 0x4508<32>)
	v100_500 = Mem496[0x00140048<p32>:word32]
	Mem503[0x00140048<p32>:word32] = 0<32>
	branch !(v100_500 & 1<32>) l0011A450
l0011A449:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A450:
	Mem511[0x4514<32>:word32] = 0<32>
	Mem514[0x4510<32>:word32] = 0x23A0<32>
	Mem516[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1D9<32>, arg0, 0x4510<32>)
	v100_520 = Mem516[0x00140048<p32>:word32]
	Mem523[0x00140048<p32>:word32] = 0<32>
	branch !(v100_520 & 1<32>) l0011A48D
l0011A486:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A48D:
	Mem531[0x451C<32>:word32] = 0<32>
	Mem534[0x4518<32>:word32] = 0x23BC<32>
	Mem536[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1DA<32>, arg0, 0x4518<32>)
	v100_540 = Mem536[0x00140048<p32>:word32]
	Mem543[0x00140048<p32>:word32] = 0<32>
	branch !(v100_540 & 1<32>) l0011A4CA
l0011A4C3:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A4CA:
	Mem551[0x4524<32>:word32] = 0<32>
	Mem554[0x4520<32>:word32] = 0x1CB0<32>
	Mem557[0x4528<32>:word32] = 0x1CE0<32>
	Mem559[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1DB<32>, arg0, 0x4520<32>)
	v100_563 = Mem559[0x00140048<p32>:word32]
	Mem566[0x00140048<p32>:word32] = 0<32>
	branch !(v100_563 & 1<32>) l0011A510
l0011A509:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A510:
	Mem574[0x4534<32>:word32] = 0<32>
	Mem577[0x4530<32>:word32] = 0x1D04<32>
	Mem580[0x4538<32>:word32] = 0x1D34<32>
	Mem582[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1DC<32>, arg0, 0x4530<32>)
	v100_586 = Mem582[0x00140048<p32>:word32]
	Mem589[0x00140048<p32>:word32] = 0<32>
	branch !(v100_586 & 1<32>) l0011A556
l0011A54F:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A556:
	Mem597[0x4544<32>:word32] = 0<32>
	Mem600[0x4540<32>:word32] = 0x256C<32>
	Mem602[0x00140048<p32>:word32] = 0<32>
	v100_604 = invoke_i(0x17B<32>)
	v100_606 = Mem602[0x00140048<p32>:word32]
	Mem609[0x00140048<p32>:word32] = 0<32>
	branch !(v100_606 & 1<32>) l0011A59B
l0011A588:
	loc96 = ___cxa_find_matching_catch_2()
	goto l0011A6E4
l0011A59B:
	Mem617[0x4548<32>:word32] = v100_604
	Mem620[0x4540<32>:word32] = 0x2258<32>
	Mem622[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1DD<32>, arg0, 0x4540<32>)
	v100_626 = Mem622[0x00140048<p32>:word32]
	Mem629[0x00140048<p32>:word32] = 0<32>
	branch !(v100_626 & 1<32>) l0011A5D8
l0011A5D1:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A5D8:
	Mem637[0x4554<32>:word32] = 0<32>
	Mem640[0x4550<32>:word32] = 0x256C<32>
	Mem642[0x00140048<p32>:word32] = 0<32>
	v100_644 = invoke_i(0x17B<32>)
	v100_646 = Mem642[0x00140048<p32>:word32]
	Mem649[0x00140048<p32>:word32] = 0<32>
	branch !(v100_646 & 1<32>) l0011A61D
l0011A60A:
	loc96 = ___cxa_find_matching_catch_2()
	goto l0011A6E4
l0011A61D:
	Mem657[0x4558<32>:word32] = v100_644
	Mem660[0x4550<32>:word32] = 0x2270<32>
	Mem662[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1DE<32>, arg0, 0x4550<32>)
	v100_666 = Mem662[0x00140048<p32>:word32]
	Mem669[0x00140048<p32>:word32] = 0<32>
	branch !(v100_666 & 1<32>) l0011A65A
l0011A653:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A65A:
	Mem677[0x4564<32>:word32] = 0<32>
	Mem680[0x4560<32>:word32] = 0x23D8<32>
	Mem682[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1DF<32>, arg0, 0x4560<32>)
	v100_686 = Mem682[0x00140048<p32>:word32]
	Mem689[0x00140048<p32>:word32] = 0<32>
	branch !(v100_686 & 1<32>) l0011A697
l0011A690:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A697:
	Mem697[0x456C<32>:word32] = 0<32>
	Mem700[0x4568<32>:word32] = 0x23F8<32>
	Mem702[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1E0<32>, arg0, 0x4568<32>)
	v100_706 = Mem702[0x00140048<p32>:word32]
	Mem709[0x00140048<p32>:word32] = 0<32>
	branch !(v100_706 & 1<32>) l0011A6D4
l0011A6CD:
	loc97 = 0x2A<32>
	goto l0011A6E4
l0011A6D4:
	return
l0011A6D5:
l0011A6D6:
l0011A6D7:
l0011A6D8:
l0011A6D9:
l0011A6DA:
l0011A6DB:
l0011A6DC:
l0011A6DD:
l0011A6DE:
l0011A6DF:
l0011A6E0:
l0011A6E1:
l0011A6E2:
l0011A6E3:
	loc97 = 0x2A<32>
l0011A6E4:
	branch loc97 != 0x2A<32> l0011A6FD
l0011A6EC:
	loc96 = ___cxa_find_matching_catch_2()
l0011A6FD:
	fn0011BAF7(arg0 + 0x90<32>)
	loc3_889 = loc96
l0011A70A:
	fn00119406(arg0 + 8<32>)
	loc5_922 = loc3_889
l0011A718:
	___resumeException(loc5_922)
l0011A71D:
	return
fn00119EA4_exit:


void fn0011A71F(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A71F_entry:
l0011A71F:
	Mem8[arg0:word32] = 0<32>
	Mem15[arg0 + 4<32>:word32] = 0<32>
	Mem22[arg0 + 8<32>:word32] = 0<32>
	Mem30[arg0 + 0x80<32>:byte] = 0<8>
l0011A75E:
	branch arg1 == 0<32> != 0<32> l0011A7A2
l0011A765:
	Mem40[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1E1<32>, arg0, arg1)
	v13_44 = Mem40[0x00140048<p32>:word32]
	Mem47[0x00140048<p32>:word32] = 0<32>
	branch !(v13_44 & 1<32>) l0011A797
l0011A785:
	v13_55 = ___cxa_find_matching_catch_2()
	fn00119406(arg0)
	___resumeException(v13_55)
	goto l0011A7A0
l0011A797:
	fn0011AEEB(arg0, arg1)
	goto l0011A7A2
l0011A7A0:
l0011A7A2:
l0011A7A2:
	return
fn0011A71F_exit:


void fn0011A7A6(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A7A6_entry:
l0011A7A6:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C60<32>))
	return
fn0011A7A6_exit:


void fn0011A7C1(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A7C1_entry:
l0011A7C1:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C68<32>))
	return
fn0011A7C1_exit:


void fn0011A7DC(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A7DC_entry:
l0011A7DC:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C70<32>))
	return
fn0011A7DC_exit:


void fn0011A7F7(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A7F7_entry:
l0011A7F7:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C90<32>))
	return
fn0011A7F7_exit:


void fn0011A812(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A812_entry:
l0011A812:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5370<32>))
	return
fn0011A812_exit:


void fn0011A82D(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A82D_entry:
l0011A82D:
	Mem18[arg0 + 4<32>:word32] = arg1 + 0xFFFFFFFF<32>
	Mem21[arg0:word32] = 0x2478<32>
	Mem23[0x00140048<p32>:word32] = 0<32>
	v13_25 = invoke_i(0x17B<32>)
	v13_27 = Mem23[0x00140048<p32>:word32]
	Mem30[0x00140048<p32>:word32] = 0<32>
	branch !(v13_27 & 1<32>) l0011A87C
l0011A86F:
	___resumeException(___cxa_find_matching_catch_2())
	goto l0011A88B
l0011A87C:
	Mem42[arg0 + 8<32>:word32] = v13_25
	return
l0011A88B:
l0011A88C:
	return
fn0011A82D_exit:


void fn0011A88E(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A88E_entry:
l0011A88E:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5378<32>))
	return
fn0011A88E_exit:


void fn0011A8A9(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A8A9_entry:
l0011A8A9:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5380<32>))
	return
fn0011A8A9_exit:


void fn0011A8C4(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A8C4_entry:
l0011A8C4:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5388<32>))
	return
fn0011A8C4_exit:


void fn0011A8DF(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00119EA4
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A8DF_entry:
l0011A8DF:
	Mem18[arg0 + 4<32>:word32] = arg1 + 0xFFFFFFFF<32>
	Mem21[arg0:word32] = 0x24F0<32>
	Mem29[arg0 + 8<32>:byte] = 0x2E<8>
	Mem37[arg0 + 9<32>:byte] = 0x2C<8>
	Mem44[arg0 + 0xC<32>:word64] = 0<64>
	Mem49[arg0 + 0x14<32>:word32] = 0<32>
	loc2_51 = 0<32>
l0011A93D:
	branch loc2_51 != 3<32> l0011A94D
l0011A94A:
	goto l0011A96B
l0011A94D:
	Mem67[arg0 + 0xC<32> + (loc2_51 << 2<32>):word32] = 0<32>
	loc2_51 = loc2_51 + 1<32>
	goto l0011A93D
l0011A96B:
	return
fn0011A8DF_exit:


void fn0011A970(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A970_entry:
l0011A970:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C80<32>))
	return
fn0011A970_exit:


void fn0011A98B(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00119EA4
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011A98B_entry:
l0011A98B:
	Mem18[arg0 + 4<32>:word32] = arg1 + 0xFFFFFFFF<32>
	Mem21[arg0:word32] = 0x2518<32>
	Mem28[arg0 + 8<32>:word32] = 0x2E<32>
	Mem35[arg0 + 0xC<32>:word32] = 0x2C<32>
	Mem42[arg0 + 0x10<32>:word64] = 0<64>
	Mem47[arg0 + 0x18<32>:word32] = 0<32>
	loc2_49 = 0<32>
l0011A9E9:
	branch loc2_49 != 3<32> l0011A9F9
l0011A9F6:
	goto l0011AA17
l0011A9F9:
	Mem65[arg0 + 0x10<32> + (loc2_49 << 2<32>):word32] = 0<32>
	loc2_49 = loc2_49 + 1<32>
	goto l0011A9E9
l0011AA17:
	return
fn0011A98B_exit:


void fn0011AA1C(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AA1C_entry:
l0011AA1C:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C98<32>))
	return
fn0011AA1C_exit:


void fn0011AA37(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AA37_entry:
l0011AA37:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4C88<32>))
	return
fn0011AA37_exit:


void fn0011AA52(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AA52_entry:
l0011AA52:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4CA0<32>))
	return
fn0011AA52_exit:


void fn0011AA6D(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AA6D_entry:
l0011AA6D:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4CA8<32>))
	return
fn0011AA6D_exit:


void fn0011AA88(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AA88_entry:
l0011AA88:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4CB0<32>))
	return
fn0011AA88_exit:


void fn0011AAA3(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AAA3_entry:
l0011AAA3:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5320<32>))
	return
fn0011AAA3_exit:


void fn0011AABE(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AABE_entry:
l0011AABE:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5328<32>))
	return
fn0011AABE_exit:


void fn0011AAD9(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AAD9_entry:
l0011AAD9:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5330<32>))
	return
fn0011AAD9_exit:


void fn0011AAF4(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AAF4_entry:
l0011AAF4:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5338<32>))
	return
fn0011AAF4_exit:


void fn0011AB0F(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AB0F_entry:
l0011AB0F:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5340<32>))
	return
fn0011AB0F_exit:


void fn0011AB2A(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AB2A_entry:
l0011AB2A:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5348<32>))
	return
fn0011AB2A_exit:


void fn0011AB45(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AB45_entry:
l0011AB45:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5350<32>))
	return
fn0011AB45_exit:


void fn0011AB60(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AB60_entry:
l0011AB60:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5358<32>))
	return
fn0011AB60_exit:


void fn0011AB7B(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AB7B_entry:
l0011AB7B:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x4FDC<32>))
	return
fn0011AB7B_exit:


void fn0011AB96(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AB96_entry:
l0011AB96:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5308<32>))
	return
fn0011AB96_exit:


void fn0011ABB1(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011ABB1_entry:
l0011ABB1:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5310<32>))
	return
fn0011ABB1_exit:


void fn0011ABCC(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011ABCC_entry:
l0011ABCC:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5318<32>))
	return
fn0011ABCC_exit:


void fn0011ABE7(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011ABE7_entry:
l0011ABE7:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5360<32>))
	return
fn0011ABE7_exit:


void fn0011AC02(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AC02_entry:
l0011AC02:
	fn0011AC1D(arg0, arg1, fn000EAE12(0x5368<32>))
	return
fn0011AC02_exit:


void fn0011AC1D(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011A7A6
//      fn0011A7C1
//      fn0011A7DC
//      fn0011A7F7
//      fn0011A812
//      fn0011A88E
//      fn0011A8A9
//      fn0011A8C4
//      fn0011A970
//      fn0011AA1C
//      fn0011AA37
//      fn0011AA52
//      fn0011AA6D
//      fn0011AA88
//      fn0011AAA3
//      fn0011AABE
//      fn0011AAD9
//      fn0011AAF4
//      fn0011AB0F
//      fn0011AB2A
//      fn0011AB45
//      fn0011AB60
//      fn0011AB7B
//      fn0011AB96
//      fn0011ABB1
//      fn0011ABCC
//      fn0011ABE7
//      fn0011AC02
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AC1D_entry:
l0011AC1D:
	fn0011B41A(arg1)
	v28_21 = Mem0[arg0 + 8<32>:word32]
	v30_35 = Mem0[arg0 + 0xC<32>:word32] - v28_21 >> 2<32> >u arg2
l0011AC59:
	branch !v30_35 l0011AC6C
l0011AC5F:
	loc4 = arg0 + 8<32>
	loc14 = v28_21
	goto l0011ACC5
l0011AC6C:
	Mem43[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1E2<32>, arg0 + 8<32>, arg2 + 1<32>)
	v28_47 = Mem43[0x00140048<p32>:word32]
	Mem50[0x00140048<p32>:word32] = 0<32>
	branch (v28_47 & 1<32>) != 0<32> l0011ACA6
l0011AC94:
	loc4 = arg0 + 8<32>
	loc14 = Mem50[arg0 + 8<32>:word32]
	goto l0011ACC6
l0011ACA6:
	v28_57 = ___cxa_find_matching_catch_2()
	branch arg1 == 0<32> != 0<32> l0011ACC1
l0011ACBA:
	fn0011B43F(arg1)
l0011ACC1:
	___resumeException(v28_57)
l0011ACC5:
l0011ACC6:
	v28_101 = Mem98[loc14 + (arg2 << 2<32>):word32]
	branch v28_101 != 0<32> l0011ACE8
l0011ACE3:
	loc18_118 = loc14
	goto l0011ACF9
l0011ACE8:
	fn0011B43F(v28_101)
	loc18_118 = Mem98[loc4:word32]
l0011ACF9:
	Mem135[loc18_118 + (arg2 << 2<32>):word32] = arg1
	return
fn0011AC1D_exit:


void fn0011AD0E(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AD0E_entry:
l0011AD0E:
	v19_11 = Mem0[arg0 + 4<32>:word32]
	v19_14 = Mem0[arg0:word32]
	v19_18 = v19_11 - v19_14
	v21_28 = v19_18 >> 2<32> <u arg1
l0011AD46:
	branch !v21_28 l0011AD5B
l0011AD4C:
	fn0011AD9F(arg0, arg1 - (v19_18 >> 2<32>))
	goto l0011AD9A
l0011AD5B:
	branch v19_18 >> 2<32> <=u arg1 l0011AD9A
l0011AD66:
	v19_44 = v19_14 + (arg1 << 2<32>)
	loc6_47 = v19_11
l0011AD76:
	branch loc6_47 != v19_44 l0011AD84
l0011AD81:
	goto l0011AD9B
l0011AD84:
	v19_57 = loc6_47 + 0xFFFFFFFC<32>
	Mem62[arg0 + 4<32>:word32] = v19_57
	loc6_47 = v19_57
	goto l0011AD76
l0011AD9A:
l0011AD9A:
l0011AD9B:
	return
fn0011AD0E_exit:


void fn0011AD9F(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011AD0E
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AD9F_entry:
l0011AD9F:
	v34_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x20<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011ADB8
l0011ADB3:
	abortStackOverflow(0x20<32>)
l0011ADB8:
	v34_24 = Mem7[arg0 + 8<32>:word32]
	v34_31 = Mem7[arg0 + 4<32>:word32]
	branch v34_24 - v34_31 >> 2<32> >=u arg1 l0011AEDC
l0011ADF1:
	v34_52 = Mem7[arg0:word32]
	v34_56 = v34_31 - v34_52
	v34_64 = (v34_56 >> 2<32>) + arg1
	branch v34_64 <=u 0x3FFFFFFF<32> l0011AE22
l0011AE1C:
	fn00119E4F(arg0)
l0011AE22:
	v34_81 = v34_24 - v34_52
	v36_89 = v34_81 >> 2<32> <u 0x1FFFFFFF<32>
	branch v34_81 >> 1<32> >=u v34_64 l0011AE57
l0011AE54:
	v34_101 = v34_64
	goto l0011AE59
l0011AE57:
	v34_101 = v34_81 >> 1<32>
l0011AE59:
	branch !v36_89 l0011AE63
l0011AE60:
	v34_107 = v34_101
	goto l0011AE69
l0011AE63:
	v34_107 = 0x3FFFFFFF<32>
l0011AE69:
	fn0011AF4C(v34_2, v34_107, v34_56 >> 2<32>, arg0 + 0x10<32>)
	loc2_137 = arg1
	loc19_139 = Mem7[v34_2 + 8<32>:word32]
l0011AE8F:
	Mem143[loc19_139:word32] = 0<32>
	v34_146 = Mem143[v34_2 + 8<32>:word32]
	Mem154[v34_2 + 8<32>:word32] = v34_146 + 4<32>
	v34_158 = loc2_137 + 0xFFFFFFFF<32>
	branch v34_158 != 0<32> l0011AEC2
l0011AEBF:
	goto l0011AECD
l0011AEC2:
	loc2_137 = v34_158
	loc19_139 = v34_146 + 4<32>
l0011AECA:
	goto l0011AE8F
l0011AECD:
	fn0011B01B(arg0, v34_2)
	fn0011B113(v34_2)
	goto l0011AEE3
l0011AEDC:
	fn0011AEEB(arg0, arg1)
l0011AEE3:
	Mem182[0x00140030<p32>:word32] = v34_2
	return
fn0011AD9F_exit:


void fn0011AEEB(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011A71F
//      fn0011AD9F
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AEEB_entry:
l0011AEEB:
	loc2_16 = arg1
	loc5_18 = Mem0[arg0 + 4<32>:word32]
l0011AF09:
	Mem22[loc5_18:word32] = 0<32>
	v13_25 = Mem22[arg0 + 4<32>:word32]
	Mem33[arg0 + 4<32>:word32] = v13_25 + 4<32>
	v13_37 = loc2_16 + 0xFFFFFFFF<32>
	branch v13_37 != 0<32> l0011AF3C
l0011AF39:
	goto l0011AF47
l0011AF3C:
	loc2_16 = v13_37
	loc5_18 = v13_25 + 4<32>
l0011AF44:
	goto l0011AF09
l0011AF47:
	return
fn0011AEEB_exit:


void fn0011AF4C(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011AD9F
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011AF4C_entry:
l0011AF4C:
	Mem12[arg0 + 0xC<32>:word32] = 0<32>
	Mem21[arg0 + 0x10<32>:word32] = arg3
l0011AF75:
	branch arg1 != 0<32> l0011AF80
l0011AF7B:
	goto l0011AFD1
l0011AF80:
	branch !(arg1 <u 0x1D<32> & Mem21[arg3 + 0x70<32>:int8] == 0<8>) l0011AFBC
l0011AFAE:
	Mem66[arg3 + 0x70<32>:byte] = 1<8>
	loc7_62 = arg3
	goto l0011AFD2
l0011AFBC:
	loc7_62 = fn0011B67B(arg1 << 2<32>)
	goto l0011AFD2
l0011AFD1:
	loc7_62 = 0<32>
l0011AFD2:
	Mem77[arg0:word32] = loc7_62
	v21_86 = loc7_62 + (arg2 << 2<32>)
	Mem94[arg0 + 8<32>:word32] = v21_86
	Mem101[arg0 + 4<32>:word32] = v21_86
	Mem116[arg0 + 0xC<32>:word32] = loc7_62 + (arg1 << 2<32>)
	return
fn0011AF4C_exit:


void fn0011B01B(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011AD9F
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B01B_entry:
l0011B01B:
	v29_7 = Mem0[arg0:word32]
	v29_26 = Mem0[arg0 + 4<32>:word32] - v29_7
	v29_43 = Mem0[arg1 + 4<32>:word32] + (0<32> - (v29_26 >> 2<32>) << 2<32>)
	Mem47[arg1 + 4<32>:word32] = v29_43
	branch v29_26 <= 0<32> l0011B093
l0011B079:
	_memcpy(v29_43, v29_7, v29_26)
	loc9_58 = Mem47[arg1 + 4<32>:word32]
	goto l0011B09F
l0011B093:
	loc9_58 = v29_43
l0011B09F:
	v29_73 = Mem47[arg0:word32]
	Mem78[arg0:word32] = loc9_58
	Mem82[arg1 + 4<32>:word32] = v29_73
	v29_90 = Mem82[arg0 + 4<32>:word32]
	Mem97[arg0 + 4<32>:word32] = Mem82[arg1 + 8<32>:word32]
	Mem100[arg1 + 8<32>:word32] = v29_90
	v29_110 = Mem100[arg0 + 8<32>:word32]
	Mem117[arg0 + 8<32>:word32] = Mem100[arg1 + 0xC<32>:word32]
	Mem120[arg1 + 0xC<32>:word32] = v29_110
	Mem126[arg1:word32] = Mem120[arg1 + 4<32>:word32]
	return
fn0011B01B_exit:


void fn0011B113(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011AD9F
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B113_entry:
l0011B113:
	v18_11 = Mem0[arg0 + 4<32>:word32]
	loc9_21 = Mem0[arg0 + 8<32>:word32]
l0011B13B:
	branch loc9_21 != v18_11 l0011B14B
l0011B148:
	goto l0011B15F
l0011B14B:
	v18_31 = loc9_21 + 0xFFFFFFFC<32>
	Mem36[arg0 + 8<32>:word32] = v18_31
	loc9_21 = v18_31
	goto l0011B13B
l0011B15F:
	v18_42 = Mem41[arg0:word32]
l0011B16F:
	branch v18_42 == 0<32> != 0<32> l0011B1AA
l0011B176:
	v18_55 = Mem41[arg0 + 0x10<32>:word32]
	branch v18_55 != v18_42 l0011B1A1
l0011B18F:
	Mem70[v18_55 + 0x70<32>:byte] = 0<8>
	goto l0011B1AA
l0011B1A1:
	fn0011B709(v18_42)
	goto l0011B1AA
l0011B1AA:
l0011B1AA:
	return
fn0011B113_exit:


void fn0011B1AE(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B1AE_entry:
l0011B1AE:
	branch arg1 <=u 0x3FFFFFFF<32> l0011B1C9
l0011B1C3:
	fn00119E4F(arg0)
l0011B1C9:
	branch !(arg1 <u 0x1D<32> & Mem0[arg0 + 0x80<32>:int8] == 0<8>) l0011B20A
l0011B1F7:
	Mem58[arg0 + 0x80<32>:byte] = 1<8>
	loc2_50 = arg0 + 0x10<32>
	goto l0011B21C
l0011B20A:
	loc2_50 = fn0011B67B(arg1 << 2<32>)
l0011B21C:
	Mem69[arg0 + 4<32>:word32] = loc2_50
	Mem72[arg0:word32] = loc2_50
	Mem86[arg0 + 8<32>:word32] = loc2_50 + (arg1 << 2<32>)
	return
fn0011B1AE_exit:


word32 fn0011B24D()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011B2EE
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011B24D_entry:
l0011B24D:
	v14_12 = CONVERT(Mem0[0x4570<32>:int8], byte, int32)
l0011B269:
	branch v14_12 != 0<32> l0011B2BE
l0011B26F:
	branch fn0011EE46(0x4570<32>) == 0<32> != 0<32> l0011B2BD
l0011B284:
	Mem27[0x00140048<p32>:word32] = 0<32>
	invoke_i(0x1E3<32>)
	v14_30 = Mem27[0x00140048<p32>:word32]
	Mem33[0x00140048<p32>:word32] = 0<32>
	branch !(v14_30 & 1<32>) l0011B2AE
l0011B2A1:
	___resumeException(___cxa_find_matching_catch_2())
	goto l0011B2BB
l0011B2AE:
	Mem41[0x5394<32>:word32] = 0x5390<32>
	goto l0011B2BE
l0011B2BB:
l0011B2BD:
l0011B2BE:
l0011B2BE:
	return <invalid>
fn0011B24D_exit:


word32 fn0011B2CD()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011B2CD_entry:
l0011B2CD:
	fn00119EA4(0x4578<32>, 1<32>)
	Mem8[0x5390<32>:word32] = 0x4578<32>
	return <invalid>
fn0011B2CD_exit:


word32 fn0011B2EE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011B2EE_entry:
l0011B2EE:
	v7_7 = Mem0[fn0011B24D():word32]
	Mem11[0x5398<32>:word32] = v7_7
	fn0011B41A(v7_7)
	return <invalid>
fn0011B2EE_exit:


word32 fn0011B315()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011B315_entry:
l0011B315:
	v14_12 = CONVERT(Mem0[0x4618<32>:int8], byte, int32)
l0011B331:
	branch v14_12 != 0<32> l0011B386
l0011B337:
	branch fn0011EE46(0x4618<32>) == 0<32> != 0<32> l0011B385
l0011B34C:
	Mem27[0x00140048<p32>:word32] = 0<32>
	invoke_i(0x1E4<32>)
	v14_30 = Mem27[0x00140048<p32>:word32]
	Mem33[0x00140048<p32>:word32] = 0<32>
	branch !(v14_30 & 1<32>) l0011B376
l0011B369:
	___resumeException(___cxa_find_matching_catch_2())
	goto l0011B383
l0011B376:
	Mem41[0x539C<32>:word32] = 0x5398<32>
	goto l0011B386
l0011B383:
l0011B385:
l0011B386:
l0011B386:
	return <invalid>
fn0011B315_exit:


void fn0011B395(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E641C
//      fn000E6505
//      fn000E6544
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B395_entry:
l0011B395:
	Mem5[0x00140048<p32>:word32] = 0<32>
	v11_7 = invoke_i(0x1E5<32>)
	v11_9 = Mem5[0x00140048<p32>:word32]
	Mem12[0x00140048<p32>:word32] = 0<32>
	branch !(v11_9 & 1<32>) l0011B3C8
l0011B3B9:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l0011B3DC
l0011B3C8:
	v11_19 = Mem12[v11_7:word32]
	Mem25[arg0:word32] = v11_19
	fn0011B41A(v11_19)
	return
l0011B3DC:
l0011B3DD:
	return
fn0011B395_exit:


void fn0011B3DF(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E64CA
//      fn000E79F6
//      fn000E7ABF
//      fn000E7B88
//      fn000E7C82
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B3DF_entry:
l0011B3DF:
	v6_7 = Mem0[arg1:word32]
	Mem13[arg0:word32] = v6_7
	fn0011B41A(v6_7)
	return
fn0011B3DF_exit:


void fn0011B3FB(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000D0143
//      fn000E5823
//      fn000E596B
//      fn000E5988
//      fn000E5C8E
//      fn000E5CAB
//      fn000E6E2A
//      fn000E79F6
//      fn000E7ABF
//      fn000E7B88
//      fn000E7C82
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B3FB_entry:
l0011B3FB:
	fn0011B43F(Mem0[arg0:word32])
	return
fn0011B3FB_exit:


void fn0011B411(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011B411_entry:
l0011B411:
	return
fn0011B411_exit:


void fn0011B41A(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011AC1D
//      fn0011B2EE
//      fn0011B395
//      fn0011B3DF
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B41A_entry:
l0011B41A:
	Mem19[arg0 + 4<32>:word32] = Mem0[arg0 + 4<32>:word32] + 1<32>
	return
fn0011B41A_exit:


word32 fn0011B43F(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E982B
//      fn000E9FEB
//      fn000EB941
//      fn000EDF31
//      fn000F1D6A
//      fn000F252A
//      fn000F3B58
//      fn000F5C88
//      fn000F95DA
//      fn000F98EA
//      fn000F9A50
//      fn000F9BA0
//      fn000F9D06
//      fn000F9E56
//      fn000FA320
//      fn000FA7EA
//      fn000FC0DF
//      fn000FC3DF
//      fn000FC549
//      fn000FC69B
//      fn000FC805
//      fn000FC957
//      fn000FCE21
//      fn000FD2EB
//      fn000FE8BB
//      fn000FE973
//      fn000FEA2B
//      fn000FEAE3
//      fn001003A9
//      fn00102842
//      fn001028FA
//      fn001029B2
//      fn00102A6A
//      fn001043BA
//      fn001071CE
//      fn001078B8
//      fn0010C171
//      fn0010C889
//      fn00110FF7
//      fn0011187C
//      fn001131F3
//      fn00113AB3
//      fn00119357
//      fn0011AC1D
//      fn0011B3FB
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011B43F_entry:
l0011B43F:
	v13_11 = Mem0[arg0 + 4<32>:word32]
	Mem19[arg0 + 4<32>:word32] = v13_11 + 0xFFFFFFFF<32>
	branch v13_11 != 0<32> l0011B495
l0011B46C:
	goto l0011B499
l0011B495:
l0011B499:
	return <invalid>
fn0011B43F_exit:


void fn0011B49F(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000EAE12
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B49F_entry:
l0011B49F:
	_pthread_mutex_lock(0x53A0<32>)
l0011B4AF:
	branch Mem0[arg0:word32] == 1<32> != 0<32> l0011B4C7
l0011B4C4:
	goto l0011B4D4
l0011B4C7:
	_pthread_cond_wait(0x53BC<32>, 0x53A0<32>)
	goto l0011B4AF
l0011B4D4:
	v34_21 = Mem0[arg0:word32]
l0011B4E4:
	branch v34_21 != 0<32> l0011B66E
l0011B4EA:
	Mem32[arg0:word32] = 1<32>
	Mem34[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E6<32>, 0x53A0<32>)
	v34_38 = Mem34[0x00140048<p32>:word32]
	Mem41[0x00140048<p32>:word32] = 0<32>
	branch (v34_38 & 1<32>) != 0<32> l0011B5A5
l0011B513:
	Mem49[0x00140048<p32>:word32] = 0<32>
	invoke_vi(arg2, arg1)
	v34_58 = Mem49[0x00140048<p32>:word32]
	Mem61[0x00140048<p32>:word32] = 0<32>
	branch (v34_58 & 1<32>) != 0<32> l0011B5A4
l0011B531:
	Mem69[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E7<32>, 0x53A0<32>)
	v34_73 = Mem69[0x00140048<p32>:word32]
	Mem76[0x00140048<p32>:word32] = 0<32>
	branch (v34_73 & 1<32>) != 0<32> l0011B5A3
l0011B553:
	Mem85[arg0:word32] = 0xFFFFFFFF<32>
	Mem87[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E6<32>, 0x53A0<32>)
	v34_91 = Mem87[0x00140048<p32>:word32]
	Mem94[0x00140048<p32>:word32] = 0<32>
	branch (v34_91 & 1<32>) != 0<32> l0011B5A2
l0011B57C:
	Mem102[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E8<32>, 0x53BC<32>)
	v34_106 = Mem102[0x00140048<p32>:word32]
	Mem109[0x00140048<p32>:word32] = 0<32>
	branch (v34_106 & 1<32>) != 0<32> l0011B5A1
l0011B59E:
	goto l0011B677
l0011B5A1:
l0011B5A2:
l0011B5A3:
l0011B5A4:
l0011B5A5:
	___cxa_begin_catch(___cxa_find_matching_catch_3(0<32>))
	Mem128[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E7<32>, 0x53A0<32>)
	v34_132 = Mem128[0x00140048<p32>:word32]
	Mem135[0x00140048<p32>:word32] = 0<32>
	branch (v34_132 & 1<32>) != 0<32> l0011B635
l0011B5D6:
	Mem148[arg0:word32] = 0<32>
	Mem150[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E6<32>, 0x53A0<32>)
	v34_154 = Mem150[0x00140048<p32>:word32]
	Mem157[0x00140048<p32>:word32] = 0<32>
	branch (v34_154 & 1<32>) != 0<32> l0011B634
l0011B5FF:
	Mem165[0x00140048<p32>:word32] = 0<32>
	invoke_ii(0x1E8<32>, 0x53BC<32>)
	v34_169 = Mem165[0x00140048<p32>:word32]
	Mem172[0x00140048<p32>:word32] = 0<32>
	branch (v34_169 & 1<32>) != 0<32> l0011B633
l0011B621:
	Mem180[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x1E9<32>)
	Mem185[0x00140048<p32>:word32] = 0<32>
l0011B633:
l0011B634:
l0011B635:
	v34_186 = ___cxa_find_matching_catch_2()
	Mem194[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x16C<32>)
	v34_196 = Mem194[0x00140048<p32>:word32]
	Mem199[0x00140048<p32>:word32] = 0<32>
	branch !(v34_196 & 1<32>) l0011B668
l0011B659:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l0011B66C
l0011B668:
	___resumeException(v34_186)
l0011B66C:
	goto l0011B676
l0011B66E:
	_pthread_mutex_unlock(0x53A0<32>)
l0011B676:
l0011B677:
	return
fn0011B49F_exit:


word32 fn0011B67B(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E949A
//      fn000E96D4
//      fn0011AF4C
//      fn0011B1AE
//      fn0011B742
//      fn0011B96D
//      fn0011BA32
//      fn0011BC43
//      fn0011BDC1
//      fn0011C22A
//      fn0011C5CF
//      fn0011C6AF
//      fn0011C92E
//      fn0011CAF3
//      fn0011CDB7
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011B67B_entry:
l0011B67B:
	branch arg0 != 0<32> l0011B68F
l0011B68C:
	v12_11 = 1<32>
	goto l0011B691
l0011B68F:
	v12_11 = arg0
l0011B691:
l0011B696:
	v12_17 = _malloc(v12_11)
	branch v12_17 == 0<32> != 0<32> l0011B6B2
l0011B6AB:
	loc8_38 = 6<32>
	goto l0011B6D9
l0011B6B2:
	branch fn0011EE9E() != 0<32> l0011B6C9
l0011B6C2:
	loc8_38 = 5<32>
	goto l0011B6D9
l0011B6C9:
	goto l0011B696
l0011B6D9:
	branch loc8_38 != 5<32> l0011B6F8
l0011B6E2:
	v12_51 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v12_51)
	___cxa_throw(v12_51, 0x9C8<32>, 0x153<32>)
	goto l0011B703
l0011B6F8:
	branch loc8_38 != 6<32> l0011B703
l0011B6FF:
	return v12_17
l0011B703:
l0011B703:
	return 0<32>
fn0011B67B_exit:


void fn0011B709(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E594A
//      fn000E5988
//      fn000E5CAB
//      fn000E5FD1
//      fn000E605B
//      fn000E60E5
//      fn000E616F
//      fn000E61F2
//      fn000E6205
//      fn000E7D7C
//      fn000E8219
//      fn000E8778
//      fn000E8D8E
//      fn000E92FF
//      fn000E9595
//      fn000E981D
//      fn000F1D5C
//      fn000F95CC
//      fn000FC0D1
//      fn000FE71A
//      fn00102697
//      fn0010666C
//      fn001068F3
//      fn00106BE8
//      fn00106D5B
//      fn00106ECE
//      fn00107047
//      fn001071C0
//      fn0010C163
//      fn00110FE9
//      fn001131E5
//      fn0011546D
//      fn0011578E
//      fn00115DB3
//      fn00116DBE
//      fn00117FED
//      fn001193F3
//      fn00119406
//      fn001194DF
//      fn00119857
//      fn0011991B
//      fn001199D3
//      fn001199E1
//      fn00119E25
//      fn00119E33
//      fn00119E41
//      fn0011B113
//      fn0011B717
//      fn0011BAF7
//      fn0011BC43
//      fn0011BDC1
//      fn0011C22A
//      fn0011C7BA
//      fn0011C92E
//      fn0011CAF3
//      fn0011CDB7
//      fn0011D15C
//      fn0011D69F
//      fn0011DE2C
//      fn0011E3A8
//      fn0011E3EA
//      fn0011E416
//      fn0011E486
//      fn0011E4B2
//      fn0011E4CE
//      fn0011E4E9
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B709_entry:
l0011B709:
	_free(arg0)
	return
fn0011B709_exit:


void fn0011B717(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011948C
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B717_entry:
l0011B717:
	fn0011B709(arg0)
	return
fn0011B717_exit:


void fn0011B725()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0010BEC2
//      fn0010C004
//      fn00110E8A
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011B725_entry:
l0011B725:
	v6_5 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v6_5)
	___cxa_throw(v6_5, 0x9C8<32>, 0x153<32>)
l0011B740:
	return
fn0011B725_exit:


void fn0011B742(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B742_entry:
l0011B742:
	v12_7 = fn000DAF30(arg1)
	v12_14 = fn0011B67B(v12_7 + 0xD<32>)
	Mem18[v12_14:word32] = v12_7
	Mem25[v12_14 + 4<32>:word32] = v12_7
	Mem32[v12_14 + 8<32>:word32] = 0<32>
	_memcpy(v12_14 + 0xC<32>, arg1, v12_7 + 1<32>)
	Mem49[arg0:word32] = v12_14 + 0xC<32>
	return
fn0011B742_exit:


void fn0011B7A2(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B7A2_entry:
l0011B7A2:
	Mem8[arg0:word32] = 0x26D4<32>
	Mem14[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1EA<32>, arg0 + 4<32>, arg1)
	v10_20 = Mem14[0x00140048<p32>:word32]
	Mem23[0x00140048<p32>:word32] = 0<32>
	branch !(v10_20 & 1<32>) l0011B7E5
l0011B7D8:
	___resumeException(___cxa_find_matching_catch_2())
	goto l0011B7E6
l0011B7E5:
	return
l0011B7E6:
l0011B7E7:
	return
fn0011B7A2_exit:


void fn0011B7E9(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B7E9_entry:
l0011B7E9:
	Mem8[arg0:word32] = 0x26E8<32>
	v15_32 = Mem8[arg1:word32]
	branch Mem8[arg1 + 0xB<32>:int8] >= 0<8> l0011B828
l0011B825:
	v15_35 = v15_32
	goto l0011B82A
l0011B828:
	v15_35 = arg1
l0011B82A:
	Mem40[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1EA<32>, arg0 + 4<32>, v15_35)
	v15_45 = Mem40[0x00140048<p32>:word32]
	Mem48[0x00140048<p32>:word32] = 0<32>
	branch !(v15_45 & 1<32>) l0011B85A
l0011B84D:
	___resumeException(___cxa_find_matching_catch_2())
	goto l0011B85B
l0011B85A:
	return
l0011B85B:
l0011B85C:
	return
fn0011B7E9_exit:


void fn0011B85E(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B85E_entry:
l0011B85E:
	Mem8[arg0:word32] = 0x26E8<32>
	Mem14[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1EA<32>, arg0 + 4<32>, arg1)
	v10_20 = Mem14[0x00140048<p32>:word32]
	Mem23[0x00140048<p32>:word32] = 0<32>
	branch !(v10_20 & 1<32>) l0011B8A1
l0011B894:
	___resumeException(___cxa_find_matching_catch_2())
	goto l0011B8A2
l0011B8A1:
	return
l0011B8A2:
l0011B8A3:
	return
fn0011B85E_exit:


void fn0011B8A5(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E949A
//      fn000E96D4
//      fn0011B96D
//      fn0011BA32
//      fn0011BC43
//      fn0011BDC1
//      fn0011C22A
//      fn0011C5CF
//      fn0011C6AF
//      fn0011C92E
//      fn0011CAF3
//      fn0011CDB7
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011B8A5_entry:
l0011B8A5:
	v10_5 = ___cxa_allocate_exception(8<32>)
	Mem8[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1C2<32>, v10_5, 0x4050<32>)
	v10_12 = Mem8[0x00140048<p32>:word32]
	Mem15[0x00140048<p32>:word32] = 0<32>
	branch !(v10_12 & 1<32>) l0011B8E4
l0011B8D3:
	v10_27 = ___cxa_find_matching_catch_2()
	___cxa_free_exception(v10_5)
	___resumeException(v10_27)
	goto l0011B8F7
l0011B8E4:
	Mem23[v10_5:word32] = 0x26FC<32>
	___cxa_throw(v10_5, 0x9F8<32>, 0x156<32>)
l0011B8F7:
l0011B8F8:
	return
fn0011B8A5_exit:


void fn0011B8FA(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011989C
//      fn00119960
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B8FA_entry:
l0011B8FA:
	Mem8[arg0:word64] = 0<64>
	Mem13[arg0 + 8<32>:word32] = 0<32>
	branch Mem13[arg1 + 0xB<32>:int8] >= 0<8> l0011B94F
l0011B930:
	fn0011B96D(arg0, Mem13[arg1:word32], Mem13[arg1 + 4<32>:word32])
	goto l0011B969
l0011B94F:
	Mem36[arg0:word64] = Mem13[arg1:word64]
	Mem44[arg0 + 8<32>:word32] = Mem36[arg1 + 8<32>:word32]
l0011B969:
	return
fn0011B8FA_exit:


void fn0011B96D(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E6220
//      fn001198B3
//      fn001198D8
//      fn0011B8FA
//      fn0011D16F
//      fn0011D354
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011B96D_entry:
l0011B96D:
	branch arg2 <=u 0xFFFFFFEF<32> l0011B984
l0011B97E:
	fn0011B8A5(arg0)
l0011B984:
	branch arg2 >=u 0xB<32> l0011B9BF
l0011B98F:
	Mem68[arg0 + 0xB<32>:byte] = SLICE(arg2, byte, 0)
	branch arg2 != 0<32> l0011B9B5
l0011B9B0:
	loc4 = arg0
	goto l0011B9BD
l0011B9B5:
	loc3 = arg0
	loc17 = 6<32>
l0011B9BD:
	goto l0011BA0A
l0011B9BF:
	v19_26 = arg2 + 0x10<32> & 0xFFFFFFF0<32>
	v19_29 = fn0011B67B(v19_26)
	Mem34[arg0:word32] = v19_29
	Mem45[arg0 + 8<32>:word32] = v19_26 | 0x80000000<32>
	Mem52[arg0 + 4<32>:word32] = arg2
	loc3 = v19_29
	loc17 = 6<32>
l0011BA0A:
	branch loc17 != 6<32> l0011BA21
l0011BA12:
	_memcpy(loc3, arg1, arg2)
	loc4 = loc3
l0011BA21:
	Mem117[loc4 + arg2:byte] = 0<8>
	return
fn0011B96D_exit:


void fn0011BA32(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000D0874
//      fn00106CFE
//      fn00106E71
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011BA32_entry:
l0011BA32:
	branch arg1 <=u 0xFFFFFFEF<32> l0011BA49
l0011BA43:
	fn0011B8A5(arg0)
l0011BA49:
	branch arg1 >=u 0xB<32> l0011BA84
l0011BA54:
	Mem68[arg0 + 0xB<32>:byte] = SLICE(arg1, byte, 0)
	branch arg1 != 0<32> l0011BA7A
l0011BA75:
	loc4 = arg0
	goto l0011BA82
l0011BA7A:
	loc3 = arg0
	loc17 = 6<32>
l0011BA82:
	goto l0011BACF
l0011BA84:
	v19_26 = arg1 + 0x10<32> & 0xFFFFFFF0<32>
	v19_29 = fn0011B67B(v19_26)
	Mem34[arg0:word32] = v19_29
	Mem45[arg0 + 8<32>:word32] = v19_26 | 0x80000000<32>
	Mem52[arg0 + 4<32>:word32] = arg1
	loc3 = v19_29
	loc17 = 6<32>
l0011BACF:
	branch loc17 != 6<32> l0011BAE6
l0011BAD7:
	_memset(loc3, arg2, arg1)
	loc4 = loc3
l0011BAE6:
	Mem117[loc4 + arg1:byte] = 0<8>
	return
fn0011BA32_exit:


void fn0011BAF7(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000D0874
//      fn000E982B
//      fn000E9FEB
//      fn000EB025
//      fn000EC1F8
//      fn000ECBDB
//      fn000ED5B7
//      fn000EE188
//      fn000EEB54
//      fn000EF520
//      fn000EFEEF
//      fn000F089A
//      fn000F252A
//      fn000F3224
//      fn000F4131
//      fn000F4A65
//      fn000F539A
//      fn000F5DFC
//      fn000F66E9
//      fn000F6FD6
//      fn000F78C3
//      fn000F81B1
//      fn000F95DA
//      fn000FAEBB
//      fn000FBA39
//      fn000FD67D
//      fn000FE09E
//      fn00100180
//      fn001001B8
//      fn001001F0
//      fn00107E62
//      fn0010B494
//      fn0010CE53
//      fn00110427
//      fn00110FF7
//      fn0011187C
//      fn00111F27
//      fn001131F3
//      fn00113AB3
//      fn00114190
//      fn001154D6
//      fn001157F7
//      fn00119357
//      fn00119839
//      fn001198FD
//      fn00119EA4
//      fn0011D1A0
//      fn0011D354
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011BAF7_entry:
l0011BAF7:
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011BB29
l0011BB1C:
	fn0011B709(Mem0[arg0:word32])
l0011BB29:
	return
fn0011BAF7_exit:


word32 fn0011BB2C(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011C019
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011BB2C_entry:
l0011BB2C:
	v29_11 = Mem0[arg0 + 0xB<32>:int8]
	v27_12 = CONVERT(v29_11, int8, word32)
	v27_18 = CONVERT(v29_11, byte, int32)
	branch v27_18 >= 0<32> l0011BB76
l0011BB51:
	loc3_24 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	goto l0011BB7A
l0011BB76:
	loc3_24 = 0xA<32>
l0011BB7A:
	v30_48 = loc3_24 <u arg2
l0011BB82:
	branch !v30_48 l0011BBC7
l0011BB88:
	branch v27_18 >= 0<32> l0011BB9F
l0011BB8C:
	loc16_128 = Mem0[arg0 + 4<32>:word32]
	goto l0011BBAB
l0011BB9F:
	loc16_128 = v27_12 & 0xFF<32>
l0011BBAB:
	fn0011BC43(arg0, loc3_24, arg2 - loc3_24, loc16_128, 0<32>, loc16_128, arg2, arg1)
	goto l0011BC3C
l0011BBC7:
	branch v27_18 >= 0<32> l0011BBD7
l0011BBCB:
	loc6_55 = Mem0[arg0:word32]
	goto l0011BBDB
l0011BBD7:
	loc6_55 = arg0
l0011BBDB:
	branch arg2 == 0<32> != 0<32> l0011BBF3
l0011BBE8:
	_memmove(loc6_55, arg1, arg2)
l0011BBF3:
	Mem87[loc6_55 + arg2:byte] = 0<8>
	branch Mem87[arg0 + 0xB<32>:int8] >= 0<8> l0011BC2A
l0011BC19:
	Mem120[arg0 + 4<32>:word32] = arg2
	goto l0011BC3D
l0011BC2A:
	Mem111[arg0 + 0xB<32>:byte] = SLICE(arg2, byte, 0)
	goto l0011BC3D
l0011BC3C:
l0011BC3D:
	return <invalid>
fn0011BB2C_exit:


void fn0011BC43(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011BB2C
//      fn0011C367
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011BC43_entry:
l0011BC43:
	branch 0xFFFFFFEE<32> - arg1 >=u arg2 l0011BC61
l0011BC5B:
	fn0011B8A5(arg0)
l0011BC61:
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011BC8C
l0011BC80:
	loc23_112 = Mem0[arg0:word32]
	goto l0011BC90
l0011BC8C:
	loc23_112 = arg0
l0011BC90:
	branch arg1 >=u 0x7FFFFFE7<32> l0011BCE7
l0011BCA0:
	v39_59 = arg2 + arg1
	branch v39_59 >=u arg1 << 1<32> l0011BCBC
l0011BCB9:
	v39_70 = arg1 << 1<32>
	goto l0011BCBE
l0011BCBC:
	v39_70 = v39_59
l0011BCBE:
	v39_80 = v39_70 + 0x10<32>
	branch v39_70 >=u 0xB<32> l0011BCDD
l0011BCDA:
	v39_87 = 0xB<32>
	goto l0011BCDF
l0011BCDD:
	v39_87 = v39_80 & 0xFFFFFFF0<32>
l0011BCDF:
	loc20_54 = v39_87
	goto l0011BCEB
l0011BCE7:
	loc20_54 = 0xFFFFFFEF<32>
l0011BCEB:
	v39_95 = fn0011B67B(loc20_54)
	branch arg4 == 0<32> != 0<32> l0011BD0A
l0011BCFF:
	_memcpy(v39_95, loc23_112, arg4)
l0011BD0A:
	branch arg6 == 0<32> != 0<32> l0011BD28
l0011BD16:
	_memcpy(v39_95 + arg4, arg7, arg6)
l0011BD28:
	v39_170 = arg3 - arg5
	v39_175 = v39_170 - arg4
	branch v39_175 == 0<32> != 0<32> l0011BD69
l0011BD42:
	_memcpy(v39_95 + arg4 + arg6, loc23_112 + arg4 + arg5, v39_175)
l0011BD69:
	branch arg1 == 0xA<32> != 0<32> l0011BD7B
l0011BD75:
	fn0011B709(loc23_112)
l0011BD7B:
	Mem233[arg0:word32] = v39_95
	Mem248[arg0 + 8<32>:word32] = loc20_54 | 0x80000000<32>
	v39_255 = v39_170 + arg6
	Mem263[arg0 + 4<32>:word32] = v39_255
	Mem271[v39_95 + v39_255:byte] = 0<8>
	return
fn0011BC43_exit:


void fn0011BDC1(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011BDC1_entry:
l0011BDC1:
	branch arg1 <=u 0xFFFFFFEF<32> l0011BDD8
l0011BDD2:
	fn0011B8A5(arg0)
l0011BDD8:
	v62_21 = Mem0[arg0 + 0xB<32>:int8]
	v59_22 = CONVERT(v62_21, int8, word32)
	v59_28 = CONVERT(v62_21, byte, int32)
	branch v59_28 >= 0<32> l0011BE2E
l0011BDF7:
	loc19_38 = Mem0[arg0 + 4<32>:word32]
	loc24_103 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	goto l0011BE3E
l0011BE2E:
	loc19_38 = v59_22 & 0xFF<32>
	loc24_103 = 0xA<32>
l0011BE3E:
	branch loc19_38 <=u arg1 l0011BE4D
l0011BE4A:
	v59_75 = loc19_38
	goto l0011BE4F
l0011BE4D:
	v59_75 = arg1
l0011BE4F:
	v61_81 = v59_75 <u 0xB<32>
	v59_93 = (v59_75 + 0x10<32> & 0xFFFFFFF0<32>) + 0xFFFFFFFF<32>
	branch !v61_81 l0011BE75
l0011BE72:
	v59_96 = 0xA<32>
	goto l0011BE77
l0011BE75:
	v59_96 = v59_93
l0011BE77:
	v61_105 = v59_96 == loc24_103
l0011BE81:
	branch v61_105 != 0<32> l0011C015
l0011BE88:
	branch !v61_81 l0011BEC0
l0011BE8E:
	v59_185 = Mem0[arg0:word32]
	branch v59_28 >= 0<32> l0011BEAA
l0011BE99:
	loc4 = v59_185
	loc7 = 0<32>
	loc12 = arg0
	loc56_197 = 0x10<32>
	goto l0011BEBE
l0011BEAA:
	loc5 = v59_185
	loc8 = 0<32>
	loc10 = 1<32>
	loc13 = arg0
	loc56_197 = 0x11<32>
l0011BEBE:
	goto l0011BF4D
l0011BEC0:
	v59_117 = v59_96 + 1<32>
	branch v59_96 <=u loc24_103 l0011BEDE
l0011BED2:
	loc2_136 = fn0011B67B(v59_117)
	goto l0011BF17
l0011BEDE:
	Mem121[0x00140048<p32>:word32] = 0<32>
	v59_124 = invoke_ii(0x1EB<32>, v59_117)
	v59_126 = Mem121[0x00140048<p32>:word32]
	Mem129[0x00140048<p32>:word32] = 0<32>
	branch !(v59_126 & 1<32>) l0011BF12
l0011BEFE:
	___cxa_begin_catch(___cxa_find_matching_catch_3(0<32>))
	___cxa_end_catch()
	goto l0011C015
l0011BF12:
	loc2_136 = v59_124
l0011BF16:
l0011BF17:
	branch v59_28 >= 0<32> l0011BF36
l0011BF1C:
	loc4 = Mem170[arg0:word32]
	loc7 = 1<32>
	loc12 = loc2_136
	loc56_168 = 0x10<32>
	goto l0011BF4E
l0011BF36:
	loc5 = arg0
	loc8 = 1<32>
	loc10 = 0<32>
	loc13 = loc2_136
	loc56_168 = 0x11<32>
	goto l0011BF4E
l0011BF4D:
	loc56_168 = loc56_197
l0011BF4E:
	branch loc56_168 != 0x10<32> l0011BF79
l0011BF56:
	loc3 = loc4
	loc6 = loc7
	loc9 = 1<32>
	loc11 = loc12
	loc41 = Mem273[arg0 + 4<32>:word32]
	goto l0011BF9D
l0011BF79:
	branch loc56_168 != 0x11<32> l0011BF9D
l0011BF80:
	loc3 = loc5
	loc6 = loc8
	loc9 = loc10
	loc11 = loc13
	loc41 = v59_22 & 0xFF<32>
l0011BF9D:
l0011BF9D:
	v59_323 = loc41 + 1<32>
	branch v59_323 == 0<32> != 0<32> l0011BFBC
l0011BFB1:
	_memcpy(loc11, loc3, v59_323)
l0011BFBC:
	branch !loc9 l0011BFC6
l0011BFC0:
	fn0011B709(loc3)
l0011BFC6:
	branch !loc6 l0011C002
l0011BFCA:
	Mem434[arg0 + 8<32>:word32] = v59_96 + 1<32> | 0x80000000<32>
	Mem441[arg0 + 4<32>:word32] = loc19_38
	Mem446[arg0:word32] = loc11
	goto l0011C015
l0011C002:
	Mem408[arg0 + 0xB<32>:byte] = SLICE(loc19_38, byte, 0)
	goto l0011C015
l0011C015:
l0011C015:
	return
fn0011BDC1_exit:


word32 fn0011C019(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C019_entry:
l0011C019:
	return <invalid>
fn0011C019_exit:


void fn0011C036(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011C036_entry:
l0011C036:
	v21_11 = Mem0[arg0 + 0xB<32>:int8]
	v19_12 = CONVERT(v21_11, int8, word32)
	v19_18 = CONVERT(v21_11, byte, int32)
	branch v19_18 >= 0<32> l0011C06E
l0011C05B:
	loc3_28 = Mem0[arg0 + 4<32>:word32]
	goto l0011C07A
l0011C06E:
	loc3_28 = v19_12 & 0xFF<32>
l0011C07A:
	v22_44 = loc3_28 <u arg1
l0011C082:
	branch !v22_44 l0011C09A
l0011C088:
	fn0011C0EA(arg0, arg1 - loc3_28, arg2)
	goto l0011C0E4
l0011C09A:
	branch v19_18 >= 0<32> l0011C0C4
l0011C09E:
	Mem78[Mem0[arg0:word32] + arg1:byte] = 0<8>
	Mem85[arg0 + 4<32>:word32] = arg1
	goto l0011C0E6
l0011C0C4:
	Mem57[arg0 + arg1:byte] = 0<8>
	Mem66[arg0 + 0xB<32>:byte] = SLICE(arg1, byte, 0)
	goto l0011C0E6
l0011C0E4:
l0011C0E6:
	return
fn0011C036_exit:


word32 fn0011C0EA(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011C036
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C0EA_entry:
l0011C0EA:
	branch arg1 == 0<32> != 0<32> l0011C225
l0011C0FC:
	v37_19 = Mem0[arg0 + 0xB<32>:int8]
	v34_20 = CONVERT(v37_19, int8, word32)
	branch v37_19 >= 0<8> l0011C152
l0011C11B:
	loc8_36 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	loc9_38 = Mem0[arg0 + 4<32>:word32]
	goto l0011C162
l0011C152:
	loc8_36 = 0xA<32>
	loc9_38 = v34_20 & 0xFF<32>
l0011C162:
	branch loc8_36 - loc9_38 >=u arg1 l0011C1A0
l0011C175:
	fn0011C22A(arg0, loc8_36, arg1 - loc8_36 + loc9_38, loc9_38, loc9_38, 0<32>, 0<32>)
	loc14_103 = CONVERT(Mem0[arg0 + 0xB<32>:int8], int8, word32)
	goto l0011C1A4
l0011C1A0:
	loc14_103 = v34_20
l0011C1A4:
	branch SLICE(loc14_103, byte, 0) >= 0<8> l0011C1C2
l0011C1B6:
	loc17_116 = Mem0[arg0:word32]
	goto l0011C1C6
l0011C1C2:
	loc17_116 = arg0
l0011C1C6:
	_memset(loc17_116 + loc9_38, arg2, arg1)
	v34_143 = loc9_38 + arg1
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011C206
l0011C1F7:
	Mem176[arg0 + 4<32>:word32] = v34_143
	goto l0011C215
l0011C206:
	Mem168[arg0 + 0xB<32>:byte] = SLICE(v34_143, byte, 0)
l0011C215:
	Mem186[loc17_116 + v34_143:byte] = 0<8>
l0011C225:
	return <invalid>
fn0011C0EA_exit:


void fn0011C22A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0010B2F4
//      fn0011C0EA
//      fn0011C4AA
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011C22A_entry:
l0011C22A:
	branch 0xFFFFFFEF<32> - arg1 >=u arg2 l0011C248
l0011C242:
	fn0011B8A5(arg0)
l0011C248:
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011C273
l0011C267:
	loc21_112 = Mem0[arg0:word32]
	goto l0011C277
l0011C273:
	loc21_112 = arg0
l0011C277:
	branch arg1 >=u 0x7FFFFFE7<32> l0011C2CE
l0011C287:
	v34_59 = arg2 + arg1
	branch v34_59 >=u arg1 << 1<32> l0011C2A3
l0011C2A0:
	v34_70 = arg1 << 1<32>
	goto l0011C2A5
l0011C2A3:
	v34_70 = v34_59
l0011C2A5:
	v34_80 = v34_70 + 0x10<32>
	branch v34_70 >=u 0xB<32> l0011C2C4
l0011C2C1:
	v34_87 = 0xB<32>
	goto l0011C2C6
l0011C2C4:
	v34_87 = v34_80 & 0xFFFFFFF0<32>
l0011C2C6:
	loc18_54 = v34_87
	goto l0011C2D2
l0011C2CE:
	loc18_54 = 0xFFFFFFEF<32>
l0011C2D2:
	v34_95 = fn0011B67B(loc18_54)
	branch arg4 == 0<32> != 0<32> l0011C2F1
l0011C2E6:
	_memcpy(v34_95, loc21_112, arg4)
l0011C2F1:
	v34_141 = arg3 - arg5 - arg4
	branch v34_141 == 0<32> != 0<32> l0011C332
l0011C30B:
	_memcpy(v34_95 + arg4 + arg6, loc21_112 + arg4 + arg5, v34_141)
l0011C332:
	branch arg1 == 0xA<32> != 0<32> l0011C344
l0011C33E:
	fn0011B709(loc21_112)
l0011C344:
	Mem203[arg0:word32] = v34_95
	Mem217[arg0 + 8<32>:word32] = loc18_54 | 0x80000000<32>
	return
fn0011C22A_exit:


word32 fn0011C367(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011C48D
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C367_entry:
l0011C367:
	v33_11 = Mem0[arg0 + 0xB<32>:int8]
	v31_12 = CONVERT(v33_11, int8, word32)
	v31_18 = CONVERT(v33_11, byte, int32)
	branch v31_18 >= 0<32> l0011C3C3
l0011C38C:
	loc6_28 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	loc7_30 = Mem0[arg0 + 4<32>:word32]
	goto l0011C3D3
l0011C3C3:
	loc6_28 = 0xA<32>
	loc7_30 = v31_12 & 0xFF<32>
l0011C3D3:
	branch loc6_28 - loc7_30 >=u arg2 l0011C408
l0011C3E6:
	fn0011BC43(arg0, loc6_28, arg2 - loc6_28 + loc7_30, loc7_30, loc7_30, 0<32>, arg2, arg1)
	goto l0011C487
l0011C408:
	branch arg2 == 0<32> != 0<32> l0011C487
l0011C414:
	branch v31_18 >= 0<32> l0011C424
l0011C418:
	loc12_81 = Mem0[arg0:word32]
	goto l0011C428
l0011C424:
	loc12_81 = arg0
l0011C428:
	_memcpy(loc12_81 + loc7_30, arg1, arg2)
	v31_105 = loc7_30 + arg2
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011C468
l0011C459:
	Mem138[arg0 + 4<32>:word32] = v31_105
	goto l0011C477
l0011C468:
	Mem130[arg0 + 0xB<32>:byte] = SLICE(v31_105, byte, 0)
l0011C477:
	Mem148[loc12_81 + v31_105:byte] = 0<8>
l0011C487:
l0011C487:
	return <invalid>
fn0011C367_exit:


word32 fn0011C48D(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D1A0
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C48D_entry:
l0011C48D:
	return <invalid>
fn0011C48D_exit:


void fn0011C4AA(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed:
// Preserved:
fn0011C4AA_entry:
l0011C4AA:
	v30_11 = Mem0[arg0 + 0xB<32>:int8]
	v28_12 = CONVERT(v30_11, int8, word32)
	v28_18 = CONVERT(v30_11, byte, int32)
	branch v28_18 >= 0<32> l0011C506
l0011C4CF:
	loc3_28 = Mem0[arg0 + 4<32>:word32]
	loc4_30 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	goto l0011C516
l0011C506:
	loc3_28 = v28_12 & 0xFF<32>
	loc4_30 = 0xA<32>
l0011C516:
	branch loc3_28 != loc4_30 l0011C556
l0011C522:
	fn0011C22A(arg0, loc4_30, 1<32>, loc4_30, loc4_30, 0<32>, 0<32>)
	branch Mem0[arg0 + 0xB<32>:int8] <= 0xFF<8> l0011C550
l0011C54B:
	loc25_67 = 7<32>
	goto l0011C554
l0011C550:
	loc25_67 = 8<32>
l0011C554:
	goto l0011C564
l0011C556:
	branch v28_18 >= 0<32> l0011C55F
l0011C55A:
	loc25_67 = 8<32>
	goto l0011C563
l0011C55F:
	loc25_67 = 7<32>
l0011C563:
l0011C564:
	branch loc25_67 != 7<32> l0011C587
l0011C56C:
	Mem145[arg0 + 0xB<32>:byte] = SLICE(loc3_28, byte, 0) + 1<8>
	loc5 = arg0
	goto l0011C5AF
l0011C587:
	branch loc25_67 != 8<32> l0011C5AF
l0011C58E:
	v28_113 = Mem0[arg0:word32]
	Mem128[arg0 + 4<32>:word32] = loc3_28 + 1<32>
	loc5 = v28_113
l0011C5AF:
l0011C5AF:
	v28_159 = loc5 + loc3_28
	Mem172[v28_159:byte] = SLICE(arg1, byte, 0)
	Mem180[v28_159 + 1<32>:byte] = 0<8>
	return
fn0011C4AA_exit:


void fn0011C5CF(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00119977
//      fn001199A5
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011C5CF_entry:
l0011C5CF:
	branch arg2 <=u 0x3FFFFFEF<32> l0011C5EA
l0011C5E4:
	fn0011B8A5(arg0)
l0011C5EA:
l0011C5F1:
	branch arg2 >=u 2<32> l0011C619
l0011C5F7:
	Mem86[arg0 + 0xB<32>:byte] = SLICE(arg2, byte, 0)
	loc3 = arg0
	goto l0011C68F
l0011C619:
	v21_26 = arg2 + 4<32> & 0xFFFFFFFC<32>
	branch v21_26 <=u 0x3FFFFFFF<32> l0011C64C
l0011C636:
	v21_65 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v21_65)
	___cxa_throw(v21_65, 0x9C8<32>, 0x153<32>)
	goto l0011C68E
l0011C64C:
	v21_38 = fn0011B67B(v21_26 << 2<32>)
	Mem43[arg0:word32] = v21_38
	Mem54[arg0 + 8<32>:word32] = v21_26 | 0x80000000<32>
	Mem61[arg0 + 4<32>:word32] = arg2
	loc3 = v21_38
	goto l0011C690
l0011C68E:
l0011C68F:
l0011C690:
	fn000E5F91(loc3, arg1, arg2)
	Mem112[loc3 + (arg2 << 2<32>):word32] = 0<32>
	return
fn0011C5CF_exit:


void fn0011C6AF(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000FD465
//      fn00106FEA
//      fn00107163
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011C6AF_entry:
l0011C6AF:
	branch arg1 <=u 0x3FFFFFEF<32> l0011C6CA
l0011C6C4:
	fn0011B8A5(arg0)
l0011C6CA:
l0011C6D1:
	branch arg1 >=u 2<32> l0011C6F9
l0011C6D7:
	Mem86[arg0 + 0xB<32>:byte] = SLICE(arg1, byte, 0)
	loc3 = arg0
	goto l0011C76F
l0011C6F9:
	v21_26 = arg1 + 4<32> & 0xFFFFFFFC<32>
	branch v21_26 <=u 0x3FFFFFFF<32> l0011C72C
l0011C716:
	v21_65 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v21_65)
	___cxa_throw(v21_65, 0x9C8<32>, 0x153<32>)
	goto l0011C76E
l0011C72C:
	v21_38 = fn0011B67B(v21_26 << 2<32>)
	Mem43[arg0:word32] = v21_38
	Mem54[arg0 + 8<32>:word32] = v21_26 | 0x80000000<32>
	Mem61[arg0 + 4<32>:word32] = arg1
	loc3 = v21_38
	goto l0011C770
l0011C76E:
l0011C76F:
l0011C770:
	fn0011C78F(loc3, arg1, arg2)
	Mem112[loc3 + (arg1 << 2<32>):word32] = 0<32>
	return
fn0011C6AF_exit:


word32 fn0011C78F(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011C6AF
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C78F_entry:
l0011C78F:
	branch arg1 != 0<32> l0011C7A5
l0011C7A0:
	goto l0011C7B4
l0011C7A5:
	fn000DF09C(arg0, arg2, arg1)
l0011C7B4:
	return <invalid>
fn0011C78F_exit:


void fn0011C7BA(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000F1D6A
//      fn000FC0DF
//      fn000FD465
//      fn00104191
//      fn001041C9
//      fn00104201
//      fn0010CE53
//      fn00110427
//      fn001131F3
//      fn00113AB3
//      fn00114190
//      fn001157F7
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011C7BA_entry:
l0011C7BA:
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011C7F3
l0011C7E6:
	fn0011B709(Mem0[arg0:word32])
l0011C7F3:
	return
fn0011C7BA_exit:


word32 fn0011C7F6(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011CD9A
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C7F6_entry:
l0011C7F6:
	v28_15 = Mem0[arg0 + 0xB<32>:int8]
	v26_16 = CONVERT(v28_15, int8, word32)
	v26_22 = CONVERT(v28_15, byte, int32)
	branch v26_22 >= 0<32> l0011C840
l0011C822:
	loc3_28 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	goto l0011C844
l0011C840:
	loc3_28 = 1<32>
l0011C844:
	v29_48 = loc3_28 <u arg2
l0011C84C:
	branch !v29_48 l0011C891
l0011C852:
	branch v26_22 >= 0<32> l0011C869
l0011C856:
	loc15_119 = Mem0[arg0 + 4<32>:word32]
	goto l0011C875
l0011C869:
	loc15_119 = v26_16 & 0xFF<32>
l0011C875:
	fn0011C92E(arg0, loc3_28, arg2 - loc3_28, loc15_119, 0<32>, loc15_119, arg2, arg1)
	goto l0011C8FC
l0011C891:
	branch v26_22 >= 0<32> l0011C8A1
l0011C895:
	loc5_55 = Mem0[arg0:word32]
	goto l0011C8A5
l0011C8A1:
	loc5_55 = arg0
l0011C8A5:
	fn0011C903(loc5_55, arg1, arg2)
	Mem80[loc5_55 + (arg2 << 2<32>):word32] = 0<32>
	branch Mem80[arg0 + 0xB<32>:int8] >= 0<8> l0011C8EA
l0011C8D9:
	Mem111[arg0 + 4<32>:word32] = arg2
	goto l0011C8FD
l0011C8EA:
	Mem103[arg0 + 0xB<32>:byte] = SLICE(arg2, byte, 0)
	goto l0011C8FD
l0011C8FC:
l0011C8FD:
	return <invalid>
fn0011C7F6_exit:


word32 fn0011C903(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011C7F6
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011C903_entry:
l0011C903:
	branch arg2 != 0<32> l0011C919
l0011C914:
	goto l0011C928
l0011C919:
	fn000DF0F0(arg0, arg1, arg2)
l0011C928:
	return <invalid>
fn0011C903_exit:


void fn0011C92E(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011C7F6
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011C92E_entry:
l0011C92E:
	branch 0x3FFFFFEE<32> - arg1 >=u arg2 l0011C950
l0011C94A:
	fn0011B8A5(arg0)
l0011C950:
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011C982
l0011C976:
	loc28_139 = Mem0[arg0:word32]
	goto l0011C986
l0011C982:
	loc28_139 = arg0
l0011C986:
	branch arg1 >=u 0x1FFFFFE7<32> l0011CA03
l0011C996:
	v42_63 = arg2 + arg1
	branch v42_63 >=u arg1 << 1<32> l0011C9B2
l0011C9AF:
	v42_74 = arg1 << 1<32>
	goto l0011C9B4
l0011C9B2:
	v42_74 = v42_63
l0011C9B4:
	v42_84 = v42_74 + 4<32>
	branch v42_74 >=u 2<32> l0011C9D3
l0011C9D0:
	v42_91 = 2<32>
	goto l0011C9D5
l0011C9D3:
	v42_91 = v42_84 & 0xFFFFFFFC<32>
l0011C9D5:
	branch v42_91 <=u 0x3FFFFFFF<32> l0011C9FD
l0011C9E7:
	v42_103 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v42_103)
	___cxa_throw(v42_103, 0x9C8<32>, 0x153<32>)
	goto l0011CA01
l0011C9FD:
	loc25 = v42_91
l0011CA01:
	goto l0011CA0B
l0011CA03:
	loc25 = 0x3FFFFFEF<32>
l0011CA0B:
	v42_121 = fn0011B67B(loc25 << 2<32>)
	branch arg4 == 0<32> != 0<32> l0011CA31
l0011CA26:
	fn000E5F91(v42_121, loc28_139, arg4)
l0011CA31:
	branch arg6 == 0<32> != 0<32> l0011CA52
l0011CA3D:
	fn000E5F91(v42_121 + (arg4 << 2<32>), arg7, arg6)
l0011CA52:
	v42_204 = arg3 - arg5
	v42_209 = v42_204 - arg4
	branch v42_209 == 0<32> != 0<32> l0011CA9F
l0011CA6C:
	fn000E5F91(v42_121 + (arg4 << 2<32>) + (arg6 << 2<32>), loc28_139 + (arg4 << 2<32>) + (arg5 << 2<32>), v42_209)
l0011CA9F:
	branch arg1 == 1<32> != 0<32> l0011CAB1
l0011CAAB:
	fn0011B709(loc28_139)
l0011CAB1:
	Mem277[arg0:word32] = v42_121
	Mem297[arg0 + 8<32>:word32] = loc25 | 0x80000000<32>
	v42_304 = v42_204 + arg6
	Mem312[arg0 + 4<32>:word32] = v42_304
	Mem321[v42_121 + (v42_304 << 2<32>):word32] = 0<32>
	return
fn0011C92E_exit:


void fn0011CAF3(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011CAF3_entry:
l0011CAF3:
	branch arg1 <=u 0x3FFFFFEF<32> l0011CB0E
l0011CB08:
	fn0011B8A5(arg0)
l0011CB0E:
	v61_25 = Mem0[arg0 + 0xB<32>:int8]
	v58_26 = CONVERT(v61_25, int8, word32)
	v58_32 = CONVERT(v61_25, byte, int32)
	branch v58_32 >= 0<32> l0011CB64
l0011CB34:
	loc12_42 = Mem0[arg0 + 4<32>:word32]
	loc17_103 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	goto l0011CB74
l0011CB64:
	loc12_42 = v58_26 & 0xFF<32>
	loc17_103 = 1<32>
l0011CB74:
	branch loc12_42 <=u arg1 l0011CB83
l0011CB80:
	v58_75 = loc12_42
	goto l0011CB85
l0011CB83:
	v58_75 = arg1
l0011CB85:
	v60_81 = v58_75 <u 2<32>
	v58_93 = (v58_75 + 4<32> & 0xFFFFFFFC<32>) + 0xFFFFFFFF<32>
	branch !v60_81 l0011CBAB
l0011CBA8:
	v58_96 = 1<32>
	goto l0011CBAD
l0011CBAB:
	v58_96 = v58_93
l0011CBAD:
	v60_105 = v58_96 == loc17_103
l0011CBB7:
	branch v60_105 != 0<32> l0011CD96
l0011CBBE:
	branch !v60_81 l0011CC04
l0011CBC4:
	v58_237 = Mem0[arg0:word32]
	branch v58_32 >= 0<32> l0011CBE0
l0011CBCF:
	loc2 = v58_237
	loc3 = 0<32>
	loc5 = arg0
	loc55_254 = 0x15<32>
	goto l0011CC02
l0011CBE0:
	fn000E5F91(arg0, v58_237, (v58_26 & 0xFF<32>) + 1<32>)
	fn0011B709(v58_237)
	loc55_254 = 0x17<32>
l0011CC02:
	goto l0011CD03
l0011CC04:
	v60_113 = v58_96 >u loc17_103
	v58_117 = v58_96 + 1<32>
l0011CC1D:
	branch !v60_113 l0011CC53
l0011CC23:
	branch v58_117 <=u 0x3FFFFFFF<32> l0011CC3D
l0011CC27:
	v58_180 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v58_180)
	___cxa_throw(v58_180, 0x9C8<32>, 0x153<32>)
	goto l0011CC51
l0011CC3D:
	loc7 = fn0011B67B(v58_117 << 2<32>)
	goto l0011CCC0
l0011CC51:
	goto l0011CCBF
l0011CC53:
	branch v58_117 <=u 0x3FFFFFFF<32> l0011CC7C
l0011CC57:
	v58_148 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v58_148)
	Mem152[0x00140048<p32>:word32] = 0<32>
	invoke_viii(0x173<32>, v58_148, 0x9C8<32>, 0x153<32>)
	Mem160[0x00140048<p32>:word32] = 0<32>
	goto l0011CCAB
l0011CC7C:
	Mem130[0x00140048<p32>:word32] = 0<32>
	v58_133 = invoke_ii(0x1EB<32>, v58_117 << 2<32>)
	v58_135 = Mem130[0x00140048<p32>:word32]
	Mem138[0x00140048<p32>:word32] = 0<32>
	branch (v58_135 & 1<32>) != 0<32> l0011CCAB
l0011CCA4:
	loc7 = v58_133
	goto l0011CCC0
l0011CCAB:
l0011CCAB:
	___cxa_begin_catch(___cxa_find_matching_catch_3(0<32>))
	___cxa_end_catch()
	goto l0011CD96
l0011CCBF:
l0011CCC0:
	branch v58_32 >= 0<32> l0011CCDF
l0011CCC5:
	loc2 = Mem222[arg0:word32]
	loc3 = 1<32>
	loc5 = loc7
	loc55_220 = 0x15<32>
	goto l0011CD04
l0011CCDF:
	fn000E5F91(loc7, arg0, (v58_26 & 0xFF<32>) + 1<32>)
	loc4 = loc7
	loc55_220 = 0x16<32>
	goto l0011CD04
l0011CD03:
	loc55_220 = loc55_254
l0011CD04:
	branch loc55_220 != 0x15<32> l0011CD43
l0011CD0C:
	fn000E5F91(loc5, loc2, Mem275[arg0 + 4<32>:word32] + 1<32>)
	fn0011B709(loc2)
	branch !loc3 l0011CD3D
l0011CD34:
	loc4 = loc5
	loc55_220 = 0x16<32>
	goto l0011CD41
l0011CD3D:
	loc55_220 = 0x17<32>
l0011CD41:
l0011CD43:
	branch loc55_220 != 0x16<32> l0011CD7B
l0011CD4A:
	Mem373[arg0 + 8<32>:word32] = v58_96 + 1<32> | 0x80000000<32>
	Mem382[arg0 + 4<32>:word32] = loc12_42
	Mem395[arg0:word32] = loc4
	goto l0011CD96
l0011CD7B:
	branch loc55_220 != 0x17<32> l0011CD94
l0011CD82:
	Mem349[arg0 + 0xB<32>:byte] = SLICE(loc12_42, byte, 0)
	goto l0011CD96
l0011CD94:
l0011CD94:
l0011CD96:
l0011CD96:
	return
fn0011CAF3_exit:


word32 fn0011CD9A(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011CD9A_entry:
l0011CD9A:
	return <invalid>
fn0011CD9A_exit:


void fn0011CDB7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00110287
//      fn0011CF35
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011CDB7_entry:
l0011CDB7:
	branch 0x3FFFFFEF<32> - arg1 >=u arg2 l0011CDD9
l0011CDD3:
	fn0011B8A5(arg0)
l0011CDD9:
	branch Mem0[arg0 + 0xB<32>:int8] >= 0<8> l0011CE0B
l0011CDFF:
	loc26_139 = Mem0[arg0:word32]
	goto l0011CE0F
l0011CE0B:
	loc26_139 = arg0
l0011CE0F:
	branch arg1 >=u 0x1FFFFFE7<32> l0011CE8C
l0011CE1F:
	v37_63 = arg2 + arg1
	branch v37_63 >=u arg1 << 1<32> l0011CE3B
l0011CE38:
	v37_74 = arg1 << 1<32>
	goto l0011CE3D
l0011CE3B:
	v37_74 = v37_63
l0011CE3D:
	v37_84 = v37_74 + 4<32>
	branch v37_74 >=u 2<32> l0011CE5C
l0011CE59:
	v37_91 = 2<32>
	goto l0011CE5E
l0011CE5C:
	v37_91 = v37_84 & 0xFFFFFFFC<32>
l0011CE5E:
	branch v37_91 <=u 0x3FFFFFFF<32> l0011CE86
l0011CE70:
	v37_103 = ___cxa_allocate_exception(4<32>)
	fn0011EE8C(v37_103)
	___cxa_throw(v37_103, 0x9C8<32>, 0x153<32>)
	goto l0011CE8A
l0011CE86:
	loc23 = v37_91
l0011CE8A:
	goto l0011CE94
l0011CE8C:
	loc23 = 0x3FFFFFEF<32>
l0011CE94:
	v37_121 = fn0011B67B(loc23 << 2<32>)
	branch arg4 == 0<32> != 0<32> l0011CEBA
l0011CEAF:
	fn000E5F91(v37_121, loc26_139, arg4)
l0011CEBA:
	v37_171 = arg3 - arg5 - arg4
	branch v37_171 == 0<32> != 0<32> l0011CF07
l0011CED4:
	fn000E5F91(v37_121 + (arg4 << 2<32>) + (arg6 << 2<32>), loc26_139 + (arg4 << 2<32>) + (arg5 << 2<32>), v37_171)
l0011CF07:
	branch arg1 == 1<32> != 0<32> l0011CF19
l0011CF13:
	fn0011B709(loc26_139)
l0011CF19:
	Mem244[arg0:word32] = v37_121
	Mem262[arg0 + 8<32>:word32] = loc23 | 0x80000000<32>
	return
fn0011CDB7_exit:


void fn0011CF35(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011CF35_entry:
l0011CF35:
	v30_15 = Mem0[arg0 + 0xB<32>:int8]
	v28_16 = CONVERT(v30_15, int8, word32)
	v28_22 = CONVERT(v30_15, byte, int32)
	branch v28_22 >= 0<32> l0011CF91
l0011CF61:
	loc3_32 = Mem0[arg0 + 4<32>:word32]
	loc4_34 = (Mem0[arg0 + 8<32>:word32] & 0x7FFFFFFF<32>) + 0xFFFFFFFF<32>
	goto l0011CFA1
l0011CF91:
	loc3_32 = v28_16 & 0xFF<32>
	loc4_34 = 1<32>
l0011CFA1:
	branch loc3_32 != loc4_34 l0011CFE1
l0011CFAD:
	fn0011CDB7(arg0, loc4_34, 1<32>, loc4_34, loc4_34, 0<32>, 0<32>)
	branch Mem0[arg0 + 0xB<32>:int8] <= 0xFF<8> l0011CFDB
l0011CFD6:
	loc25_67 = 7<32>
	goto l0011CFDF
l0011CFDB:
	loc25_67 = 8<32>
l0011CFDF:
	goto l0011CFEF
l0011CFE1:
	branch v28_22 >= 0<32> l0011CFEA
l0011CFE5:
	loc25_67 = 8<32>
	goto l0011CFEE
l0011CFEA:
	loc25_67 = 7<32>
l0011CFEE:
l0011CFEF:
	branch loc25_67 != 7<32> l0011D012
l0011CFF7:
	Mem145[arg0 + 0xB<32>:byte] = SLICE(loc3_32, byte, 0) + 1<8>
	loc5 = arg0
	goto l0011D03A
l0011D012:
	branch loc25_67 != 8<32> l0011D03A
l0011D019:
	v28_113 = Mem0[arg0:word32]
	Mem128[arg0 + 4<32>:word32] = loc3_32 + 1<32>
	loc5 = v28_113
l0011D03A:
l0011D03A:
	v28_161 = loc5 + (loc3_32 << 2<32>)
	Mem173[v28_161:word32] = arg1
	Mem180[v28_161 + 4<32>:word32] = 0<32>
	return
fn0011CF35_exit:


void fn0011D05D(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011D05D_entry:
l0011D05D:
	return
fn0011D05D_exit:


void fn0011D066(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D066_entry:
l0011D066:
	Mem10[arg0:word32] = arg2
	Mem19[arg0 + 4<32>:word32] = arg1
	return
fn0011D066_exit:


word32 fn0011D084(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011D084_entry:
l0011D084:
	v18_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D09D
l0011D098:
	abortStackOverflow(0x10<32>)
l0011D09D:
	branch Mem7[v18_2 + 4<32>:word32] != Mem7[arg2 + 4<32>:word32] l0011D10B
l0011D0F1:
	goto l0011D10F
l0011D10B:
l0011D10F:
	Mem78[0x00140030<p32>:word32] = v18_2
	return <invalid>
fn0011D084_exit:


word32 fn0011D119(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011D119_entry:
l0011D119:
	return <invalid>
fn0011D119_exit:


void fn0011D14E(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E61E4
//      fn000E61F2
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D14E_entry:
l0011D14E:
	fn0011E468(arg0)
	return
fn0011D14E_exit:


void fn0011D15C(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D15C_entry:
l0011D15C:
	fn0011E468(arg0)
	fn0011B709(arg0)
	return
fn0011D15C_exit:


void fn0011D16F(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E6220
// MayUse:  Stack +0000:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D16F_entry:
l0011D16F:
	v7_7 = fn000D69BF(arg2)
	Mem13[arg0:word64] = 0<64>
	Mem18[arg0 + 8<32>:word32] = 0<32>
	fn0011B96D(arg0, v7_7, fn000DAF30(v7_7))
	return
fn0011D16F_exit:


void fn0011D1A0(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D1A0_entry:
l0011D1A0:
	v40_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D1B9
l0011D1B4:
	abortStackOverflow(0x10<32>)
l0011D1B9:
	v40_20 = Mem7[arg1:word32]
l0011D1CB:
	branch v40_20 == 0<32> != 0<32> l0011D2FC
l0011D1D2:
	v43_36 = Mem7[arg2 + 0xB<32>:int8]
	v40_37 = CONVERT(v43_36, int8, word32)
	branch v43_36 >= 0<8> l0011D204
l0011D1F1:
	loc8_53 = Mem7[arg2 + 4<32>:word32]
	goto l0011D210
l0011D204:
	loc8_53 = v40_37 & 0xFF<32>
l0011D210:
	branch loc8_53 != 0<32> l0011D221
l0011D21C:
	goto l0011D236
l0011D221:
	fn0011C48D(arg2, 0x40A4<32>)
l0011D236:
	v48_118 = Mem7[v40_2 + 0xB<32>:int8]
	v46_119 = CONVERT(v48_118, int8, word32)
	v46_125 = CONVERT(v48_118, byte, int32)
	v46_130 = Mem7[v40_2:word32]
	branch v46_125 >= 0<32> l0011D297
l0011D294:
	v46_133 = v46_130
	goto l0011D299
l0011D297:
	v46_133 = v40_2
l0011D299:
	v46_144 = Mem7[v40_2 + 4<32>:word32]
	branch v46_125 >= 0<32> l0011D2B9
l0011D2B6:
	v46_153 = v46_144
	goto l0011D2BB
l0011D2B9:
	v46_153 = v46_119 & 0xFF<32>
l0011D2BB:
	Mem158[0x00140048<p32>:word32] = 0<32>
	invoke_iiii(0x1EC<32>, arg2, v46_133, v46_153)
	v46_168 = Mem158[0x00140048<p32>:word32]
	Mem171[0x00140048<p32>:word32] = 0<32>
	branch !(v46_168 & 1<32>) l0011D2F3
l0011D2E1:
	v46_179 = ___cxa_find_matching_catch_2()
	fn0011BAF7(v40_2)
	___resumeException(v46_179)
	goto l0011D2FA
l0011D2F3:
	fn0011BAF7(v40_2)
	goto l0011D2FC
l0011D2FA:
l0011D2FC:
l0011D2FC:
	Mem201[arg0:word64] = Mem198[arg2:word64]
	Mem209[arg0 + 8<32>:word32] = Mem201[arg2 + 8<32>:word32]
	loc3_211 = 0<32>
l0011D31D:
	branch loc3_211 != 3<32> l0011D32D
l0011D32A:
	goto l0011D34B
l0011D32D:
	Mem227[arg2 + (loc3_211 << 2<32>):word32] = 0<32>
	loc3_211 = loc3_211 + 1<32>
	goto l0011D31D
l0011D34B:
	Mem242[0x00140030<p32>:word32] = v40_2
	return
fn0011D1A0_exit:


void fn0011D354(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E63C8
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D354_entry:
l0011D354:
	v20_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x20<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D36D
l0011D368:
	abortStackOverflow(0x20<32>)
l0011D36D:
	Mem21[v20_2:word64] = 0<64>
	Mem26[v20_2 + 8<32>:word32] = 0<32>
	fn0011B96D(v20_2, arg2, fn000DAF30(arg2))
	Mem37[0x00140048<p32>:word32] = 0<32>
	invoke_viii(0x1ED<32>, v20_2 + 0xC<32>, arg1, v20_2)
	v20_45 = Mem37[0x00140048<p32>:word32]
	Mem48[0x00140048<p32>:word32] = 0<32>
l0011D3B7:
	branch !(v20_45 & 1<32>) l0011D3CE
l0011D3BD:
	v20_97 = ___cxa_find_matching_catch_2()
	goto l0011D434
l0011D3CE:
	Mem55[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1EE<32>, arg0, v20_2 + 0xC<32>)
	v20_62 = Mem55[0x00140048<p32>:word32]
	Mem65[0x00140048<p32>:word32] = 0<32>
	branch !(v20_62 & 1<32>) l0011D406
l0011D3EE:
	v20_88 = ___cxa_find_matching_catch_2()
	fn0011BAF7(v20_2 + 0xC<32>)
	loc4_108 = v20_88
	goto l0011D435
l0011D406:
	fn0011BAF7(v20_2 + 0xC<32>)
	fn0011BAF7(v20_2)
	Mem75[arg0:word32] = 0x2654<32>
	Mem85[arg0 + 8<32>:word64] = Mem75[arg1:word64]
	Mem87[0x00140030<p32>:word32] = v20_2
	return
l0011D434:
	loc4_108 = v20_97
l0011D435:
	fn0011BAF7(v20_2)
	___resumeException(loc4_108)
l0011D43F:
	return
fn0011D354_exit:


void fn0011D441()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011D441_entry:
l0011D441:
	v41_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x30<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D45A
l0011D455:
	abortStackOverflow(0x30<32>)
l0011D45A:
	v41_31 = fn0011D5FB()
	branch v41_31 == 0<32> != 0<32> l0011D5F0
l0011D48B:
	v41_41 = Mem7[v41_31:word32]
	branch v41_41 == 0<32> != 0<32> l0011D5EF
l0011D49E:
	v44_58 = Mem7[v41_41 + 0x30<32>:word64]
	branch (v44_58 & 0xFFFFFFFFFFFFFF00<64>) == 0x436F6F40<64> != 0<32> l0011D4EB
l0011D4D1:
	Mem75[v41_2 + 0x18<32>:word32] = Mem7[0x2664<32>:word32]
	fn0011D654(0x40FD<32>, v41_2 + 0x18<32>)
l0011D4EB:
	branch v44_58 != 0x436F6F41<64> l0011D512
l0011D4FF:
	loc5_101 = Mem93[v41_41 + 0x2C<32>:word32]
	goto l0011D516
l0011D512:
	loc5_101 = v41_41 + 0x50<32>
l0011D516:
	Mem103[v41_2 + 0x24<32>:word32] = loc5_101
	v41_113 = Mem103[Mem103[v41_41:word32] + 4<32>:word32]
	branch !((Mem103[Mem103[0x988<32>:word32] + 0x10<32>:word32] & 0x1FF<32>) + 0xF20<32>) l0011D5C6
l0011D563:
	v48_173 = (Mem103[Mem103[Mem103[v41_2 + 0x24<32>:word32]:word32] + 8<32>:word32] & 0x1FF<32>) + 0xB00<32>
	Mem179[v41_2:word32] = Mem103[0x2664<32>:word32]
	Mem186[v41_2 + 4<32>:word32] = v41_113
	Mem193[v41_2 + 8<32>:word32] = v48_173
	fn0011D654(0x40A7<32>, v41_2)
	goto l0011D5ED
l0011D5C6:
	Mem142[v41_2 + 0x10<32>:word32] = Mem103[0x2664<32>:word32]
	Mem149[v41_2 + 0x14<32>:word32] = v41_113
	fn0011D654(0x40D4<32>, v41_2 + 0x10<32>)
l0011D5ED:
l0011D5EF:
l0011D5F0:
	fn0011D654(0x4123<32>, v41_2 + 0x20<32>)
l0011D5F9:
	return
fn0011D441_exit:


word32 fn0011D5FB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D441
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011D5FB_entry:
l0011D5FB:
	v10_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D614
l0011D60F:
	abortStackOverflow(0x10<32>)
l0011D614:
	branch _pthread_once(0x53EC<32>, 0x1EF<32>) != 0<32> l0011D645
l0011D62E:
	v10_32 = _pthread_getspecific(Mem7[0x53F0<32>:word32])
	Mem35[0x00140030<p32>:word32] = v10_2
	return v10_32
l0011D645:
	fn0011D654(0x41BA<32>, v10_2)
l0011D64E:
	return 0<32>
fn0011D5FB_exit:


void fn0011D654(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D441
//      fn0011D5FB
//      fn0011E18A
//      fn0011E1CF
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D654_entry:
l0011D654:
	v7_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D66D
l0011D668:
	abortStackOverflow(0x10<32>)
l0011D66D:
	Mem20[v7_2:word32] = arg1
	v7_22 = Mem20[0xB14<32>:word32]
	fn000D2BD4(v7_22, arg0, v7_2)
	fn000DEC35(0xA<32>, v7_22)
	_abort()
l0011D694:
	return
fn0011D654_exit:


void fn0011D696(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011D696_entry:
l0011D696:
	return
fn0011D696_exit:


void fn0011D69F(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D69F_entry:
l0011D69F:
	fn0011B709(arg0)
	return
fn0011D69F_exit:


void fn0011D6AD(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011D6AD_entry:
l0011D6AD:
	return
fn0011D6AD_exit:


void fn0011D6B6(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011D6B6_entry:
l0011D6B6:
	return
fn0011D6B6_exit:


word32 fn0011D6BF(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011D6BF_entry:
l0011D6BF:
	v25_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x40<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011D6DA
l0011D6D4:
	abortStackOverflow(0x40<32>)
l0011D6DA:
	branch arg0 != arg1 l0011D6EE
l0011D6E9:
	goto l0011D808
l0011D6EE:
	branch arg1 != 0<32> l0011D6FE
l0011D6F9:
	goto l0011D807
l0011D6FE:
	v25_35 = fn0011DBBE(arg1, 0x9A0<32>, 0x990<32>, 0<32>)
	branch v25_35 != 0<32> l0011D71D
l0011D718:
	goto l0011D806
l0011D71D:
	Mem48[v25_2 + 4<32>:word64] = 0<64>
	Mem53[v25_2 + 0xC<32>:word64] = 0<64>
	Mem58[v25_2 + 0x14<32>:word64] = 0<64>
	Mem63[v25_2 + 0x1C<32>:word64] = 0<64>
	Mem68[v25_2 + 0x24<32>:word64] = 0<64>
	Mem73[v25_2 + 0x2C<32>:word64] = 0<64>
	Mem78[v25_2 + 0x34<32>:word32] = 0<32>
	Mem81[v25_2:word32] = v25_35
	Mem88[v25_2 + 8<32>:word32] = arg0
	Mem95[v25_2 + 0xC<32>:word32] = 0xFFFFFFFF<32>
	Mem102[v25_2 + 0x30<32>:word32] = 1<32>
	branch Mem102[v25_2 + 0x18<32>:word32] != 1<32> l0011D7FD
l0011D7E3:
	Mem151[arg2:word32] = Mem102[v25_2 + 0x10<32>:word32]
	goto l0011D801
l0011D7FD:
l0011D801:
l0011D806:
l0011D807:
l0011D808:
	Mem168[0x00140030<p32>:word32] = v25_2
	return <invalid>
fn0011D6BF_exit:


void fn0011D812(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D812_entry:
l0011D812:
	branch arg0 != Mem0[arg1 + 8<32>:word32] l0011D83F
l0011D831:
	fn0011DA6B(0<32>, arg1, arg2, arg3, arg4)
l0011D83F:
	return
fn0011D812_exit:


void fn0011D842(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D842_entry:
l0011D842:
	v38_17 = arg0 == Mem0[arg1 + 8<32>:word32]
l0011D85D:
	branch !v38_17 l0011D8A0
l0011D863:
	branch Mem0[arg1 + 4<32>:word32] != arg2 l0011D89F
l0011D87C:
	branch Mem0[arg1 + 0x1C<32>:word32] == 1<32> != 0<32> l0011D89E
l0011D896:
	Mem164[arg1 + 0x1C<32>:word32] = arg3
l0011D89E:
l0011D89F:
	goto l0011D986
l0011D8A0:
	branch arg0 != Mem0[arg1:word32] l0011D986
l0011D8B2:
	branch Mem0[arg1 + 0x10<32>:word32] == arg2 != 0<32> l0011D96B
l0011D8CC:
	branch Mem0[arg1 + 0x14<32>:word32] == arg2 != 0<32> l0011D96A
l0011D8E6:
	Mem78[arg1 + 0x20<32>:word32] = arg3
	Mem81[arg1 + 0x14<32>:word32] = arg2
	Mem95[arg1 + 0x28<32>:word32] = Mem81[arg1 + 0x28<32>:word32] + 1<32>
	branch Mem95[arg1 + 0x24<32>:word32] != 1<32> l0011D959
l0011D930:
	branch Mem95[arg1 + 0x18<32>:word32] != 2<32> l0011D958
l0011D949:
	Mem127[arg1 + 0x36<32>:byte] = 1<8>
l0011D958:
l0011D959:
	Mem136[arg1 + 0x2C<32>:word32] = 4<32>
	goto l0011D987
l0011D96A:
l0011D96B:
	branch arg3 != 1<32> l0011D985
l0011D976:
	Mem71[arg1 + 0x20<32>:word32] = 1<32>
l0011D985:
l0011D986:
l0011D986:
l0011D987:
	return
fn0011D842_exit:


void fn0011D98B(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D98B_entry:
l0011D98B:
	branch arg0 != Mem0[arg1 + 8<32>:word32] l0011D9B6
l0011D9AA:
	fn0011D9B9(0<32>, arg1, arg2, arg3)
l0011D9B6:
	return
fn0011D98B_exit:


void fn0011D9B9(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D98B
//      fn0011E119
//      fn0011EB84
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011D9B9_entry:
l0011D9B9:
	v19_11 = Mem0[arg1 + 0x10<32>:word32]
l0011D9D4:
	branch v19_11 != 0<32> l0011D9FE
l0011D9DA:
	Mem74[arg1 + 0x10<32>:word32] = arg2
	Mem81[arg1 + 0x18<32>:word32] = arg3
	Mem88[arg1 + 0x24<32>:word32] = 1<32>
	goto l0011DA66
l0011D9FE:
	branch v19_11 == arg2 != 0<32> l0011DA45
l0011DA0A:
	Mem56[arg1 + 0x24<32>:word32] = Mem0[arg1 + 0x24<32>:word32] + 1<32>
	Mem63[arg1 + 0x18<32>:word32] = 2<32>
	Mem71[arg1 + 0x36<32>:byte] = 1<8>
	goto l0011DA67
l0011DA45:
	branch Mem0[arg1 + 0x18<32>:word32] != 2<32> l0011DA66
l0011DA5E:
	Mem42[arg1 + 0x18<32>:word32] = arg3
l0011DA66:
l0011DA66:
l0011DA67:
	return
fn0011D9B9_exit:


void fn0011DA6B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D812
//      fn0011DE3A
//      fn0011E4F7
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011DA6B_entry:
l0011DA6B:
	Mem13[arg1 + 0x35<32>:byte] = 1<8>
	v39_25 = Mem13[arg1 + 4<32>:word32] == arg3
l0011DA94:
	branch !v39_25 l0011DBBA
l0011DA9A:
	Mem35[arg1 + 0x34<32>:byte] = 1<8>
	v36_41 = Mem35[arg1 + 0x10<32>:word32]
	branch v36_41 != 0<32> l0011DB20
l0011DAC1:
	Mem132[arg1 + 0x10<32>:word32] = arg2
	Mem139[arg1 + 0x18<32>:word32] = arg4
	Mem146[arg1 + 0x24<32>:word32] = 1<32>
	branch (Mem146[arg1 + 0x30<32>:word32] == 1<32> & arg4 == 1<32>) != 0<32> l0011DB0F
l0011DB0C:
	goto l0011DBBA
l0011DB0F:
	Mem175[arg1 + 0x36<32>:byte] = 1<8>
	goto l0011DBBA
l0011DB20:
	branch v36_41 == arg2 != 0<32> l0011DB59
l0011DB2C:
	Mem121[arg1 + 0x24<32>:word32] = Mem35[arg1 + 0x24<32>:word32] + 1<32>
	Mem129[arg1 + 0x36<32>:byte] = 1<8>
	goto l0011DBBA
l0011DB59:
	v36_61 = Mem35[arg1 + 0x18<32>:word32]
	branch v36_61 != 2<32> l0011DB7E
l0011DB72:
	Mem74[arg1 + 0x18<32>:word32] = arg4
	loc23_69 = arg4
	goto l0011DB82
l0011DB7E:
	loc23_69 = v36_61
l0011DB82:
	branch !(Mem83[arg1 + 0x30<32>:word32] == 1<32> & loc23_69 == 1<32>) l0011DBB9
l0011DBAA:
	Mem107[arg1 + 0x36<32>:byte] = 1<8>
l0011DBB9:
l0011DBBA:
l0011DBBA:
	return
fn0011DA6B_exit:


word32 fn0011DBBE(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D6BF
//      ___cxa_is_pointer_type
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011DBBE_entry:
l0011DBBE:
	v56_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x40<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011DBD9
l0011DBD3:
	abortStackOverflow(0x40<32>)
l0011DBD9:
	v56_38 = Mem7[Mem7[arg0:word32] + 0xFFFFFFFC<32>:word32]
	Mem45[v56_2:word32] = arg2
	Mem52[v56_2 + 4<32>:word32] = arg0
	Mem62[v56_2 + 8<32>:word32] = arg1
	Mem72[v56_2 + 0xC<32>:word32] = arg3
	Mem103[v56_2 + 0x10<32>:word64] = 0<64>
	Mem108[v56_2 + 0x18<32>:word64] = 0<64>
	Mem113[v56_2 + 0x20<32>:word64] = 0<64>
	Mem118[v56_2 + 0x28<32>:word64] = 0<64>
	Mem123[v56_2 + 0x30<32>:word32] = 0<32>
	Mem129[v56_2 + 0x34<32>:word16] = 0<16>
	Mem135[v56_2 + 0x36<32>:byte] = 0<8>
	v58_99 = v56_38 == arg2
l0011DCAC:
	branch !v58_99 l0011DD0D
l0011DCB2:
	Mem267[v56_2 + 0x30<32>:word32] = 1<32>
	branch Mem267[v56_2 + 0x18<32>:word32] != 1<32> l0011DD03
l0011DD00:
	goto l0011DD05
l0011DD03:
l0011DD05:
	goto l0011DE21
l0011DD0D:
	v66_162 = Mem135[v56_2 + 0x24<32>:word32]
l0011DD47:
	switch (v66_162) { l0011DD59 l0011DDB0 }
l0011DD59:
	branch !(Mem135[v56_2 + 0x28<32>:word32] == 1<32> & Mem135[v56_2 + 0x1C<32>:word32] == 1<32> & Mem135[v56_2 + 0x20<32>:word32] == 1<32>) l0011DDA2
l0011DD9F:
	goto l0011DDA4
l0011DDA2:
l0011DDA4:
	goto l0011DE22
l0011DDB0:
l0011DDBD:
	Mem169 = Mem135
	branch Mem169[v56_2 + 0x18<32>:word32] == 1<32> != 0<32> l0011DE16
l0011DDD1:
	branch (Mem169[v56_2 + 0x28<32>:word32] == 0<32> & Mem169[v56_2 + 0x1C<32>:word32] == 1<32> & Mem169[v56_2 + 0x20<32>:word32] == 1<32>) != 0<32> l0011DE15
l0011DE0E:
	goto l0011DE22
l0011DE15:
l0011DE16:
l0011DE21:
l0011DE22:
	Mem305[0x00140030<p32>:word32] = v56_2
	return <invalid>
fn0011DBBE_exit:


void fn0011DE2C(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011DE2C_entry:
l0011DE2C:
	fn0011B709(arg0)
	return
fn0011DE2C_exit:


void fn0011DE3A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011DE3A_entry:
l0011DE3A:
	branch arg0 != Mem0[arg1 + 8<32>:word32] l0011DE67
l0011DE59:
	fn0011DA6B(0<32>, arg1, arg2, arg3, arg4)
	goto l0011DEA3
l0011DE67:
l0011DEA3:
	return
fn0011DE3A_exit:


void fn0011DEA7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011DEA7_entry:
l0011DEA7:
	v58_17 = arg0 == Mem0[arg1 + 8<32>:word32]
l0011DEC2:
	branch !v58_17 l0011DF05
l0011DEC8:
	branch Mem0[arg1 + 4<32>:word32] != arg2 l0011DF04
l0011DEE1:
	branch Mem0[arg1 + 0x1C<32>:word32] == 1<32> != 0<32> l0011DF03
l0011DEFB:
	Mem333[arg1 + 0x1C<32>:word32] = arg3
l0011DF03:
l0011DF04:
	goto l0011E114
l0011DF05:
	branch arg0 == Mem0[arg1:word32] != 0<32> l0011DF55
l0011DF18:
	goto l0011E115
l0011DF55:
	branch Mem0[arg1 + 0x10<32>:word32] == arg2 != 0<32> l0011E0FA
l0011DF6F:
	branch Mem0[arg1 + 0x14<32>:word32] == arg2 != 0<32> l0011E0F9
l0011DF89:
	Mem79[arg1 + 0x20<32>:word32] = arg3
	branch Mem79[arg1 + 0x2C<32>:word32] != 4<32> l0011DFB3
l0011DFB0:
	goto l0011E115
l0011DFB3:
	Mem99[arg1 + 0x34<32>:byte] = 0<8>
	Mem107[arg1 + 0x35<32>:byte] = 0<8>
	branch Mem107[arg1 + 0x35<32>:int8] != 0<8> l0011E02C
l0011E023:
	loc5 = 0<32>
	loc56_165 = 0xD<32>
	goto l0011E052
l0011E02C:
	branch Mem107[arg1 + 0x34<32>:int8] != 0<8> l0011E04D
l0011E044:
	loc5 = 1<32>
	loc56_165 = 0xD<32>
	goto l0011E051
l0011E04D:
	loc56_165 = 0x11<32>
l0011E051:
l0011E052:
	branch loc56_165 != 0xD<32> l0011E0E2
l0011E05C:
	Mem185[arg1 + 0x14<32>:word32] = arg2
	Mem201[arg1 + 0x28<32>:word32] = Mem185[arg1 + 0x28<32>:word32] + 1<32>
	branch Mem201[arg1 + 0x24<32>:word32] != 1<32> l0011E0D3
l0011E098:
	branch Mem201[arg1 + 0x18<32>:word32] != 2<32> l0011E0D2
l0011E0B1:
	Mem243[arg1 + 0x36<32>:byte] = 1<8>
	branch !loc5 l0011E0CA
l0011E0C3:
	loc56_165 = 0x11<32>
	goto l0011E0E2
l0011E0CA:
	loc44 = 4<32>
	goto l0011E0E2
l0011E0D2:
l0011E0D3:
	branch !loc5 l0011E0DC
l0011E0D7:
	loc56_165 = 0x11<32>
	goto l0011E0E0
l0011E0DC:
	loc44 = 4<32>
l0011E0E0:
l0011E0E2:
l0011E0E2:
	branch loc56_165 != 0x11<32> l0011E0EF
l0011E0EA:
	loc44 = 3<32>
l0011E0EF:
	Mem278[arg1 + 0x2C<32>:word32] = loc44
	goto l0011E115
l0011E0F9:
l0011E0FA:
	branch arg3 != 1<32> l0011E114
l0011E105:
	Mem72[arg1 + 0x20<32>:word32] = 1<32>
l0011E114:
l0011E114:
l0011E115:
	return
fn0011DEA7_exit:


void fn0011E119(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E119_entry:
l0011E119:
	branch arg0 != Mem0[arg1 + 8<32>:word32] l0011E144
l0011E138:
	fn0011D9B9(0<32>, arg1, arg2, arg3)
	goto l0011E17D
l0011E144:
l0011E17D:
	return
fn0011E119_exit:


void fn0011E181(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011E181_entry:
l0011E181:
	return
fn0011E181_exit:


void fn0011E18A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011E18A_entry:
l0011E18A:
	v8_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011E1A3
l0011E19E:
	abortStackOverflow(0x10<32>)
l0011E1A3:
	branch _pthread_key_create(0x53F0<32>, 0x1F0<32>) != 0<32> l0011E1C3
l0011E1BD:
	Mem27[0x00140030<p32>:word32] = v8_2
	return
l0011E1C3:
	fn0011D654(0x41EB<32>, v8_2)
l0011E1CC:
l0011E1CD:
	return
fn0011E18A_exit:


void fn0011E1CF(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E1CF_entry:
l0011E1CF:
	v9_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011E1E8
l0011E1E3:
	abortStackOverflow(0x10<32>)
l0011E1E8:
	_free(arg0)
	branch _pthread_setspecific(Mem7[0x53F0<32>:word32], 0<32>) != 0<32> l0011E213
l0011E20D:
	Mem35[0x00140030<p32>:word32] = v9_2
	return
l0011E213:
	fn0011D654(0x421D<32>, v9_2)
l0011E21C:
l0011E21D:
	return
fn0011E1CF_exit:


void fn0011E21F()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000D0E65
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011E21F_entry:
l0011E21F:
	Mem5[0x00140048<p32>:word32] = 0<32>
	v20_7 = invoke_i(0x1F1<32>)
	v20_9 = Mem5[0x00140048<p32>:word32]
	Mem12[0x00140048<p32>:word32] = 0<32>
	branch !(v20_9 & 1<32>) l0011E252
l0011E243:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
l0011E252:
	branch v20_7 == 0<32> != 0<32> l0011E2B1
l0011E25E:
	v20_33 = Mem12[v20_7:word32]
	branch v20_33 == 0<32> != 0<32> l0011E2B0
l0011E271:
	branch (Mem12[v20_33 + 0x30<32>:word64] & 0xFFFFFFFFFFFFFF00<64>) != 0x436F6F40<64> l0011E2AF
l0011E29B:
	fn0011E2BD(Mem12[v20_33 + 0xC<32>:word32])
l0011E2AF:
l0011E2B0:
l0011E2B1:
	fn0011E2BD(fn0011E377())
l0011E2BB:
	return
fn0011E21F_exit:


void fn0011E2BD(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011E21F
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E2BD_entry:
l0011E2BD:
	v19_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011E2D6
l0011E2D1:
	abortStackOverflow(0x10<32>)
l0011E2D6:
	Mem20[0x00140048<p32>:word32] = 0<32>
	invoke_v(arg0)
	v19_25 = Mem20[0x00140048<p32>:word32]
	Mem28[0x00140048<p32>:word32] = 0<32>
	branch (v19_25 & 1<32>) != 0<32> l0011E315
l0011E2FD:
	Mem36[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1F2<32>, 0x4252<32>, v19_2)
	Mem43[0x00140048<p32>:word32] = 0<32>
l0011E315:
	___cxa_begin_catch(___cxa_find_matching_catch_3(0<32>))
	Mem53[0x00140048<p32>:word32] = 0<32>
	invoke_vii(0x1F2<32>, 0x427A<32>, v19_2 + 8<32>)
	Mem61[0x00140048<p32>:word32] = 0<32>
	v19_63 = ___cxa_find_matching_catch_3(0<32>)
	Mem68[0x00140048<p32>:word32] = 0<32>
	invoke_v(0x16C<32>)
	v19_70 = Mem68[0x00140048<p32>:word32]
	Mem73[0x00140048<p32>:word32] = 0<32>
	branch !(v19_70 & 1<32>) l0011E370
l0011E361:
	fn000D0E65(___cxa_find_matching_catch_3(0<32>))
	goto l0011E374
l0011E370:
	fn000D0E65(v19_63)
l0011E374:
l0011E375:
	return
fn0011E2BD_exit:


word32 fn0011E377()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011E21F
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011E377_entry:
l0011E377:
	v8_5 = Mem0[0x2660<32>:word32]
	Mem13[0x2660<32>:word32] = v8_5
	return <invalid>
fn0011E377_exit:


void fn0011E39F(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011E39F_entry:
l0011E39F:
	return
fn0011E39F_exit:


void fn0011E3A8(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E3A8_entry:
l0011E3A8:
	fn0011B709(arg0)
	return
fn0011E3A8_exit:


word32 fn0011E3B6(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011E3B6_entry:
l0011E3B6:
	return <invalid>
fn0011E3B6_exit:


void fn0011E3C3(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011E3C3_entry:
l0011E3C3:
	return
fn0011E3C3_exit:


void fn0011E3CC(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011E3EA
//      fn0011E4B2
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E3CC_entry:
l0011E3CC:
	Mem8[arg0:word32] = 0x26D4<32>
	fn0011E416(arg0 + 4<32>)
	return
fn0011E3CC_exit:


void fn0011E3EA(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E3EA_entry:
l0011E3EA:
	fn0011E3CC(arg0)
	fn0011B709(arg0)
	return
fn0011E3EA_exit:


word32 fn0011E3FD(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011E3FD_entry:
l0011E3FD:
	return <invalid>
fn0011E3FD_exit:


void fn0011E416(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011E3CC
//      fn0011E468
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E416_entry:
l0011E416:
	v13_7 = Mem0[arg0:word32]
	v13_14 = Mem0[v13_7 + 0xFFFFFFFC<32>:word32]
	Mem22[v13_7 + 0xFFFFFFFC<32>:word32] = v13_14 + 0xFFFFFFFF<32>
	branch v13_14 >= 1<32> l0011E465
l0011E451:
	fn0011B709(Mem22[arg0:word32] + 0xFFFFFFF4<32>)
l0011E465:
	return
fn0011E416_exit:


void fn0011E468(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011D14E
//      fn0011D15C
//      fn0011E486
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E468_entry:
l0011E468:
	Mem8[arg0:word32] = 0x26E8<32>
	fn0011E416(arg0 + 4<32>)
	return
fn0011E468_exit:


void fn0011E486(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E486_entry:
l0011E486:
	fn0011E468(arg0)
	fn0011B709(arg0)
	return
fn0011E486_exit:


word32 fn0011E499(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011E499_entry:
l0011E499:
	return <invalid>
fn0011E499_exit:


void fn0011E4B2(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E4B2_entry:
l0011E4B2:
	fn0011E3CC(arg0)
	fn0011B709(arg0)
	return
fn0011E4B2_exit:


void fn0011E4C5(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011E4C5_entry:
l0011E4C5:
	return
fn0011E4C5_exit:


void fn0011E4CE(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E4CE_entry:
l0011E4CE:
	fn0011B709(arg0)
	return
fn0011E4CE_exit:


word32 fn0011E4DC(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011E4DC_entry:
l0011E4DC:
	return <invalid>
fn0011E4DC_exit:


void fn0011E4E9(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E4E9_entry:
l0011E4E9:
	fn0011B709(arg0)
	return
fn0011E4E9_exit:


void fn0011E4F7(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E4F7_entry:
l0011E4F7:
	branch arg0 != Mem0[arg1 + 8<32>:word32] l0011E524
l0011E516:
	fn0011DA6B(0<32>, arg1, arg2, arg3, arg4)
	goto l0011E6AE
l0011E524:
	v46_25 = Mem0[arg1 + 0x34<32>:int16]
	v40_55 = Mem0[arg0 + 0xC<32>:word32]
	Mem68[arg1 + 0x34<32>:byte] = 0<8>
	Mem72[arg1 + 0x35<32>:byte] = 0<8>
	fn0011ECEC(arg0 + 0x10<32>, arg1, arg2, arg3, arg4, arg5)
	v40_40 = (CONVERT(v46_25, int16, word32) & 0xFFFF<32>) >>u 8<32>
	v40_63 = arg0 + 0x10<32> + (v40_55 << 3<32>)
l0011E59B:
	branch v40_55 <= 1<32> l0011E69F
l0011E5A1:
	loc6_109 = arg0 + 0x18<32>
l0011E5C3:
	branch Mem112[arg1 + 0x36<32>:int8] == 0<8> != 0<32> l0011E5E1
l0011E5DE:
	goto l0011E69F
l0011E5E1:
	v40_129 = CONVERT(Mem112[arg1 + 0x34<32>:int16], int16, word32)
	branch SLICE(v40_129, byte, 0) != 0<8> l0011E631
l0011E601:
	branch (v40_129 & 0xFFFF<32>) < 0x100<32> != 0<32> l0011E630
l0011E613:
	branch (Mem112[arg0 + 8<32>:word32] & 1<32>) != 0<32> l0011E62F
l0011E62C:
	goto l0011E69F
l0011E62F:
l0011E630:
	goto l0011E662
l0011E631:
	branch Mem112[arg1 + 0x18<32>:word32] != 1<32> l0011E646
l0011E643:
	goto l0011E69F
l0011E646:
	branch (Mem112[arg0 + 8<32>:word32] & 2<32>) != 0<32> l0011E662
l0011E65F:
	goto l0011E69F
l0011E662:
l0011E662:
	Mem191[arg1 + 0x34<32>:byte] = 0<8>
	Mem198[arg1 + 0x35<32>:byte] = 0<8>
	fn0011ECEC(loc6_109, arg1, arg2, arg3, arg4, arg5)
	v40_225 = loc6_109 + 8<32>
	branch v40_225 >=u v40_63 l0011E697
l0011E692:
	loc6_109 = v40_225
	goto l0011E699
l0011E697:
	goto l0011E69C
l0011E699:
	goto l0011E5C3
l0011E69C:
l0011E69F:
l0011E69F:
	Mem247[arg1 + 0x34<32>:byte] = SLICE(v46_25, byte, 0)
	Mem258[arg1 + 0x35<32>:byte] = SLICE(v40_40, byte, 0)
l0011E6AE:
	return
fn0011E4F7_exit:


void fn0011E6B2(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011E6B2_entry:
l0011E6B2:
	v110_17 = arg0 == Mem0[arg1 + 8<32>:word32]
l0011E6CD:
	branch !v110_17 l0011E710
l0011E6D3:
	branch Mem0[arg1 + 4<32>:word32] != arg2 l0011E70F
l0011E6EC:
	branch Mem0[arg1 + 0x1C<32>:word32] == 1<32> != 0<32> l0011E70E
l0011E706:
	Mem678[arg1 + 0x1C<32>:word32] = arg3
l0011E70E:
l0011E70F:
	goto l0011EB7F
l0011E710:
	branch arg0 == Mem0[arg1:word32] != 0<32> l0011E8F5
l0011E723:
	v108_415 = Mem0[arg0 + 0xC<32>:word32]
	fn0011ED91(arg0 + 0x10<32>, arg1, arg2, arg3, arg4)
	v108_423 = arg0 + 0x10<32> + (v108_415 << 3<32>)
	branch v108_415 > 1<32> != 0<32> l0011E768
l0011E765:
	goto l0011EB80
l0011E768:
	v108_447 = Mem0[arg0 + 8<32>:word32]
	branch (v108_447 & 2<32>) != 0<32> l0011E8A1
l0011E788:
	branch Mem0[arg1 + 0x24<32>:word32] == 1<32> != 0<32> l0011E8A0
l0011E7A2:
	branch (v108_447 & 1<32>) != 0<32> l0011E81D
l0011E7B4:
	loc12_603 = arg0 + 0x18<32>
l0011E7C1:
	branch Mem0[arg1 + 0x36<32>:int8] == 0<8> != 0<32> l0011E7DD
l0011E7DA:
	goto l0011EB80
l0011E7DD:
	branch Mem0[arg1 + 0x24<32>:word32] != 1<32> l0011E7F2
l0011E7EF:
	goto l0011EB80
l0011E7F2:
	fn0011ED91(loc12_603, arg1, arg2, arg3, arg4)
	v108_641 = loc12_603 + 8<32>
	branch v108_641 >=u v108_423 l0011E816
l0011E811:
	loc12_603 = v108_641
	goto l0011E818
l0011E816:
	goto l0011EB80
l0011E818:
	goto l0011E7C1
l0011E81D:
	loc9_535 = arg0 + 0x18<32>
l0011E831:
	branch Mem0[arg1 + 0x36<32>:int8] == 0<8> != 0<32> l0011E84D
l0011E84A:
	goto l0011EB80
l0011E84D:
	branch Mem0[arg1 + 0x24<32>:word32] != 1<32> l0011E875
l0011E85F:
	branch Mem0[arg1 + 0x18<32>:word32] != 1<32> l0011E874
l0011E871:
	goto l0011EB80
l0011E874:
l0011E875:
	fn0011ED91(loc9_535, arg1, arg2, arg3, arg4)
	v108_587 = loc9_535 + 8<32>
	branch v108_587 >=u v108_423 l0011E899
l0011E894:
	loc9_535 = v108_587
	goto l0011E89B
l0011E899:
	goto l0011EB80
l0011E89B:
	goto l0011E831
l0011E8A0:
l0011E8A1:
	loc5_478 = arg0 + 0x18<32>
l0011E8AE:
	branch Mem0[arg1 + 0x36<32>:int8] == 0<8> != 0<32> l0011E8CA
l0011E8C7:
	goto l0011EB80
l0011E8CA:
	fn0011ED91(loc5_478, arg1, arg2, arg3, arg4)
	v108_507 = loc5_478 + 8<32>
	branch v108_507 >=u v108_423 l0011E8EE
l0011E8E9:
	loc5_478 = v108_507
	goto l0011E8F0
l0011E8EE:
	goto l0011EB80
l0011E8F0:
	goto l0011E8AE
l0011E8F5:
	branch Mem0[arg1 + 0x10<32>:word32] == arg2 != 0<32> l0011EB65
l0011E90F:
	branch Mem0[arg1 + 0x14<32>:word32] == arg2 != 0<32> l0011EB64
l0011E929:
	Mem79[arg1 + 0x20<32>:word32] = arg3
	branch Mem79[arg1 + 0x2C<32>:word32] != 4<32> l0011E953
l0011E950:
	goto l0011EB80
l0011E953:
	v108_109 = arg0 + 0x10<32> + (Mem79[arg0 + 0xC<32>:word32] << 3<32>)
	loc6_132 = 0<32>
	loc7_134 = arg0 + 0x10<32>
	loc8_136 = 0<32>
l0011E9A6:
	branch loc7_134 <u v108_109 != 0<32> l0011E9BF
l0011E9B4:
	loc13_255 = loc6_132
	loc108_233 = 0x14<32>
	goto l0011EAC4
l0011E9BF:
	Mem149[arg1 + 0x34<32>:byte] = 0<8>
	Mem154[arg1 + 0x35<32>:byte] = 0<8>
	fn0011ECEC(loc7_134, arg1, arg2, arg2, 1<32>, arg4)
	branch Mem154[arg1 + 0x36<32>:int8] == 0<8> != 0<32> l0011EA00
l0011E9F5:
	loc13_255 = loc6_132
	loc108_233 = 0x14<32>
	goto l0011EAC4
l0011EA00:
	v108_187 = CONVERT(Mem154[arg1 + 0x35<32>:int8], byte, int32)
l0011EA14:
	branch v108_187 != 0<32> l0011EA23
l0011EA1A:
	loc10_229 = loc6_132
	loc11_231 = loc8_136
	goto l0011EAAD
l0011EA23:
	branch Mem154[arg1 + 0x34<32>:int8] != 0<8> l0011EA6B
l0011EA3B:
	branch (Mem154[arg0 + 8<32>:word32] & 1<32>) != 0<32> l0011EA5F
l0011EA54:
	loc13_255 = 1<32>
	loc108_233 = 0x14<32>
	goto l0011EAC4
l0011EA5F:
	loc10_229 = 1<32>
	loc11_231 = loc8_136
	goto l0011EAAE
l0011EA6B:
	Mem207 = Mem154
	loc13_255 = loc13 (alias)
	branch Mem207[arg1 + 0x18<32>:word32] != 1<32> l0011EA84
l0011EA7D:
	loc108_233 = 0x19<32>
	goto l0011EAC4
l0011EA84:
	branch (Mem207[arg0 + 8<32>:word32] & 2<32>) != 0<32> l0011EAA4
l0011EA9D:
	loc108_233 = 0x19<32>
	goto l0011EAC4
l0011EAA4:
	loc10_229 = 1<32>
	loc11_231 = 1<32>
l0011EAAC:
l0011EAAD:
l0011EAAE:
	loc6_132 = loc10_229
	loc7_134 = loc7_134 + 8<32>
	loc8_136 = loc11_231
	goto l0011E9A6
l0011EAC4:
	loc67_353 = loc67
	branch loc108_233 != 0x14<32> l0011EB4D
l0011EACF:
	branch loc8_136 != 0<32> l0011EB3E
l0011EAD4:
	Mem305[arg1 + 0x14<32>:word32] = arg2
	Mem321[arg1 + 0x28<32>:word32] = Mem305[arg1 + 0x28<32>:word32] + 1<32>
	branch Mem321[arg1 + 0x24<32>:word32] != 1<32> l0011EB3D
l0011EB10:
	branch Mem321[arg1 + 0x18<32>:word32] != 2<32> l0011EB3C
l0011EB22:
	Mem361[arg1 + 0x36<32>:byte] = 1<8>
	branch !loc13_255 l0011EB34
l0011EB2D:
	loc108_233 = 0x19<32>
	goto l0011EB4D
l0011EB34:
	loc67_353 = 4<32>
	goto l0011EB4D
l0011EB3C:
l0011EB3D:
l0011EB3E:
	loc67_353 = loc67
	branch !loc13_255 l0011EB47
l0011EB42:
	loc108_233 = 0x19<32>
	goto l0011EB4B
l0011EB47:
	loc67_353 = 4<32>
l0011EB4B:
l0011EB4D:
l0011EB4D:
	branch loc108_233 != 0x19<32> l0011EB5A
l0011EB55:
	loc67_353 = 3<32>
l0011EB5A:
	Mem405[arg1 + 0x2C<32>:word32] = loc67_353
	goto l0011EB80
l0011EB64:
l0011EB65:
	branch arg3 != 1<32> l0011EB7F
l0011EB70:
	Mem72[arg1 + 0x20<32>:word32] = 1<32>
l0011EB7F:
l0011EB7F:
l0011EB80:
	return
fn0011E6B2_exit:


void fn0011EB84(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011EB84_entry:
l0011EB84:
	v22_17 = arg0 == Mem0[arg1 + 8<32>:word32]
l0011EB9F:
	branch !v22_17 l0011EBB1
l0011EBA5:
	fn0011D9B9(0<32>, arg1, arg2, arg3)
	goto l0011EC45
l0011EBB1:
	v20_29 = Mem0[arg0 + 0xC<32>:word32]
	fn0011EC4A(arg0 + 0x10<32>, arg1, arg2, arg3)
	v20_37 = arg0 + 0x10<32> + (v20_29 << 3<32>)
	branch v20_29 <= 1<32> l0011EC45
l0011EBE9:
	loc4_61 = arg0 + 0x18<32>
l0011EBFD:
	fn0011EC4A(loc4_61, arg1, arg2, arg3)
	branch Mem0[arg1 + 0x36<32>:int8] == 0<8> != 0<32> l0011EC26
l0011EC23:
	goto l0011EC46
l0011EC26:
	v20_88 = loc4_61 + 8<32>
	branch v20_88 >=u v20_37 l0011EC3D
l0011EC38:
	loc4_61 = v20_88
	goto l0011EC3F
l0011EC3D:
	goto l0011EC42
l0011EC3F:
	goto l0011EBFD
l0011EC42:
l0011EC45:
l0011EC45:
l0011EC46:
	return
fn0011EB84_exit:


void fn0011EC4A(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011EB84
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011EC4A_entry:
l0011EC4A:
	v22_11 = Mem0[arg0 + 4<32>:word32]
	branch (v22_11 & 1<32>) != 0<32> l0011EC7C
l0011EC77:
	goto l0011EC95
l0011EC7C:
l0011EC95:
	branch (v22_11 & 2<32>) == 0<32> l0011ECCE
l0011ECCB:
	goto l0011ECD0
l0011ECCE:
l0011ECD0:
	return
fn0011EC4A_exit:


void fn0011ECEC(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011E4F7
//      fn0011E6B2
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011ECEC_entry:
l0011ECEC:
	v22_11 = Mem0[arg0 + 4<32>:word32]
	branch (v22_11 & 1<32>) != 0<32> l0011ED1E
l0011ED19:
	goto l0011ED37
l0011ED1E:
l0011ED37:
	branch (v22_11 & 2<32>) == 0<32> l0011ED70
l0011ED6D:
	goto l0011ED72
l0011ED70:
l0011ED72:
	return
fn0011ECEC_exit:


void fn0011ED91(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011E6B2
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011ED91_entry:
l0011ED91:
	v22_11 = Mem0[arg0 + 4<32>:word32]
	branch (v22_11 & 1<32>) != 0<32> l0011EDC3
l0011EDBE:
	goto l0011EDDC
l0011EDC3:
l0011EDDC:
	branch (v22_11 & 2<32>) == 0<32> l0011EE15
l0011EE12:
	goto l0011EE17
l0011EE15:
l0011EE17:
	return
fn0011ED91_exit:


void fn0011EE34(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000EAEAB
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011EE34_entry:
l0011EE34:
	Mem8[arg0:word32] = 0x2710<32>
	return
fn0011EE34_exit:


word32 fn0011EE46(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E6375
//      fn000EAD0D
//      fn000FF5D5
//      fn000FF904
//      fn000FFDC5
//      fn000FFF20
//      fn000FFFB8
//      fn00100050
//      fn001000E8
//      fn00103575
//      fn001038A4
//      fn00103D50
//      fn00103EA9
//      fn00103F63
//      fn0010401D
//      fn001040D7
//      fn0011B24D
//      fn0011B315
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011EE46_entry:
l0011EE46:
	branch Mem0[arg0:int8] != 1<8> l0011EE69
l0011EE64:
	goto l0011EE74
l0011EE69:
	Mem22[arg0:byte] = 1<8>
l0011EE74:
	return <invalid>
fn0011EE46_exit:


void fn0011EE7A(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011EE7A_entry:
l0011EE7A:
	return
fn0011EE7A_exit:


void fn0011EE83(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011EE83_entry:
l0011EE83:
	return
fn0011EE83_exit:


void fn0011EE8C(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000E96D4
//      fn0011B67B
//      fn0011B725
//      fn0011C5CF
//      fn0011C6AF
//      fn0011C92E
//      fn0011CAF3
//      fn0011CDB7
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011EE8C_entry:
l0011EE8C:
	Mem8[arg0:word32] = 0x26C0<32>
	return
fn0011EE8C_exit:


word32 fn0011EE9E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011B67B
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011EE9E_entry:
l0011EE9E:
	v8_5 = Mem0[0x53F4<32>:word32]
	Mem13[0x53F4<32>:word32] = v8_5
	return <invalid>
fn0011EE9E_exit:


word32 ___cxa_can_catch(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
___cxa_can_catch_entry:
l0011EEC6:
	v13_2 = Mem0[0x00140030<p32>:word32]
	Mem7[0x00140030<p32>:word32] = Mem0[0x00140030<p32>:word32] + 0x10<32>
	branch Mem7[0x00140030<p32>:word32] < Mem7[0x00140034<p32>:word32] l0011EEDF
l0011EEDA:
	abortStackOverflow(0x10<32>)
l0011EEDF:
	Mem24[v13_2:word32] = Mem7[arg2:word32]
	v17_48 = (Mem24[Mem24[arg0:word32] + 0x10<32>:word32] & 0x1FF<32>) + 0xF20<32>
	branch !v17_48 l0011EF35
l0011EF26:
	Mem60[arg2:word32] = Mem24[v13_2:word32]
l0011EF35:
	Mem63[0x00140030<p32>:word32] = v13_2
	return <invalid>
___cxa_can_catch_exit:


word32 ___cxa_is_pointer_type(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
___cxa_is_pointer_type_entry:
l0011EF3E:
	branch arg0 != 0<32> l0011EF54
l0011EF4F:
	goto l0011EF6E
l0011EF54:
	fn0011DBBE(arg0, 0x9A0<32>, 0xA28<32>, 0<32>)
l0011EF6E:
	return <invalid>
___cxa_is_pointer_type_exit:


void runPostSets()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
runPostSets_entry:
l0011EF7B:
	return
runPostSets_exit:


word32 _memset(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000D2E2C
//      fn000D6D47
//      fn000DBA9B
//      fn000E3D5D
//      fn0011BA32
//      fn0011C0EA
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
_memset_entry:
	arg0_101 = arg0
	arg1_111 = arg1
l0011EF7D:
	v7_7 = arg0 + arg2
	branch arg2 < 0x14<32> l0011F014
l0011EF8D:
	arg1_111 = arg1 & 0xFF<32>
	v7_34 = arg1 & 0xFF<32> | (arg1 & 0xFF<32>) << 8<32> | (arg1 & 0xFF<32>) << 0x10<32> | (arg1 & 0xFF<32>) << 0x18<32>
	branch !(arg0 & 3<32>) l0011EFEF
l0011EFC0:
	v7_47 = arg0 + 4<32> - (arg0 & 3<32>)
l0011EFCC:
	branch arg0_101 < v7_47 != 0<32> l0011EFD9
l0011EFD6:
	goto l0011EFEC
l0011EFD9:
	Mem59[arg0_101:byte] = SLICE(arg1, byte, 0)
	arg0_101 = arg0_101 + 1<32>
l0011EFE9:
	goto l0011EFCC
l0011EFEC:
l0011EFEF:
l0011EFF1:
	branch arg0_101 < (v7_7 & 0xFFFFFFFC<32>) != 0<32> l0011EFFE
l0011EFFB:
	goto l0011F011
l0011EFFE:
	Mem73[arg0_101:word32] = v7_34
	arg0_101 = arg0_101 + 4<32>
l0011F00E:
	goto l0011EFF1
l0011F011:
l0011F014:
l0011F016:
	branch arg0_101 < v7_7 != 0<32> l0011F023
l0011F020:
	goto l0011F036
l0011F023:
	Mem88[arg0_101:byte] = SLICE(arg1_111, byte, 0)
	arg0_101 = arg0_101 + 1<32>
l0011F033:
	goto l0011F016
l0011F036:
	return <invalid>
_memset_exit:


word32 _pthread_mutex_lock(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011B49F
//      fn0011F4D2
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
_pthread_mutex_lock_entry:
l0011F040:
	return <invalid>
_pthread_mutex_lock_exit:


word32 _pthread_cond_broadcast(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011F4D9
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
_pthread_cond_broadcast_entry:
l0011F044:
	return <invalid>
_pthread_cond_broadcast_exit:


word32 _memcpy(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000D61FC
//      fn000D7A7D
//      fn000DD5D8
//      fn000E3E00
//      fn000E5B60
//      fn0011B01B
//      fn0011B742
//      fn0011B96D
//      fn0011BC43
//      fn0011BDC1
//      fn0011C22A
//      fn0011C367
//      _memmove
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
_memcpy_entry:
	arg2_109 = arg2
	arg0_110 = arg0
	arg1_111 = arg1
l0011F048:
	branch arg2 < 0x1000<32> l0011F05C
l0011F052:
	return _emscripten_memcpy_big(arg0, arg1, arg2)
l0011F05C:
	branch (arg0 & 3<32>) != (arg1 & 3<32>) l0011F0E3
l0011F06D:
l0011F06F:
	branch (arg0_110 & 3<32>) != 0<32> l0011F07C
l0011F079:
	goto l0011F0AB
l0011F07C:
	branch arg2_109 != 0<32> l0011F089
l0011F085:
	return arg0
l0011F089:
	Mem35[arg0_110:byte] = Mem31[arg1_111:int8]
	arg0_110 = arg0_110 + 1<32>
	arg1_111 = arg1_111 + 1<32>
	arg2_109 = arg2_109 - 1<32>
l0011F0A8:
	goto l0011F06F
l0011F0AB:
l0011F0AF:
	branch arg2_109 >= 4<32> != 0<32> l0011F0BC
l0011F0B9:
	goto l0011F0E0
l0011F0BC:
	Mem61[arg0_110:word32] = Mem59[arg1_111:word32]
	arg0_110 = arg0_110 + 4<32>
	arg1_111 = arg1_111 + 4<32>
	arg2_109 = arg2_109 - 4<32>
l0011F0DD:
	goto l0011F0AF
l0011F0E0:
l0011F0E3:
l0011F0E5:
	branch arg2_109 > 0<32> != 0<32> l0011F0F2
l0011F0EF:
	goto l0011F116
l0011F0F2:
	Mem87[arg0_110:byte] = Mem83[arg1_111:int8]
	arg0_110 = arg0_110 + 1<32>
	arg1_111 = arg1_111 + 1<32>
	arg2_109 = arg2_109 - 1<32>
l0011F113:
	goto l0011F0E5
l0011F116:
	return arg0
_memcpy_exit:


word32 _sbrk(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      _malloc
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
_sbrk_entry:
l0011F11D:
	v7_7 = arg0 + 0xF<32> & 0xFFFFFFF0<32>
	v7_11 = Mem0[Mem0[0x00140038<p32>:word32]:word32]
	v7_15 = v7_11 + v7_7
	branch !(v7_7 > 0<32> & v7_15 < v7_11 | v7_15 < 0<32>) l0011F155
l0011F14A:
	abortOnCannotGrowMemory()
	___setErrNo(0xC<32>)
	return 0xFFFFFFFF<32>
l0011F155:
	Mem30[Mem0[0x00140038<p32>:word32]:word32] = v7_15
	branch v7_15 <= getTotalMemory() l0011F17E
l0011F167:
	branch enlargeMemory() != 0<32> l0011F17D
l0011F16E:
	___setErrNo(0xC<32>)
	Mem44[Mem30[0x00140038<p32>:word32]:word32] = v7_11
	return 0xFFFFFFFF<32>
l0011F17D:
l0011F17E:
	return v7_11
_sbrk_exit:


word32 _memmove(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011BB2C
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
_memmove_entry:
	arg2_11 = arg2
l0011F183:
	branch !(arg1 < arg0 & arg0 < arg1 + arg2) l0011F1E1
l0011F195:
	arg1_25 = arg1 + arg2
	arg0_29 = arg0 + arg2
l0011F1A9:
	branch arg2_11 > 0<32> != 0<32> l0011F1B6
l0011F1B3:
	goto l0011F1DA
l0011F1B6:
	v4_38 = arg0_29 - 1<32>
	v4_43 = arg1_25 - 1<32>
	Mem55[v4_38:byte] = Mem51[v4_43:int8]
	arg0_29 = v4_38
	arg1_25 = v4_43
	arg2_11 = arg2_11 - 1<32>
l0011F1D7:
	goto l0011F1A9
l0011F1DA:
	goto l0011F1EB
l0011F1E1:
	_memcpy(arg0, arg1, arg2)
l0011F1EB:
	return <invalid>
_memmove_exit:


word32 _pthread_mutex_unlock(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0011B49F
//      fn0011F4CB
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
_pthread_mutex_unlock_entry:
l0011F1F1:
	return <invalid>
_pthread_mutex_unlock_exit:


word32 _pthread_self()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      ___errno_location
//      fn000DB419
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
_pthread_self_entry:
l0011F1F5:
	return <invalid>
_pthread_self_exit:


word32 dynCall_iiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiiiii_entry:
l0011F1F9:
	return <invalid>
dynCall_iiiiiiii_exit:


void dynCall_viiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viiiii_entry:
l0011F215:
	return
dynCall_viiiii_exit:


word32 dynCall_iiiiiid(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, real64 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiiid_entry:
l0011F22D:
	return <invalid>
dynCall_iiiiiid_exit:


void dynCall_vi(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_vi_entry:
l0011F248:
	return
dynCall_vi_exit:


void dynCall_vii(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_vii_entry:
l0011F258:
	return
dynCall_vii_exit:


word32 dynCall_iiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiiii_entry:
l0011F26A:
	return <invalid>
dynCall_iiiiiii_exit:


word32 dynCall_ii(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_ii_entry:
l0011F285:
	return <invalid>
dynCall_ii_exit:


void fn0011F296(word32 arg0, word32 arg1, word32 arg2, word64 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      dynCall_viijii
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F296_entry:
l0011F296:
	return
fn0011F296_exit:


word32 dynCall_iiiiiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiiiiiiiii_entry:
l0011F2AD:
	return <invalid>
dynCall_iiiiiiiiiiii_exit:


word32 dynCall_iiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiii_entry:
l0011F2D2:
	return <invalid>
dynCall_iiii_exit:


void dynCall_viiiiiiiiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14, word32 arg15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viiiiiiiiiiiiiii_entry:
l0011F2E7:
	return
dynCall_viiiiiiiiiiiiiii_exit:


void dynCall_viiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viiiiii_entry:
l0011F313:
	return
dynCall_viiiiii_exit:


real32 dynCall_fiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_fiii_entry:
l0011F32D:
	return <invalid>
dynCall_fiii_exit:


void dynCall_viiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viiiiiii_entry:
l0011F342:
	return
dynCall_viiiiiii_exit:


void dynCall_viiiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viiiiiiiiii_entry:
l0011F35E:
	return
dynCall_viiiiiiiiii_exit:


word32 dynCall_iii(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iii_entry:
l0011F380:
	return <invalid>
dynCall_iii_exit:


word32 dynCall_iiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiii_entry:
l0011F393:
	return <invalid>
dynCall_iiiiii_exit:


real64 dynCall_diii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_diii_entry:
l0011F3AC:
	return <invalid>
dynCall_diii_exit:


word32 dynCall_i(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_i_entry:
l0011F3C1:
	return <invalid>
dynCall_i_exit:


word64 fn0011F3D1(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      dynCall_jiiii
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F3D1_entry:
l0011F3D1:
	return <invalid>
fn0011F3D1_exit:


word32 dynCall_iiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiii_entry:
l0011F3E9:
	return <invalid>
dynCall_iiiii_exit:


word32 fn0011F401(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word64 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      dynCall_iiiiij
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F401_entry:
l0011F401:
	return <invalid>
fn0011F401_exit:


void dynCall_viii(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viii_entry:
l0011F41B:
	return
dynCall_viii_exit:


void dynCall_v(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_v_entry:
l0011F430:
	return
dynCall_v_exit:


word32 dynCall_iiiiiiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiiiiii_entry:
l0011F43F:
	return <invalid>
dynCall_iiiiiiiii_exit:


word32 dynCall_iiiiid(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiid_entry:
l0011F45F:
	return <invalid>
dynCall_iiiiid_exit:


void dynCall_viiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
dynCall_viiii_entry:
l0011F479:
	return
dynCall_viiii_exit:


word32 fn0011F490(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F490_entry:
l0011F490:
	nullFunc_iiiiiiii(0<32>)
	return <invalid>
fn0011F490_exit:


void fn0011F49B(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F49B_entry:
l0011F49B:
	nullFunc_viiiii(1<32>)
	return
fn0011F49B_exit:


word32 fn0011F4A0(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, real64 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4A0_entry:
l0011F4A0:
	nullFunc_iiiiiid(2<32>)
	return <invalid>
fn0011F4A0_exit:


void fn0011F4AB(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F4AB_entry:
l0011F4AB:
	nullFunc_vi(3<32>)
	return
fn0011F4AB_exit:


void fn0011F4B0(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F4B0_entry:
l0011F4B0:
	nullFunc_vii(4<32>)
	return
fn0011F4B0_exit:


word32 fn0011F4B5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4B5_entry:
l0011F4B5:
	nullFunc_iiiiiii(5<32>)
	return <invalid>
fn0011F4B5_exit:


word32 fn0011F4C0(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4C0_entry:
l0011F4C0:
	nullFunc_ii(6<32>)
	return <invalid>
fn0011F4C0_exit:


word32 fn0011F4CB(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4CB_entry:
l0011F4CB:
	return <invalid>
fn0011F4CB_exit:


word32 fn0011F4D2(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4D2_entry:
l0011F4D2:
	return <invalid>
fn0011F4D2_exit:


word32 fn0011F4D9(word32 arg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4D9_entry:
l0011F4D9:
	return <invalid>
fn0011F4D9_exit:


void fn0011F4E0(word32 arg0, word32 arg1, word64 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F4E0_entry:
l0011F4E0:
	nullFunc_viijii(7<32>)
	return
fn0011F4E0_exit:


word32 fn0011F4E5(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4E5_entry:
l0011F4E5:
	nullFunc_iiiiiiiiiiii(8<32>)
	return <invalid>
fn0011F4E5_exit:


word32 fn0011F4F0(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F4F0_entry:
l0011F4F0:
	nullFunc_iiii(9<32>)
	return <invalid>
fn0011F4F0_exit:


void fn0011F4FB(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9, word32 arg10, word32 arg11, word32 arg12, word32 arg13, word32 arg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F4FB_entry:
l0011F4FB:
	nullFunc_viiiiiiiiiiiiiii(0xA<32>)
	return
fn0011F4FB_exit:


void fn0011F500(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F500_entry:
l0011F500:
	nullFunc_viiiiii(0xB<32>)
	return
fn0011F500_exit:


real32 fn0011F505(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F505_entry:
l0011F505:
	nullFunc_fiii(0xC<32>)
	return <invalid>
fn0011F505_exit:


void fn0011F513(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F513_entry:
l0011F513:
	nullFunc_viiiiiii(0xD<32>)
	return
fn0011F513_exit:


void fn0011F518(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7, word32 arg8, word32 arg9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F518_entry:
l0011F518:
	nullFunc_viiiiiiiiii(0xE<32>)
	return
fn0011F518_exit:


word32 fn0011F51D(word32 arg0, word32 arg1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F51D_entry:
l0011F51D:
	nullFunc_iii(0xF<32>)
	return <invalid>
fn0011F51D_exit:


word32 fn0011F528(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F528_entry:
l0011F528:
	nullFunc_iiiiii(0x10<32>)
	return <invalid>
fn0011F528_exit:


real64 fn0011F533(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F533_entry:
l0011F533:
	nullFunc_diii(0x11<32>)
	return <invalid>
fn0011F533_exit:


word32 fn0011F545()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F545_entry:
l0011F545:
	nullFunc_i(0x12<32>)
	return <invalid>
fn0011F545_exit:


word64 fn0011F550(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F550_entry:
l0011F550:
	nullFunc_jiiii(0x13<32>)
	return <invalid>
fn0011F550_exit:


word32 fn0011F55B(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F55B_entry:
l0011F55B:
	nullFunc_iiiii(0x14<32>)
	return <invalid>
fn0011F55B_exit:


word32 fn0011F566(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word64 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F566_entry:
l0011F566:
	nullFunc_iiiiij(0x15<32>)
	return <invalid>
fn0011F566_exit:


void fn0011F571(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F571_entry:
l0011F571:
	nullFunc_viii(0x16<32>)
	return
fn0011F571_exit:


void fn0011F576(word32 arg0, word32 arg1, word32 arg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed:
// Preserved:
fn0011F576_entry:
l0011F576:
	___cxa_throw(arg0, arg1, arg2)
	return
fn0011F576_exit:


void fn0011F57F()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F57F_entry:
l0011F57F:
	nullFunc_v(0x17<32>)
	return
fn0011F57F_exit:


void fn0011F584()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F584_entry:
l0011F584:
	___cxa_end_catch()
	return
fn0011F584_exit:


void fn0011F587()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F587_entry:
l0011F587:
	___cxa_rethrow()
	return
fn0011F587_exit:


word32 fn0011F58A(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6, word32 arg7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F58A_entry:
l0011F58A:
	nullFunc_iiiiiiiii(0x18<32>)
	return <invalid>
fn0011F58A_exit:


word32 fn0011F595(word32 arg0, word32 arg1, word32 arg2, word32 arg3, real64 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F595_entry:
l0011F595:
	nullFunc_iiiiid(0x19<32>)
	return <invalid>
fn0011F595_exit:


void fn0011F5A0(word32 arg0, word32 arg1, word32 arg2, word32 arg3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
fn0011F5A0_entry:
l0011F5A0:
	nullFunc_viiii(0x1A<32>)
	return
fn0011F5A0_exit:


void dynCall_viijii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed:
// Preserved:
dynCall_viijii_entry:
l0011F5A5:
	fn0011F296(arg0, arg1, arg2, CONVERT(arg3, word32, uint64) | CONVERT(arg4, word32, uint64) << 0x20<64>, arg5, arg6)
	return
dynCall_viijii_exit:


word32 dynCall_jiiii(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_jiiii_entry:
l0011F5BD:
	v9_16 = fn0011F3D1(arg0, arg1, arg2, arg3, arg4)
	Mem22[0x00140094<p32>:word32] = v9_16 >>u 0x20<64>
l0011F5D9:
	return <invalid>
dynCall_jiiii_exit:


word32 dynCall_iiiiij(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4, word32 arg5, word32 arg6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
dynCall_iiiiij_entry:
l0011F5DB:
	return <invalid>
dynCall_iiiiij_exit:


word64 fn0011F5F3(word32 arg0, word32 arg1, word32 arg2, word32 arg3, word32 arg4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000ED5B7
//      fn000EFEEF
//      fn000F539A
//      fn000F78C3
// MayUse:  Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: stack
// Preserved:
fn0011F5F3_entry:
l0011F5F3:
	invoke_jiiii(arg0, arg1, arg2, arg3, arg4)
	return <invalid>
fn0011F5F3_exit:


