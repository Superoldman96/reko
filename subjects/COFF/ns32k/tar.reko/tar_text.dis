void _entry(word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 sb)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  fp:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sb:[0..31] sp:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
_entry_entry:
l000000EC:
	Mem7[sp - 8<i32>:word32] = Mem0[sp:word32]
	Mem9[sp - 4<i32>:word32] = sp + 4<i32>
	r0_10 = sp + 4<i32>
l000000F9:
	r0_10 = r0_46 + 4<i32>
	r0_46 = r0_10
	branch Mem9[r0_46:word32] == 0<i32> l000000F9
l00000100:
	branch r0_10 <u Mem9[Mem9[sp - 4<i32>:ptr32]:word32] l00000108
l00000106:
	r0_10 = r0_10 + -4<i32>
l00000108:
	Mem23[sp:word32] = r0_10
	Mem24[0x000115D4<p32>:word32] = r0_10
	fn0000012C(r2, r4, r5, r6, r7, fp, sp - 8<i32>, sb)
_entry_exit:


void fn0000012C(word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 sb)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      _entry
// MayUse:  fp:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sb:[0..31] sp:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000012C_entry:
l0000012C:
	Mem6[sp - 4<i32>:word32] = fp
	fp_129 = sp - 4<i32>
	sp_141 = sp - 0xC<32>
	branch Mem6[sp + 4<i32>:word32] >= 2<i32> l0000013A
l00000134:
	fn00000776(r4, r5, r6, r7, sp - 4<i32>, sp - 0xC<32>)
l0000013A:
	Mem16[0x00014C68<p32>:int32] = 0<i32>
	Mem18[0x00014C6C<p32>:word32] = 0x115F0<32>
	Mem20[0x00014C70<p32>:word32] = 0x115FC<32>
	Mem26[Mem20[sp + 8<i32>:word32] + (Mem20[sp + 4<i32>:word32] << 2<8>):int32] = 0<i32>
	Mem28[sp + 8<i32>:word32] = Mem26[sp + 8<i32>:word32] + 4<i32>
	r0_29 = Mem28[sp + 8<i32>:word32]
	Mem31[sp + 8<i32>:word32] = Mem28[sp + 8<i32>:word32] + 4<i32>
	Mem34[sp - 8<i32>:word32] = Mem31[r0_29:word32]
	Mem36[sp - 12<i32>:int32] = 0<i32>
	branch Mem36[Mem36[sp - 8<i32>:ptr32]:byte] == 0<8> l0000045D
l0000017D:
	r0_42 = CONVERT(Mem41[Mem41[fp_129 - 4<i32>:ptr32]:byte], byte, int32)
	branch r0_42 == 0x6D<32> l000001BB
l0000018A:
	branch r0_42 > 0x6D<32> l00000317
l0000018D:
	branch r0_42 == 0x36<32> l00000217
l00000196:
	branch r0_42 > 0x36<32> l000001F6
l00000199:
	branch r0_42 == 0x32<32> l00000217
l000001A2:
	branch r0_42 > 0x32<32> l000001D6
l000001A4:
	branch r0_42 == 0x30<32> l00000217
l000001AD:
	branch r0_42 > 0x30<32> l000001CA
l000001AF:
	branch r0_42 == 0x2D<32> l0000044D
l000001B8:
	goto l0000042D
l000001BB:
	branch Mem41[fp_129 - 8<i32>:word32] == 1<i32> l0000044D
l000001C1:
	Mem48[0x00014C40<p32>:word32] = Mem41[0x00014C40<p32>:word32] + 1<i32>
	goto l0000044D
l000001CA:
	branch r0_42 == 0x31<32> l00000217
l000001D3:
	goto l0000042D
l000001D6:
	branch r0_42 == 0x34<32> l00000217
l000001DE:
	branch r0_42 > 0x34<32> l000001EB
l000001E0:
	branch r0_42 == 0x33<32> l00000217
l000001E8:
	goto l0000042D
l000001EB:
	branch r0_42 == 0x35<32> l00000217
l000001F3:
	goto l0000042D
l000001F6:
	branch r0_42 == 0x66<32> l00000241
l000001FF:
	branch r0_42 > 0x66<32> l000002D8
l00000202:
	branch r0_42 == 0x62<32> l00000260
l0000020B:
	branch r0_42 > 0x62<32> l000002C0
l0000020E:
	branch r0_42 == 0x37<32> l0000042D
l00000217:
	Mem337[0x000115F8<p32>:byte] = Mem41[Mem41[fp_129 - 4<i32>:ptr32]:byte]
	Mem339[0x00011603<p32>:byte] = Mem337[Mem337[fp_129 - 4<i32>:ptr32]:byte]
	Mem341[fp_129 - 8<i32>:int32] = 2<i32>
	Mem343[0x00014C6C<p32>:word32] = 0x115F0<32>
	Mem345[0x00014C70<p32>:word32] = 0x115FC<32>
	goto l0000044D
l00000241:
	r0_185 = Mem41[fp_129 + 12<i32>:word32]
	Mem187[fp_129 + 12<i32>:word32] = Mem41[fp_129 + 12<i32>:word32] + 4<i32>
	Mem190[0x00014C6C<p32>:word32] = Mem187[r0_185:word32]
	branch Mem190[0x000115DC<p32>:word32] == 1<i32> l0000044D
l00000257:
	Mem194[0x000115DC<p32>:int32] = 0<i32>
	goto l0000044D
l00000260:
	r0_216 = Mem41[fp_129 + 12<i32>:word32]
	Mem218[fp_129 + 12<i32>:word32] = Mem41[fp_129 + 12<i32>:word32] + 4<i32>
	sp_220 = sp_141 - 4<i32>
	Mem222[sp_220:word32] = Mem218[r0_216:word32]
	r0_224 = fn0000247C(r4, r5, r6, r7, fp_129, sp_220, out r4, out r5, out r6, out r7, out fp_129)
	Mem236[0x000115DC<p32>:word32] = r0_224
	sp_141 = sp_220 - 252<i32>
	branch r0_224 > 0x14<32> l00000288
l00000280:
	branch Mem236[0x000115DC<p32>:word32] > 0<i32> l000002AB
l00000288:
	Mem243[sp_220 - 252<i32>:ptr32] = 0x00000014<p32>
	Mem246[sp_220 - 256<i32>:word32] = 0x11743<32>
	Mem249[sp_220 - 260<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_129, sp_220 - 260<i32>, out r4_961, out r5_259, out r6_260, out r7_261, out fp_255, out sp_262)
	Mem270[sp_262 - 248<i32>:int32] = 1<i32>
	fn00001772(r5_259, r6_260, r7_261, fp_255, sp_262 - 248<i32>)
l000002AB:
	branch Mem236[0x00014C28<p32>:word32] == 0<i32> l0000044D
l000002B4:
	branch Mem236[0x00014C3C<p32>:word32] == 0<i32> l0000044D
l000002BD:
	goto l000003C7
l000002C0:
	branch r0_42 == 0x63<32> l0000042D
l000002C9:
	Mem313[0x00014C3C<p32>:word32] = Mem41[0x00014C3C<p32>:word32] + 1<i32>
	Mem315[0x00014C28<p32>:word32] = Mem313[0x00014C28<p32>:word32] + 1<i32>
	goto l0000044D
l000002D8:
	branch r0_42 == 0x6C<32> l000002F4
l000002E0:
	branch r0_42 > 0x6C<32> l0000042D
l000002E3:
	branch r0_42 == 0x68<32> l0000042D
l000002EC:
	branch Mem41[fp_129 - 8<i32>:word32] == 1<i32> l0000042D
l000002F2:
	goto l000002F9
l000002F4:
	branch Mem41[fp_129 - 8<i32>:word32] == 1<i32> l0000030E
l000002F9:
	Mem211[0x000115F9<p32>:byte] = Mem41[Mem41[fp_129 - 4<i32>:ptr32]:byte]
	Mem213[0x00014C6C<p32>:word32] = 0x115F0<32>
	goto l0000044D
l0000030E:
	Mem201[0x00014C5C<p32>:word32] = Mem41[0x00014C5C<p32>:word32] + 1<i32>
	goto l0000044D
l00000317:
	branch r0_42 == 0x75<32> l00000340
l0000031F:
	branch r0_42 > 0x75<32> l000003FB
l00000322:
	branch r0_42 == 0x72<32> l000003AF
l0000032B:
	branch r0_42 > 0x72<32> l000003EA
l0000032E:
	branch r0_42 == 0x6F<32> l0000042D
l00000337:
	Mem178[0x00014C44<p32>:word32] = Mem41[0x00014C44<p32>:word32] + 1<i32>
	goto l0000044D
l00000340:
	sp_54 = sp_141 - 4<i32>
	Mem56[sp_54:word32] = 0x115E0<32>
	r6_62 = fn000037C0(r6, r7, fp_129, sp_54, out r7_63, out fp_59, out sp_64)
	Mem73[sp_64 - 256<i32>:word32] = 0x116D4<32>
	Mem76[sp_64 - 260<i32>:word32] = 0x115E0<32>
	Mem94[0x00014C68<p32>:word32] = fn00003650(r4, r5, r6_62, r7_63, fp_59, sp_64 - 260<i32>, sb, out r4_83, out r5_84, out r6_85, out r7_86, out fp_80, out sp_87)
	branch Mem94[0x00014C68<p32>:word32] == 0<i32> l0000039A
l00000374:
	Mem100[sp_87 - 252<i32>:word32] = 0x115E0<32>
	Mem103[sp_87 - 256<i32>:word32] = 0x116D6<32>
	Mem106[sp_87 - 260<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_83, r5_84, r6_85, r7_86, fp_80, sp_87 - 260<i32>, out r4_963, out r5_111, out r6_112, out r7_113, out fp_107, out sp_114)
	Mem122[sp_114 - 248<i32>:int32] = 1<i32>
	fn00001772(r5_111, r6_112, r7_113, fp_107, sp_114 - 248<i32>)
l0000039A:
	Mem125[sp_87 - 252<i32>:word32] = 0x116FE<32>
	Mem128[sp_87 - 256<i32>:word32] = Mem125[0x00014C68<p32>:word32]
	fn000025E4(r4_83, r5_84, r6_85, r7_86, fp_80, sp_87 - 256<i32>, out r4, out r5, out r6, out r7, out fp_129, out sp_136)
	sp_141 = sp_136 - 248<i32>
l000003AF:
	Mem163[0x00014C28<p32>:word32] = Mem161[0x00014C28<p32>:word32] + 1<i32>
	branch Mem163[0x000115DC<p32>:word32] == 1<i32> l0000044D
l000003BE:
	branch Mem163[0x00014C3C<p32>:word32] == 0<i32> l0000044D
l000003C7:
	sp_277 = sp_141 - 4<i32>
	Mem279[sp_277:word32] = 0x11717<32>
	Mem282[sp_277 - 4<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_129, sp_277 - 4<i32>, out r4_962, out r5_297, out r6_298, out r7_299, out fp_293, out sp_300)
	Mem308[sp_300 - 252<i32>:int32] = 1<i32>
	fn00001772(r5_297, r6_298, r7_299, fp_293, sp_300 - 252<i32>)
l000003EA:
	branch r0_42 == 0x74<32> l0000042D
l000003F2:
	Mem173[0x00014C34<p32>:word32] = Mem41[0x00014C34<p32>:word32] + 1<i32>
	goto l0000044D
l000003FB:
	branch r0_42 == 0x77<32> l00000415
l00000403:
	branch r0_42 > 0x77<32> l0000041D
l00000405:
	branch r0_42 == 0x76<32> l0000042D
l0000040D:
	Mem157[0x00014C30<p32>:word32] = Mem41[0x00014C30<p32>:word32] + 1<i32>
	goto l0000044D
l00000415:
	Mem146[0x00014C50<p32>:word32] = Mem41[0x00014C50<p32>:word32] + 1<i32>
	goto l0000044D
l0000041D:
	branch r0_42 == 0x78<32> l0000042D
l00000425:
	Mem152[0x00014C2C<p32>:word32] = Mem41[0x00014C2C<p32>:word32] + 1<i32>
	goto l0000044D
l0000042D:
	sp_349 = sp_141 - 4<i32>
	Mem353[sp_349:int32] = CONVERT(Mem41[Mem41[fp_129 - 4<i32>:ptr32]:byte], byte, int32)
	Mem356[sp_349 - 4<i32>:word32] = 0x11760<32>
	Mem359[sp_349 - 8<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_129, sp_349 - 8<i32>, out r4_367, out r5_368, out r6_369, out r7_370, out fp_364, out sp_371)
	fn00000776(r4_367, r5_368, r6_369, r7_370, fp_364, sp_371 - 244<i32>)
l0000044D:
	Mem380[fp_129 - 4<i32>:word32] = Mem378[fp_129 - 4<i32>:word32] + 1<i32>
	Mem382[fp_129 - 8<i32>:word32] = Mem380[fp_129 - 8<i32>:word32] + -1<i32>
	branch Mem382[Mem382[fp_129 - 4<i32>:ptr32]:byte] == 0<8> l0000017D
l0000045D:
	branch Mem387[0x00014C28<p32>:word32] == 0<i32> l00000600
l00000466:
	branch Mem387[0x00014C3C<p32>:word32] == 0<i32> l00000487
l0000046E:
	branch Mem387[0x00014C68<p32>:word32] == 0<i32> l00000487
l00000476:
	fn00000776(r4, r5, r6, r7, fp_129, sp_141)
l00000487:
	sp_631 = sp_141 - 4<i32>
	Mem633[sp_631:int32] = 1<i32>
	Mem636[sp_631 - 4<i32>:int32] = 2<i32>
	sp_652 = sp_648 - 248<i32>
	branch fn00003514(r2, r5, r6, r7, fp_129, sp_631 - 4<i32>, out r5_645, out r6_646, out r7_647, out fp_642, out sp_648) == 1<i32> l000004A9
l00000498:
	Mem657[sp_648 - 252<i32>:word32] = 0x14C9<32>
	Mem660[sp_648 - 256<i32>:int32] = 2<i32>
	fn00003514(r2, r5_645, r6_646, r7_647, fp_642, sp_648 - 256<i32>, out r5_645, out r6_646, out r7_647, out fp_642, out sp_667)
	sp_652 = sp_667 - 248<i32>
l000004A9:
	sp_673 = sp_652 - 4<i32>
	Mem675[sp_673:int32] = 1<i32>
	Mem678[sp_673 - 4<i32>:int32] = 1<i32>
	sp_694 = sp_690 - 248<i32>
	branch fn00003514(r2, r5_645, r6_646, r7_647, fp_642, sp_673 - 4<i32>, out r5_687, out r6_688, out r7_689, out fp_684, out sp_690) == 1<i32> l000004CB
l000004BA:
	Mem699[sp_690 - 252<i32>:word32] = 0x14FD<32>
	Mem702[sp_690 - 256<i32>:int32] = 1<i32>
	fn00003514(r2, r5_687, r6_688, r7_689, fp_684, sp_690 - 256<i32>, out r5_687, out r6_688, out r7_689, out fp_684, out sp_709)
	sp_694 = sp_709 - 248<i32>
l000004CB:
	sp_715 = sp_694 - 4<i32>
	Mem717[sp_715:int32] = 1<i32>
	Mem720[sp_715 - 4<i32>:int32] = 3<i32>
	sp_736 = sp_732 - 248<i32>
	branch fn00003514(r2, r5_687, r6_688, r7_689, fp_684, sp_715 - 4<i32>, out r5_729, out r6_730, out r7_731, out fp_726, out sp_732) == 1<i32> l000004ED
l000004DC:
	Mem741[sp_732 - 252<i32>:word32] = 0x14E3<32>
	Mem744[sp_732 - 256<i32>:int32] = 3<i32>
	fn00003514(r2, r5_729, r6_730, r7_731, fp_726, sp_732 - 256<i32>, out r5_729, out r6_730, out r7_731, out fp_726, out sp_751)
	sp_736 = sp_751 - 248<i32>
l000004ED:
	sp_757 = sp_736 - 4<i32>
	Mem759[sp_757:word32] = 0x11779<32>
	Mem762[sp_757 - 4<i32>:word32] = Mem759[0x00014C6C<p32>:word32]
	branch fn0000321C(r6_730, r7_731, fp_726, sp_757 - 4<i32>, out r6_769, out r7_770, out fp_766) == 0<i32> l00000549
l00000507:
	branch Mem762[0x00014C3C<p32>:word32] == 0<i32> l0000052F
l0000050F:
	Mem860[sp_757 - 256<i32>:word32] = 0x1177B<32>
	Mem863[sp_757 - 260<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5_729, r6_769, r7_770, fp_766, sp_757 - 260<i32>, out r4_958, out r5_868, out r6_869, out r7_870, out fp_864, out sp_871)
	Mem879[sp_871 - 252<i32>:int32] = 1<i32>
	fn00001772(r5_868, r6_869, r7_870, fp_864, sp_871 - 252<i32>)
l0000052F:
	Mem882[sp_757 - 256<i32>:int32] = 1<i32>
	r0_785 = fn000022A0()
	Mem886[0x00014C38<p32>:word32] = r0_785
	Mem888[0x000115DC<p32>:int32] = 1<i32>
	sp_787 = sp_757 - 508<i32>
	goto l000005DE
l00000549:
	Mem781[sp_757 - 256<i32>:int32] = 2<i32>
	Mem784[sp_757 - 260<i32>:word32] = Mem781[0x00014C6C<p32>:word32]
	r0_785 = fn000038AC()
	Mem788[0x00014C38<p32>:word32] = r0_785
	sp_787 = sp_757 - 508<i32>
	branch Mem788[0x00014C38<p32>:word32] >= 0<i32> l000005DE
l0000056B:
	Mem794[sp_757 - 512<i32>:int32] = 2<i32>
	Mem797[sp_757 - 516<i32>:word32] = Mem794[0x00014C70<p32>:word32]
	r0_785 = fn000038AC()
	Mem801[0x00014C38<p32>:word32] = r0_785
	sp_787 = sp_757 - 764<i32>
	branch Mem801[0x00014C38<p32>:word32] >= 0<i32> l000005DE
l0000058D:
	branch Mem801[0x00014C3C<p32>:word32] == 0<i32> l000005B8
l00000595:
	Mem808[sp_757 - 764<i32>:ptr32] = 0x000001B6<p32>
	Mem811[sp_757 - 768<i32>:word32] = Mem808[0x00014C6C<p32>:word32]
	r0_785 = fn00002550()
	Mem815[0x00014C38<p32>:word32] = r0_785
	sp_787 = sp_757 - 1016<i32>
	branch Mem815[0x00014C38<p32>:word32] >= 0<i32> l000005DE
l000005B8:
	sp_820 = sp_787 - 4<i32>
	Mem823[sp_820:word32] = Mem821[0x00014C6C<p32>:word32]
	Mem826[sp_820 - 4<i32>:word32] = 0x117A5<32>
	Mem829[sp_820 - 8<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5_729, r6_769, r7_770, fp_766, sp_820 - 8<i32>, out r4_960, out r5_844, out r6_845, out r7_846, out fp_840, out sp_847)
	Mem855[sp_847 - 248<i32>:int32] = 1<i32>
	fn00001772(r5_844, r6_845, r7_846, fp_840, sp_847 - 248<i32>)
l000005DE:
	branch Mem889[0x00014C3C<p32>:word32] == 0<i32> l000005F4
l000005E6:
	branch Mem889[0x000115DC<p32>:word32] == 0<i32> l000005F4
l000005EE:
	Mem895[0x000115DC<p32>:int32] = 1<i32>
l000005F4:
	sp_898 = sp_787 - 4<i32>
	Mem903[sp_898:word32] = Mem901[fp_766 + 12<i32>:word32]
	r5_513 = fn0000079D(r0_785, r2, r4, r5_729, r6_769, r7_770, fp_766, sp_898, sb, out r6_514, out r7_515, out fp_509, out sp_620)
	goto l000006AE
l00000600:
	branch Mem387[0x00014C2C<p32>:word32] == 0<i32> l000006E7
l00000609:
	sp_522 = sp_141 - 4<i32>
	Mem524[sp_522:word32] = 0x117BA<32>
	Mem527[sp_522 - 4<i32>:word32] = Mem524[0x00014C6C<p32>:word32]
	branch fn0000321C(r6, r7, fp_129, sp_522 - 4<i32>, out r6_531, out r7_532, out fp_528) == 0<i32> l0000063C
l00000622:
	Mem594[sp_522 - 256<i32>:int32] = 0<i32>
	r0_547 = fn000022A0()
	Mem598[0x00014C38<p32>:word32] = r0_547
	Mem600[0x000115DC<p32>:int32] = 1<i32>
	sp_549 = sp_522 - 508<i32>
	goto l000006A5
l0000063C:
	Mem543[sp_522 - 256<i32>:int32] = 0<i32>
	Mem546[sp_522 - 260<i32>:word32] = Mem543[0x00014C6C<p32>:word32]
	r0_547 = fn000038AC()
	Mem550[0x00014C38<p32>:word32] = r0_547
	sp_549 = sp_522 - 508<i32>
	branch Mem550[0x00014C38<p32>:word32] >= 0<i32> l000006A5
l0000065E:
	Mem556[sp_522 - 512<i32>:int32] = 0<i32>
	Mem559[sp_522 - 516<i32>:word32] = Mem556[0x00014C70<p32>:word32]
	r0_547 = fn000038AC()
	Mem563[0x00014C38<p32>:word32] = r0_547
	sp_549 = sp_522 - 764<i32>
	branch Mem563[0x00014C38<p32>:word32] >= 0<i32> l000006A5
l0000067F:
	Mem569[sp_522 - 768<i32>:word32] = Mem563[0x00014C6C<p32>:word32]
	Mem572[sp_522 - 772<i32>:word32] = 0x117BC<32>
	Mem575[sp_522 - 776<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6_531, r7_532, fp_528, sp_522 - 776<i32>, out r4_957, out r5_580, out r6_581, out r7_582, out fp_576, out sp_583)
	Mem591[sp_583 - 248<i32>:int32] = 1<i32>
	fn00001772(r5_580, r6_581, r7_582, fp_576, sp_583 - 248<i32>)
l000006A5:
	sp_602 = sp_549 - 4<i32>
	Mem606[sp_602:word32] = Mem604[fp_528 + 12<i32>:word32]
	r5_513 = fn00000FF5(r0_547, r2, r4, r5, r6_531, r7_532, fp_528, sp_602, out r6_514, out r7_515, out fp_509, out sp_620)
l000006AE:
	sp_516 = sp_620 - 252<i32>
	goto l000006F5
l000006B4:
	sp_398 = sp_141 - 4<i32>
	Mem400[sp_398:word32] = 0x117D1<32>
	Mem403[sp_398 - 4<i32>:word32] = Mem400[0x00014C6C<p32>:word32]
	branch fn0000321C(r6, r7, fp_129, sp_398 - 4<i32>, out r6_416, out r7_417, out fp_413) == 0<i32> l00000704
l000006CD:
	Mem487[sp_398 - 256<i32>:int32] = 0<i32>
	r0_432 = fn000022A0()
	Mem491[0x00014C38<p32>:word32] = r0_432
	Mem493[0x000115DC<p32>:int32] = 1<i32>
	sp_434 = sp_398 - 508<i32>
	goto l0000076D
l000006E7:
	branch Mem387[0x00014C34<p32>:word32] == 0<i32> l000006B4
l000006EF:
	fn00000776(r4, r5, r6, r7, fp_129, sp_141)
l000006F5:
	sp_946 = sp_516 - 4<i32>
	Mem948[sp_946:int32] = 0<i32>
	fn00001772(r5_513, r6_514, r7_515, fp_509, sp_946)
l00000704:
	Mem428[sp_398 - 256<i32>:int32] = 0<i32>
	Mem431[sp_398 - 260<i32>:word32] = Mem428[0x00014C6C<p32>:word32]
	r0_432 = fn000038AC()
	Mem435[0x00014C38<p32>:word32] = r0_432
	sp_434 = sp_398 - 508<i32>
	branch Mem435[0x00014C38<p32>:word32] >= 0<i32> l0000076D
l00000726:
	Mem441[sp_398 - 512<i32>:int32] = 0<i32>
	Mem444[sp_398 - 516<i32>:word32] = Mem441[0x00014C70<p32>:word32]
	r0_432 = fn000038AC()
	Mem448[0x00014C38<p32>:word32] = r0_432
	sp_434 = sp_398 - 764<i32>
	branch Mem448[0x00014C38<p32>:word32] >= 0<i32> l0000076D
l00000747:
	Mem454[sp_398 - 768<i32>:word32] = Mem448[0x00014C6C<p32>:word32]
	Mem457[sp_398 - 772<i32>:word32] = 0x117D3<32>
	Mem460[sp_398 - 776<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6_416, r7_417, fp_413, sp_398 - 776<i32>, out r4_959, out r5_473, out r6_474, out r7_475, out fp_469, out sp_476)
	Mem484[sp_476 - 248<i32>:int32] = 1<i32>
	fn00001772(r5_473, r6_474, r7_475, fp_469, sp_476 - 248<i32>)
l0000076D:
	r5_513 = fn0000127A(r0_432, r2, r4, r5, r6_416, r7_417, fp_413, sp_434, out r6_514, out r7_515, out fp_509, out sp_516)
	goto l000006F5
fn0000012C_exit:


void fn00000776(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut:
// Trashed:
// Preserved: SP0
// Terminates process
fn00000776_entry:
l00000776:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = 0x117E8<32>
	Mem14[sp - 12<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 12<i32>, out r4_35, out r5_23, out r6_24, out r7_25, out fp_19, out sp_26)
	Mem34[sp_26 - 252<i32>:int32] = 1<i32>
	fn00001772(r5_23, r6_24, r7_25, fp_19, sp_26 - 252<i32>)
fn00000776_exit:


word32 fn0000079D(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 sb, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sb:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r5:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C sp:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: r3 SP0
fn0000079D_entry:
l0000079D:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x10C<32>:word32] = r6
	Mem14[sp - 0x110<32>:word32] = r7
	fp_21 = sp - 4<i32>
	sp_12 = sp - 0x110<32>
	branch Mem14[0x00014C3C<p32>:word32] == 0<i32> l000008BF
l000007AA:
	r4 = fn000009BD(r0, r2, r4, r5, r6, r7, sp - 4<i32>, sp - 0x110<32>, out r5, out r6, out r7, out fp_21, out sp_12)
l000007B0:
	r0_42 = fn00000AE7(r2, r4, r5, r6, r7, fp_21, sp_12, out r4_44, out r5_45, out r6_46, out r7_47, out fp_41, out sp_48)
	branch Mem14[0x00014C48<p32>:word32] == 0<i32> l000007C9
l000007BE:
	Mem59[sp_48 - 4<i32>:int32] = 0<i32>
	fn00001772(r5_45, r6_46, r7_47, fp_41, sp_48 - 4<i32>)
l000007C9:
	r4 = fn000009BD(r0_42, r2, r4_44, r5_45, r6_46, r7_47, fp_41, sp_48, out r5, out r6, out r7, out fp_60, out sp_67)
	branch fn0000099F(r4, r5, r6, r7, fp_60, sp_67, out fp_21, out sp_12) == 0<i32> l000007B0
l000007D9:
	branch Mem14[0x00014C68<p32>:word32] == 0<i32> l000008BF
l000007E2:
	Mem86[sp_12 - 4<i32>:word32] = 0x1183C<32>
	Mem88[sp_12 - 4<i32>:word32] = fp_21 - 260<i32>
	fn000038D4(r5, r6, r7, fp_21, sp_12 - 4<i32>, out r5_93, out r6_94, out r7_95, out fp_89)
	Mem104[sp_12 - 256<i32>:word32] = 0x115E0<32>
	Mem106[sp_12 - 256<i32>:word32] = fp_89 - 260<i32>
	fn000038D4(r5_93, r6_94, r7_95, fp_89, sp_12 - 256<i32>, out r5_111, out r6_112, out r7_113, out fp_107)
	Mem122[sp_12 - 508<i32>:word32] = 0x1184D<32>
	Mem124[sp_12 - 508<i32>:word32] = fp_107 - 260<i32>
	fn000038D4(r5_111, r6_112, r7_113, fp_107, sp_12 - 508<i32>, out r5_129, out r6_130, out r7_131, out fp_125)
	Mem140[sp_12 - 760<i32>:word32] = 0x115E0<32>
	Mem142[sp_12 - 760<i32>:word32] = fp_125 - 260<i32>
	r2_146 = fn000038D4(r5_129, r6_130, r7_131, fp_125, sp_12 - 760<i32>, out r5_147, out r6_148, out r7_149, out fp_143)
	Mem158[sp_12 - 1012<i32>:word32] = 0x115E0<32>
	Mem161[sp_12 - 1016<i32>:word32] = 0x115E0<32>
	Mem164[sp_12 - 1020<i32>:word32] = 0x115E0<32>
	Mem167[sp_12 - 1024<i32>:word32] = 0x115E0<32>
	Mem170[sp_12 - 1028<i32>:word32] = 0x115E0<32>
	Mem173[sp_12 - 1032<i32>:word32] = 0x115E0<32>
	Mem176[sp_12 - 1036<i32>:word32] = 0x11852<32>
	Mem178[sp_12 - 1036<i32>:word32] = fp_143 - 260<i32>
	r4_182 = fn000031E0(r4, r5_147, r6_148, r7_149, fp_143, sp_12 - 1036<i32>, out r5_183, out r6_184, out r7_185, out fp_179, out sp_186)
	Mem195[sp_186 - 228<i32>:word32] = Mem178[0x00014C68<p32>:word32]
	fn00004D67(r5_183, r6_184, r7_185, fp_179, sp_186 - 228<i32>, out r5_200, out r6_201, out r7_198, out fp_196, out sp_202)
	Mem209[sp_202 - 252<i32>:word32] = fp_196 - 260<i32>
	r5_213 = fn00003404(r2_146, r5_200, r6_201, r7_198, fp_196, sp_202 - 252<i32>, out r6_214, out r7_215, out fp_210, out sp_216)
	Mem223[sp_216 - 256<i32>:word32] = Mem209[0x00014C68<p32>:word32]
	Mem226[sp_216 - 260<i32>:word32] = 0x118A0<32>
	Mem229[sp_216 - 264<i32>:word32] = 0x115E0<32>
	r4 = fn0000366E(r4_182, r5_213, r6_214, r7_215, fp_210, sp_216 - 264<i32>, sb, out r5, out r6, out r7, out fp_21, out sp_239)
	Mem248[sp_239 - 248<i32>:word32] = 0x14C08<32>
	Mem252[sp_239 - 252<i32>:int32] = CONVERT(Mem248[Mem248[0x00014C68<p32>:word32] + 13<i32>:byte], byte, int32)
	fn00003884()
	Mem257[0x00014C64<p32>:word32] = Mem252[0x00014C18<p32>:word32]
	sp_12 = sp_239 - 500<i32>
l000008BF:
	Mem261[sp_12:word32] = fp_21 - 60<i32>
	fp_266 = fn000017CF(r4, r5, r6, r7, fp_21, sp_12)
	goto l00000926
l000008CB:
	r7_284 = Mem278[Mem278[fp_266 + 8<i32>:ptr32]:word32]
	r6_283 = Mem278[Mem278[fp_266 + 8<i32>:ptr32]:word32]
	branch Mem278[r7_284:byte] == 0<8> l000008ED
l000008DB:
	branch Mem278[r7_284:byte] == 0x2F<8> l000008E3
l000008E1:
	r6_283 = r7_284
l000008E3:
	r7_284 = r7_284 + 1<i32>
	branch Mem278[r7_284:byte] == 0<8> l000008DB
l000008ED:
	branch r6_283 == Mem278[Mem278[fp_266 + 8<i32>:ptr32]:word32] l00000909
l000008F3:
	Mem310[r6_283:int8] = 0<i8>
	Mem316[sp_276 - 4<i32>:word32] = Mem310[Mem310[fp_266 + 8<i32>:ptr32]:word32]
	fn00001D6C()
	Mem321[r6_283:byte] = 0x2F<8>
	sp_276 = sp_276 - 256<i32>
	r6_283 = r6_283 + 1<i32>
l00000909:
	sp_325 = sp_276 - 4<i32>
	Mem327[sp_325:word32] = r6_283
	r0_329 = Mem327[fp_266 + 8<i32>:word32]
	Mem331[fp_266 + 8<i32>:word32] = Mem327[fp_266 + 8<i32>:word32] + 4<i32>
	Mem335[sp_325 - 4<i32>:word32] = Mem331[r0_329:word32]
	r4 = fn00000B29(r4, r5, r6_283, r7_284, fp_266, sp_325 - 4<i32>, out r5, out r6, out r7, out fp_266, out sp_356)
	Mem365[sp_356 - 248<i32>:word32] = fp_266 - 60<i32>
	fn00001D6C()
	sp_12 = sp_356 - 248<i32>
l00000926:
	sp_276 = sp_12 - 252<i32>
	branch Mem278[Mem278[fp_266 + 8<i32>:ptr32]:word32] == 0<i32> l00000938
l0000092F:
	branch Mem278[0x00014C48<p32>:word32] == 0<i32> l000008CB
l00000938:
	r5_391 = fn000012F4(r4, fn000012F4(r4, r5, r6, r7, fp_266, sp_276, out r6_380, out r7_381, out fp_376, out sp_382), r6_380, r7_381, fp_376, sp_382, out r6_392, out r7_393, out fp_388, out sp_394)
	fp_400 = fn00001D28(fp_388, sp_394)
	branch Mem278[0x00014C5C<p32>:word32] == 1<i32> l0000099B
l00000953:
	branch Mem278[0x00014C04<p32>:word32] == 0<i32> l0000099B
l0000095C:
	branch Mem408[Mem408[0x00014C04<p32>:word32] + 4<i32>:word32] == 0<i32> l00000985
l00000967:
	Mem415[sp_394:word32] = Mem408[0x00014C04<p32>:word32] + 8<i32>
	sp_416 = sp_394 - 4<i32>
	Mem418[sp_416:word32] = 0x118A2<32>
	Mem421[sp_416 - 4<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5_391, r6_392, r7_393, fp_400, sp_416 - 4<i32>, out r4, out r5_391, out r6_392, out r7_393, out fp_400, out sp_434)
	sp_394 = sp_434 - 244<i32>
l00000985:
	Mem443[0x00014C04<p32>:word32] = Mem440[Mem440[0x00014C04<p32>:word32] + 108<i32>:word32]
	branch Mem443[0x00014C04<p32>:word32] == 0<i32> l0000095C
l0000099B:
	Mem450[sp_394:word32] = r7_393
	Mem454[sp_394 + 4<i32>:word32] = r6_392
	fp_458 = Mem454[fp_400:word32]
	r6Out = r6_392
	r7Out = r7_393
	fpOut = fp_458
	spOut = fp_400 + 4<i32>
	return r5_391
fn0000079D_exit:


word32 fn0000099F(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000FF5
//      fn0000127A
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000FF5 r0:[0..31]-fn00000FF5 sp:[0..31]-fn00000FF5
// Trashed: SSS fp r0 r1 sp
// Preserved: SS SP0
fn0000099F_entry:
l0000099F:
	Mem6[sp - 4<i32>:word32] = fp
	fp_17 = sp - 4<i32>
	branch Mem6[0x00012204<p32>:byte] == 0<8> l000009B9
l000009AD:
	fp_17 = fn00001C95(r4, r5, r6, r7, sp - 4<i32>, sp - 4<i32>)
	r0_12 = 1<i32>
l000009B5:
	fpOut = Mem6[fp_17:word32]
	spOut = fp_17 + 4<i32>
	return r0_12
l000009B9:
	r0_12 = 0<i32>
	goto l000009B5
fn0000099F_exit:


word32 fn000009BD(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000FF5
//      fn0000127A
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000FF5 r4:[0..31]-fn00000FF5 r5:[0..31]-fn00000FF5 r6:[0..31]-fn00000FF5 r7:[0..31]-fn00000FF5 sp:[0..31]-fn00000FF5
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000009BD_entry:
l000009BD:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x10<32>:word32] = r7
	Mem14[sp - 0x14<32>:word32] = 0x12204<32>
	fn00001A4F(r0, r2, r4, r5, r6, r7, sp - 4<i32>, sp - 0x14<32>, out r4_169, out r5_170, out r6_182, out r7_183, out fp_180, out sp_26)
	sp_179 = sp_26 - 252<i32>
	branch Mem14[0x00012204<p32>:byte] == 0<8> l00000AE3
l000009DB:
	Mem39[sp_26 - 252<i32>:word32] = fp_180 - 4<i32>
	Mem42[sp_26 - 256<i32>:word32] = 0x118B7<32>
	Mem45[sp_26 - 260<i32>:word32] = 0x12268<32>
	r4_49 = fn000026BD(r4_169, r5_170, r6_182, 0x14C08<32>, fp_180, sp_26 - 260<i32>, out r5_50, out r6_51, out r7_52, out fp_46, out sp_53)
	Mem62[r7_52 + 4<i32>:word16] = CONVERT(Mem45[fp_46 - 4<i32>:byte], byte, word16)
	Mem64[sp_53 - 244<i32>:word32] = fp_46 - 4<i32>
	Mem67[sp_53 - 248<i32>:word32] = 0x118BA<32>
	Mem70[sp_53 - 252<i32>:word32] = 0x12270<32>
	r4_74 = fn000026BD(r4_49, r5_50, r6_51, r7_52, fp_46, sp_53 - 252<i32>, out r5_75, out r6_76, out r7_77, out fp_71, out sp_78)
	Mem87[r7_77 + 8<i32>:word16] = CONVERT(Mem70[fp_71 - 4<i32>:byte], byte, word16)
	Mem89[sp_78 - 244<i32>:word32] = fp_71 - 4<i32>
	Mem92[sp_78 - 248<i32>:word32] = 0x118BD<32>
	Mem95[sp_78 - 252<i32>:word32] = 0x12278<32>
	r4_99 = fn000026BD(r4_74, r5_75, r6_76, r7_77, fp_71, sp_78 - 252<i32>, out r5_100, out r6_101, out r7_102, out fp_96, out sp_103)
	Mem112[r7_102 + 10<i32>:word16] = CONVERT(Mem95[fp_96 - 4<i32>:byte], byte, word16)
	Mem114[sp_103 - 244<i32>:word32] = r7_102 + 16<i32>
	Mem117[sp_103 - 248<i32>:word32] = 0x118C0<32>
	Mem120[sp_103 - 252<i32>:word32] = 0x12280<32>
	r4_124 = fn000026BD(r4_99, r5_100, r6_101, r7_102, fp_96, sp_103 - 252<i32>, out r5_125, out r6_126, out r7_127, out fp_121, out sp_128)
	Mem136[sp_128 - 244<i32>:word32] = r7_127 + 24<i32>
	Mem139[sp_128 - 248<i32>:word32] = 0x118C4<32>
	Mem142[sp_128 - 252<i32>:word32] = 0x1228C<32>
	r4_146 = fn000026BD(r4_124, r5_125, r6_126, r7_127, fp_121, sp_128 - 252<i32>, out r5_147, out r6_148, out r7_149, out fp_143, out sp_150)
	Mem159[sp_150 - 248<i32>:word32] = 0x14C4C<32>
	Mem162[sp_150 - 252<i32>:word32] = 0x118C8<32>
	Mem165[sp_150 - 256<i32>:word32] = 0x12298<32>
	r4_169 = fn000026BD(r4_146, r5_147, r6_148, r7_149, fp_143, sp_150 - 256<i32>, out r5_170, out r6_171, out r7_172, out fp_166, out sp_173)
	r0_181 = fn000015DA(r6_171, r7_172, fp_166, sp_173 - 244<i32>, out r6_182, out r7_183, out fp_180)
	Mem189[fp_180 - 8<i32>:word32] = r0_181
	sp_179 = sp_173 - 244<i32>
	branch Mem189[0x00014C4C<p32>:word32] == r0_181 l00000ABA
l00000A9A:
	Mem194[sp_173 - 248<i32>:word32] = 0x118CB<32>
	Mem197[sp_173 - 252<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_169, r5_170, r6_182, r7_183, fp_180, sp_173 - 252<i32>, out r4_268, out r5_202, out r6_203, out r7_204, out fp_198, out sp_205)
	Mem213[sp_205 - 252<i32>:int32] = 2<i32>
	fn00001772(r5_202, r6_203, r7_204, fp_198, sp_205 - 252<i32>)
l00000ABA:
	branch Mem189[0x00014C68<p32>:word32] == 0<i32> l00000AE3
l00000AC2:
	Mem218[sp_173 - 248<i32>:word32] = 0x1228C<32>
	Mem221[sp_173 - 252<i32>:word32] = 0x12204<32>
	Mem224[sp_173 - 256<i32>:word32] = 0x118E5<32>
	Mem227[sp_173 - 260<i32>:word32] = Mem224[0x00014C68<p32>:word32]
	fn000025E4(r4_169, r5_170, r6_182, r7_183, fp_180, sp_173 - 260<i32>, out r4_169, out r5_170, out r6_182, out r7_183, out fp_180, out sp_235)
	sp_179 = sp_235 - 240<i32>
l00000AE3:
	Mem243[sp_179:word32] = r7_183
	fp_246 = Mem243[fp_180:word32]
	r5Out = r5_170
	r6Out = r6_182
	r7Out = r7_183
	fpOut = fp_246
	spOut = fp_180 + 4<i32>
	return r4_169
fn000009BD_exit:


word32 fn00000AE7(word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000FF5
//      fn0000127A
// MayUse:  fp:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000FF5 r0:[0..31]-fn00000FF5 r4:[0..31]-fn00000FF5 r5:[0..31]-fn00000FF5 r6:[0..31]-fn00000FF5 r7:[0..31]-fn00000FF5 sp:[0..31]-fn00000FF5
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00000AE7_entry:
l00000AE7:
	Mem6[sp - 4<i32>:word32] = fp
	fp_18 = sp - 4<i32>
	sp_26 = sp - 0x208<32>
	branch Mem6[0x000122A0<p32>:byte] == 0x31<8> l00000B25
l00000AF4:
	Mem12[sp - 8<i32>:word32] = Mem6[0x00014C18<p32>:word32]
	Mem14[sp - 8<i32>:word32] = Mem12[sp - 8<i32>:ptr32] + 511<i32>
	r0_15 = Mem14[sp - 8<i32>:word32]
	Mem17[sp - 8<i32>:word32] = r0_15 / 0x200<32>
	r0 = r0_15 / 0x200<32>
	goto l00000B1D
l00000B10:
	Mem27[sp_26:word32] = fp_18 - 516<i32>
	r0 = fn00001A4F(r0, r2, r4, r5, r6, r7, fp_18, sp_26, out r4, out r5, out r6, out r7, out fp_18, out sp_40)
	sp_26 = sp_40 - 252<i32>
l00000B1D:
	Mem22[fp_18 - 4<i32>:word32] = Mem19[fp_18 - 4<i32>:word32] + -1<i32>
	branch Mem19[fp_18 - 4<i32>:word32] > 0<i32> l00000B10
l00000B25:
	fp_51 = Mem50[fp_18:word32]
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_51
	spOut = fp_18 + 4<i32>
	return r0
fn00000AE7_exit:


word32 fn00000B29(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000B29
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000B29 r4:[0..31]-fn00000B29 r5:[0..31]-fn00000B29 r6:[0..31]-fn00000B29 r7:[0..31]-fn00000B29 sp:[0..31]-fn00000B29
// Trashed: SSSSS fp r0 r1 r2 r3 r4 r5 r6 r7 sp
// Preserved: SP0
fn00000B29_entry:
l00000B29:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x230<32>:word32] = r6
	Mem14[sp - 0x234<32>:word32] = r7
	Mem17[sp - 0x238<32>:int32] = 0<i32>
	Mem20[sp - 0x23C<32>:word32] = Mem17[sp + 8<i32>:word32]
	r0_21 = fn000038AC()
	Mem24[sp - 8<i32>:word32] = r0_21
	fp_368 = sp - 4<i32>
	branch r0_21 >= 0<i32> l00000B4E
l00000B42:
	Mem857[sp - 0x338<32>:word32] = Mem24[sp + 4<i32>:word32]
	Mem860[sp - 0x33C<32>:word32] = 0x118EC<32>
	sp_642 = sp - 0x33C<32>
	goto l00000C1D
l00000B4E:
	Mem29[sp - 0x338<32>:word32] = 0x14C08<32>
	Mem32[sp - 0x33C<32>:word32] = Mem29[sp - 8<i32>:word32]
	fn00003884()
	sp_35 = sp - 0x434<32>
	branch Mem32[0x00014C68<p32>:word32] == 0<i32> l00000B79
l00000B68:
	Mem40[sp - 0x438<32>:word32] = Mem32[sp + 4<i32>:word32]
	sp_35 = sp_51 - 252<i32>
	branch fn00001701(r4, r5, r6, r7, sp - 4<i32>, sp - 0x438<32>, out r4, out r5, out r6, out r7, out fp_368, out sp_51) == 0<i32> l00000D83
l00000B79:
	sp_61 = sp_35 - 4<i32>
	Mem65[sp_61:word32] = Mem63[fp_368 + 8<i32>:word32]
	Mem67[sp_61:ptr32] = 0x00000072<p32>
	sp_35 = sp_79 - 248<i32>
	branch fn0000161F(r4, r5, r6, r7, fp_368, sp_61, out r2_1054, out r4, out r5, out r6, out r7, out fp_368, out sp_79) == 0<i32> l00000D83
l00000B8E:
	branch (CONVERT(Mem67[0x00014C0C<p32>:byte], byte, word32) & 0xF000<32>) == 0x4000<32> l00000BFF
l00000BA4:
	Mem646[fp_368 - 540<i32>:int32] = 0<i32>
	r0_648 = Mem646[fp_368 - 540<i32>:word32]
	Mem650[fp_368 - 540<i32>:word32] = Mem646[fp_368 - 540<i32>:word32] + 1<i32>
	Mem656[fp_368 - 520<i32>:byte] = Mem650[r0_648 + Mem650[fp_368 + 8<i32>:word32]:byte]
	r7_653 = fp_368 - 519<i32>
	branch Mem656[fp_368 - 520<i32>:byte] == 0<8> l00000BE2
l00000BC7:
	r0_662 = Mem661[fp_368 - 540<i32>:word32]
	Mem664[fp_368 - 540<i32>:word32] = Mem661[fp_368 - 540<i32>:word32] + 1<i32>
	Mem671[r7_1055:byte] = Mem664[r0_662 + Mem664[fp_368 + 8<i32>:word32]:byte]
	r7_653 = r7_1055 + 1<i32>
	r7_1055 = r7_653
	branch Mem671[r7_1055:byte] == 0<8> l00000BC7
l00000BE2:
	r7_676 = r7_653 + -1<i32>
	Mem679[r7_676:byte] = 0x2F<8>
	Mem684[fp_368 - 540<i32>:int32] = 0<i32>
	Mem689[sp_79 - 252<i32>:word32] = Mem684[fp_368 + 12<i32>:word32]
	fn00001D6C()
	r7 = r7_676 + 1<i32>
	sp_692 = sp_79 - 504<i32>
	goto l00000FB7
l00000BFF:
	branch (CONVERT(Mem67[0x00014C0C<p32>:byte], byte, word32) & 0xF000<32>) == 0x8000<32> l00000C30
l00000C14:
	Mem641[sp_79 - 252<i32>:word32] = Mem67[fp_368 + 8<i32>:word32]
	Mem644[sp_79 - 256<i32>:word32] = 0x11911<32>
	sp_642 = sp_79 - 256<i32>
l00000C1D:
	sp_862 = sp_642 - 4<i32>
	Mem864[sp_862:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_368, sp_862, out r4, out r5, out r6, out r7, out fp_368, out sp_877)
	sp_429 = sp_877 - 244<i32>
l00000C2C:
	Mem889[sp_429:word32] = r7
	Mem896[sp_429 + 4<i32>:word32] = r6
	fp_900 = Mem896[fp_368:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_900
	spOut = fp_368 + 4<i32>
	return r4
l00000C30:
	Mem97[sp_79 - 252<i32>:word32] = 0x14C08<32>
	r4_101 = fn00001532(r4, r5, r6, r7, fp_368, sp_79 - 252<i32>, out r5_102, out fp_202, out sp_105)
	r6_112 = Mem97[fp_202 + 8<i32>:word32]
	Mem115[fp_202 - 540<i32>:int32] = 0<i32>
	Mem122[0x12204<32>:byte] = Mem115[r6_112:byte]
	sp_111 = sp_105 - 252<i32>
	r6_117 = r6_112 + 1<i32>
	r7_119 = 0x12205<32>
	branch Mem122[0x12204<32>:byte] == 0<8> l00000C8C
l00000C60:
	branch Mem122[fp_202 - 540<i32>:word32] >= 0x64<32> l00000C8C
l00000C6A:
	Mem131[fp_202 - 540<i32>:word32] = Mem129[fp_202 - 540<i32>:word32] + 1<i32>
	Mem140[r7_119:byte] = Mem131[r6_117:byte]
	r6_117 = r6_117 + 1<i32>
	r7_119 = r7_119 + 1<i32>
	branch Mem140[r7_119:byte] == 0<8> l00000C8C
l00000C82:
	branch Mem140[fp_202 - 540<i32>:word32] < 0x64<32> l00000C6A
l00000C8C:
	branch Mem147[fp_202 - 540<i32>:word32] < 0x64<32> l00000CB1
l00000C96:
	Mem610[sp_105 - 256<i32>:word32] = Mem147[fp_202 + 8<i32>:word32]
	Mem613[sp_105 - 260<i32>:word32] = 0x11934<32>
	Mem616[sp_105 - 264<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_101, r5_102, r6_117, r7_119, fp_202, sp_105 - 264<i32>, out r4, out r5, out r6, out r7, out fp_368, out sp_624)
	sp_35 = sp_624 - 244<i32>
	goto l00000D83
l00000CB1:
	branch Mem147[0x00014C0E<p32>:word16] <= 1<i16> l00000E0E
l00000CBA:
	Mem153[fp_202 - 552<i32>:int32] = 0<i32>
	Mem155[fp_202 - 548<i32>:word32] = Mem153[0x00014C04<p32>:word32]
	branch Mem155[fp_202 - 548<i32>:word32] == 0<i32> l00000CF6
l00000CCC:
	branch Mem159[Mem159[fp_202 - 548<i32>:ptr32]:word16] == Mem159[0x00014C0A<p32>:word16] l00000CE8
l00000CD7:
	branch Mem159[Mem159[fp_202 - 548<i32>:ptr32] + 2<i32>:word16] == Mem159[0x00014C08<p32>:word16] l00000CE8
l00000CE2:
	Mem171[fp_202 - 552<i32>:word32] = Mem159[fp_202 - 552<i32>:word32] + 1<i32>
	goto l00000CF6
l00000CE8:
	Mem167[fp_202 - 548<i32>:word32] = Mem159[Mem159[fp_202 - 548<i32>:ptr32] + 108<i32>:word32]
	branch Mem167[fp_202 - 548<i32>:word32] == 0<i32> l00000CCC
l00000CF6:
	branch Mem174[fp_202 - 552<i32>:word32] == 0<i32> l00000D8F
l00000CFD:
	Mem492[sp_105 - 252<i32>:word32] = Mem174[fp_202 - 548<i32>:ptr32] + 8<i32>
	Mem495[sp_105 - 256<i32>:word32] = 0x122A1<32>
	r5_500 = fn00003908(r5_102, r6_117, r7_119, fp_202, sp_105 - 256<i32>, out r6_501, out r7_502, out fp_496)
	Mem510[0x000122A0<p32>:byte] = 0x31<8>
	Mem521[sp_105 - 508<i32>:word32] = fn000015DA(r6_501, r7_502, fp_496, sp_105 - 504<i32>, out r6_513, out r7_514, out fp_511)
	Mem524[sp_105 - 512<i32>:word32] = 0x1194C<32>
	Mem527[sp_105 - 516<i32>:word32] = 0x12298<32>
	r4 = fn000031E0(r4_101, r5_500, r6_513, r7_514, fp_511, sp_105 - 516<i32>, out r5_532, out r6_533, out r7_534, out fp_528, out sp_535)
	Mem544[sp_535 - 248<i32>:word32] = 0x12204<32>
	r5 = fn00001BA2(r4, r5_532, r6_533, r7_534, fp_528, sp_535 - 248<i32>, out r6, out r7, out fp_368, out sp_550)
	sp_35 = sp_550 - 252<i32>
	branch Mem544[0x00014C30<p32>:word32] == 0<i32> l00000D7E
l00000D4C:
	Mem562[sp_550 - 256<i32>:word32] = Mem544[fp_368 + 8<i32>:word32]
	Mem565[sp_550 - 260<i32>:word32] = 0x11950<32>
	Mem568[sp_550 - 264<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_368, sp_550 - 264<i32>, out r4_572, out r5_573, out r6_574, out r7_575, out fp_569, out sp_576)
	Mem583[sp_576 - 244<i32>:word32] = Mem568[fp_569 - 548<i32>:ptr32] + 8<i32>
	Mem586[sp_576 - 248<i32>:word32] = 0x11956<32>
	Mem589[sp_576 - 252<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_572, r5_573, r6_574, r7_575, fp_569, sp_576 - 252<i32>, out r4, out r5, out r6, out r7, out fp_368, out sp_597)
	sp_35 = sp_597 - 244<i32>
l00000D7E:
	Mem606[Mem604[fp_368 - 548<i32>:ptr32] + 4<i32>:word32] = Mem604[Mem604[fp_368 - 548<i32>:ptr32] + 4<i32>:word32] + -1<i32>
l00000D83:
	sp_632 = sp_35 - 4<i32>
	Mem636[sp_632:word32] = Mem634[fp_368 - 4<i32>:word32]
	fn000050E0()
	goto l00000FEF
l00000D8F:
	Mem183[sp_105 - 252<i32>:ptr32] = 0x00000070<p32>
	r0_203 = fn00005130(r4_101, r5_102, r6_117, r7_119, fp_202, sp_105 - 252<i32>, out r4_101, out r5_102, out r6_117, out r7_119, out fp_202)
	Mem215[fp_202 - 548<i32>:word32] = r0_203
	sp_111 = sp_105 - 504<i32>
	branch r0_203 == 0<i32> l00000DCB
l00000DA4:
	branch Mem215[0x000115D8<p32>:word32] == 0<i32> l00000E0E
l00000DAD:
	Mem252[sp_105 - 508<i32>:word32] = 0x11962<32>
	Mem255[sp_105 - 512<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_101, r5_102, r6_117, r7_119, fp_202, sp_105 - 512<i32>, out r4_101, out r5_102, out r6_117, out r7_119, out fp_202, out sp_263)
	Mem270[0x000115D8<p32>:int32] = 0<i32>
	sp_111 = sp_263 - 248<i32>
	goto l00000E0E
l00000DCB:
	Mem219[Mem215[fp_202 - 548<i32>:ptr32] + 108<i32>:word32] = Mem215[0x00014C04<p32>:word32]
	Mem221[0x00014C04<p32>:word32] = Mem219[fp_202 - 548<i32>:word32]
	Mem223[Mem221[fp_202 - 548<i32>:ptr32]:word16] = Mem221[0x00014C0A<p32>:word16]
	Mem225[Mem223[fp_202 - 548<i32>:ptr32] + 2<i32>:word16] = Mem223[0x00014C08<p32>:word16]
	Mem229[Mem225[fp_202 - 548<i32>:ptr32] + 4<i32>:word32] = CONVERT(Mem225[0x00014C0E<p32>:word16], word16, int32) + -1<i32>
	Mem232[sp_105 - 508<i32>:word32] = Mem229[fp_202 + 8<i32>:word32]
	Mem234[sp_105 - 508<i32>:word32] = Mem232[fp_202 - 548<i32>:ptr32] + 8<i32>
	r5_102 = fn00003908(r5_102, r6_117, r7_119, fp_202, sp_105 - 508<i32>, out r6_117, out r7_119, out fp_202)
	sp_111 = sp_105 - 756<i32>
l00000E0E:
	Mem276[fp_202 - 8<i32>:word32] = (Mem271[0x00014C18<p32>:word32] + 511<i32>) / 0x200<32>
	branch Mem276[0x00014C30<p32>:word32] == 0<i32> l00000E5A
l00000E2A:
	sp_280 = sp_111 - 4<i32>
	Mem282[sp_280:word32] = Mem276[fp_202 + 8<i32>:word32]
	Mem285[sp_280 - 4<i32>:word32] = 0x11988<32>
	Mem288[sp_280 - 8<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_101, r5_102, r6_117, r7_119, fp_202, sp_280 - 8<i32>, out r4_296, out r5_297, out r6_298, out r7_299, out fp_293, out sp_300)
	Mem308[sp_300 - 248<i32>:word32] = Mem288[fp_293 - 8<i32>:word32]
	Mem311[sp_300 - 252<i32>:word32] = 0x1198E<32>
	Mem314[sp_300 - 256<i32>:word32] = 0x1206C<32>
	fn000025E4(r4_296, r5_297, r6_298, r7_299, fp_293, sp_300 - 256<i32>, out r4_101, out r5_102, out r6_117, out r7_119, out fp_202, out sp_322)
	sp_111 = sp_322 - 244<i32>
l00000E5A:
	sp_341 = sp_111 - 4<i32>
	Mem342[sp_341:word32] = fn000015DA(r6_117, r7_119, fp_202, sp_111, out r6_334, out r7_335, out fp_332)
	Mem345[sp_341 - 4<i32>:word32] = 0x1199A<32>
	Mem348[sp_341 - 8<i32>:word32] = 0x12298<32>
	r4 = fn000031E0(r4_101, r5_102, r6_334, r7_335, fp_332, sp_341 - 8<i32>, out r5_355, out r6_356, out r7_357, out fp_351, out sp_358)
	Mem367[sp_358 - 248<i32>:word32] = 0x12204<32>
	r5 = fn00001BA2(r4, r5_355, r6_356, r7_357, fp_351, sp_358 - 248<i32>, out r6, out r7, out fp_368, out sp_373)
	sp_380 = sp_373 - 252<i32>
	goto l00000E98
l00000E88:
	Mem400[sp_387 - 244<i32>:word32] = fp_368 - 520<i32>
	r5 = fn00001BA2(r4, r5, r6, r7, fp_368, sp_387 - 244<i32>, out r6, out r7, out fp_368, out sp_410)
	Mem419[fp_368 - 8<i32>:word32] = Mem400[fp_368 - 8<i32>:word32] + -1<i32>
	sp_380 = sp_410 - 252<i32>
l00000E98:
	Mem383[sp_380:ptr32] = 0x00000200<p32>
	Mem386[sp_380:word32] = fp_368 - 520<i32>
	sp_387 = sp_380 - 4<i32>
	Mem389[sp_387:word32] = Mem386[fp_368 - 4<i32>:word32]
	Mem393[fp_368 - 540<i32>:word32] = fn000038C0()
	branch Mem393[fp_368 - 540<i32>:word32] <= 0<i32> l00000EBD
l00000EB8:
	branch Mem393[fp_368 - 8<i32>:word32] > 0<i32> l00000E88
l00000EBD:
	Mem426[sp_387 - 248<i32>:word32] = Mem393[fp_368 - 4<i32>:word32]
	fn000050E0()
	sp_429 = sp_387 - 500<i32>
	branch Mem426[fp_368 - 8<i32>:word32] == 0<i32> l00000ED4
l00000ECE:
	branch Mem426[fp_368 - 540<i32>:word32] == 0<i32> l00000EF4
l00000ED4:
	Mem439[sp_387 - 504<i32>:word32] = Mem426[fp_368 + 8<i32>:word32]
	Mem442[sp_387 - 508<i32>:word32] = 0x1199E<32>
	Mem445[sp_387 - 512<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_368, sp_387 - 512<i32>, out r4, out r5, out r6, out r7, out fp_368, out sp_461)
	sp_429 = sp_461 - 244<i32>
	goto l00000EF4
l00000EEE:
	r5 = fn000012F4(r4, r5, r6, r7, fp_368, sp_429, out r6, out r7, out fp_368, out sp_429)
l00000EF4:
	Mem471[fp_368 - 8<i32>:word32] = Mem468[fp_368 - 8<i32>:word32] + -1<i32>
	branch Mem468[fp_368 - 8<i32>:word32] > 0<i32> l00000EEE
l00000EFC:
	goto l00000C2C
l00000EFF:
	branch Mem701[fp_368 - 536<i32>:byte] == 0<8> l00000F36
l00000F08:
	Mem713[sp_699 - 244<i32>:word32] = fp_368 - 534<i32>
	Mem716[sp_699 - 248<i32>:word32] = 0x11907<32>
	sp_692 = sp_699 - 496<i32>
	branch fn0000321C(r6, r7, fp_368, sp_699 - 248<i32>, out r6, out r7, out fp_368) == 0<i32> l00000F36
l00000F1F:
	Mem733[sp_699 - 496<i32>:word32] = fp_368 - 534<i32>
	Mem736[sp_699 - 500<i32>:word32] = 0x11909<32>
	sp_692 = sp_699 - 748<i32>
	branch fn0000321C(r6, r7, fp_368, sp_699 - 500<i32>, out r6, out r7, out fp_368) == 0<i32> l00000F3D
l00000F36:
	Mem837[fp_368 - 540<i32>:word32] = Mem835[fp_368 - 540<i32>:word32] + 1<i32>
	goto l00000FB7
l00000F3D:
	Mem752[fp_368 - 544<i32>:int32] = 0<i32>
	r6_750 = r7
	branch Mem752[fp_368 - 544<i32>:word32] >= 0xE<32> l00000F69
l00000F4D:
	Mem761[r6_750:byte] = Mem757[fp_368 - 534<i32> + Mem757[fp_368 - 544<i32>:word32]:byte]
	Mem764[fp_368 - 544<i32>:word32] = Mem761[fp_368 - 544<i32>:word32] + 1<i32>
	r6_750 = r6_750 + 1<i32>
	branch Mem764[fp_368 - 544<i32>:word32] < 0xE<32> l00000F4D
l00000F69:
	Mem770[r6_750:int8] = 0<i8>
	Mem776[sp_699 - 752<i32>:word32] = Mem770[fp_368 - 4<i32>:word32]
	fn000050E0()
	Mem783[sp_699 - 1008<i32>:word32] = r7
	Mem785[sp_699 - 1008<i32>:word32] = fp_368 - 520<i32>
	r4 = fn00000B29(r4, r5, r6_750, r7, fp_368, sp_699 - 1008<i32>, out r5, out r6, out r7, out fp_368, out sp_796)
	Mem810[sp_796 - 252<i32>:int32] = 0<i32>
	Mem813[sp_796 - 256<i32>:word32] = 0x1190C<32>
	Mem817[fp_368 - 4<i32>:word32] = fn000038AC()
	Mem819[fp_368 - 540<i32>:word32] = Mem817[fp_368 - 540<i32>:word32] + 1<i32>
	Mem823[sp_796 - 508<i32>:int32] = 0<i32>
	Mem827[sp_796 - 512<i32>:word32] = Mem823[fp_368 - 540<i32>:word32] << 4<8>
	Mem830[sp_796 - 516<i32>:word32] = Mem827[fp_368 - 4<i32>:word32]
	fn00003898()
	sp_692 = sp_796 - 760<i32>
l00000FB7:
	Mem695[sp_692:ptr32] = 0x00000010<p32>
	Mem698[sp_692:word32] = fp_368 - 536<i32>
	sp_699 = sp_692 - 4<i32>
	Mem701[sp_699:word32] = Mem698[fp_368 - 4<i32>:word32]
	sp_692 = sp_699 - 244<i32>
	branch fn000038C0() <= 0<i32> l00000FD7
l00000FCE:
	branch Mem701[0x00014C48<p32>:word32] == 0<i32> l00000EFF
l00000FD7:
	Mem844[sp_699 - 248<i32>:word32] = Mem701[fp_368 - 4<i32>:word32]
	fn000050E0()
	Mem850[sp_699 - 504<i32>:word32] = 0x1190E<32>
	fn00001D6C()
	sp_632 = sp_699 - 504<i32>
l00000FEF:
	sp_429 = sp_632 - 252<i32>
	goto l00000C2C
fn00000B29_exit:


word32 fn00000FF5(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r5:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C sp:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: r2 SP0
fn00000FF5_entry:
l00000FF5:
	Mem6[sp - 4<i32>:word32] = fp
	fp_10 = sp - 4<i32>
	sp_295 = sp - 0x21C<32>
	goto l0000117B
l00000FFC:
	Mem73[fp_30 - 524<i32>:word32] = Mem56[fp_30 - 524<i32>:word32] + 4<i32>
	branch Mem73[Mem73[fp_30 - 524<i32>:ptr32]:word32] == 0<i32> l0000119F
l00001008:
	goto l0000123F
l0000100B:
	Mem320[sp_97 - 764<i32>:word32] = 0x12204<32>
	Mem323[sp_97 - 768<i32>:word32] = 0x119D7<32>
	Mem326[sp_97 - 772<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_10, sp_97 - 772<i32>, out r4, out r5, out r6_22, out r7_23, out fp_30, out sp_334)
	sp_102 = sp_334 - 244<i32>
	goto l0000123F
l00001029:
	branch Mem131[0x00014C44<p32>:word32] == 0<i32> l0000104E
l00001031:
	Mem139[sp_97 - 764<i32>:word32] = CONVERT(Mem131[0x00014C12<p32>:byte], byte, word32)
	Mem142[sp_97 - 768<i32>:word32] = CONVERT(Mem139[0x00014C10<p32>:byte], byte, word32)
	Mem145[sp_97 - 772<i32>:word32] = 0x12204<32>
	fn00001D80()
	sp_130 = sp_97 - 1016<i32>
l0000104E:
	Mem152[fp_10 - 8<i32>:word32] = Mem149[0x00014C18<p32>:word32]
	r0_155 = (Mem152[fp_10 - 8<i32>:word32] + 511<i32>) / 0x200<32>
	Mem156[fp_10 - 4<i32>:word32] = r0_155
	branch Mem156[0x00014C30<p32>:word32] == 0<i32> l00001133
l0000106F:
	sp_160 = sp_130 - 4<i32>
	Mem162[sp_160:word32] = Mem156[fp_10 - 4<i32>:word32]
	Mem165[sp_160 - 4<i32>:word32] = Mem162[fp_10 - 8<i32>:word32]
	Mem168[sp_160 - 8<i32>:word32] = 0x12204<32>
	Mem171[sp_160 - 12<i32>:word32] = 0x119F0<32>
	Mem174[sp_160 - 16<i32>:word32] = 0x1206C<32>
	r0_155 = fn000025E4(r4, r5, r6, r7, fp_10, sp_160 - 16<i32>, out r4, out r5, out r6, out r7, out fp_10, out sp_186)
	sp_130 = sp_186 - 236<i32>
	goto l00001133
l00001093:
	Mem380[sp_97 - 1020<i32>:word32] = 0x12204<32>
	Mem383[sp_97 - 1024<i32>:word32] = 0x119B5<32>
	Mem386[sp_97 - 1028<i32>:word32] = 0x1206C<32>
	r0 = fn000025E4(r4, r5, r6, r7, fp_10, sp_97 - 1028<i32>, out r4, out r5, out r6, out r7, out fp_10, out sp_394)
	sp_295 = sp_394 - 244<i32>
	goto l0000117B
l000010B1:
	Mem201[sp_130:word32] = fp_10 - 520<i32>
	fn00001A4F(r0_155, r2, r4, r5, r6, r7, fp_10, sp_130, out r4, out r5, out r6, out r7, out fp_10, out sp_214)
	branch Mem201[fp_10 - 8<i32>:word32] <= 0x200<32> l000010EF
l000010C7:
	Mem244[sp_214 - 252<i32>:ptr32] = 0x00000200<p32>
	Mem246[sp_214 - 252<i32>:word32] = fp_10 - 520<i32>
	Mem249[sp_214 - 256<i32>:word32] = Mem246[fp_10 - 528<i32>:word32]
	r0_155 = fn000055A4()
	sp_130 = sp_214 - 500<i32>
	branch r0_155 >= 0<i32> l0000112D
l000010E1:
	Mem257[sp_214 - 504<i32>:word32] = 0x12204<32>
	Mem260[sp_214 - 508<i32>:word32] = 0x11A12<32>
	sp_240 = sp_214 - 508<i32>
	goto l00001113
l000010EF:
	Mem226[sp_214 - 256<i32>:word32] = Mem201[fp_10 - 8<i32>:word32]
	Mem228[sp_214 - 256<i32>:word32] = fp_10 - 520<i32>
	Mem231[sp_214 - 260<i32>:word32] = Mem228[fp_10 - 528<i32>:word32]
	r0_155 = fn000055A4()
	sp_130 = sp_214 - 504<i32>
	branch r0_155 >= 0<i32> l0000112D
l00001107:
	Mem239[sp_214 - 508<i32>:word32] = 0x12204<32>
	Mem242[sp_214 - 512<i32>:word32] = 0x11A37<32>
	sp_240 = sp_214 - 512<i32>
l00001113:
	sp_262 = sp_240 - 4<i32>
	Mem264[sp_262:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_10, sp_262, out r4_455, out r5_274, out r6_275, out r7_276, out fp_270, out sp_277)
	Mem285[sp_277 - 248<i32>:int32] = 2<i32>
	fn00001772(r5_274, r6_275, r7_276, fp_270, sp_277 - 248<i32>)
l0000112D:
	Mem289[fp_10 - 8<i32>:ptr32] = Mem287[fp_10 - 8<i32>:ptr32] - 512<i32>
l00001133:
	Mem196[fp_10 - 4<i32>:word32] = Mem193[fp_10 - 4<i32>:word32] + -1<i32>
	branch Mem193[fp_10 - 4<i32>:word32] > 0<i32> l000010B1
l0000113C:
	sp_290 = sp_130 - 4<i32>
	Mem292[sp_290:word32] = Mem196[fp_10 - 528<i32>:word32]
	r0 = fn000050E0()
	sp_295 = sp_290 - 252<i32>
	branch Mem292[0x00014C40<p32>:word32] == 0<i32> l0000117B
l00001151:
	Mem300[sp_290 - 256<i32>:int32] = 0<i32>
	Mem307[fp_10 - 536<i32>:word32] = fn0000363C(sp_290 - 256<i32>)
	Mem309[fp_10 - 532<i32>:word32] = Mem307[0x00014C20<p32>:word32]
	Mem311[sp_290 - 508<i32>:word32] = fp_10 - 536<i32>
	Mem314[sp_290 - 512<i32>:word32] = 0x12204<32>
	r0 = fn0000398C()
	sp_295 = sp_290 - 760<i32>
l0000117B:
	r4 = fn000009BD(r0, r2, r4, r5, r6, r7, fp_10, sp_295, out r5, out r6_22, out r7_23, out fp_17, out sp_24)
	branch fn0000099F(r4, r5, r6_22, r7_23, fp_17, sp_24, out fp_30, out sp_102) == 0<i32> l00001276
l0000118C:
	branch Mem40[Mem40[fp_30 + 8<i32>:ptr32]:word32] == 0<i32> l000011B8
l00001192:
	Mem46[fp_30 - 524<i32>:word32] = Mem40[fp_30 + 8<i32>:word32]
	branch Mem46[Mem46[fp_30 - 524<i32>:ptr32]:word32] == 0<i32> l0000123F
l0000119F:
	sp_50 = sp_102 - 4<i32>
	Mem52[sp_50:word32] = 0x12204<32>
	Mem56[sp_50 - 4<i32>:word32] = Mem52[Mem52[fp_30 - 524<i32>:ptr32]:word32]
	sp_102 = sp_50 - 252<i32>
	branch fn00001794(r6_22, r7_23, fp_30, sp_50 - 4<i32>, out r6_22, out r7_23, out fp_30) == 0<i32> l00000FFC
l000011B8:
	sp_78 = sp_102 - 4<i32>
	Mem80[sp_78:word32] = 0x12204<32>
	Mem82[sp_78:ptr32] = 0x00000078<p32>
	sp_102 = sp_97 - 248<i32>
	branch fn0000161F(r4, r5, r6_22, r7_23, fp_30, sp_78, out r2, out r4, out r5, out r6_22, out r7_23, out fp_30, out sp_97) == 0<i32> l0000123F
l000011D0:
	Mem107[sp_97 - 252<i32>:word32] = 0x12204<32>
	r6 = fn000013F9(r4, r5, r6_22, r7_23, fp_30, sp_97 - 252<i32>, out r7, out fp_10)
	branch Mem107[0x000122A0<p32>:byte] == 0x31<8> l00001248
l000011E9:
	Mem363[sp_97 - 508<i32>:word32] = 0x12204<32>
	fn00003978()
	Mem369[sp_97 - 764<i32>:word32] = 0x12204<32>
	Mem372[sp_97 - 768<i32>:word32] = 0x122A1<32>
	r0 = fn0000253C()
	sp_295 = sp_97 - 1016<i32>
	branch r0 < 0<i32> l00001093
l00001212:
	branch Mem372[0x00014C30<p32>:word32] == 0<i32> l0000117B
l0000121B:
	Mem404[sp_97 - 1020<i32>:word32] = 0x122A1<32>
	Mem407[sp_97 - 1024<i32>:word32] = 0x12204<32>
	Mem410[sp_97 - 1028<i32>:word32] = 0x119C6<32>
	Mem413[sp_97 - 1032<i32>:word32] = 0x1206C<32>
	r0 = fn000025E4(r4, r5, r6, r7, fp_10, sp_97 - 1032<i32>, out r4, out r5, out r6, out r7, out fp_10, out sp_421)
	sp_295 = sp_421 - 240<i32>
	goto l0000117B
l0000123F:
	r0 = fn00000AE7(r2, r4, r5, r6_22, r7_23, fp_30, sp_102, out r4, out r5, out r6, out r7, out fp_10, out sp_295)
	goto l0000117B
l00001248:
	Mem124[sp_97 - 508<i32>:word32] = CONVERT(Mem107[0x00014C0C<p32>:byte], byte, word32) & 0xFFF<32>
	Mem127[sp_97 - 512<i32>:word32] = 0x12204<32>
	Mem131[fp_10 - 528<i32>:word32] = fn00002550()
	sp_130 = sp_97 - 760<i32>
	branch Mem131[fp_10 - 528<i32>:word32] >= 0<i32> l00001029
l00001273:
	goto l0000100B
l00001276:
	fp_41 = Mem40[fp_30:word32]
	r6Out = r6_22
	r7Out = r7_23
	fpOut = fp_41
	spOut = fp_30 + 4<i32>
	return r5
fn00000FF5_exit:


word32 fn0000127A(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r5:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C sp:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: r2 SP0
fn0000127A_entry:
l0000127A:
	Mem6[sp - 4<i32>:word32] = fp
	fp_10 = sp - 4<i32>
	sp_137 = sp - 4<i32>
	goto l000012DF
l00001280:
	branch Mem39[0x00014C30<p32>:word32] == 0<i32> l00001297
l00001288:
	Mem44[sp_33 - 4<i32>:word32] = 0x14C08<32>
	r2 = fn0000132C(r4_20, r5_21, r6_22, r7_23, fp_30, sp_33 - 4<i32>, out r4_20, out r5_21, out r6_22, out r7_23, out fp_30, out sp_53)
	sp_33 = sp_53 - 252<i32>
l00001297:
	sp_61 = sp_33 - 4<i32>
	Mem63[sp_61:word32] = 0x12204<32>
	Mem66[sp_61 - 4<i32>:word32] = 0x11A5C<32>
	r4_112 = fn00002580(r4_20, r5_21, r6_22, r7_23, fp_30, sp_61 - 4<i32>, out r5_113, out r6_114, out r7_111, out fp_110, out sp_79)
	sp_105 = sp_79 - 248<i32>
	branch Mem66[0x000122A0<p32>:byte] == 0x31<8> l000012CA
l000012B5:
	Mem89[sp_79 - 252<i32>:word32] = 0x122A1<32>
	Mem92[sp_79 - 256<i32>:word32] = 0x11A5F<32>
	r4_112 = fn00002580(r4_112, r5_113, r6_114, r7_111, fp_110, sp_79 - 256<i32>, out r5_113, out r6_114, out r7_111, out fp_110, out sp_100)
	sp_105 = sp_100 - 248<i32>
l000012CA:
	sp_107 = sp_105 - 4<i32>
	Mem109[sp_107:word32] = 0x11A6D<32>
	r0 = fn00000AE7(r2, fn00002580(r4_112, r5_113, r6_114, r7_111, fp_110, sp_107, out r5_119, out r6_120, out r7_121, out fp_115, out sp_122), r5_119, r6_120, r7_121, fp_115, sp_122 - 252<i32>, out r4, out r5, out r6, out r7, out fp_10, out sp_137)
l000012DF:
	r4_20 = fn000009BD(r0, r2, r4, r5, r6, r7, fp_10, sp_137, out r5_21, out r6_22, out r7_23, out fp_17, out sp_24)
	branch fn0000099F(r4_20, r5_21, r6_22, r7_23, fp_17, sp_24, out fp_30, out sp_33) == 0<i32> l00001280
l000012F0:
	fp_144 = Mem39[fp_30:word32]
	r6Out = r6_22
	r7Out = r7_23
	fpOut = fp_144
	spOut = fp_30 + 4<i32>
	return r5_21
fn0000127A_exit:


word32 fn000012F4(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000B29
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D r5:[0..31]-fn0000079D r6:[0..31]-fn0000079D r7:[0..31]-fn0000079D sp:[0..31]-fn0000079D
// Trashed: SSSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn000012F4_entry:
l000012F4:
	Mem6[sp - 4<i32>:word32] = fp
	Mem10[sp - 520<i32>:word32] = sp - 516<i32>
	branch Mem10[sp - 520<i32>:word32] >= sp - 4<i32> l0000131B
l00001307:
	r0_16 = Mem15[sp - 520<i32>:word32]
	Mem18[sp - 520<i32>:word32] = Mem15[sp - 520<i32>:word32] + 1<i32>
	Mem21[r0_16:int8] = 0<i8>
	branch Mem21[sp - 520<i32>:word32] < sp - 4<i32> l00001307
l0000131B:
	Mem29[sp - 0x208<32>:word32] = sp - 516<i32>
	r5_44 = fn00001BA2(r4, r5, r6, r7, sp - 4<i32>, sp - 0x208<32>, out r6_45, out r7_46, out fp_42, out sp_63)
	fp_55 = Mem29[fp_42:word32]
	r6Out = r6_45
	r7Out = r7_46
	fpOut = fp_55
	spOut = fp_42 + 4<i32>
	return r5_44
fn000012F4_exit:


word32 fn0000132C(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000127A
//      fn0000161F
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000161F r2:[0..31]-fn0000161F r4:[0..31]-fn0000161F r5:[0..31]-fn0000161F r6:[0..31]-fn0000161F r7:[0..31]-fn0000161F sp:[0..31]-fn0000161F
// Trashed: SSSSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: SP0
fn0000132C_entry:
l0000132C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	Mem17[sp - 16<i32>:word32] = r7_15
	r4_25 = fn00001390(r4, r5, r6, r7_15, sp - 4<i32>, sp - 16<i32>, out r5_26, out r6_21, out r7_22, out fp_20, out sp_27)
	Mem34[sp_27 - 256<i32>:word32] = CONVERT(Mem17[r7_22 + 10<i32>:byte], byte, word32)
	Mem37[sp_27 - 260<i32>:word32] = CONVERT(Mem34[r7_22 + 8<i32>:byte], byte, word32)
	Mem40[sp_27 - 264<i32>:word32] = 0x11A6F<32>
	r4_44 = fn00002580(r4_25, r5_26, r6_21, r7_22, fp_20, sp_27 - 264<i32>, out r5_45, out r6_46, out r7_47, out fp_41, out sp_48)
	Mem56[sp_48 - 248<i32>:word32] = Mem40[r7_47 + 16<i32>:word32]
	Mem59[sp_48 - 252<i32>:word32] = 0x11A77<32>
	r4_63 = fn00002580(r4_44, r5_45, r6_46, r7_47, fp_41, sp_48 - 252<i32>, out r5_64, out r6_65, out r7_66, out fp_60, out sp_67)
	Mem74[sp_67 - 248<i32>:word32] = r7_66 + 24<i32>
	r0_76 = fn00001D94(r4_63, r5_64, r6_65, r7_66, fp_60, sp_67 - 248<i32>, out r2_78, out r4_79, out r5_80, out r7_82, out fp_75, out sp_83)
	Mem92[sp_83 - 252<i32>:word32] = r0_76 + 20<i32>
	Mem97[sp_83 - 256<i32>:word32] = r0_76 + 4<i32>
	Mem100[sp_83 - 260<i32>:word32] = 0x11A7C<32>
	r4_104 = fn00002580(r4_79, r5_80, r0_76, r7_82, fp_75, sp_83 - 260<i32>, out r5_105, out r6_106, out r7_107, out fp_101, out sp_108)
	Mem114[sp_108 - 244<i32>:word32] = r7_107
	Mem116[sp_108 - 240<i32>:word32] = r6_106
	fp_118 = Mem116[fp_101:word32]
	r4Out = r4_104
	r5Out = r5_105
	r6Out = r6_106
	r7Out = r7_107
	fpOut = fp_118
	spOut = fp_101 + 4<i32>
	return r2_78
fn0000132C_exit:


word32 fn00001390(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000132C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000132C r4:[0..31]-fn0000132C r5:[0..31]-fn0000132C r6:[0..31]-fn0000132C r7:[0..31]-fn0000132C sp:[0..31]-fn0000132C
// Trashed: SSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SS SP0
fn00001390_entry:
l00001390:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	fp_30 = sp - 4<i32>
	sp_12 = sp - 12<i32>
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = 0x116B0<32>
	branch false l000013BE
l000013A4:
	sp_20 = sp_12 - 4<i32>
	Mem22[sp_20:word32] = r7_15
	Mem29[sp_20 - 4<i32>:word32] = Mem22[r6_16:word32]
	r4 = fn000013C2(r4, r5, r6_16 + 4<i32>, r7_15, fp_30, sp_20 - 4<i32>, out r5, out r6_16, out r7_15, out fp_30, out sp_40)
	sp_12 = sp_40 - 248<i32>
	branch r6_16 < 0x116D4<32> l000013A4
l000013BE:
	Mem51[sp_12:word32] = r7_15
	Mem54[sp_12 + 4<i32>:word32] = r6_16
	fp_57 = Mem54[fp_30:word32]
	r5Out = r5
	r6Out = r6_16
	r7Out = r7_15
	fpOut = fp_57
	spOut = fp_30 + 4<i32>
	return r4
fn00001390_exit:


word32 fn000013C2(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001390
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001390 r4:[0..31]-fn00001390 r5:[0..31]-fn00001390 r6:[0..31]-fn00001390 r7:[0..31]-fn00001390 sp:[0..31]-fn00001390
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000013C2_entry:
l000013C2:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r6_15 = Mem14[sp + 4<i32>:word32]
	r7_16 = Mem14[r6_15:word32]
l000013CB:
	r6_15 = r6_15 + 4<i32>
	r7_16 = r7_16 + -1<i32>
	branch r7_16 < 0<i32> l000013E3
l000013D3:
	r6_15 = r6_15 + 4<i32>
	branch (CONVERT(Mem14[Mem14[sp + 8<i32>:ptr32] + 4<i32>:byte], byte, word32) & Mem14[r6_15:word32]) == 0<i32> l000013CB
l000013E3:
	Mem39[sp - 16<i32>:word32] = Mem14[r6_15:word32]
	Mem42[sp - 20<i32>:word32] = 0x11A8E<32>
	r4_54 = fn00002580(r4, r5, r6_15, r7_16, sp - 4<i32>, sp - 20<i32>, out r5_55, out r6_56, out r7_57, out fp_51, out sp_58)
	Mem64[sp_58 - 248<i32>:word32] = r7_57
	Mem66[sp_58 - 244<i32>:word32] = r6_56
	fp_68 = Mem66[fp_51:word32]
	r5Out = r5_55
	r6Out = r6_56
	r7Out = r7_57
	fpOut = fp_68
	spOut = fp_51 + 4<i32>
	return r4_54
fn000013C2_exit:


word32 fn000013F9(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000FF5 r6:[0..31]-fn00000FF5 r7:[0..31]-fn00000FF5
// Trashed: SSSSS fp r0 r1 r6 r7
// Preserved: sp SP0
fn000013F9_entry:
l000013F9:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r6
	Mem14[sp - 0x10<32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	sp_106 = sp - 0x10<32>
	r6_135 = r7_15 + 1<i32>
	branch Mem14[r7_15 + 1<i32>:byte] == 0<8> l000014C5
l0000140C:
	branch Mem23[r6_135:byte] == 0x2F<8> l000014BA
l00001413:
	Mem27[r6_135:int8] = 0<i8>
	sp_29 = sp_106 - 4<i32>
	Mem31[sp_29:int32] = 1<i32>
	Mem34[sp_29 - 4<i32>:word32] = r7_15
	sp_106 = sp_29 - 252<i32>
	branch fn00003864() >= 0<i32> l000014B6
l00001428:
	branch fn000034FC(sp_29 - 252<i32>) == 0<i32> l00001485
l00001433:
	Mem49[sp_29 - 256<i32>:int32] = 0<i32>
	Mem51[sp_29 - 260<i32>:word32] = r7_15
	Mem54[sp_29 - 264<i32>:word32] = 0x11A9C<32>
	Mem57[sp_29 - 268<i32>:word32] = 0x11A91<32>
	fp_59 = fn000034AC(sp - 4<i32>, sp_29 - 268<i32>, out sp_62)
	Mem66[sp_62 - 244<i32>:int32] = 0<i32>
	Mem68[sp_62 - 248<i32>:word32] = r7_15
	Mem71[sp_62 - 252<i32>:word32] = 0x11AB1<32>
	Mem74[sp_62 - 256<i32>:word32] = 0x11AA2<32>
	fp_75 = fn000034AC(fp_59, sp_62 - 256<i32>, out sp_78)
	Mem82[sp_78 - 244<i32>:word32] = 0x11AB7<32>
	Mem85[sp_78 - 248<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6_135, r7_15, fp_75, sp_78 - 248<i32>, out r4_191, out r5_92, out r6_93, out r7_94, out fp_88, out sp_95)
	Mem103[sp_95 - 252<i32>:int32] = 0<i32>
	fn00001772(r5_92, r6_93, r7_94, fp_88, sp_95 - 252<i32>)
l00001485:
	Mem107[sp_192:word32] = sp - 8<i32>
	sp_106 = sp_192 - 252<i32>
	sp_192 = sp_106
	branch fn00005588(sp_192) >= 0<i32> l00001485
l00001495:
	branch Mem107[0x00014C44<p32>:word32] == 0<i32> l000014B6
l0000149D:
	Mem120[sp_106 - 4<i32>:word32] = CONVERT(Mem107[0x00014C12<p32>:byte], byte, word32)
	Mem123[sp_106 - 8<i32>:word32] = CONVERT(Mem120[0x00014C10<p32>:byte], byte, word32)
	Mem126[sp_106 - 12<i32>:word32] = r7_15
	fn00001D80()
	sp_106 = sp_106 - 256<i32>
l000014B6:
	Mem133[r6_135:byte] = 0x2F<8>
l000014BA:
	r6_135 = r6_135 + 1<i32>
	branch Mem137[r6_135:byte] == 0<8> l0000140C
l000014C5:
	Mem147[sp_106:word32] = r7_15
	Mem150[sp_106 + 4<i32>:word32] = r6_135
	fp_155 = Mem150[sp - 4<i32>:word32]
	r7Out = r7_15
	fpOut = fp_155
	return r6_135
fn000013F9_exit:


word32 fn00001532(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000B29 r4:[0..31]-fn00000B29 r5:[0..31]-fn00000B29 sp:[0..31]-fn00000B29
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00001532_entry:
l00001532:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = 0x12204<32>
	branch false l00001553
l00001546:
	Mem21[r6_16:int8] = 0<i8>
	r6_16 = r6_16 + 1<i32>
	branch r6_16 < 0x12404<32> l00001546
l00001553:
	Mem34[sp - 16<i32>:word32] = CONVERT(Mem28[r7_15 + 4<i32>:byte], byte, word32) & 0xFFF<32>
	Mem37[sp - 20<i32>:word32] = 0x11AD0<32>
	Mem40[sp - 24<i32>:word32] = 0x12268<32>
	r4_53 = fn000031E0(r4, r5, r6_16, r7_15, sp - 4<i32>, sp - 24<i32>, out r5_54, out r6_55, out r7_56, out fp_50, out sp_57)
	Mem66[sp_57 - 248<i32>:word32] = CONVERT(Mem40[r7_56 + 8<i32>:byte], byte, word32)
	Mem69[sp_57 - 252<i32>:word32] = 0x11AD5<32>
	Mem72[sp_57 - 256<i32>:word32] = 0x12270<32>
	r4_76 = fn000031E0(r4_53, r5_54, r6_55, r7_56, fp_50, sp_57 - 256<i32>, out r5_77, out r6_78, out r7_79, out fp_73, out sp_80)
	Mem89[sp_80 - 248<i32>:word32] = CONVERT(Mem72[r7_79 + 10<i32>:byte], byte, word32)
	Mem92[sp_80 - 252<i32>:word32] = 0x11ADA<32>
	Mem95[sp_80 - 256<i32>:word32] = 0x12278<32>
	r4_99 = fn000031E0(r4_76, r5_77, r6_78, r7_79, fp_73, sp_80 - 256<i32>, out r5_100, out r6_101, out r7_102, out fp_96, out sp_103)
	Mem112[sp_103 - 248<i32>:word32] = Mem95[r7_102 + 16<i32>:word32]
	Mem115[sp_103 - 252<i32>:word32] = 0x11ADF<32>
	Mem118[sp_103 - 256<i32>:word32] = 0x12280<32>
	r4_122 = fn000031E0(r4_99, r5_100, r6_101, r7_102, fp_96, sp_103 - 256<i32>, out r5_123, out r6_124, out r7_125, out fp_119, out sp_126)
	Mem135[sp_126 - 248<i32>:word32] = Mem118[r7_125 + 24<i32>:word32]
	Mem138[sp_126 - 252<i32>:word32] = 0x11AE6<32>
	Mem141[sp_126 - 256<i32>:word32] = 0x1228C<32>
	r4_145 = fn000031E0(r4_122, r5_123, r6_124, r7_125, fp_119, sp_126 - 256<i32>, out r5_146, out r6_147, out r7_148, out fp_142, out sp_149)
	Mem156[sp_149 - 244<i32>:word32] = r7_148
	Mem158[sp_149 - 240<i32>:word32] = r6_147
	fp_160 = Mem158[fp_142:word32]
	r5Out = r5_146
	fpOut = fp_160
	spOut = fp_142 + 4<i32>
	return r4_145
fn00001532_exit:


word32 fn000015DA(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000009BD
//      fn00000B29
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000009BD r0:[0..31]-fn000009BD r6:[0..31]-fn000009BD r7:[0..31]-fn000009BD
// Trashed: SSSSS fp r0 r6 r7
// Preserved: sp SP0
fn000015DA_entry:
l000015DA:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r6_15 = 0x12298<32>
	branch false l000015F9
l000015EB:
	Mem20[r6_15:byte] = 0x20<8>
	r6_15 = r6_15 + 1<i32>
	branch r6_15 < 0x122A0<32> l000015EB
l000015F9:
	r7_25 = 0<i32>
	r6_26 = 0x12204<32>
	branch false l00001619
l00001609:
	r7_25 = r7_25 + CONVERT(Mem55[r6_26:byte], byte, int32)
	r6_26 = r6_26 + 1<i32>
	branch r6_26 < 0x12404<32> l00001609
l00001619:
	Mem44[sp - 12<i32>:word32] = r7_25
	Mem47[sp - 8<i32>:word32] = r6_26
	fp_53 = Mem47[sp - 4<i32>:word32]
	r6Out = r6_26
	r7Out = r7_25
	fpOut = fp_53
	return r7_25
fn000015DA_exit:


word32 fn0000161F(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r2Out, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
//      fn00000FF5
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000FF5 r0:[0..31]-fn00000FF5 r2:[0..31]-fn00000FF5 r4:[0..31]-fn00000FF5 r5:[0..31]-fn00000FF5 r6:[0..31]-fn00000FF5 r7:[0..31]-fn00000FF5 sp:[0..31]-fn00000FF5
// Trashed: SSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: SS SP0
fn0000161F_entry:
l0000161F:
	Mem6[sp - 4<i32>:word32] = fp
	fp_7 = sp - 4<i32>
	branch Mem6[0x00014C50<p32>:word32] == 0<i32> l00001674
l0000162B:
	Mem13[sp - 8<i32>:word32] = Mem6[sp + 4<i32>:word32]
	Mem16[sp - 12<i32>:word32] = 0x11AED<32>
	r4_24 = fn00002580(r4, r5, r6, r7, sp - 4<i32>, sp - 12<i32>, out r5_25, out r6_26, out r7_27, out fp_21, out sp_28)
	sp_33 = sp_28 - 248<i32>
	branch Mem16[0x00014C30<p32>:word32] == 0<i32> l00001654
l00001645:
	Mem38[sp_28 - 252<i32>:word32] = 0x14C08<32>
	r2 = fn0000132C(r4_24, r5_25, r6_26, r7_27, fp_21, sp_28 - 252<i32>, out r4_24, out r5_25, out r6_26, out r7_27, out fp_21, out sp_47)
	sp_33 = sp_47 - 252<i32>
l00001654:
	sp_55 = sp_33 - 4<i32>
	Mem59[sp_55:word32] = Mem57[fp_21 + 12<i32>:word32]
	Mem62[sp_55 - 4<i32>:word32] = 0x11AF1<32>
	r4 = fn00002580(r4_24, r5_25, r6_26, r7_27, fp_21, sp_55 - 4<i32>, out r5_71, out r6_72, out r7_73, out fp_67, out sp_74)
	branch fn0000167E(r4, r5_71, r6_72, r7_73, fp_67, sp_74 - 248<i32>, out r5, out r6, out r7, out fp_7) == 0x79<32> l0000167A
l00001674:
	r0_117 = 1<i32>
l00001676:
	fp_101 = Mem99[fp_7:word32]
	r2Out = r2
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_101
	spOut = fp_7 + 4<i32>
	return r0_117
l0000167A:
	r0_117 = 0<i32>
	goto l00001676
fn0000161F_exit:


word32 fn0000167E(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000161F
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000161F r0:[0..31]-fn0000161F r5:[0..31]-fn0000161F r6:[0..31]-fn0000161F r7:[0..31]-fn0000161F
// Trashed: SSSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn0000167E_entry:
l0000167E:
	Mem6[sp - 4<i32>:word32] = fp
	Mem10[0x0001204C<p32>:word32] = Mem6[0x0001204C<p32>:word32] + -1<i32>
	fp_27 = sp - 4<i32>
	sp_39 = sp - 8<32>
	branch Mem10[0x0001204C<p32>:word32] >= 0<i32> l000016A6
l0000168F:
	Mem22[sp - 0xC<32>:word32] = 0x1204C<32>
	Mem43[fp_27 - 1<i32>:byte] = SLICE(fn000030D0(r4, r5, r6, r7, sp - 4<i32>, sp - 0xC<32>, out r5, out r6, out r7, out fp_27, out sp_33), byte, 0)
	sp_39 = sp_33 - 252<i32>
	goto l000016B6
l000016A6:
	r0_14 = Mem10[0x00012050<p32>:word32]
	Mem16[0x00012050<p32>:word32] = Mem10[0x00012050<p32>:word32] + 1<i32>
	Mem19[sp - 5<i32>:byte] = Mem16[r0_14:byte]
l000016B6:
	branch Mem45[fp_27 - 1<i32>:byte] == 0xA<8> l000016C8
l000016BC:
	Mem85[fp_27 - 1<i32>:byte] = 0x6E<8>
l000016C0:
	r0_90 = CONVERT(Mem88[fp_27 - 1<i32>:byte], byte, int32)
	fp_92 = Mem88[fp_27:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_92
	return r0_90
l000016C8:
	Mem50[0x0001204C<p32>:word32] = Mem48[0x0001204C<p32>:word32] + -1<i32>
	branch Mem50[0x0001204C<p32>:word32] >= 0<i32> l000016E7
l000016D6:
	sp_60 = sp_39 - 4<i32>
	Mem62[sp_60:word32] = 0x1204C<32>
	r0_58 = fn000030D0(r4, r5, r6, r7, fp_27, sp_60, out r5, out r6, out r7, out fp_27, out sp_74)
	sp_39 = sp_74 - 252<i32>
	goto l000016F7
l000016E7:
	r0_54 = Mem50[0x00012050<p32>:word32]
	Mem56[0x00012050<p32>:word32] = Mem50[0x00012050<p32>:word32] + 1<i32>
	r0_58 = CONVERT(Mem56[r0_54:byte], byte, word32)
l000016F7:
	branch r0_58 == 0xA<32> l000016C8
l000016FF:
	goto l000016C0
fn0000167E_exit:


word32 fn00001701(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000B29 r0:[0..31]-fn00000B29 r4:[0..31]-fn00000B29 r5:[0..31]-fn00000B29 r6:[0..31]-fn00000B29 r7:[0..31]-fn00000B29 sp:[0..31]-fn00000B29
// Trashed: SSSSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: SP0
fn00001701_entry:
l00001701:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x74<32>:word32] = Mem6[0x00014C68<p32>:word32]
	r5_18 = fn0000263C(r5, r6, r7, sp - 4<i32>, sp - 0x74<32>, out r6_19, out r7_20, out fp_15, out sp_21)
	Mem29[sp_21 - 256<i32>:word32] = Mem11[fp_15 + 8<i32>:word32]
	Mem46[fp_100 - 108<i32>:word32] = fn000018B0(r4, r5_18, r6_19, r7_20, fp_15, sp_21 - 256<i32>, out r4_122, out r5_124, out r6_126, out r7_128, out fp_100, out sp_39)
	branch Mem46[fp_100 - 108<i32>:word32] < 0<i32> l00001768
l0000172C:
	Mem52[sp_39 - 256<i32>:int32] = 0<i32>
	Mem55[sp_39 - 260<i32>:word32] = Mem52[fp_100 - 108<i32>:word32]
	Mem58[sp_39 - 264<i32>:word32] = Mem55[0x00014C68<p32>:word32]
	r5_63 = fn0000236C(r5_124, r6_126, r7_128, fp_100, sp_39 - 264<i32>, out r6_64, out r7_61, out fp_59, out sp_65)
	Mem73[sp_65 - 244<i32>:word32] = fp_59 - 104<i32>
	Mem75[sp_65 - 244<i32>:word32] = fp_59 - 100<i32>
	Mem78[sp_65 - 248<i32>:word32] = 0x11AF6<32>
	Mem81[sp_65 - 252<i32>:word32] = Mem78[0x00014C68<p32>:word32]
	r4_122 = fn000026A0(r4_122, r5_63, r6_64, r7_61, fp_59, sp_65 - 252<i32>, out r5_124, out r6_126, out r7_128, out fp_100)
	branch Mem81[0x00014C20<p32>:word32] <= Mem81[fp_100 - 104<i32>:word32] l0000176E
l00001768:
	r0_117 = 1<i32>
l0000176A:
	fp_105 = Mem103[fp_100:word32]
	r4Out = r4_122
	r5Out = r5_124
	r6Out = r6_126
	r7Out = r7_128
	fpOut = fp_105
	spOut = fp_100 + 4<i32>
	return r0_117
l0000176E:
	r0_117 = 0<i32>
	goto l0000176A
fn00001701_exit:


void fn00001772(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn00000776
//      fn0000079D
//      fn000009BD
//      fn00000FF5
//      fn000013F9
//      fn00001A4F
//      fn00001BA2
//      fn00001C95
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut:
// Trashed:
// Preserved: SP0
// Terminates process
fn00001772_entry:
l00001772:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = 0x115E0<32>
	fn00003978()
	Mem17[sp - 264<i32>:word32] = Mem11[sp + 4<i32>:word32]
	fn000055C4(r5, r6, r7, sp - 4<i32>, sp - 264<i32>)
fn00001772_exit:


word32 fn00001794(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000FF5 r0:[0..31]-fn00000FF5 r6:[0..31]-fn00000FF5 r7:[0..31]-fn00000FF5
// Trashed: SSSSS fp r0 r1 r6 r7
// Preserved: sp SP0
fn00001794_entry:
l00001794:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = Mem14[sp + 8<i32>:word32]
	goto l000017BB
l0000179F:
	r7_15 = r7_15 + 1<i32>
	r6_16 = r6_16 + 1<i32>
	branch Mem14[r7_15:byte] == Mem14[r6_16:byte] l000017BB
l000017AD:
	r0_30 = 0<i32>
	goto l000017B7
l000017B1:
	r0_30 = CONVERT(Mem14[r6_16:byte] == 0x2F<8>, bool, word32)
l000017B7:
	Mem41[sp - 12<i32>:word32] = r7_15
	Mem44[sp - 8<i32>:word32] = r6_16
	fp_48 = Mem44[sp - 4<i32>:word32]
	r6Out = r6_16
	r7Out = r7_15
	fpOut = fp_48
	return r0_30
l000017BB:
	branch Mem14[r7_15:byte] == 0<8> l0000179F
l000017C3:
	branch Mem14[r6_16:byte] == 0<8> l000017B1
l000017CB:
	r0_30 = 1<i32>
	goto l000017B7
fn00001794_exit:


word32 fn000017CF(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D
// Trashed: SSSSS fp r0 r1 r2
// Preserved: sp SP0
fn000017CF_entry:
l000017CF:
	Mem6[sp - 4<i32>:word32] = fp
	Mem10[sp - 0x10<32>:word32] = sp - 16<i32>
	fn00002564(sp - 0x10<32>)
	Mem20[sp - 8<i32>:word32] = fn000034FC(sp - 0x10C<32>)
	sp_106 = sp - 0x10C<32>
	branch Mem20[sp - 8<i32>:word32] == 0<i32> l00001863
l000017EF:
	Mem26[sp - 0x110<32>:int32] = 1<i32>
	fn000050E0()
	Mem32[sp - 0x210<32>:word32] = Mem26[sp - 12<i32>:word32]
	fn000022A0()
	Mem38[sp - 0x310<32>:int32] = 0<i32>
	Mem41[sp - 0x314<32>:word32] = 0x11B06<32>
	Mem44[sp - 0x318<32>:word32] = 0x11AFD<32>
	fp_45 = fn000034AC(sp - 4<i32>, sp - 0x318<32>, out sp_48)
	Mem52[sp_48 - 248<i32>:int32] = 0<i32>
	Mem55[sp_48 - 252<i32>:word32] = 0x11B17<32>
	Mem58[sp_48 - 256<i32>:word32] = 0x11B0A<32>
	fp_59 = fn000034AC(fp_45, sp_48 - 256<i32>, out sp_62)
	Mem66[sp_62 - 248<i32>:word32] = 0x11B1B<32>
	Mem69[sp_62 - 252<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, fp_59, sp_62 - 252<i32>, out r4_77, out r5_78, out r6_79, out r7_80, out fp_74, out sp_81)
	Mem89[sp_81 - 252<i32>:word32] = 0x11B28<32>
	fn00002580(r4_77, r5_78, r6_79, r7_80, fp_74, sp_81 - 252<i32>, out r5_94, out r6_95, out r7_96, out fp_90, out sp_97)
	Mem105[sp_97 - 256<i32>:int32] = 1<i32>
	fn000055C4(r5_94, r6_95, r7_96, fp_90, sp_97 - 256<i32>)
l00001863:
	sp_107 = sp_106 - 4<i32>
	Mem109[sp_107:int32] = 0<i32>
	sp_106 = sp_107 - 252<i32>
	branch fn00005588(sp_107) == -1<i32> l00001863
l00001872:
	Mem119[sp_107 - 252<i32>:ptr32] = 0x00000032<p32>
	Mem123[sp_107 - 256<i32>:word32] = Mem119[sp + 4<i32>:word32]
	Mem126[sp_107 - 260<i32>:word32] = Mem123[sp - 16<i32>:word32]
	fn000038C0()
	goto l00001889
l00001886:
	Mem135[sp + 4<i32>:word32] = Mem131[sp + 4<i32>:word32] + 1<i32>
l00001889:
	branch Mem131[Mem131[sp + 4<i32>:ptr32]:byte] == 0xA<8> l00001886
l00001890:
	Mem138[Mem131[sp + 4<i32>:ptr32]:int8] = 0<i8>
	Mem142[sp_107 - 508<i32>:word32] = Mem138[sp - 16<i32>:word32]
	fn000050E0()
	Mem148[sp_107 - 764<i32>:word32] = Mem142[sp - 12<i32>:word32]
	fn000050E0()
	return Mem148[sp - 4<i32>:word32]
fn000017CF_exit:


word32 fn000018B0(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001701
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001701 r0:[0..31]-fn00001701 r4:[0..31]-fn00001701 r5:[0..31]-fn00001701 r6:[0..31]-fn00001701 r7:[0..31]-fn00001701 sp:[0..31]-fn00001701
// Trashed: SSSSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: SP0
fn000018B0_entry:
l000018B0:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r7
	r7_12 = 0<i32>
	branch Mem11[Mem11[sp + 4<i32>:word32]:byte] == 0<8> l000018D6
l000018C0:
	branch Mem11[Mem11[sp + 4<i32>:word32] + r7_12:byte] == 0x20<8> l000018D6
l000018C9:
	r7_12 = r7_12 + 1<i32>
	branch Mem11[Mem11[sp + 4<i32>:word32] + r7_12:byte] == 0<8> l000018C0
l000018D6:
	Mem34[sp - 0x10<32>:word32] = Mem11[0x00014C64<p32>:word32]
	Mem37[sp - 0x14<32>:word32] = Mem34[0x00014C60<p32>:word32]
	Mem40[sp - 0x18<32>:word32] = r7_12
	Mem44[sp - 0x1C<32>:word32] = Mem40[sp + 4<i32>:word32]
	Mem69[fp_54 - 4<i32>:word32] = fn000018FA(r4, r5, r6, r7_12, sp - 4<i32>, sp - 0x1C<32>, out r4_58, out r5_59, out r6_60, out r7_61, out fp_54, out sp_62)
	r0_70 = Mem69[fp_54 - 4<i32>:word32]
	Mem71[sp_62 - 240<i32>:word32] = r7_61
	fp_73 = Mem71[fp_54:word32]
	r4Out = r4_58
	r5Out = r5_59
	r6Out = r6_60
	r7Out = r7_61
	fpOut = fp_73
	spOut = fp_54 + 4<i32>
	return r0_70
fn000018B0_exit:


word32 fn000018FA(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000018B0
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000018B0 r0:[0..31]-fn000018B0 r4:[0..31]-fn000018B0 r5:[0..31]-fn000018B0 r6:[0..31]-fn000018B0 r7:[0..31]-fn000018B0 sp:[0..31]-fn000018B0
// Trashed: SSSSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: SP0
fn000018FA_entry:
l000018FA:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xD8<32>:word32] = r6
	Mem14[sp - 0xDC<32>:word32] = r7
	Mem16[0x00014C74<p32>:int32] = 0<i32>
	fp_154 = sp - 4<i32>
	sp_12 = sp - 0xDC<32>
	goto l00001917
l00001906:
	Mem174[fp_154 + 20<i32>:word32] = Mem148[fp_154 - 204<i32>:word32]
	goto l00001917
l0000190D:
	branch r0_155 <= 0<i32> l000019EA
l00001912:
	Mem172[fp_154 + 16<i32>:word32] = Mem148[fp_154 - 208<i32>:word32]
l00001917:
	branch Mem18[fp_154 + 16<i32>:word32] >= Mem18[fp_154 + 20<i32>:word32] l0000199B
l0000191E:
	Mem27[fp_154 - 204<i32>:word32] = (Mem18[fp_154 + 20<i32>:word32] - Mem18[fp_154 + 16<i32>:word32]) / 2<32> + Mem18[fp_154 + 16<i32>:word32] - 100<i32>
	branch Mem27[fp_154 - 204<i32>:word32] >= Mem27[fp_154 + 16<i32>:word32] l00001940
l0000193B:
	Mem31[fp_154 - 204<i32>:word32] = Mem27[fp_154 + 16<i32>:word32]
l00001940:
	sp_34 = sp_12 - 4<i32>
	Mem36[sp_34:int32] = 0<i32>
	Mem40[sp_34 - 4<i32>:word32] = Mem36[fp_154 - 204<i32>:word32]
	Mem43[sp_34 - 8<i32>:word32] = Mem40[0x00014C68<p32>:word32]
	r5_54 = fn0000236C(r5, r6, r7, fp_154, sp_34 - 8<i32>, out r6_55, out r7_52, out fp_50, out sp_56)
	Mem65[sp_56 - 248<i32>:word32] = Mem43[0x00014C68<p32>:word32]
	Mem67[sp_56 - 248<i32>:ptr32] = 0x000000C8<p32>
	Mem70[sp_56 - 252<i32>:int32] = 1<i32>
	Mem72[sp_56 - 252<i32>:word32] = fp_50 - 200<i32>
	r4 = fn000022B4(r4, r5_54, r6_55, r7_52, fp_50, sp_56 - 252<i32>, out r5, out r6, out fp_154, out sp_82)
	Mem90[0x00014C74<p32>:word32] = Mem72[0x00014C74<p32>:word32] + 1<i32>
	sp_12 = sp_82 - 240<i32>
	r7 = 0<i32>
	branch false l00001994
l0000197E:
	branch Mem96[Mem96[fp_154 - 200<i32>:ptr32] + r7:byte] == 0xA<8> l00001994
l00001986:
	Mem101[fp_154 - 204<i32>:word32] = Mem96[fp_154 - 204<i32>:word32] + 1<i32>
	r7 = r7 + 1<i32>
	branch r7 < 0xC8<32> l0000197E
l00001994:
	branch Mem107[fp_154 - 204<i32>:word32] < Mem107[fp_154 + 20<i32>:word32] l000019A1
l0000199B:
	r0_170 = -1<i32>
l0000199D:
	Mem180[sp_12:word32] = r7
	Mem186[sp_12 + 4<i32>:word32] = r6
	fp_190 = Mem186[fp_154:word32]
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_190
	spOut = fp_154 + 4<i32>
	return r0_170
l000019A1:
	Mem111[fp_154 - 208<i32>:word32] = Mem107[fp_154 - 204<i32>:word32]
	r6 = r7
	r7_114 = r7 + 1<i32>
	branch r7_114 >= 0xC8<32> l000019C9
l000019B3:
	Mem121[fp_154 - 208<i32>:word32] = Mem119[fp_154 - 208<i32>:word32] + 1<i32>
	branch Mem121[Mem121[fp_154 - 200<i32>:ptr32] + r7_114:byte] == 0xA<8> l000019C9
l000019BF:
	r7_114 = r7_114 + 1<i32>
	branch r7_114 < 0xC8<32> l000019B3
l000019C9:
	Mem138[sp_82 - 244<i32>:word32] = Mem136[fp_154 + 12<i32>:word32]
	Mem141[sp_82 - 248<i32>:word32] = Mem138[fp_154 + 8<i32>:word32]
	Mem148[sp_82 - 252<i32>:word32] = fp_154 - 200<i32> + r7
	r0_155 = fn000019F1(r5, r7, r7_114, fp_154, sp_82 - 252<i32>, out fp_154)
	sp_12 = sp_82 - 496<i32>
	r7 = r0_155
	branch r0_155 >= 0<i32> l0000190D
l000019E7:
	goto l00001906
l000019EA:
	r0_170 = Mem148[fp_154 - 204<i32>:word32]
	goto l0000199D
fn000018FA_exit:


word32 fn000019F1(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000018FA
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000018FA r0:[0..31]-fn000018FA
// Trashed: SSSSS fp r0 r1 r2 r7
// Preserved: sp SP0
fn000019F1_entry:
l000019F1:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	branch Mem11[Mem11[sp + 4<i32>:ptr32]:byte] == 0xA<8> l00001A06
l000019FB:
	Mem16[sp - 12<i32>:int32] = 2<i32>
	fn000055C4(r5, r6, r7, sp - 4<i32>, sp - 12<i32>)
l00001A06:
	r7_19 = 0<i32>
	branch Mem11[sp + 12<i32>:word32] <= 0<i32> l00001A3E
l00001A0D:
	branch Mem11[Mem11[sp + 4<i32>:word32] + (r7_19 + 1<i32>):byte] > Mem11[Mem11[sp + 8<i32>:word32] + r7_19:byte] l00001A4B
l00001A1D:
	branch Mem11[Mem11[sp + 4<i32>:word32] + (r7_19 + 1<i32>):byte] >= Mem11[Mem11[sp + 8<i32>:word32] + r7_19:byte] l00001A37
l00001A2D:
	r0_52 = 1<i32>
	goto l00001A33
l00001A31:
	r0_52 = 0<i32>
l00001A33:
	Mem61[sp - 8<i32>:word32] = r7_19
	fpOut = Mem61[sp - 4<i32>:word32]
	return r0_52
l00001A37:
	r7_19 = r7_19 + 1<i32>
	branch r7_19 < Mem11[sp + 12<i32>:word32] l00001A0D
l00001A3E:
	branch Mem11[Mem11[sp + 4<i32>:word32] + (r7_19 + 1<i32>):byte] == 0x20<8> l00001A31
l00001A4B:
	r0_52 = -1<i32>
	goto l00001A33
fn000019F1_exit:


word32 fn00001A4F(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000009BD
//      fn00000AE7
//      fn00000FF5
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000009BD r0:[0..31]-fn00000AE7 r4:[0..31]-fn000009BD r5:[0..31]-fn000009BD r6:[0..31]-fn000009BD r7:[0..31]-fn000009BD sp:[0..31]-fn000009BD
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00001A4F_entry:
l00001A4F:
	Mem6[sp - 4<i32>:word32] = fp
	branch Mem6[0x00014C54<p32>:word32] >= Mem6[0x000115DC<p32>:word32] l00001A67
l00001A5E:
	branch Mem6[0x00014C58<p32>:word32] == 0<i32> l00001B70_in_fn00001A4F
l00001A67:
	branch Mem6[0x00014C58<p32>:word32] == 0<i32> l00001A7D
l00001A6F:
	branch Mem6[0x000115DC<p32>:word32] == 0<i32> l00001A7D
l00001A77:
	Mem52[sp - 12<i32>:ptr32] = 0x00000014<p32>
	goto l00001A84
l00001A7D:
	Mem50[sp - 12<i32>:word32] = Mem6[0x000115DC<p32>:word32]
l00001A84:
	Mem61[sp - 0x10<32>:word32] = Mem54[sp - 12<i32>:word32] << 9<8>
	Mem64[sp - 0x14<32>:word32] = 0x12404<32>
	Mem67[sp - 0x18<32>:word32] = Mem64[0x00014C38<p32>:word32]
	r0_68 = fn000038C0()
	Mem71[sp - 8<i32>:word32] = r0_68
	branch Mem71[sp - 8<i32>:word32] >= 0<i32> l00001ACC
l00001AAC:
	Mem77[sp - 0x110<32>:word32] = 0x11B2B<32>
	Mem80[sp - 0x114<32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 0x114<32>, out r4_271, out r5_98, out r6_99, out r7_100, out fp_94, out sp_101)
	Mem109[sp_101 - 252<i32>:int32] = 3<i32>
	fn00001772(r5_98, r6_99, r7_100, fp_94, sp_101 - 252<i32>)
l00001ACC:
	branch Mem71[0x00014C58<p32>:word32] == 0<i32> l00001AD2_thunk_fn00001B6A
	goto l00001AD5
l00001AD2_thunk_fn00001B6A:
	r0_116 = fn00001B6A(r0_68, r2, r5, r6, r7, sp - 4<i32>, sp - 0x10C<32>, out r5_117, out r6_118, out r7_119, out fp_115, out sp_120)
	r4Out = r4
	r5Out = r5_117
	r6Out = r6_118
	r7Out = r7_119
	fpOut = fp_115
	spOut = sp_120
	return r0_116
l00001AD5:
	branch Mem71[sp - 8<i32>:word32] %s 0x200<32> == 0<i32> l00001B03
l00001AE3:
	Mem129[sp - 0x110<32>:word32] = 0x11B41<32>
	Mem132[sp - 0x114<32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 0x114<32>, out r4_272, out r5_137, out r6_138, out r7_139, out fp_133, out sp_140)
	Mem148[sp_140 - 252<i32>:int32] = 3<i32>
	fn00001772(r5_137, r6_138, r7_139, fp_133, sp_140 - 252<i32>)
l00001B03:
	r0_149 = Mem71[sp - 8<i32>:word32]
	Mem151[sp - 8<i32>:word32] = r0_149 / 0x200<32>
	branch Mem151[0x00014C28<p32>:word32] == 0<i32> l00001B3D
l00001B18:
	branch Mem151[sp - 8<i32>:word32] == 1<i32> l00001B3D
l00001B1D:
	Mem158[sp - 0x110<32>:word32] = 0x11B5C<32>
	Mem161[sp - 0x114<32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 0x114<32>, out r4_273, out r5_166, out r6_167, out r7_168, out fp_162, out sp_169)
	Mem177[sp_169 - 252<i32>:int32] = 4<i32>
	fn00001772(r5_166, r6_167, r7_168, fp_162, sp_169 - 252<i32>)
l00001B3D:
	branch Mem151[sp - 8<i32>:word32] == Mem151[0x000115DC<p32>:word32] l00001B6A
	goto l00001B46
l00001B44_thunk_fn00001B6A:
	r0_189 = fn00001B6A(r0_149 / 0x200<32>, r2, r5, r6, r7, sp - 4<i32>, sp - 0x10C<32>, out r5_190, out r6_191, out r7_192, out fp_188, out sp_193)
	r4Out = r4
	r5Out = r5_190
	r6Out = r6_191
	r7Out = r7_192
	fpOut = fp_188
	spOut = sp_193
	return r0_189
l00001B46:
	branch Mem151[sp - 8<i32>:word32] == 1<i32> l00001B6A
	goto l00001B4B
l00001B49_thunk_fn00001B6A:
	r0_199 = fn00001B6A(r0_149 / 0x200<32>, r2, r5, r6, r7, sp - 4<i32>, sp - 0x10C<32>, out r5_200, out r6_201, out r7_202, out fp_198, out sp_203)
	r4Out = r4
	r5Out = r5_200
	r6Out = r6_201
	r7Out = r7_202
	fpOut = fp_198
	spOut = sp_203
	return r0_199
l00001B4B:
	Mem208[sp - 0x110<32>:word32] = Mem151[sp - 8<i32>:word32]
	Mem211[sp - 0x114<32>:word32] = 0x11B84<32>
	Mem214[sp - 0x118<32>:word32] = 0x1206C<32>
	r0_217 = fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 0x118<32>, out r4_219, out r5_220, out r6_221, out r7_222, out fp_216, out sp_223)
l00001B60_thunk_fn00001B63:
	r0_230 = fn00001B63(r0_217, r2, r5_220, r6_221, r7_222, fp_216, sp_223 - 244<i32>, out r5_231, out r6_232, out r7_233, out fp_229, out sp_234)
	r4Out = r4_219
	r5Out = r5_231
	r6Out = r6_232
	r7Out = r7_233
	fpOut = fp_229
	spOut = sp_234
	return r0_230
l00001B70_in_fn00001A4F:
	Mem17[Mem6[0x00014C54<p32>:ptr32] + r0 * 2<32>:byte] = Mem6[Mem6[0x00014C54<p32>:ptr32] + r0 * 2<32>:byte] | SLICE(r2, byte, 0)
	Mem19[0x00014C54<p32>:word32] = Mem17[0x00014C54<p32>:word32] + 1<i32>
	Mem24[sp - 0x10<32>:word32] = (r0 << 9<8>) + 0x12404<32>
	Mem27[sp - 0x14<32>:word32] = Mem24[sp + 4<i32>:word32]
	r5_32 = fn00001D50(r5, r6, r7, sp - 4<i32>, sp - 0x14<32>, out r6_33, out r7_34, out fp_31)
	fp_39 = Mem27[fp_31:word32]
	r4Out = r4
	r5Out = r5_32
	r6Out = r6_33
	r7Out = r7_34
	fpOut = fp_39
	spOut = fp_31 + 4<i32>
	return 0x00000200<p32>
fn00001A4F_exit:


word32 fn00001B63(word32 r0, word32 r2, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001A4F
//      fn00003514
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001A4F r0:[0..31]-fn00001A4F r5:[0..31]-fn00001A4F r6:[0..31]-fn00001A4F r7:[0..31]-fn00001A4F sp:[0..31]-fn00001A4F
// Trashed: SS fp r0 r5 r6 r7 sp
// Preserved: SP0
fn00001B63_entry:
l00001B63:
	Mem21[0x000115DC<p32>:word32] = Mem0[fp - 4<i32>:word32]
l00001B63_thunk_fn00001B6A:
	r0_29 = fn00001B6A(r0, r2, r5, r6, r7, fp, sp, out r5_30, out r6_31, out r7_32, out fp_28, out sp_33)
	r5Out = r5_30
	r6Out = r6_31
	r7Out = r7_32
	fpOut = fp_28
	spOut = sp_33
	return r0_29
fn00001B63_exit:


word32 fn00001B6A(word32 r0, word32 r2, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001A4F
//      fn00001B63
//      fn00003514
// MayUse:  fp:[0..31] r0:[0..31] r2:[0..7] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001A4F r0:[0..31]-fn00001A4F r5:[0..31]-fn00001A4F r6:[0..31]-fn00001A4F r7:[0..31]-fn00001A4F sp:[0..31]-fn00001A4F
// Trashed: SS fp r0 r5 r6 r7 sp
// Preserved: SP0
fn00001B6A_entry:
l00001B6A:
	Mem35[0x00014C54<p32>:int32] = 0<i32>
l00001B70_in_fn00001A4F:
	Mem40[Mem35[0x00014C54<p32>:ptr32] + r0 * 2<32>:byte] = Mem35[Mem35[0x00014C54<p32>:ptr32] + r0 * 2<32>:byte] | SLICE(r2, byte, 0)
	Mem42[0x00014C54<p32>:word32] = Mem40[0x00014C54<p32>:word32] + 1<i32>
	Mem48[sp - 4<i32>:word32] = (r0 << 9<8>) + 0x12404<32>
	Mem52[sp - 8<i32>:word32] = Mem48[fp + 8<i32>:word32]
	r5_57 = fn00001D50(r5, r6, r7, fp, sp - 8<i32>, out r6_58, out r7_59, out fp_56)
	fp_64 = Mem52[fp_56:word32]
	r5Out = r5_57
	r6Out = r6_58
	r7Out = r7_59
	fpOut = fp_64
	spOut = fp_56 + 4<i32>
	return 0x00000200<p32>
fn00001B6A_exit:


word32 fn00001BA2(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
//      fn000012F4
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000012F4 r5:[0..31]-fn000012F4 r6:[0..31]-fn000012F4 r7:[0..31]-fn000012F4 sp:[0..31]-fn00000B29
// Trashed: SSSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn00001BA2_entry:
l00001BA2:
	Mem6[sp - 4<i32>:word32] = fp
	Mem10[0x00014C58<p32>:int32] = 1<i32>
	sp_31 = sp - 4<i32>
	branch Mem10[0x000115DC<p32>:word32] == 0<i32> l00001BB9
l00001BB3:
	Mem14[0x000115DC<p32>:int32] = 1<i32>
l00001BB9:
	branch Mem15[0x00014C54<p32>:word32] < Mem15[0x000115DC<p32>:word32] l00001C11
l00001BC6:
	Mem22[sp - 8<i32>:word32] = Mem15[0x000115DC<p32>:word32] << 9<8>
	Mem25[sp - 12<i32>:word32] = 0x12404<32>
	Mem28[sp - 16<i32>:word32] = Mem25[0x00014C38<p32>:word32]
	sp_31 = sp - 260<i32>
	branch fn000055A4() >= 0<i32> l00001C0B
l00001BEB:
	Mem36[sp - 264<i32>:word32] = 0x11B99<32>
	Mem39[sp - 268<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 268<i32>, out r4_162, out r5_53, out r6_54, out r7_55, out fp_49, out sp_56)
	Mem64[sp_56 - 252<i32>:int32] = 2<i32>
	fn00001772(r5_53, r6_54, r7_55, fp_49, sp_56 - 252<i32>)
l00001C0B:
	Mem66[0x00014C54<p32>:int32] = 0<i32>
l00001C11:
	sp_68 = sp_31 - 4<i32>
	Mem72[sp_68:word32] = Mem70[sp + 4<i32>:word32]
	r0_73 = Mem72[0x00014C54<p32>:word32]
	Mem75[0x00014C54<p32>:word32] = Mem72[0x00014C54<p32>:word32] + 1<i32>
	Mem80[sp_68 - 4<i32>:word32] = (r0_73 << 9<8>) + 0x12404<32>
	r5_85 = fn00001D50(r5, r6, r7, sp - 4<i32>, sp_68 - 4<i32>, out r6_86, out r7_87, out fp_84)
	branch Mem80[0x00014C54<p32>:word32] < Mem80[0x000115DC<p32>:word32] l00001C8D
l00001C42:
	Mem96[sp_68 - 256<i32>:word32] = Mem80[0x000115DC<p32>:word32] << 9<8>
	Mem99[sp_68 - 260<i32>:word32] = 0x12404<32>
	Mem102[sp_68 - 264<i32>:word32] = Mem99[0x00014C38<p32>:word32]
	branch fn000055A4() >= 0<i32> l00001C87
l00001C67:
	Mem110[sp_68 - 512<i32>:word32] = 0x11BB0<32>
	Mem113[sp_68 - 516<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5_85, r6_86, r7_87, fp_84, sp_68 - 516<i32>, out r4_163, out r5_119, out r6_120, out r7_121, out fp_115, out sp_122)
	Mem130[sp_122 - 252<i32>:int32] = 2<i32>
	fn00001772(r5_119, r6_120, r7_121, fp_115, sp_122 - 252<i32>)
l00001C87:
	Mem132[0x00014C54<p32>:int32] = 0<i32>
l00001C8D:
	fp_137 = Mem136[fp_84:word32]
	r6Out = r6_86
	r7Out = r7_87
	fpOut = fp_137
	spOut = fp_84 + 4<i32>
	return r5_85
fn00001BA2_exit:


word32 fn00001C95(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000099F
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000099F
// Trashed: SSSSS fp r0 r1
// Preserved: sp SP0
fn00001C95_entry:
l00001C95:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:int32] = 1<i32>
	Mem14[sp - 12<i32>:int32] = 65024<i32>
	Mem17[sp - 16<i32>:word32] = Mem14[0x00014C38<p32>:word32]
	fn00003898()
	branch Mem17[0x00014C54<p32>:word32] < Mem17[0x000115DC<p32>:word32] l00001D24
l00001CBB:
	Mem26[0x00014C54<p32>:word32] = Mem17[0x000115DC<p32>:word32] + -1<i32>
	Mem30[sp - 264<i32>:word32] = Mem26[0x000115DC<p32>:word32] << 9<8>
	Mem33[sp - 268<i32>:word32] = 0x12404<32>
	Mem36[sp - 272<i32>:word32] = Mem33[0x00014C38<p32>:word32]
	branch fn000038C0() >= 0<i32> l00001D0E
l00001CEE:
	Mem44[sp - 520<i32>:word32] = 0x11BC7<32>
	Mem47[sp - 524<i32>:word32] = 0x1206C<32>
	fn000025E4(r4, r5, r6, r7, sp - 4<i32>, sp - 524<i32>, out r4_101, out r5_56, out r6_57, out r7_58, out fp_52, out sp_59)
	Mem67[sp_59 - 252<i32>:int32] = 4<i32>
	fn00001772(r5_56, r6_57, r7_58, fp_52, sp_59 - 252<i32>)
l00001D0E:
	Mem70[sp - 520<i32>:int32] = 1<i32>
	Mem73[sp - 524<i32>:int32] = 65024<i32>
	Mem76[sp - 528<i32>:word32] = Mem73[0x00014C38<p32>:word32]
	fn00003898()
l00001D24:
	return Mem82[sp - 4<i32>:word32]
fn00001C95_exit:


word32 fn00001D28(word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
// MayUse:  fp:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D
// Trashed: fp r0 r1
// Preserved: sp SP0
fn00001D28_entry:
l00001D28:
	Mem6[sp - 4<i32>:word32] = fp
	Mem12[sp - 8<i32>:word32] = Mem6[0x000115DC<p32>:word32] << 9<8>
	Mem15[sp - 12<i32>:word32] = 0x12404<32>
	Mem18[sp - 16<i32>:word32] = Mem15[0x00014C38<p32>:word32]
	fn000055A4()
	return Mem18[sp - 4<i32>:word32]
fn00001D28_exit:


word32 fn00001D50(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001A4F
//      fn00001BA2
//      fn00003514
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001A4F r5:[0..31]-fn00001A4F r6:[0..31]-fn00001A4F r7:[0..31]-fn00001A4F
// Trashed: SS fp r5 r6 r7
// Preserved: sp SP0
fn00001D50_entry:
l00001D50:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r5
	Mem14[sp - 12<i32>:word32] = r6
	Mem17[sp - 16<i32>:word32] = r7
	r7_18 = Mem17[sp + 4<i32>:word32]
	r6_19 = Mem17[sp + 8<i32>:word32]
	r5_20 = 0x00000200<p32>
l00001D5D:
	Mem25[r7_18:byte] = Mem22[r6_19:byte]
	v11_30 = r5_20 - 1<i32>
	r6_19 = r6_19 + 1<i32>
	r7_18 = r7_18 + 1<i32>
	r5_20 = v11_30
	branch v11_30 == 0<32> l00001D5D
l00001D68:
	Mem33[sp - 16<i32>:word32] = r7_18
	Mem35[sp - 12<i32>:word32] = r6_19
	Mem37[sp - 8<i32>:word32] = v11_30
	fp_40 = Mem37[sp - 4<i32>:word32]
	r6Out = r6_19
	r7Out = r7_18
	fpOut = fp_40
	return v11_30
fn00001D50_exit:


void fn00001D6C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000B29
// MayUse: 
// LiveOut:
// Trashed: r0 r1
// Preserved: SP0
fn00001D6C_entry:
l00001D6C:
	__syscall()
	branch !F l00001D7B
l00001D75:
	goto l000055B8_in_fn00001D6C
l00001D7B:
	return
l000055B8_in_fn00001D6C:
	Mem8[0x00012200<p32>:word32] = 0x0000000C<p32>
	return
fn00001D6C_exit:


void fn00001D80()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
//      fn000013F9
// MayUse: 
// LiveOut:
// Trashed: r0 r1
// Preserved: SP0
fn00001D80_entry:
l00001D80:
	__syscall()
	branch !F l00001D8F
l00001D89:
	goto l000055B8_in_fn00001D80
l00001D8F:
	return
l000055B8_in_fn00001D80:
	Mem8[0x00012200<p32>:word32] = 0x00000010<p32>
	return
fn00001D80_exit:


word32 fn00001D94(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r2Out, word32 & r4Out, word32 & r5Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000132C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000132C r0:[0..31]-fn0000132C r2:[0..31]-fn0000132C r4:[0..31]-fn0000132C r5:[0..31]-fn0000132C r7:[0..31]-fn0000132C sp:[0..31]-fn0000132C
// Trashed: SSSSS fp r0 r1 r2 r4 r5 r6 r7 sp
// Preserved: SP0
fn00001D94_entry:
l00001D94:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = Mem6[sp + 4<i32>:word32]
	Mem31[sp_23 - 256<i32>:word32] = fn00001DB2(r4, r5, r6, r7, sp - 4<i32>, sp - 8<i32>, out r4_19, out r5_20, out r6_21, out r7_22, out fp_16, out sp_23)
	r0_33 = fn0000204C(r5_20, r6_21, r7_22, fp_16, sp_23 - 256<i32>, out r2_35, out r5_36, out r7_38, out fp_32)
	fp_46 = Mem31[fp_32:word32]
	r2Out = r2_35
	r4Out = r4_19
	r5Out = r5_36
	r7Out = r7_38
	fpOut = fp_46
	spOut = fp_32 + 4<i32>
	return r0_33
fn00001D94_exit:


word32 fn00001DB2(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001D94
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001D94 r0:[0..31]-fn00001D94 r4:[0..31]-fn00001D94 r5:[0..31]-fn00001D94 r6:[0..31]-fn00001D94 r7:[0..31]-fn00001D94 sp:[0..31]-fn00001D94
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00001DB2_entry:
l00001DB2:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r4
	Mem14[sp - 0x10<32>:word32] = r5
	Mem17[sp - 0x14<32>:word32] = r6
	Mem20[sp - 0x18<32>:word32] = r7
	r6_25 = fn000021C1(r5, r6, r7, sp - 4<i32>, sp - 0x18<32>, out r7_26, out fp_21, out sp_27)
	Mem36[fp_21 - 4<i32>:word32] = Mem20[Mem20[fp_21 + 8<i32>:ptr32]:word32] - Mem20[0x00011BE8<p32>:word32]
	Mem38[sp_27:word32] = fp_21 - 4<i32>
	r0_40 = fn00001EC8(r6_25, r7_26, fp_21, sp_27, out r6_208, out r7_209, out fp_39)
	r4_153 = r0_40
	r7_50 = Mem38[r0_40 + 28<i32>:word32]
	r6_51 = 0x00000077<p32>
	r5_52 = 0x0000012F<p32>
	branch Mem38[r0_40 + 20<i32>:word32] == 0x4A<32> l00001DF3
l00001DEA:
	branch Mem38[r0_40 + 20<i32>:word32] == 0x4B<32> l00001E1F
l00001DF3:
	r6_51 = Mem38[(Mem38[r0_40 + 20<i32>:word32] - 74<i32> << 3<8>) + 0x11C44<32>:word32]
	r5_52 = Mem38[(Mem38[r0_40 + 20<i32>:word32] - 74<i32> << 3<8>) + 0x11C48<32>:word32]
l00001E1F:
	Mem76[sp_27 - 256<i32>:word32] = r6_51
	Mem79[sp_27 - 260<i32>:word32] = r0_40
	r0_85 = fn00001E7C(r6_51, r7_50, fp_39, sp_27 - 260<i32>, out r6_210, out r7_88, out fp_84)
	Mem98[sp_27 - 512<i32>:word32] = r5_52
	Mem100[sp_27 - 516<i32>:word32] = r0_40
	r0_102 = fn00001E7C(r0_85, r7_88, fp_84, sp_27 - 516<i32>, out r6_104, out r7_105, out fp_101)
	sp_111 = sp_27 - 764<i32>
	branch Mem100[0x00011BEC<p32>:word32] == 0<i32> l00001E76
l00001E45:
	branch r7_105 > r6_104 l00001E52
l00001E49:
	branch r7_105 == r6_104 l00001E76
l00001E4D:
	branch Mem100[r0_40 + 8<i32>:word32] < 2<i32> l00001E76
l00001E52:
	branch r7_105 < r0_102 l00001E5F
l00001E56:
	branch r7_105 == r0_102 l00001E76
l00001E5A:
	branch Mem100[r0_40 + 8<i32>:word32] >= 1<i32> l00001E76
l00001E5F:
	Mem135[fp_101 - 4<i32>:word32] = Mem100[fp_101 - 4<i32>:ptr32] + 3600<i32>
	Mem139[sp_27 - 764<i32>:word32] = fp_101 - 4<i32>
	r0_144 = fn00001EC8(r6_104, r7_105, fp_101, sp_27 - 764<i32>, out r6_104, out r7_105, out fp_101)
	Mem155[r0_144 + 32<i32>:word32] = Mem139[r0_144 + 32<i32>:word32] + 1<i32>
	sp_111 = sp_27 - 1016<i32>
	r4_153 = r0_144
l00001E76:
	Mem161[sp_111:word32] = r7_105
	sp_162 = sp_111 + 4<i32>
	Mem164[sp_162:word32] = r6_104
	Mem168[sp_162 + 4<i32>:word32] = r0_102
	Mem170[sp_162 + 8<i32>:word32] = r4_153
	fp_173 = Mem170[fp_101:word32]
	r4Out = r4_153
	r5Out = r0_102
	r6Out = r6_104
	r7Out = r7_105
	fpOut = fp_173
	spOut = fp_101 + 4<i32>
	return r4_153
fn00001DB2_exit:


word32 fn00001E7C(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001DB2
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001DB2 r0:[0..31]-fn00001DB2 r6:[0..31]-fn00001DB2 r7:[0..31]-fn00001DB2
// Trashed: SSSSS fp r0 r1 r6 r7
// Preserved: sp SP0
fn00001E7C_entry:
l00001E7C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = Mem14[sp + 8<i32>:word32]
	branch r6_16 < 0x3A<32> l00001EAB
l00001E8D:
	branch Mem14[r7_15 + 20<i32>:word32] %s 4<32> == 0<i32> l00001EA1
l00001E9B:
	r0_23 = 0x0000016D<p32>
	goto l00001EA5
l00001EA1:
	r0_23 = 0x0000016E<p32>
l00001EA5:
	r6_16 = r6_16 + (r0_23 - 365<i32>)
l00001EAB:
	r1_41 = r6_16 - (((r6_16 - Mem14[r7_15 + 28<i32>:word32]) + Mem14[r7_15 + 24<i32>:word32]) + 700<i32>) %s 7<32>
	Mem46[sp - 12<i32>:word32] = r7_15
	Mem48[sp - 8<i32>:word32] = r6_16
	fp_52 = Mem48[sp - 4<i32>:word32]
	r6Out = r6_16
	r7Out = r7_15
	fpOut = fp_52
	return r1_41
fn00001E7C_exit:


word32 fn00001EC8(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001DB2
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001DB2 r0:[0..31]-fn00001DB2 r6:[0..31]-fn00001DB2 r7:[0..31]-fn00001DB2
// Trashed: SSSSS fp r0 r6 r7
// Preserved: sp SP0
fn00001EC8_entry:
l00001EC8:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x10<32>:word32] = r6
	Mem14[sp - 0x14<32>:word32] = r7
	Mem17[sp - 8<i32>:word32] = Mem14[Mem14[sp + 4<i32>:ptr32]:word32] %s 0x15180<32>
	Mem20[sp - 12<i32>:word32] = Mem17[Mem17[sp + 4<i32>:ptr32]:word32] / 0x15180<32>
	branch Mem20[sp - 8<i32>:word32] >= 0<i32> l00001EF6
l00001EEC:
	Mem24[sp - 8<i32>:word32] = Mem20[sp - 8<i32>:word32] + 0x15180<32>
	Mem26[sp - 12<i32>:word32] = Mem24[sp - 12<i32>:word32] + -1<i32>
l00001EF6:
	Mem32[0x00011C54<p32>:word32] = Mem29[sp - 8<i32>:word32] %s 0x3C<32>
	r0_33 = Mem32[sp - 8<i32>:word32]
	Mem38[0x00011C58<p32>:word32] = r0_33 / 0x3C<32> %s 0x3C<32>
	Mem40[0x00011C5C<p32>:word32] = r0_33 / 0x3C<32> / 0x3C<32>
	Mem45[0x00011C6C<p32>:word32] = (Mem40[sp - 12<i32>:word32] + 0x700004<32>) %s 7<32>
	branch Mem45[sp - 12<i32>:word32] < 0<i32> l00001FA6
l00001F4A:
	r6_110 = 0x00000046<p32>
	branch 0x00000046<p32> %s 4<32> == 0<i32> l00001F61
l00001F5B:
	r0_76 = 0x0000016D<p32>
	goto l00001F65
l00001F61:
	r0_76 = 0x0000016E<p32>
l00001F65:
	branch Mem45[sp - 12<i32>:word32] < r0_76 l00001FD3
l00001F6B:
	branch r6_110 %s 4<32> == 0<i32> l00001F80
l00001F78:
	Mem93[sp - 12<i32>:ptr32] = Mem89[sp - 12<i32>:ptr32] - 365<i32>
	goto l00001F86
l00001F80:
	Mem91[sp - 12<i32>:ptr32] = Mem89[sp - 12<i32>:ptr32] - 366<i32>
l00001F86:
	r6_110 = r6_110 + 1<i32>
	branch r6_110 %s 4<32> == 0<i32> l00001F9B
l00001F95:
	r0_101 = 0x0000016D<p32>
	goto l00001F9F
l00001F9B:
	r0_101 = 0x0000016E<p32>
l00001F9F:
	branch Mem106[sp - 12<i32>:word32] >= r0_101 l00001F6B
l00001FA4:
	goto l00001FD3
l00001FA6:
	r6_110 = 0x00000046<p32> + -1<i32>
	branch Mem45[sp - 12<i32>:word32] >= 0<i32> l00001FD3
l00001FAF:
	branch (r6_110 + 0<i32>) %s 4<32> == 0<i32> l00001FC6
l00001FBE:
	Mem63[sp - 12<i32>:word32] = Mem59[sp - 12<i32>:ptr32] + 365<i32>
	goto l00001FCC
l00001FC6:
	Mem61[sp - 12<i32>:word32] = Mem59[sp - 12<i32>:ptr32] + 366<i32>
l00001FCC:
	r6_110 = r6_110 + -1<i32>
	branch Mem68[sp - 12<i32>:word32] < 0<i32> l00001FAF
l00001FD3:
	Mem113[0x00011C68<p32>:word32] = r6_110
	r7_115 = Mem113[sp - 12<i32>:word32]
	Mem116[0x00011C70<p32>:word32] = r7_115
	branch r6_110 %s 4<32> == 0<i32> l00001FF5
l00001FEF:
	r0_121 = 0x0000016D<p32>
	goto l00001FF9
l00001FF5:
	r0_121 = 0x0000016E<p32>
l00001FF9:
	branch r0_121 == 0x16E<32> l00002008
l00002001:
	Mem127[0x00011C18<p32>:ptr32] = 0x0000001D<p32>
l00002008:
	r6_128 = 0<i32>
	branch r7_115 < Mem131[Mem131[0x00011C14<p32>:ptr32]:word32] l00002025
l00002013:
	r7_115 = r7_115 - Mem131[Mem131[0x00011C14<p32>:ptr32] + r6_128 * 4<32>:word32]
	r6_128 = r6_128 + 1<i32>
	branch r7_115 >= Mem131[Mem131[0x00011C14<p32>:ptr32] + r6_128 * 4<32>:word32] l00002013
l00002025:
	Mem144[0x00011C18<p32>:ptr32] = 0x0000001C<p32>
	Mem149[0x00011C60<p32>:word32] = r7_115 + 1<i32>
	Mem151[0x00011C64<p32>:word32] = r6_128
	Mem153[0x00011C74<p32>:int32] = 0<i32>
	Mem167[sp - 0x14<32>:word32] = r7_115
	Mem169[sp - 0x10<32>:word32] = r6_128
	fp_175 = Mem169[sp - 4<i32>:word32]
	r6Out = r6_128
	r7Out = r7_115
	fpOut = fp_175
	return 0x11C54<32>
fn00001EC8_exit:


word32 fn0000204C(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r2Out, word32 & r5Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001D94
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001D94 r0:[0..31]-fn00001D94 r2:[0..31]-fn00001D94 r5:[0..31]-fn00001D94 r7:[0..31]-fn00001D94
// Trashed: SSSSS fp r0 r1 r2 r5 r6 r7 sp
// Preserved: SP0
fn0000204C_entry:
l0000204C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r5
	Mem14[sp - 12<i32>:word32] = r6
	Mem17[sp - 16<i32>:word32] = r7
	Mem26[0x11BF8<32>:byte] = Mem17[0x11C80<32>:byte]
	r6_21 = 0x11C81<32>
	r7_23 = 0x11BF9<32>
	r2_195 = CONVERT(Mem26[0x11BF8<32>:byte], byte, int32)
	branch r2_195 == 0<i32> l00002083
l0000206F:
	Mem39[r7_23:byte] = Mem37[r6_21:byte]
	r6_21 = r6_21 + 1<i32>
	r7_23 = r7_23 + 1<i32>
	r2_195 = CONVERT(Mem39[r7_23:byte], byte, int32)
	branch r2_195 == 0<i32> l0000206F
l00002083:
	r0_48 = Mem45[Mem45[sp + 4<i32>:ptr32] + 24<i32>:word32] * 3<32> + 0x11C9A<32>
	Mem52[0x11BF8<32>:byte] = Mem45[r0_48:byte]
	Mem56[0x11BF9<32>:byte] = Mem52[r0_48 + 1<i32>:byte]
	Mem60[0x11BFA<32>:byte] = Mem56[r0_48 + 2<i32>:byte]
	r5_64 = Mem60[sp + 4<i32>:ptr32] + 16<i32>
	r0_67 = Mem60[r5_64:word32] * 3<32> + 0x11CB0<32>
	Mem70[0x11BFC<32>:byte] = Mem60[r0_67:byte]
	Mem74[0x11BFD<32>:byte] = Mem70[r0_67 + 1<i32>:byte]
	Mem78[0x11BFE<32>:byte] = Mem74[r0_67 + 2<i32>:byte]
	Mem88[sp - 20<i32>:word32] = Mem78[r5_64 + -4<i32>:word32]
	Mem90[sp - 24<i32>:word32] = 0x11BFF<32>
	r0_92 = fn00002173(0x11BFF<32>, sp - 4<i32>, sp - 24<i32>, out fp_91)
	Mem106[sp - 272<i32>:word32] = Mem90[r5_64 + -8<i32>:word32] + 100<i32>
	Mem108[sp - 276<i32>:word32] = r0_92
	r0_110 = fn00002173(r0_92, fp_91, sp - 276<i32>, out fp_109)
	Mem124[sp - 524<i32>:word32] = Mem108[r5_64 + -12<i32>:word32] + 100<i32>
	Mem126[sp - 528<i32>:word32] = r0_110
	r0_128 = fn00002173(r0_110, fp_109, sp - 528<i32>, out fp_127)
	Mem142[sp - 776<i32>:word32] = Mem126[r5_64 + -16<i32>:word32] + 100<i32>
	Mem144[sp - 780<i32>:word32] = r0_128
	r0_146 = fn00002173(r0_128, fp_127, sp - 780<i32>, out fp_145)
	branch Mem144[Mem144[fp_145 + 8<i32>:ptr32] + 20<i32>:word32] < 0x64<32> l00002152
l0000214A:
	Mem158[r0_146 + 1<i32>:byte] = 0x32<8>
	Mem160[r0_146 + 2<i32>:byte] = 0x30<8>
l00002152:
	Mem169[sp - 1028<i32>:word32] = Mem165[Mem165[fp_145 + 8<i32>:ptr32] + 20<i32>:word32] + 100<i32>
	Mem171[sp - 1032<i32>:word32] = r0_146 + 2<i32>
	r0_173 = fn00002173(r0_146 + 2<i32>, fp_145, sp - 1032<i32>, out fp_172)
	Mem183[sp - 1280<i32>:word32] = r0_173
	Mem186[sp - 1276<i32>:word32] = r0_67 + 3<i32>
	Mem189[sp - 1272<i32>:word32] = r5_64 + -16<i32>
	fp_191 = Mem189[fp_172:word32]
	r2Out = r2_195
	r5Out = r5_64 + -16<i32>
	r7Out = r0_173
	fpOut = fp_191
	return 0x11BF8<32>
fn0000204C_exit:


word32 fn00002173(word32 r7, word32 fp, word32 sp, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000204C
// MayUse:  fp:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000204C r0:[0..31]-fn0000204C
// Trashed: SSSSS fp r0 r7
// Preserved: sp SP0
fn00002173_entry:
l00002173:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_12 = Mem11[sp + 4<i32>:word32]
	branch Mem11[sp + 8<i32>:word32] < 0xA<32> l000021BB
l00002184:
	Mem26[r7_12 + 1<i32>:byte] = SLICE(Mem11[sp + 8<i32>:word32] / 0xA<32> %s 0xA<32>, byte, 0) + 0x30<8>
l0000219E:
	Mem37[r7_12 + 2<i32>:byte] = SLICE(Mem30[sp + 8<i32>:word32] %s 0xA<32>, byte, 0) + 0x30<8>
	Mem42[sp - 8<i32>:word32] = r7_12 + 3<i32>
	fpOut = Mem42[sp - 4<i32>:word32]
	return r7_12 + 3<i32>
l000021BB:
	Mem18[r7_12 + 1<i32>:byte] = 0x20<8>
	goto l0000219E
fn00002173_exit:


word32 fn000021C1(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001DB2
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001DB2 r6:[0..31]-fn00001DB2 r7:[0..31]-fn00001DB2 sp:[0..31]-fn00001DB2
// Trashed: SSSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn000021C1_entry:
l000021C1:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r5
	Mem14[sp - 0x10<32>:word32] = r6
	Mem17[sp - 0x14<32>:word32] = r7
	Mem20[sp - 0x18<32>:word32] = 0x11CD5<32>
	r0_22 = fn000035C8(r5, r6, r7, sp - 4<i32>, sp - 0x18<32>, out r5_100, out r6_113, out fp_21, out sp_27)
	r7_115 = r0_22
	branch r0_22 == 0<i32> l00002299
l000021DC:
	branch Mem20[r0_22:byte] == 0<8> l00002299
l000021E5:
	r5_39 = 3<i32>
	r6_113 = Mem20[0x00011BF0<p32>:word32]
l000021ED:
	branch Mem42[r7_115:byte] == 0<8> l00002203
l000021F5:
	Mem58[r6_113:byte] = Mem42[r7_115:byte]
	r7_115 = r7_115 + 1<i32>
	r6_113 = r6_113 + 1<i32>
	goto l0000220B
l00002203:
	Mem51[r6_113:byte] = 0x20<8>
	r6_113 = r6_113 + 1<i32>
l0000220B:
	v17_61 = r5_39 - 1<i32>
	r5_39 = v17_61
	branch v17_61 == 0<32> l000021ED
l0000220E:
	Mem70[fp_21 - 4<i32>:word32] = CONVERT(Mem64[r7_115:byte] == 0x2D<8>, bool, word32)
	branch Mem70[fp_21 - 4<i32>:word32] == 0<i32> l00002220
l0000221E:
	r7_115 = r7_115 + 1<i32>
l00002220:
	r5_100 = 0<i32>
	goto l00002238
l00002224:
	r5_100 = CONVERT(Mem70[r7_115:byte], byte, int32) + r5_100 * 0xA<32> - 48<i32>
	r7_115 = r7_115 + 1<i32>
l00002238:
	branch Mem70[r7_115:byte] < 0x30<8> l00002244
l0000223E:
	branch Mem70[r7_115:byte] <= 0x39<8> l00002224
l00002244:
	branch Mem70[fp_21 - 4<i32>:word32] == 0<i32> l0000224C
l00002249:
	r5_100 = -r5_100
l0000224C:
	Mem103[0x00011BE8<p32>:word32] = r5_100 * 0xE10<32>
	Mem109[0x00011BEC<p32>:word32] = CONVERT(Mem103[r7_115:byte] != 0<i8>, bool, word32)
	branch Mem109[0x00011BEC<p32>:word32] == 0<i32> l00002299
l00002270:
	r6_113 = Mem109[0x00011BF4<p32>:word32]
	r5_100 = 3<i32>
l00002278:
	branch Mem116[r7_115:byte] == 0<8> l0000228E
l00002280:
	Mem132[r6_113:byte] = Mem116[r7_115:byte]
	r7_115 = r7_115 + 1<i32>
	r6_113 = r6_113 + 1<i32>
	goto l00002296
l0000228E:
	Mem125[r6_113:byte] = 0x20<8>
	r6_113 = r6_113 + 1<i32>
l00002296:
	v21_135 = r5_100 - 1<i32>
	r5_100 = v21_135
	branch v21_135 == 0<32> l00002278
l00002299:
	Mem148[sp_27 - 252<i32>:word32] = r7_115
	Mem157[sp_27 - 248<i32>:word32] = r6_113
	Mem160[sp_27 - 244<i32>:word32] = r5_100
	fp_166 = Mem160[fp_21:word32]
	r7Out = r7_115
	fpOut = fp_166
	spOut = fp_21 + 4<i32>
	return r6_113
fn000021C1_exit:


word32 fn000022A0()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn000017CF
// MayUse: 
// LiveOut: r0:[0..31]-fn0000012C
// Trashed: r0 r1
// Preserved: SP0
fn000022A0_entry:
l000022A0:
	__syscall()
	branch !F l000022AF
l000022A9:
	goto l000055B8_in_fn000022A0
l000022AF:
	return 0x00000029<p32>
l000055B8_in_fn000022A0:
	Mem7[0x00012200<p32>:word32] = 0x00000029<p32>
	return -1<i32>
fn000022A0_exit:


word32 fn000022B4(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000018FA
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000018FA r4:[0..31]-fn000018FA r5:[0..31]-fn000018FA r6:[0..31]-fn000018FA sp:[0..31]-fn000018FA
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000022B4_entry:
l000022B4:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r5
	Mem14[sp - 0x10<32>:word32] = r6
	Mem17[sp - 0x14<32>:word32] = r7
	fp_133 = sp - 4<i32>
	sp_108 = sp - 0x14<32>
	r7_102 = Mem17[sp + 16<i32>:word32]
	branch Mem17[sp + 8<i32>:word32] <= 0<i32> l000022C4
l000022BF:
	branch Mem17[sp + 12<i32>:word32] > 0<i32> l000022EA
l000022C4:
	goto l000022E6
l000022C8:
	Mem54[sp_43 - 256<i32>:word32] = Mem32[fp_133 + 12<i32>:word32]
	Mem60[sp_43 - 260<i32>:word32] = r6 + Mem54[fp_133 + 12<i32>:word32] + -1<i32>
	Mem64[fp_133 - 4<i32>:word32] = fn0000556C(sp_43 - 260<i32>)
	sp_108 = sp_43 - 508<i32>
l000022E6:
	Mem162[sp_108:word32] = r7_102
	sp_163 = sp_108 + 4<i32>
	Mem166[sp_163:word32] = r6
	Mem170[sp_163 + 4<i32>:word32] = r5
	fp_174 = Mem170[fp_133:word32]
	r5Out = r5
	r6Out = r6
	fpOut = fp_174
	spOut = fp_133 + 4<i32>
	return r4
l000022EA:
	r6 = Mem17[sp + 12<i32>:word32] * Mem17[sp + 8<i32>:word32]
l000022F3:
	branch Mem27[r7_102:word32] > 0<i32> l0000230D
l000022F8:
	sp_31 = sp_108 - 4<i32>
	Mem32[sp_31:word32] = r7_102
	sp_108 = sp_43 - 252<i32>
	branch fn000030D0(r4, r5, r6, r7_102, fp_133, sp_31, out r5, out r6, out r7_102, out fp_133, out sp_43) == -1<i32> l000022C8
l00002307:
	Mem69[r7_102 + 4<i32>:word32] = Mem32[r7_102 + 4<i32>:word32] + -1<i32>
	Mem71[r7_102:word32] = Mem69[r7_102:word32] + 1<i32>
l0000230D:
	branch r6 >=u Mem75[r7_102:word32] l00002316
l00002312:
	r5_78 = r6
	goto l00002319
l00002316:
	r5_78 = Mem75[r7_102:word32]
l00002319:
	sp_82 = sp_108 - 4<i32>
	Mem84[sp_82:word32] = r5_78
	Mem88[sp_82 - 4<i32>:word32] = Mem84[r7_102 + 4<i32>:word32]
	Mem93[sp_82 - 8<i32>:word32] = Mem88[fp_133 + 8<i32>:word32]
	Mem110[fp_97 + 8<i32>:word32] = fn000054D4(r4, r5_78, r6, r7_102, fp_133, sp_82 - 8<i32>, out r4, out r5, out r6_101, out r7_102, out fp_97) + r5
	Mem112[r7_102:word32] = Mem110[r7_102:word32] - r5
	Mem114[r7_102 + 4<i32>:word32] = Mem112[r7_102 + 4<i32>:word32] + r5
	sp_108 = sp_82 - 252<i32>
	r1_117 = Mem114[Mem114[0x00012190<p32>:ptr32] + CONVERT(Mem114[r7_102 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem114[r7_102 + 4<i32>:word32]
	branch Mem114[r7_102:word32] >= 0<i32> l0000234C
l00002348:
	r0_121 = 0<i32>
	goto l0000234F
l0000234C:
	r0_121 = Mem114[r7_102:word32]
l0000234F:
	fp_133 = fp_97
	branch r1_117 >= r0_121 l0000235E
l00002353:
	Mem130[sp_82 - 256<i32>:word32] = r7_102
	r6_101 = fn000050AA(r6_101, r7_102, fp_97, sp_82 - 256<i32>, out r7_102, out fp_133)
	sp_108 = sp_82 - 508<i32>
l0000235E:
	r6 = r6_101 - r5
	branch r6 == 0<i32> l000022F3
l00002365:
	goto l000022E6
fn000022B4_exit:


word32 fn0000236C(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001701
//      fn000018FA
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000018FA r5:[0..31]-fn000018FA r6:[0..31]-fn000018FA r7:[0..31]-fn000018FA sp:[0..31]-fn000018FA
// Trashed: SSSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn0000236C_entry:
l0000236C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x10<32>:word32] = r6
	Mem14[sp - 0x14<32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	Mem17[r7_15 + 12<i32>:byte] = __clear_bit<byte,byte>(Mem14[r7_15 + 12<i32>:byte], 4<8>)
	fp_143 = sp - 4<i32>
	sp_12 = sp - 0x14<32>
	branch !__bit<word32,word32>(CONVERT(Mem17[r7_15 + 12<i32>:byte], byte, int32), 0<32>) l00002426
l00002384:
	branch Mem17[sp + 12<i32>:word32] >= 2<i32> l000023F5
l0000238A:
	branch Mem17[r7_15 + 8<i32>:word32] == 0<i32> l000023F5
l00002390:
	branch __bit<word32,word32>(CONVERT(Mem17[r7_15 + 12<i32>:byte], byte, int32), 2<32>) l000023F5
l0000239D:
	r6 = Mem17[r7_15:word32]
	Mem73[sp - 8<i32>:word32] = Mem17[sp + 8<i32>:word32]
	branch Mem73[sp + 12<i32>:word32] == 0<i32> l000023C7
l000023A9:
	Mem81[sp - 0x18<32>:int32] = 1<i32>
	Mem84[sp - 0x1C<32>:int32] = 0<i32>
	Mem87[sp - 0x20<32>:int32] = CONVERT(Mem84[r7_15 + 13<i32>:byte], byte, int32)
	Mem91[sp - 12<i32>:word32] = fn00003898()
	Mem95[sp - 8<i32>:word32] = Mem91[sp - 8<i32>:word32] + (r6 - Mem91[sp - 12<i32>:word32])
	sp_12 = sp - 0x114<32>
	goto l000023CA
l000023C7:
	Mem77[sp + 8<i32>:word32] = Mem73[sp + 8<i32>:word32] - r6
l000023CA:
	branch __bit<word32,word32>(CONVERT(Mem98[r7_15 + 12<i32>:byte], byte, int32), 7<32>) l000023F5
l000023D6:
	branch r6 <= 0<i32> l000023F5
l000023DA:
	branch Mem98[sp - 8<i32>:word32] > r6 l000023F5
l000023DF:
	branch Mem98[sp - 8<i32>:word32] < Mem98[r7_15 + 8<i32>:word32] - Mem98[r7_15 + 4<i32>:word32] l000023F5
l000023EA:
	Mem149[r7_15 + 4<i32>:word32] = Mem98[r7_15 + 4<i32>:word32] + Mem98[sp - 8<i32>:word32]
	Mem151[r7_15:word32] = Mem149[r7_15:word32] - Mem149[sp - 8<i32>:word32]
	goto l00002478
l000023F5:
	branch !__bit<word32,word32>(CONVERT(Mem113[r7_15 + 12<i32>:byte], byte, int32), 7<32>) l0000240A
l00002401:
	Mem117[r7_15 + 4<i32>:word32] = Mem113[r7_15 + 8<i32>:word32]
	Mem119[r7_15 + 12<i32>:byte] = __clear_bit<byte,byte>(Mem117[r7_15 + 12<i32>:byte], 0<8>)
l0000240A:
	sp_124 = sp_12 - 4<i32>
	Mem129[sp_124:word32] = Mem127[sp + 12<i32>:word32]
	Mem132[sp_124 - 4<i32>:word32] = Mem129[sp + 8<i32>:word32]
	Mem136[sp_124 - 8<i32>:int32] = CONVERT(Mem132[r7_15 + 13<i32>:byte], byte, int32)
	Mem140[sp - 8<i32>:word32] = fn00003898()
	Mem142[r7_15:int32] = 0<i32>
	sp_12 = sp_124 - 252<i32>
	goto l0000246D
l00002426:
	branch (CONVERT(Mem17[r7_15 + 12<i32>:byte], byte, int32) & 0x82<32>) == 0<i32> l0000246D
l00002434:
	Mem25[sp - 0x18<32>:word32] = r7_15
	fn00004D67(r5, r6, r7_15, sp - 4<i32>, sp - 0x18<32>, out r5, out r6, out r7_15, out fp_143, out sp_33)
	Mem40[r7_15:int32] = 0<i32>
	branch !__bit<word32,word32>(CONVERT(Mem40[r7_15 + 12<i32>:byte], byte, int32), 7<32>) l00002457
l0000244E:
	Mem44[r7_15 + 12<i32>:byte] = __clear_bit<byte,byte>(Mem40[r7_15 + 12<i32>:byte], 1<8>)
	Mem47[r7_15 + 4<i32>:word32] = Mem44[r7_15 + 8<i32>:word32]
l00002457:
	Mem53[sp_33 - 256<i32>:word32] = Mem51[fp_143 + 16<i32>:word32]
	Mem56[sp_33 - 260<i32>:word32] = Mem53[fp_143 + 12<i32>:word32]
	Mem60[sp_33 - 264<i32>:int32] = CONVERT(Mem56[r7_15 + 13<i32>:byte], byte, int32)
	Mem64[fp_143 - 4<i32>:word32] = fn00003898()
	sp_12 = sp_33 - 508<i32>
l0000246D:
	branch Mem144[fp_143 - 4<i32>:word32] == -1<i32> l00002478
l00002472:
l00002474:
	Mem160[sp_12:word32] = r7_15
	Mem168[sp_12 + 4<i32>:word32] = r6
	fp_172 = Mem168[fp_143:word32]
	r6Out = r6
	r7Out = r7_15
	fpOut = fp_172
	spOut = fp_143 + 4<i32>
	return r5
l00002478:
	goto l00002474
fn0000236C_exit:


word32 fn0000247C(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r0:[0..31]-fn0000012C r4:[0..31]-fn0000012C r5:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7
// Preserved: sp SP0
fn0000247C_entry:
l0000247C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r4
	Mem14[sp - 12<i32>:word32] = r5
	Mem17[sp - 16<i32>:word32] = r6
	Mem20[sp - 20<i32>:word32] = r7
	r7_21 = Mem20[sp + 4<i32>:word32]
	r5_112 = CONVERT(Mem20[r7_21:byte], byte, int32)
	r4_116 = 0<i32>
	branch __bit<word32,word32>(CONVERT(Mem20[r5_112 + 73133<i32>:byte], byte, int32), 2<32>) l000024E8
l0000249A:
	goto l000024A4
l0000249C:
	r7_21 = r7_21 + 1<i32>
	r5_112 = CONVERT(Mem20[r7_21:byte], byte, int32)
l000024A4:
	branch __bit<word32,word32>(CONVERT(Mem20[r5_112 + 73133<i32>:byte], byte, int32), 3<32>) l0000249C
l000024B3:
	branch r5_112 == 0x2B<32> l000024C7
l000024BD:
	branch r5_112 == 0x2D<32> l000024CF
l000024C5:
	r4_116 = 1<i32>
l000024C7:
	r7_21 = r7_21 + 1<i32>
	r5_112 = CONVERT(Mem20[r7_21:byte], byte, int32)
l000024CF:
	branch __bit<word32,word32>(CONVERT(Mem20[r5_112 + 73133<i32>:byte], byte, int32), 2<32>) l000024E8
l000024DE:
	r0_153 = 0<i32>
	goto l000024E4
l000024E2:
	r0_153 = r6
l000024E4:
	Mem104[sp - 20<i32>:word32] = r7_21
	Mem110[sp - 16<i32>:word32] = r6
	Mem114[sp - 12<i32>:word32] = r5_112
	Mem117[sp - 8<i32>:word32] = r4_116
	fp_126 = Mem117[sp - 4<i32>:word32]
	r4Out = r4_116
	r5Out = r5_112
	r6Out = r6
	r7Out = r7_21
	fpOut = fp_126
	return r0_153
l000024E8:
	r7_21 = r7_21 + 1<i32>
	r5_112 = CONVERT(Mem20[r7_21:byte], byte, int32)
	r6 = 0x00000030<p32> - r5_112
	branch !__bit<word32,word32>(CONVERT(Mem20[r5_112 + 73133<i32>:byte], byte, int32), 2<32>) l0000252F
l00002508:
	r7_21 = r7_21 + 1<i32>
	r5_112 = CONVERT(Mem20[r7_21:byte], byte, int32)
	r6 = r6 * 0xA<32> + (0x00000030<p32> - r5_112)
	branch __bit<word32,word32>(CONVERT(Mem20[r5_112 + 73133<i32>:byte], byte, int32), 2<32>) l00002508
l0000252F:
	branch r4_116 == 0<i32> l000024E2
l00002534:
	r0_153 = -r6
	goto l000024E4
fn0000247C_exit:


word32 fn0000253C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
// MayUse: 
// LiveOut: r0:[0..31]-fn00000FF5
// Trashed: r0 r1
// Preserved: SP0
fn0000253C_entry:
l0000253C:
	__syscall()
	branch !F l0000254B
l00002545:
	goto l000055B8_in_fn0000253C
l0000254B:
	return 0<i32>
l000055B8_in_fn0000253C:
	Mem8[0x00012200<p32>:word32] = 0x00000009<p32>
	return -1<i32>
fn0000253C_exit:


word32 fn00002550()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn00000FF5
// MayUse: 
// LiveOut: r0:[0..31]-fn00000FF5
// Trashed: r0 r1
// Preserved: SP0
fn00002550_entry:
l00002550:
	__syscall()
	branch !F l0000255F
l00002559:
	goto l000055B8_in_fn00002550
l0000255F:
	return 0x00000008<p32>
l000055B8_in_fn00002550:
	Mem7[0x00012200<p32>:word32] = 0x00000008<p32>
	return -1<i32>
fn00002550_exit:


void fn00002564(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000017CF
// MayUse:  sp:[0..31]
// LiveOut:
// Trashed: r0 r1 r2
// Preserved: SP0
fn00002564_entry:
l00002564:
	__syscall()
	branch !F l00002573
l0000256D:
	goto l000055B8_in_fn00002564
l00002573:
	r2_8 = Mem0[sp + 4<i32>:word32]
	Mem9[r2_8:word32] = 0x0000002A<p32>
	Mem10[r2_8 + 4<i32>:word32] = sp + 4<i32>
	return
l000055B8_in_fn00002564:
	Mem12[0x00012200<p32>:word32] = 0x0000002A<p32>
	return
fn00002564_exit:


word32 fn00002580(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000127A
//      fn0000132C
//      fn000013C2
//      fn0000161F
//      fn000017CF
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000161F r4:[0..31]-fn0000161F r5:[0..31]-fn0000161F r6:[0..31]-fn0000161F r7:[0..31]-fn0000161F sp:[0..31]-fn0000161F
// Trashed: SSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: S SP0
fn00002580_entry:
l00002580:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r7
	Mem13[sp - 8<i32>:word32] = sp + 8<i32>
	fp_45 = sp - 4<i32>
	sp_58 = sp - 0xC<32>
	branch __set_bit<word32,word32>(CONVERT(Mem13[0x00012068<p32>:byte], byte, int32), 1<32>) == 0<i32> l000025B3
l00002599:
	branch __set_bit<word32,word32>(CONVERT(Mem13[0x00012068<p32>:byte], byte, int32), 7<32>) == 0<i32> l000025D9
l000025AB:
	Mem25[0x00012068<p32>:byte] = __set_bit<byte,byte>(Mem13[0x00012068<p32>:byte], 1<8>)
l000025B3:
	Mem30[sp - 0x10<32>:word32] = 0x1205C<32>
	Mem34[sp - 0x14<32>:word32] = Mem30[sp - 8<i32>:word32]
	Mem37[sp - 0x18<32>:word32] = Mem34[sp + 4<i32>:word32]
	r7 = fn00003A45(r4, r5, r6, r7, sp - 4<i32>, sp - 0x18<32>, out r4, out r5, out r6, out fp_45, out sp_52)
	sp_58 = sp_52 - 244<i32>
	branch !__bit<word32,word32>(CONVERT(Mem37[0x00012068<p32>:byte], byte, int32), 5<32>) l000025DF
l000025D9:
l000025DB:
	Mem68[sp_58:word32] = r7
	fp_72 = Mem68[fp_45:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_72
	spOut = fp_45 + 4<i32>
	return r4
l000025DF:
	goto l000025DB
fn00002580_exit:


word32 fn000025E4(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn00000776
//      fn0000079D
//      fn000009BD
//      fn00000B29
//      fn00000FF5
//      fn000013F9
//      fn000017CF
//      fn00001A4F
//      fn00001BA2
//      fn00001C95
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000776 r0:[0..31]-fn00001A4F r4:[0..31]-fn0000012C r5:[0..31]-fn00000776 r6:[0..31]-fn00000776 r7:[0..31]-fn00000776 sp:[0..31]-fn00000776
// Trashed: SSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: S SP0
fn000025E4_entry:
l000025E4:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r7
	Mem13[sp - 8<i32>:word32] = sp + 12<i32>
	fp_46 = sp - 4<i32>
	sp_59 = sp - 0xC<32>
	branch __set_bit<word32,word32>(CONVERT(Mem13[Mem13[sp + 4<i32>:ptr32] + 12<i32>:byte], byte, int32), 1<32>) == 0<i32> l00002611
l000025FB:
	branch __set_bit<word32,word32>(CONVERT(Mem13[Mem13[sp + 4<i32>:ptr32] + 12<i32>:byte], byte, int32), 7<32>) == 0<i32> l00002632
l0000260B:
	Mem25[Mem13[sp + 4<i32>:ptr32] + 12<i32>:byte] = __set_bit<byte,byte>(Mem13[Mem13[sp + 4<i32>:ptr32] + 12<i32>:byte], 1<8>)
l00002611:
	Mem32[sp - 0x10<32>:word32] = Mem30[sp + 4<i32>:word32]
	Mem35[sp - 0x14<32>:word32] = Mem32[sp - 8<i32>:word32]
	Mem38[sp - 0x18<32>:word32] = Mem35[sp + 8<i32>:word32]
	r0_47 = fn00003A45(r4, r5, r6, r7, sp - 4<i32>, sp - 0x18<32>, out r4, out r5, out r6, out fp_46, out sp_53)
	sp_59 = sp_53 - 244<i32>
	r7 = r0_47
	branch !__bit<word32,word32>(CONVERT(Mem38[Mem38[fp_46 + 8<i32>:ptr32] + 12<i32>:byte], byte, int32), 5<32>) l00002638
l00002632:
	r0_63 = -1<i32>
l00002634:
	Mem69[sp_59:word32] = r7
	fp_73 = Mem69[fp_46:word32]
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_73
	spOut = fp_46 + 4<i32>
	return r0_63
l00002638:
	r0_63 = r0_47
	goto l00002634
fn000025E4_exit:


word32 fn0000263C(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001701
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001701 r5:[0..31]-fn00001701 r6:[0..31]-fn00001701 r7:[0..31]-fn00001701 sp:[0..31]-fn00001701
// Trashed: SSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn0000263C_entry:
l0000263C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_12 = Mem11[sp + 4<i32>:word32]
	Mem14[sp - 12<i32>:word32] = r7_12
	fn00004D67(r5, r6, r7_12, sp - 4<i32>, sp - 12<i32>, out r5_21, out r6_22, out r7_19, out fp_17, out sp_23)
	Mem31[sp_23 - 256<i32>:int32] = 0<i32>
	Mem34[sp_23 - 260<i32>:int32] = 0<i32>
	Mem37[sp_23 - 264<i32>:int32] = CONVERT(Mem34[r7_19 + 13<i32>:byte], byte, int32)
	fn00003898()
	Mem42[r7_19:int32] = 0<i32>
	Mem44[r7_19 + 4<i32>:word32] = Mem42[r7_19 + 8<i32>:word32]
	Mem46[r7_19 + 12<i32>:byte] = Mem44[r7_19 + 12<i32>:byte] & 0xCF<8>
	branch (CONVERT(Mem46[r7_19 + 12<i32>:byte], byte, int32) & 0x80<32>) == 0<i32> l0000267B
l00002677:
	Mem52[r7_19 + 12<i32>:byte] = Mem46[r7_19 + 12<i32>:byte] & 0xFC<8>
l0000267B:
	Mem55[sp_23 - 508<i32>:word32] = r7_19
	fp_58 = Mem55[fp_17:word32]
	r6Out = r6_22
	r7Out = r7_19
	fpOut = fp_58
	spOut = fp_17 + 4<i32>
	return r5_21
fn0000263C_exit:


word32 fn000026A0(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00001701
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00001701 r4:[0..31]-fn00001701 r5:[0..31]-fn00001701 r6:[0..31]-fn00001701 r7:[0..31]-fn00001701
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000026A0_entry:
l000026A0:
	Mem6[sp - 4<i32>:word32] = fp
	Mem10[sp - 8<i32>:word32] = sp + 12<i32>
	Mem13[sp - 0xC<32>:word32] = Mem10[sp - 8<i32>:word32]
	Mem16[sp - 0x10<32>:word32] = Mem13[sp + 8<i32>:word32]
	Mem19[sp - 0x14<32>:word32] = Mem16[sp + 4<i32>:word32]
	r4_31 = fn000026FC(r4, r5, r6, r7, sp - 4<i32>, sp - 0x14<32>, out r5_27, out r6_28, out r7_29, out fp_24, out sp_44)
	fp_38 = Mem19[fp_24:word32]
	r5Out = r5_27
	r6Out = r6_28
	r7Out = r7_29
	fpOut = fp_38
	return r4_31
fn000026A0_exit:


word32 fn000026BD(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000009BD
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000009BD r4:[0..31]-fn000009BD r5:[0..31]-fn000009BD r6:[0..31]-fn000009BD r7:[0..31]-fn000009BD sp:[0..31]-fn000009BD
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000026BD_entry:
l000026BD:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x1C<32>:word32] = r7
	r7_12 = Mem11[sp + 4<i32>:word32]
	Mem14[sp - 8<i32>:word32] = sp + 12<i32>
	Mem16[sp - 12<i32>:int8] = 1<i8>
	Mem17[sp - 16<i32>:word32] = r7_12
	Mem19[sp - 20<i32>:word32] = Mem17[sp - 16<i32>:word32]
	Mem21[sp - 0x20<32>:word32] = r7_12
	Mem34[fp_23 - 20<i32>:word32] = fn0000554C(r6, r7_12, sp - 4<i32>, sp - 0x20<32>, out r6_26, out r7_27, out fp_23)
	Mem36[fp_23 - 7<i32>:byte] = 0x14<8>
	Mem39[sp - 0x120<32>:word32] = Mem36[fp_23 - 4<i32>:word32]
	Mem42[sp - 0x124<32>:word32] = Mem39[fp_23 + 12<i32>:word32]
	Mem44[sp - 0x124<32>:word32] = fp_23 - 20<i32>
	r4_54 = fn000026FC(r4, r5, r6_26, r7_27, fp_23, sp - 0x124<32>, out r5_50, out r6_51, out r7_52, out fp_47, out sp_53)
	Mem61[sp_53 - 244<i32>:word32] = r7_52
	fp_63 = Mem61[fp_47:word32]
	r5Out = r5_50
	r6Out = r6_51
	r7Out = r7_52
	fpOut = fp_63
	spOut = fp_47 + 4<i32>
	return r4_54
fn000026BD_exit:


word32 fn000026FC(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000026A0
//      fn000026BD
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026BD r4:[0..31]-fn000026BD r5:[0..31]-fn000026BD r6:[0..31]-fn000026BD r7:[0..31]-fn000026BD sp:[0..31]-fn000026BD
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000026FC_entry:
l000026FC:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x11C<32>:word32] = r5
	Mem14[sp - 0x120<32>:word32] = r6
	Mem17[sp - 0x124<32>:word32] = r7
	r7_18 = Mem17[sp + 4<i32>:word32]
	r6_108 = Mem17[sp + 8<i32>:word32]
	Mem21[sp - 264<i32>:int32] = 0<i32>
	fp_103 = sp - 4<i32>
	sp_15 = sp - 0x124<32>
	goto l00002923
l0000270D:
	sp_387 = sp_15 - 4<i32>
	Mem388[sp_387:word32] = r7_18
	Mem405[fp_392 - 268<i32>:word32] = fn000030D0(r4, r5_107, r6_108, r7_18, fp_103, sp_387, out r5_107, out r6_108, out r7_18, out fp_392, out sp_398)
	sp_15 = sp_398 - 252<i32>
	fp_103 = fp_392
	goto l0000277A
l0000271F:
	Mem36[r7_18:word32] = Mem34[r7_18:word32] + -1<i32>
	branch Mem36[r7_18:word32] >= 0<i32> l00002738
l00002727:
	sp_48 = sp_15 - 4<i32>
	Mem49[sp_48:word32] = r7_18
	Mem66[fp_53 - 268<i32>:word32] = fn000030D0(r4, r5_107, r6_108, r7_18, fp_103, sp_48, out r5_107, out r6_108, out r7_18, out fp_53, out sp_59)
	sp_15 = sp_59 - 252<i32>
	fp_103 = fp_53
	goto l00002744
l00002738:
	r1_40 = Mem36[r7_18 + 4<i32>:word32]
	Mem42[r7_18 + 4<i32>:word32] = Mem36[r7_18 + 4<i32>:word32] + 1<i32>
	Mem46[fp_103 - 268<i32>:word32] = CONVERT(Mem42[r1_40:byte], byte, word32)
l00002744:
	branch __bit<word32,word32>(CONVERT(Mem68[Mem68[fp_103 - 268<i32>:word32] + 73133<i32>:byte], byte, int32), 3<32>) l0000271F
l00002757:
	sp_73 = sp_15 - 4<i32>
	Mem75[sp_73:word32] = r7_18
	Mem78[sp_73 - 4<i32>:word32] = Mem75[fp_103 - 268<i32>:word32]
	sp_15 = sp_73 - 252<i32>
	branch fn00003930(r7_18, fp_103, sp_73 - 4<i32>, out r7_18, out fp_103) == -1<i32> l00002968
l0000276B:
	goto l00002923
l0000276E:
	r1_379 = Mem375[r7_18 + 4<i32>:word32]
	Mem381[r7_18 + 4<i32>:word32] = Mem375[r7_18 + 4<i32>:word32] + 1<i32>
	Mem385[fp_103 - 268<i32>:word32] = CONVERT(Mem381[r1_379:byte], byte, word32)
l0000277A:
	branch Mem407[fp_103 - 268<i32>:word32] == r5_107 l00002923
l00002783:
	sp_413 = sp_15 - 4<i32>
	Mem415[sp_413:word32] = r7_18
	Mem418[sp_413 - 4<i32>:word32] = Mem415[fp_103 - 268<i32>:word32]
	sp_15 = sp_413 - 252<i32>
	branch fn00003930(r7_18, fp_103, sp_413 - 4<i32>, out r7_18, out fp_103) == -1<i32> l00002968
l00002797:
	goto l0000296E
l0000279A:
	branch r5_107 == 0x2A<32> l000027AE
l000027A2:
	Mem106[fp_103 - 272<i32>:int32] = 0<i32>
	r5_107 = CONVERT(Mem106[r6_108 + 1<i32>:byte], byte, word32)
	r6_108 = r6_108 + 2<i32>
	goto l000027B2
l000027AE:
	Mem104[fp_103 - 272<i32>:int32] = 1<i32>
l000027B2:
	Mem112[fp_103 - 264<i32>:int32] = 0<i32>
	branch !__bit<word32,word32>(CONVERT(Mem112[r5_107 + 73133<i32>:byte], byte, int32), 2<32>) l000027EC
l000027C5:
	Mem123[fp_103 - 264<i32>:word32] = Mem117[fp_103 - 264<i32>:word32] * 0xA<32> + r5_107 - 48<i32>
	r5_107 = CONVERT(Mem123[r6_108:byte], byte, word32)
	r6_108 = r6_108 + 1<i32>
	branch __bit<word32,word32>(CONVERT(Mem123[r5_107 + 73133<i32>:byte], byte, int32), 2<32>) l000027C5
l000027EC:
	branch Mem131[fp_103 - 264<i32>:word32] == 0<i32> l000027FA
l000027F2:
	Mem135[fp_103 - 264<i32>:word32] = 0x7FFFFFFF<32>
l000027FA:
	Mem139[fp_103 - 276<i32>:word32] = r5_107
	branch Mem139[fp_103 - 276<i32>:word32] == 0x6C<32> l00002814
l0000280A:
	branch Mem139[fp_103 - 276<i32>:word32] == 0x68<32> l0000281A
l00002814:
	r5_107 = CONVERT(Mem139[r6_108:byte], byte, word32)
	r6_108 = r6_108 + 1<i32>
l0000281A:
	branch r5_107 == 0<i32> l00002976
l0000281F:
	branch r5_107 == 0x5B<32> l0000283F
l00002827:
	Mem168[sp_15:word32] = fp_103 - 256<i32>
	sp_169 = sp_15 - 4<i32>
	Mem171[sp_169:word32] = r6_108
	r0_187 = fn00002D77(r4, r5_107, r6_108, r7_18, fp_103, sp_169, out r4, out r5_107, out r7_18, out fp_103, out sp_193)
	sp_15 = sp_193 - 248<i32>
	r6_108 = r0_187
	branch r0_187 == 0<i32> l00002976
l0000283F:
	branch !__bit<word32,word32>(CONVERT(Mem205[r5_107 + 73133<i32>:byte], byte, int32), 0<32>) l00002857
l0000284E:
	Mem211[fp_103 - 276<i32>:ptr32] = 0x0000006C<p32>
	r5_107 = r5_107 + 32<i32>
l00002857:
	branch r5_107 == 0x63<32> l000028B5
l00002860:
	branch r5_107 == 0x5B<32> l000028B5
l00002869:
	Mem221[r7_18:word32] = Mem219[r7_18:word32] + -1<i32>
	branch Mem221[r7_18:word32] >= 0<i32> l00002882
l00002871:
	sp_233 = sp_15 - 4<i32>
	Mem234[sp_233:word32] = r7_18
	Mem251[fp_238 - 268<i32>:word32] = fn000030D0(r4, r5_107, r6_108, r7_18, fp_103, sp_233, out r5_107, out r6_108, out r7_18, out fp_238, out sp_244)
	sp_15 = sp_244 - 252<i32>
	fp_103 = fp_238
	goto l0000288E
l00002882:
	r1_225 = Mem221[r7_18 + 4<i32>:word32]
	Mem227[r7_18 + 4<i32>:word32] = Mem221[r7_18 + 4<i32>:word32] + 1<i32>
	Mem231[fp_103 - 268<i32>:word32] = CONVERT(Mem227[r1_225:byte], byte, word32)
l0000288E:
	branch __bit<word32,word32>(CONVERT(Mem253[Mem253[fp_103 - 268<i32>:word32] + 73133<i32>:byte], byte, int32), 3<32>) l00002869
l000028A1:
	sp_258 = sp_15 - 4<i32>
	Mem260[sp_258:word32] = r7_18
	Mem263[sp_258 - 4<i32>:word32] = Mem260[fp_103 - 268<i32>:word32]
	sp_15 = sp_258 - 252<i32>
	branch fn00003930(r7_18, fp_103, sp_258 - 4<i32>, out r7_18, out fp_103) == -1<i32> l00002968
l000028B5:
	branch r5_107 == 0x63<32> l000028CD
l000028BD:
	branch r5_107 == 0x73<32> l000028CD
l000028C5:
	branch r5_107 == 0x5B<32> l000028E8
l000028CD:
	Mem326[sp_15:word32] = fp_103 + 16<i32>
	sp_327 = sp_15 - 4<i32>
	Mem329[sp_327:word32] = r7_18
	Mem331[sp_327:word32] = fp_103 - 256<i32>
	Mem334[sp_327 - 4<i32>:word32] = Mem331[fp_103 - 264<i32>:word32]
	Mem337[sp_327 - 8<i32>:word32] = r5_107
	Mem340[sp_327 - 12<i32>:word32] = Mem337[fp_103 - 272<i32>:word32]
	sp_321 = sp_327 - 12<i32>
	r0_316 = fn00002C89(r4, r5_107, r6_108, r7_18, fp_103, sp_327 - 12<i32>, out r4, out r5_107, out r6_108, out r7_18, out fp_103)
	goto l00002901
l000028E8:
	Mem290[sp_15:word32] = fp_103 + 16<i32>
	sp_291 = sp_15 - 4<i32>
	Mem295[sp_291:word32] = r7_18
	Mem298[sp_291 - 4<i32>:word32] = Mem295[fp_103 - 276<i32>:word32]
	Mem301[sp_291 - 8<i32>:word32] = Mem298[fp_103 - 264<i32>:word32]
	Mem303[sp_291 - 12<i32>:word32] = r5_107
	Mem306[sp_291 - 16<i32>:word32] = Mem303[fp_103 - 272<i32>:word32]
	r0_316 = fn0000297A(r4, r5_107, r6_108, r7_18, fp_103, sp_291 - 16<i32>, out r4, out r5_107, out r6_108, out r7_18, out fp_103, out sp_321)
l00002901:
	Mem359[fp_103 - 276<i32>:word32] = r0_316
	sp_15 = sp_321 - 232<i32>
	branch Mem359[fp_103 - 276<i32>:word32] == 0<i32> l00002916
l00002910:
	Mem364[fp_103 - 260<i32>:word32] = Mem359[fp_103 - 260<i32>:word32] + Mem359[fp_103 - 272<i32>:word32]
l00002916:
	branch Mem367[fp_103 + 16<i32>:word32] == 0<i32> l00002968
l0000291C:
	branch Mem367[fp_103 - 276<i32>:word32] == 0<i32> l0000296E
l00002923:
	r6_108 = r6_108 + 1<i32>
	r5_107 = CONVERT(Mem26[r6_108:byte], byte, word32)
	branch r5_107 == 0<i32> l0000296E
l00002931:
	branch __bit<word32,word32>(CONVERT(Mem26[r5_107 + 73133<i32>:byte], byte, int32), 3<32>) l0000271F
l00002941:
	branch r5_107 == 0x25<32> l0000295C
l00002949:
	r6_108 = r6_108 + 1<i32>
	r5_107 = CONVERT(Mem26[r6_108:byte], byte, word32)
	branch r5_107 == 0x25<32> l0000279A
l0000295C:
	Mem375[r7_18:word32] = Mem26[r7_18:word32] + -1<i32>
	branch Mem375[r7_18:word32] >= 0<i32> l0000276E
l00002965:
	goto l0000270D
l00002968:
	branch Mem432[fp_103 - 260<i32>:word32] == 0<i32> l00002976
l0000296E:
l00002972:
	Mem450[sp_15:word32] = r7_18
	sp_451 = sp_15 + 4<i32>
	Mem460[sp_451:word32] = r6_108
	Mem469[sp_451 + 4<i32>:word32] = r5_107
	fp_473 = Mem469[fp_103:word32]
	r5Out = r5_107
	r6Out = r6_108
	r7Out = r7_18
	fpOut = fp_473
	spOut = fp_103 + 4<i32>
	return r4
l00002976:
	goto l00002972
fn000026FC_exit:


word32 fn0000297A(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000026FC
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026FC r0:[0..31]-fn000026FC r4:[0..31]-fn000026FC r5:[0..31]-fn000026FC r6:[0..31]-fn000026FC r7:[0..31]-fn000026FC sp:[0..31]-fn000026FC
// Trashed: S fp r0 r4 r5 r6 r7 sp
// Preserved: SP0
fn0000297A_entry:
l0000297A:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x68<32>:word32] = r4
	Mem14[sp - 0x6C<32>:word32] = r5
	Mem17[sp - 0x70<32>:word32] = r6
	Mem20[sp - 0x74<32>:word32] = r7
	r7_21 = Mem20[sp + 20<i32>:word32]
	Mem24[sp - 72<i32>:int32] = 0<i32>
	Mem26[sp - 76<i32>:int32] = 0<i32>
	Mem28[sp - 80<i32>:int32] = 0<i32>
	Mem30[sp - 84<i32>:int32] = 0<i32>
	Mem32[sp - 88<i32>:int32] = 0<i32>
	Mem34[sp - 92<i32>:int32] = 0<i32>
	r0_35 = Mem34[sp + 8<i32>:word32]
	r0_37 = r0_35 - Mem34[r0_35 + 4<32>:word32]
	branch r0_35 >=u Mem34[r0_35:word32] && r0_35 <u Mem34[r0_35 + 4<32>:word32] l00002A68
l000029A9:
	call 0x000029A9<p32> + CONVERT(Mem34[Mem34[0x000029B0<p32>:ptr32] + r0_37 * 4<32>:word32], word32, int32) (retsize: 0;)
		uses: fp:sp - 4<i32>,Mem:Mem34,r4:r4,r5:r5,r6:sp - 68<i32>,r7:r7_21,sp:sp - 0x74<32>
		defs: fp:fp_51,r0:r0_56,r4:r4_52,r5:r5_53,r6:r6_54,r7:r7_55,sp:sp_50
	r4Out = r4_52
	r5Out = r5_53
	r6Out = r6_54
	r7Out = r7_55
	fpOut = fp_51
	spOut = sp_50
	return r0_56
l00002A68:
	Mem39[sp - 0x74<32>:word32] = r7_21
	Mem41[sp - 0x70<32>:word32] = sp - 68<i32>
	Mem43[sp - 0x6C<32>:word32] = r5
	Mem45[sp - 0x68<32>:word32] = r4
	fp_47 = Mem45[sp - 4<i32>:word32]
	r4Out = r4
	r5Out = r5
	r6Out = sp - 68<i32>
	r7Out = r7_21
	fpOut = fp_47
	spOut = sp
	return 0<i32>
fn0000297A_exit:


word32 fn00002C89(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000026FC
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026FC r0:[0..31]-fn000026FC r4:[0..31]-fn000026FC r5:[0..31]-fn000026FC r6:[0..31]-fn000026FC r7:[0..31]-fn000026FC
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7
// Preserved: sp SP0
fn00002C89_entry:
l00002C89:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x14<32>:word32] = r4
	Mem14[sp - 0x18<32>:word32] = r5
	Mem17[sp - 0x1C<32>:word32] = r6
	Mem20[sp - 0x20<32>:word32] = r7
	fp_144 = sp - 4<i32>
	sp_132 = sp - 0x20<32>
	r7_104 = Mem20[sp + 4<i32>:word32]
	r6_22 = Mem20[sp + 8<i32>:word32]
	r5_119 = Mem20[sp + 12<i32>:word32]
	r4_24 = Mem20[sp + 16<i32>:word32]
	branch r7_104 == 0<i32> l00002CAA
l00002C9C:
	Mem30[Mem20[sp + 24<i32>:ptr32]:word32] = Mem20[Mem20[sp + 24<i32>:ptr32]:word32] + 4<i32>
	Mem34[sp - 12<i32>:word32] = Mem30[Mem30[Mem30[sp + 24<i32>:ptr32]:word32] - 4<i32>:word32]
	goto l00002CAD
l00002CAA:
	Mem28[sp - 12<i32>:int32] = 0<i32>
l00002CAD:
	Mem38[sp - 16<i32>:word32] = Mem36[sp - 12<i32>:word32]
	branch r6_22 == 0x63<32> l00002CDB
l00002CB9:
	branch r5_119 == 0x7FFFFFFF<32> l00002CDB
l00002CC1:
	r5_119 = 1<i32>
	goto l00002CDB
l00002CC5:
	branch r7_104 == 0<i32> l00002CD1
l00002CC9:
	Mem111[Mem82[fp_144 - 8<i32>:ptr32]:byte] = Mem82[fp_144 - 4<i32>:byte]
l00002CD1:
	Mem115[fp_144 - 8<i32>:word32] = Mem113[fp_144 - 8<i32>:word32] + 1<i32>
	r5_119 = r5_119 + -1<i32>
	branch r5_119 <= 0<i32> l00002D37
l00002CDB:
	Mem49[Mem47[fp_144 + 24<i32>:ptr32]:word32] = Mem47[Mem47[fp_144 + 24<i32>:ptr32]:word32] + -1<i32>
	branch Mem49[Mem49[fp_144 + 24<i32>:ptr32]:word32] >= 0<i32> l00002CF6
l00002CE5:
	sp_60 = sp_132 - 4<i32>
	Mem62[sp_60:word32] = Mem49[fp_144 + 24<i32>:word32]
	Mem80[fp_67 - 4<i32>:word32] = fn000030D0(r4_24, r5_119, r6_22, r7_104, fp_144, sp_60, out r5_119, out r6_22, out r7_104, out fp_67, out sp_73)
	sp_132 = sp_73 - 252<i32>
	fp_144 = fp_67
	goto l00002D03
l00002CF6:
	r1_53 = Mem49[Mem49[fp_144 + 24<i32>:ptr32] + 4<i32>:word32]
	Mem55[Mem49[fp_144 + 24<i32>:ptr32] + 4<i32>:word32] = Mem49[Mem49[fp_144 + 24<i32>:ptr32] + 4<i32>:word32] + 1<i32>
	Mem58[fp_144 - 4<i32>:word32] = CONVERT(Mem55[r1_53:byte], byte, word32)
l00002D03:
	branch Mem82[fp_144 - 4<i32>:word32] == -1<i32> l00002D37
l00002D0A:
	branch r6_22 == 0x73<32> l00002D22
l00002D12:
	branch __bit<word32,word32>(CONVERT(Mem82[Mem82[fp_144 - 4<i32>:ptr32] + 73133<i32>:byte], byte, int32), 3<32>) l00002D37
l00002D22:
	branch r6_22 == 0x5B<32> l00002CC5
l00002D2B:
	branch Mem82[r4_24 + Mem82[fp_144 - 4<i32>:word32]:byte] == 0<8> l00002CC5
l00002D37:
	branch Mem125[fp_144 - 4<i32>:word32] == -1<i32> l00002D53
l00002D3C:
	branch r5_119 <= 0<i32> l00002D57
l00002D40:
	sp_136 = sp_132 - 4<i32>
	Mem138[sp_136:word32] = Mem125[fp_144 + 24<i32>:word32]
	Mem141[sp_136 - 4<i32>:word32] = Mem138[fp_144 - 4<i32>:word32]
	sp_132 = sp_136 - 252<i32>
	branch fn00003930(r7_104, fp_144, sp_136 - 4<i32>, out r7_104, out fp_144) == -1<i32> l00002D57
l00002D53:
	Mem159[Mem158[fp_144 + 28<i32>:ptr32]:int32] = 0<i32>
l00002D57:
	branch Mem161[fp_144 - 8<i32>:word32] == Mem161[fp_144 - 12<i32>:word32] l00002D63
l00002D5D:
	r0_177 = 0<i32>
l00002D5F:
	Mem185[sp_132:word32] = r7_104
	sp_186 = sp_132 + 4<i32>
	Mem189[sp_186:word32] = r6_22
	Mem195[sp_186 + 4<i32>:word32] = r5_119
	Mem204[sp_186 + 8<i32>:word32] = r4_24
	fp_208 = Mem204[fp_144:word32]
	r4Out = r4_24
	r5Out = r5_119
	r6Out = r6_22
	r7Out = r7_104
	fpOut = fp_208
	return r0_177
l00002D63:
	branch r7_104 == 0<i32> l00002D73
l00002D67:
	branch r6_22 == 0x63<32> l00002D73
l00002D6F:
	Mem176[Mem161[fp_144 - 8<i32>:ptr32]:int8] = 0<i8>
l00002D73:
	r0_177 = 1<i32>
	goto l00002D5F
fn00002C89_exit:


word32 fn00002D77(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000026FC
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026FC r0:[0..31]-fn000026FC r4:[0..31]-fn000026FC r5:[0..31]-fn000026FC r7:[0..31]-fn000026FC sp:[0..31]-fn000026FC
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00002D77_entry:
l00002D77:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x10<32>:word32] = r4
	Mem14[sp - 0x14<32>:word32] = r5
	Mem17[sp - 0x18<32>:word32] = r6
	Mem20[sp - 0x1C<32>:word32] = r7
	r7_21 = Mem20[sp + 4<i32>:word32]
	r6_22 = Mem20[sp + 8<i32>:word32]
	Mem24[sp - 12<i32>:int32] = 0<i32>
	branch Mem24[r7_21:byte] == 0x5E<8> l00002D8E
l00002D89:
	Mem28[sp - 12<i32>:word32] = Mem24[sp - 12<i32>:word32] + 1<i32>
	r7_21 = r7_21 + 1<i32>
l00002D8E:
	Mem33[sp - 0x1C<32>:ptr32] = 0x00000100<p32>
	branch Mem33[sp - 12<i32>:word32] == 0<i32> l00002D9B
l00002D97:
	r0_37 = 1<i32>
	goto l00002D9D
l00002D9B:
	r0_37 = 0<i32>
l00002D9D:
	Mem42[sp - 0x20<32>:word32] = r0_37
	Mem46[sp - 0x24<32>:word32] = r6_22
	r5_101 = fn000031BC(r4, r5, r6_22, r7_21, sp - 4<i32>, sp - 0x24<32>, out r6_110, out r7_134, out fp_129)
	sp_116 = sp - 0x118<32>
	r4_66 = CONVERT(Mem46[r7_134:byte], byte, word32)
	branch r4_66 == 0x5D<32> l00002DC1
l00002DB8:
	branch r4_66 == 0x2D<32> l00002E1E
l00002DC1:
	Mem78[r6_110 + r4_66:byte] = Mem46[fp_129 - 8<i32>:byte]
	goto l00002E13
l00002DCB:
	branch r4_87 == 0<i32> l00002DD5
l00002DCF:
	r0_141 = 0<i32>
l00002DD1:
	Mem145[sp_116:word32] = r7_134
	sp_146 = sp_116 + 4<i32>
	Mem148[sp_146:word32] = r6_110
	Mem155[sp_146 + 4<i32>:word32] = r5_101
	Mem158[sp_146 + 8<i32>:word32] = r4_87
	fp_161 = Mem158[fp_129:word32]
	r4Out = r4_87
	r5Out = r5_101
	r7Out = r7_134
	fpOut = fp_161
	spOut = fp_129 + 4<i32>
	return r0_141
l00002DD5:
	branch r4_87 == 0x2D<32> l00002E17
l00002DDD:
	Mem97[fp_129 - 4<i32>:word32] = CONVERT(Mem86[r7_134:byte], byte, word32)
	branch Mem97[fp_129 - 4<i32>:word32] == 0x5D<32> l00002E17
l00002DED:
	r5_101 = CONVERT(Mem97[r7_134 - 2<i32>:byte], byte, word32)
	branch r5_101 >= Mem97[fp_129 - 4<i32>:word32] l00002E17
l00002DF8:
	sp_119 = sp_116 - 4<i32>
	Mem120[sp_119:word32] = Mem97[fp_129 - 4<i32>:word32] - r5_101 + 1<i32>
	Mem123[sp_119 - 4<i32>:word32] = Mem120[fp_129 - 8<i32>:word32]
	Mem128[sp_119 - 8<i32>:word32] = r6_110 + r5_101
	r5_101 = fn000031BC(r4_87, r5_101, r6_110, r7_134, fp_129, sp_119 - 8<i32>, out r6_110, out r7_134, out fp_129)
	sp_116 = sp_119 - 252<i32>
l00002E13:
	r7_134 = r7_134 + 1<i32>
	goto l00002E1E
l00002E17:
	Mem112[r6_110 + r4_87:byte] = Mem106[fp_129 - 8<i32>:byte]
l00002E1E:
	r7_134 = r7_134 + 1<i32>
	r4_87 = CONVERT(Mem86[r7_134:byte], byte, word32)
	branch r4_87 == 0x5D<32> l00002DCB
l00002E31:
	r0_141 = r7_134
	goto l00002DD1
fn00002D77_exit:


word32 fn000030D0(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000167E
//      fn000022B4
//      fn000026FC
//      fn00002C89
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026FC r0:[0..31]-fn000026FC r5:[0..31]-fn000026FC r6:[0..31]-fn000026FC r7:[0..31]-fn000026FC sp:[0..31]-fn000026FC
// Trashed: SSSSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn000030D0_entry:
l000030D0:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	fp_152 = sp - 4<i32>
	sp_109 = sp - 12<i32>
	r7_137 = Mem14[sp + 4<i32>:word32]
	branch Mem14[r7_137 + 8<i32>:word32] == 0<i32> l000030E6
l000030DB:
	Mem19[sp - 16<i32>:word32] = r7_137
	r6 = fn00005009(r4, r5, r6, r7_137, sp - 4<i32>, sp - 16<i32>, out r7_137, out fp_152, out sp_27)
	sp_109 = sp_27 - 252<i32>
l000030E6:
	branch __bit<word32,word32>(CONVERT(Mem35[r7_137 + 12<i32>:byte], byte, int32), 0<32>) l00003104
l000030F2:
	branch !__bit<word32,word32>(CONVERT(Mem35[r7_137 + 12<i32>:byte], byte, int32), 7<32>) l000031B6
l000030FF:
	Mem41[r7_137 + 12<i32>:byte] = __set_bit<byte,byte>(Mem35[r7_137 + 12<i32>:byte], 0<8>)
l00003104:
	branch (CONVERT(Mem44[r7_137 + 12<i32>:byte], byte, int32) & 0x44<32>) == 0<i32> l00003142
l00003112:
	r6 = 0x1204C<32>
	branch Mem44[0x0001218C<p32>:word32] <= 0x1204C<32> l00003142
l00003120:
	branch !__bit<word32,word32>(CONVERT(Mem53[r6 + 12<i32>:byte], byte, int32), 6<32>) l00003137
l0000312C:
	sp_57 = sp_109 - 4<i32>
	Mem58[sp_57:word32] = r6
	fn00004D67(r5, r6, r7_137, fp_152, sp_57, out r5, out r6, out r7_137, out fp_152, out sp_68)
	sp_109 = sp_68 - 252<i32>
l00003137:
	r6 = r6 + 16<i32>
	branch r6 < Mem76[0x0001218C<p32>:word32] l00003120
l00003142:
	Mem83[r7_137 + 4<i32>:word32] = Mem81[r7_137 + 8<i32>:word32]
	branch !__bit<word32,word32>(CONVERT(Mem83[r7_137 + 12<i32>:byte], byte, int32), 2<32>) l00003156
l00003152:
	r0_90 = 1<i32>
	goto l00003166
l00003156:
	r0_90 = Mem83[Mem83[0x00012190<p32>:ptr32] + CONVERT(Mem83[r7_137 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem83[r7_137 + 8<i32>:word32]
l00003166:
	sp_97 = sp_109 - 4<i32>
	Mem99[sp_97:word32] = r0_90
	Mem103[sp_97 - 4<i32>:word32] = Mem99[r7_137 + 8<i32>:word32]
	Mem106[sp_97 - 8<i32>:int32] = CONVERT(Mem103[r7_137 + 13<i32>:byte], byte, int32)
	Mem110[r7_137:word32] = fn000038C0()
	Mem112[r7_137:word32] = Mem110[r7_137:word32] + -1<i32>
	sp_109 = sp_97 - 252<i32>
	branch Mem112[r7_137:word32] < 0<i32> l00003191
l00003183:
	r0_132 = Mem112[r7_137 + 4<i32>:word32]
	Mem134[r7_137 + 4<i32>:word32] = Mem112[r7_137 + 4<i32>:word32] + 1<i32>
	r0_131 = CONVERT(Mem134[r0_132:byte], byte, word32)
l0000318D:
	Mem142[sp_109:word32] = r7_137
	Mem151[sp_109 + 4<i32>:word32] = r6
	fp_161 = Mem151[fp_152:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7_137
	fpOut = fp_161
	spOut = fp_152 + 4<i32>
	return r0_131
l00003191:
	branch Mem112[r7_137:word32] == -1<i32> l0000319D
l00003196:
	Mem126[r7_137 + 12<i32>:byte] = __set_bit<byte,byte>(Mem112[r7_137 + 12<i32>:byte], 5<8>)
	goto l000031B3
l0000319D:
	Mem119[r7_137 + 12<i32>:byte] = __set_bit<byte,byte>(Mem112[r7_137 + 12<i32>:byte], 4<8>)
	branch !__bit<word32,word32>(CONVERT(Mem119[r7_137 + 12<i32>:byte], byte, int32), 7<32>) l000031B3
l000031AE:
	Mem123[r7_137 + 12<i32>:byte] = __clear_bit<byte,byte>(Mem119[r7_137 + 12<i32>:byte], 0<8>)
l000031B3:
	Mem130[r7_137:int32] = 0<i32>
l000031B6:
	r0_131 = -1<i32>
	goto l0000318D
fn000030D0_exit:


word32 fn000031BC(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002D77
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00002D77 r5:[0..31]-fn00002D77 r6:[0..31]-fn00002D77 r7:[0..31]-fn00002D77
// Trashed: SSSSS fp r0 r4 r5 r6 r7
// Preserved: sp SP0
fn000031BC_entry:
l000031BC:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r4
	Mem14[sp - 12<i32>:word32] = r5
	Mem17[sp - 16<i32>:word32] = r6
	Mem20[sp - 20<i32>:word32] = r7
	r7_21 = Mem20[sp + 4<i32>:word32]
	r6_22 = CONVERT(Mem20[sp + 8<i32>:byte], byte, int32)
	r5_23 = Mem20[sp + 12<i32>:word32]
	r7_32 = r7_21
	goto l000031D2
l000031CD:
	Mem33[r7_32:byte] = SLICE(r6_22, byte, 0)
	r7_32 = r7_32 + 1<i32>
l000031D2:
	r5_23 = r5_23 + -1<i32>
	branch r5_23 >= 0<i32> l000031CD
l000031D8:
	Mem39[sp - 20<i32>:word32] = r7_32
	Mem41[sp - 16<i32>:word32] = r6_22
	Mem43[sp - 12<i32>:word32] = r5_23
	Mem45[sp - 8<i32>:word32] = r7_21
	fp_48 = Mem45[sp - 4<i32>:word32]
	r6Out = r6_22
	r7Out = r7_32
	fpOut = fp_48
	return r5_23
fn000031BC_exit:


word32 fn000031E0(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000B29
//      fn00001532
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D r4:[0..31]-fn0000079D r5:[0..31]-fn0000079D r6:[0..31]-fn0000079D r7:[0..31]-fn0000079D sp:[0..31]-fn0000079D
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000031E0_entry:
l000031E0:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x1C<32>:word32] = r7
	Mem13[sp - 20<i32>:word32] = 0x7FFFFFFF<32>
	Mem15[sp - 16<i32>:word32] = Mem13[sp + 4<i32>:word32]
	Mem17[sp - 12<i32>:word32] = Mem15[sp - 16<i32>:word32]
	Mem19[sp - 8<i32>:int8] = 2<i8>
	Mem21[sp - 7<i32>:byte] = 0x14<8>
	Mem23[sp - 24<i32>:word32] = sp + 12<i32>
	Mem25[sp - 0x1C<32>:word32] = sp - 20<i32>
	Mem28[sp - 0x20<32>:word32] = Mem25[sp - 24<i32>:word32]
	Mem31[sp - 0x24<32>:word32] = Mem28[sp + 8<i32>:word32]
	r0_36 = fn00003A45(r4, r5, r6, r7, sp - 4<i32>, sp - 0x24<32>, out r4_38, out r5_39, out r6_40, out fp_35, out sp_42)
	Mem51[Mem31[fp_35 - 12<i32>:ptr32]:int8] = 0<i8>
	Mem53[sp_42 - 244<i32>:word32] = r0_36
	fp_55 = Mem53[fp_35:word32]
	r5Out = r5_39
	r6Out = r6_40
	r7Out = r0_36
	fpOut = fp_55
	spOut = fp_35 + 4<i32>
	return r4_38
fn000031E0_exit:


word32 fn0000321C(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn00000B29
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r0:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r6 r7
// Preserved: sp SP0
fn0000321C_entry:
l0000321C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = Mem14[sp + 8<i32>:word32]
	branch r7_15 == r6_16 l0000324D
l00003229:
	r0_39 = 0<i32>
	goto l0000323D
l0000322D:
	r6_16 = r6_16 + -1<i32>
	r0_39 = CONVERT(Mem14[r7_89:byte] - Mem14[r6_16 + -1<i32>:byte], byte, int32)
l0000323D:
	Mem46[sp - 12<i32>:word32] = r7_15
	Mem50[sp - 8<i32>:word32] = r6_16
	fp_55 = Mem50[sp - 4<i32>:word32]
	r6Out = r6_16
	r7Out = r7_15
	fpOut = fp_55
	return r0_39
l00003241:
	r7_15 = r7_89 + 1<i32>
	r7_89 = r7_15
	branch Mem14[r7_89:byte] == 0<8> l00003229
l0000324D:
	r6_16 = r6_16 + 1<i32>
	branch Mem14[r7_89:byte] == Mem14[r6_16:byte] l00003241
l00003257:
	goto l0000322D
fn0000321C_exit:


word32 fn00003404(word32 r2, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
// MayUse:  fp:[0..31] r2:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D r5:[0..31]-fn0000079D r6:[0..31]-fn0000079D r7:[0..31]-fn0000079D sp:[0..31]-fn0000079D
// Trashed: SSS fp r0 r1 r5 r6 r7 sp
// Preserved: SP0
fn00003404_entry:
l00003404:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x14<32>:word32] = r6
	Mem14[sp - 0x18<32>:word32] = r7
	Mem20[sp - 12<i32>:word32] = fn000034FC(sp - 0x18<32>)
	fp_39 = sp - 4<i32>
	sp_12 = sp - 0x18<32>
	branch Mem20[sp - 12<i32>:word32] == 0<i32> l00003444
l00003417:
	Mem26[sp - 0x1C<32>:int32] = 0<i32>
	Mem29[sp - 0x20<32>:word32] = Mem26[sp + 4<i32>:word32]
	Mem32[sp - 0x24<32>:word32] = 0x11D33<32>
	Mem35[sp - 0x28<32>:word32] = 0x11D30<32>
	Mem38[sp - 0x2C<32>:word32] = 0x11D28<32>
	fp_39 = fn000034AC(sp - 4<i32>, sp - 0x2C<32>, out sp_42)
	Mem45[sp_42 - 236<i32>:ptr32] = 0x0000007F<p32>
	fn000034F4(sp_42 - 236<i32>)
	sp_12 = sp_42 - 488<i32>
l00003444:
	sp_53 = sp_12 - 4<i32>
	Mem55[sp_53:int32] = 1<i32>
	Mem58[sp_53 - 4<i32>:int32] = 2<i32>
	r0_67 = fn00003514(r2, r5, r6, r7, fp_39, sp_53 - 4<i32>, out r5_69, out r6_70, out r7_184, out fp_66, out sp_72)
	Mem80[sp_72 - 252<i32>:int32] = 1<i32>
	Mem83[sp_72 - 256<i32>:int32] = 3<i32>
	r0_85 = fn00003514(r2, r5_69, r6_70, r0_67, fp_66, sp_72 - 256<i32>, out r5_87, out r6_185, out r7_89, out fp_84, out sp_90)
	sp_105 = sp_90 - 248<i32>
l00003462:
	Mem99[sp_105:word32] = fp_84 - 4<i32>
	Mem106[fp_84 - 12<i32>:word32] = fn00005588(sp_105)
	sp_105 = sp_105 - 252<i32>
	branch Mem106[fp_84 - 12<i32>:word32] == Mem106[fp_84 - 8<i32>:word32] l0000347E
l00003479:
	branch Mem106[fp_84 - 12<i32>:word32] == -1<i32> l00003462
l0000347E:
	Mem116[sp_105 - 4<i32>:word32] = r7_89
	Mem119[sp_105 - 8<i32>:int32] = 2<i32>
	fn00003514(r2, r5_87, r0_85, r7_89, fp_84, sp_105 - 8<i32>, out r5_130, out r6_131, out r7_132, out fp_127, out sp_133)
	Mem139[sp_133 - 252<i32>:word32] = r6_131
	Mem142[sp_133 - 256<i32>:int32] = 3<i32>
	fn00003514(r2, r5_130, r6_131, r7_132, fp_127, sp_133 - 256<i32>, out r5_146, out r6_147, out r7_148, out fp_143, out sp_149)
	branch Mem142[fp_143 - 12<i32>:word32] == -1<i32> l000034A4
l0000349D:
l000034A0:
	Mem160[sp_149 - 248<i32>:word32] = r7_148
	Mem163[sp_149 - 244<i32>:word32] = r6_147
	fp_166 = Mem163[fp_143:word32]
	r6Out = r6_147
	r7Out = r7_148
	fpOut = fp_166
	spOut = fp_143 + 4<i32>
	return r5_146
l000034A4:
	goto l000034A0
fn00003404_exit:


word32 fn000034AC(word32 fp, word32 sp, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013F9
//      fn000017CF
//      fn00003404
// MayUse:  fp:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000013F9 sp:[0..31]-fn000013F9
// Trashed: fp r0 r1 sp
// Preserved: SP0
fn000034AC_entry:
l000034AC:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = Mem6[0x000115D4<p32>:word32]
	Mem13[sp - 8<i32>:word32] = sp + 8<i32>
	Mem16[sp - 12<i32>:word32] = Mem13[sp + 4<i32>:word32]
	fp_17 = fn000034C8(sp - 4<i32>, sp - 12<i32>)
	fp_21 = Mem16[fp_17:word32]
	spOut = fp_17 + 4<i32>
	return fp_21
fn000034AC_exit:


word32 fn000034C8(word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000034AC
// MayUse:  fp:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000034AC
// Trashed: fp r0 r1
// Preserved: sp SP0
fn000034C8_entry:
l000034C8:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = Mem6[0x000115D4<p32>:word32]
	Mem14[sp - 12<i32>:word32] = Mem11[sp + 8<i32>:word32]
	Mem17[sp - 16<i32>:word32] = Mem14[sp + 4<i32>:word32]
	fn000034E4()
	return Mem17[sp - 4<i32>:word32]
fn000034C8_exit:


void fn000034E4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000034C8
// MayUse: 
// LiveOut:
// Trashed: r0 r1
// Preserved: SP0
fn000034E4_entry:
l000034E4:
	__syscall()
l000055B8_in_fn000034E4:
	Mem6[0x00012200<p32>:word32] = 0x0000003B<p32>
	return
fn000034E4_exit:


void fn000034F4(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003404
// MayUse:  sp:[0..31]
// LiveOut:
// Trashed: SSS r0 r1
// Preserved: SP0
fn000034F4_entry:
l000034F4:
	__syscall()
	__breakpoint_trap()
l000034FB_thunk_fn000034FC:
	fn000034FC(sp)
	return
fn000034F4_exit:


word32 fn000034FC(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013F9
//      fn000017CF
//      fn00003404
//      fn000034F4
// MayUse:  sp:[0..31]
// LiveOut: r0:[0..31]-fn000013F9
// Trashed: SSS r0 r1
// Preserved: SP0
fn000034FC_entry:
l000034FC:
	__syscall()
	r0_21 = 0x00000002<p32>
	branch !F l0000350B
l00003505:
	goto l000055B8_in_fn000034FC
l0000350B:
	branch sp == -4<i32> l00003511
l0000350F:
	r0_21 = 0<i32>
l00003511:
	return r0_21
l000055B8_in_fn000034FC:
	Mem10[0x00012200<p32>:word32] = 0x00000002<p32>
	return -1<i32>
fn000034FC_exit:


word32 fn00003514(word32 r2, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn00003404
// MayUse:  fp:[0..31] r2:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r0:[0..31]-fn0000012C r5:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C sp:[0..31]-fn0000012C
// Trashed: SSS fp r0 r1 r5 r6 r7 sp
// Preserved: SS SP0
fn00003514_entry:
	goto l00003514
l00001B61:
	"Nyi-Nyi"
l00001B62_thunk_fn00001B63:
	r0_31 = fn00001B63(r0_20, r2, r5, r6, r7, sp - 4<i32>, sp - 0xC<32>, out r5_32, out r6_33, out r7_34, out fp_30, out sp_35)
	r5Out = r5_32
	r6Out = r6_33
	r7Out = r7_34
	fpOut = fp_30
	spOut = sp_35
	return r0_31
l00003514:
	goto l00003592
l00003517:
	branch Mem6[sp + 4<i32>:word32] <= 0<i32> l00003525
l0000351C:
	branch Mem6[sp + 4<i32>:word32] <= 0x14<32> l00003537
l00003525:
	Mem67[sp - 0x10<32>:word32] = Mem6[sp + 8<i32>:word32]
	Mem70[sp - 0x14<32>:word32] = Mem67[sp + 4<i32>:word32]
	r0_108 = fn00003598()
	goto l0000358E
l00003537:
	Mem15[sp - 8<i32>:word32] = Mem6[Mem6[0x00014C78<p32>:ptr32] + Mem6[sp + 4<i32>:word32] * 4<32>:word32]
	branch Mem15[sp + 8<i32>:word32] == 0<i32> l0000354C
l00003547:
	branch Mem15[sp + 8<i32>:word32] == 1<i32> l00003558
l0000354C:
	Mem43[Mem15[0x00014C78<p32>:ptr32] + Mem15[sp + 4<i32>:word32] * 4<32>:int32] = 0<i32>
	goto l0000356A
l00003558:
	r0_20 = Mem15[sp + 4<i32>:word32]
	Mem22[Mem15[sp - 3<i32>:ptr32] + r0_20 * 4<32>:word32] = Mem15[sp - 6136<i32>:word32]
	v20_24 = Mem22[r7 + 23<i32>:byte]
	Mem25[r7 + 23<i32>:byte] = v20_24
	branch v20_24 == 0<8> l00001B61
l00003566:
l0000356A:
	Mem47[sp - 0x10<32>:word32] = Mem43[sp + 8<i32>:word32]
	Mem50[sp - 0x14<32>:word32] = Mem47[sp + 4<i32>:word32]
	Mem54[sp - 12<i32>:word32] = fn00003598()
	branch Mem54[sp - 12<i32>:word32] == 0x35AA<32> l00003589
l00003585:
	Mem58[sp - 12<i32>:word32] = Mem54[sp - 8<i32>:word32]
l00003589:
	r0_108 = Mem60[sp - 12<i32>:word32]
l0000358E:
	fp_77 = Mem76[sp - 4<i32>:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7
	fpOut = fp_77
	spOut = sp
	return r0_108
l00003592:
	Mem6[sp - 4<i32>:word32] = fp
	goto l00003517
fn00003514_exit:


word32 fn00003598()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003514
// MayUse: 
// LiveOut: r0:[0..31]-fn00003514
// Trashed: r0 r1
// Preserved: SP0
fn00003598_entry:
l00003598:
	__syscall()
	branch !F l000035A7
l000035A1:
	goto l000055B8_in_fn00003598
l000035A7:
	return 0x00000030<p32>
l000055B8_in_fn00003598:
	Mem7[0x00012200<p32>:word32] = 0x00000030<p32>
	return -1<i32>
fn00003598_exit:


word32 fn000035C8(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000021C1
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000021C1 r0:[0..31]-fn000021C1 r5:[0..31]-fn000021C1 r6:[0..31]-fn000021C1 sp:[0..31]-fn000021C1
// Trashed: SSS fp r0 r1 r5 r6 r7 sp
// Preserved: SS SP0
fn000035C8_entry:
l000035C8:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r5
	Mem14[sp - 12<i32>:word32] = r6
	Mem17[sp - 16<i32>:word32] = r7
	fp_36 = sp - 4<i32>
	sp_15 = sp - 16<i32>
	r7_18 = Mem17[sp + 4<i32>:word32]
	r5_19 = Mem17[0x000115D4<p32>:word32]
	branch r5_19 == 0<i32> l000035E2
l000035D8:
	r0_52 = 0<i32>
	goto l000035DE
l000035DC:
	r0_52 = r0_39
l000035DE:
	Mem58[sp_15:word32] = r7_18
	sp_59 = sp_15 + 4<i32>
	Mem62[sp_59:word32] = r6
	Mem66[sp_59 + 4<i32>:word32] = r5_19
	fp_70 = Mem66[fp_36:word32]
	r5Out = r5_19
	r6Out = r6
	fpOut = fp_70
	spOut = fp_36 + 4<i32>
	return r0_52
l000035E2:
	branch Mem23[r5_19:word32] == 0<i32> l000035D8
l000035E7:
	sp_30 = sp_15 - 4<i32>
	Mem32[sp_30:word32] = Mem23[r5_19:word32]
	Mem35[sp_30 - 4<i32>:word32] = r7_18
	r0_39 = fn00003603(r6, r7_18, fp_36, sp_30 - 4<i32>, out r7_18, out fp_36)
	r5_19 = r5_19 + 4<i32>
	sp_15 = sp_30 - 252<i32>
	r6 = r0_39
	branch r0_39 == 0<i32> l000035E2
l00003601:
	goto l000035DC
fn000035C8_exit:


word32 fn00003603(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000035C8
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000035C8 r0:[0..31]-fn000035C8 r7:[0..31]-fn000035C8
// Trashed: SSSSS fp r0 r6 r7
// Preserved: sp SP0
fn00003603_entry:
l00003603:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = Mem14[sp + 8<i32>:word32]
	goto l00003618
l0000360E:
	r7_15 = r7_15 + 1<i32>
	branch Mem14[r7_15:byte] == 0x3D<8> l00003630
l00003618:
	r6_16 = r6_16 + 1<i32>
	branch Mem14[r7_15:byte] == Mem14[r6_16:byte] l0000360E
l00003622:
	branch Mem14[r7_15:byte] == 0<8> l00003636
l0000362A:
	branch Mem14[r6_16 - 1<i32>:byte] == 0x3D<8> l00003636
l00003630:
	r0_35 = r6_16
l00003632:
	Mem45[sp - 12<i32>:word32] = r7_15
	Mem49[sp - 8<i32>:word32] = r6_16
	fp_55 = Mem49[sp - 4<i32>:word32]
	r7Out = r7_15
	fpOut = fp_55
	return r0_35
l00003636:
	r0_35 = 0<i32>
	goto l00003632
fn00003603_exit:


word32 fn0000363C(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
// MayUse:  sp:[0..31]
// LiveOut: r0:[0..31]-fn00000FF5
// Trashed: SSS r0 r1
// Preserved: SP0
fn0000363C_entry:
l0000363C:
	__syscall()
	r1_6 = Mem0[sp + 4<i32>:word32]
	branch r1_6 == 0<i32> l0000364D
l0000364A:
	Mem9[r1_6:word32] = 0x0000000D<p32>
l0000364D:
	return 0x0000000D<p32>
fn0000363C_exit:


word32 fn00003650(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 sb, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sb:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r0:[0..31]-fn0000012C r4:[0..31]-fn0000012C r5:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C sp:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00003650_entry:
l00003650:
	Mem6[sp - 4<i32>:word32] = fp
	Mem17[sp - 8<i32>:word32] = fn00003784(r7, sp - 4<i32>, sp - 4<i32>, out r7_12, out fp_10)
	Mem20[sp - 12<i32>:word32] = Mem17[fp_10 + 12<i32>:word32]
	Mem23[sp - 16<i32>:word32] = Mem20[fp_10 + 8<i32>:word32]
	r0_29 = fn00003694(r4, r5, r6, r7_12, fp_10, sp - 16<i32>, sb, out r4_32, out r5_33, out r6_34, out r7_30, out fp_28)
	fp_41 = Mem23[fp_28:word32]
	r4Out = r4_32
	r5Out = r5_33
	r6Out = r6_34
	r7Out = r7_30
	fpOut = fp_41
	spOut = fp_28 + 4<i32>
	return r0_29
fn00003650_exit:


word32 fn0000366E(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 sb, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sb:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D r4:[0..31]-fn0000079D r5:[0..31]-fn0000079D r6:[0..31]-fn0000079D r7:[0..31]-fn0000079D sp:[0..31]-fn0000079D
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn0000366E_entry:
l0000366E:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_12 = Mem11[sp + 12<i32>:word32]
	Mem14[sp - 12<i32>:word32] = r7_12
	r5_23 = fn00004CEB(r5, r6, r7_12, sp - 4<i32>, sp - 12<i32>, out r6_19, out r7_20, out fp_17, out sp_21)
	Mem30[sp_21 - 256<i32>:word32] = r7_20
	Mem33[sp_21 - 260<i32>:word32] = Mem30[fp_17 + 12<i32>:word32]
	Mem36[sp_21 - 264<i32>:word32] = Mem33[fp_17 + 8<i32>:word32]
	fn00003694(r4, r5_23, r6_19, r7_20, fp_17, sp_21 - 264<i32>, sb, out r4_43, out r5_44, out r6_45, out r7_41, out fp_39)
	Mem52[sp_21 - 508<i32>:word32] = r7_41
	fp_54 = Mem52[fp_39:word32]
	r5Out = r5_44
	r6Out = r6_45
	r7Out = r7_41
	fpOut = fp_54
	spOut = fp_39 + 4<i32>
	return r4_43
fn0000366E_exit:


word32 fn00003694(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 sb, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003650
//      fn0000366E
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sb:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000366E r0:[0..31]-fn00003650 r4:[0..31]-fn0000366E r5:[0..31]-fn0000366E r6:[0..31]-fn0000366E r7:[0..31]-fn0000366E
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7
// Preserved: sp SP0
fn00003694_entry:
l00003694:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r4
	Mem14[sp - 12<i32>:word32] = r5
	Mem17[sp - 16<i32>:word32] = r6
	Mem20[sp - 20<i32>:word32] = r7
	sp_132 = sp - 20<i32>
	r7_21 = Mem20[sp + 12<i32>:word32]
	branch r7_21 == 0<i32> l00003765
l0000369F:
	branch Mem20[sp + 4<i32>:word32] == 0<i32> l00003765
l000036A5:
	branch Mem20[Mem20[sp + 4<i32>:ptr32]:byte] == 0<8> l00003765
l000036AF:
	r0_31 = CONVERT(Mem20[Mem20[sp + 8<i32>:ptr32] + 1<i32>:byte] == 0x2B<8>, bool, word32)
	r6 = r0_31
	r0_33 = CONVERT(Mem20[Mem20[sp + 8<i32>:ptr32]:byte], byte, int32)
	branch r0_33 == 0x61<32> l000036E8
l000036C5:
	branch r0_33 == 0x72<32> l000036FC
l000036CD:
	branch r0_33 == 0x77<32> l00003765
l000036D6:
	branch r0_31 == 0<i32> l000036DE
l000036DA:
	r0_52 = 2<i32>
	goto l000036E0
l000036DE:
	r0_52 = 1<i32>
l000036E0:
	r0_41 = r0_52 | 0x300<32>
	goto l000036F8
l000036E8:
	branch r0_31 == 0<i32> l000036F0
l000036EC:
	r0_38 = 2<i32>
	goto l000036F2
l000036F0:
	r0_38 = 1<i32>
l000036F2:
	r0_41 = r0_38 | 0x108<32>
l000036F8:
	r5 = r0_41
	goto l00003706
l000036FC:
	branch r0_31 == 0<i32> l00003704
l00003700:
	r5 = 2<i32>
	goto l00003706
l00003704:
	r5 = 0<i32>
l00003706:
	Mem63[sp - 20<i32>:ptr32] = 0x000001B6<p32>
	Mem66[sp - 24<i32>:word32] = r5
	Mem73[sp - 28<i32>:word32] = Mem66[sp + 4<i32>:word32]
	r0_74 = fn000038AC()
	sp_132 = sp - 272<i32>
	r4 = r0_74
	branch r0_74 < 0<i32> l00003765
l00003721:
	Mem86[r7_21:int32] = 0<i32>
	Mem90[r7_21 + 13<i32>:byte] = SLICE(r0_74, byte, 0)
	branch r0_31 == 0<i32> l00003734
l0000372E:
	Mem108[r7_21 + 12<i32>:byte] = 0x80<8>
	goto l00003747
l00003734:
	branch Mem90[Mem90[sp + 8<i32>:ptr32]:byte] == 0x72<8> l0000373F
l0000373B:
	r0_100 = 1<i32>
	goto l00003741
l0000373F:
	r0_100 = 2<i32>
l00003741:
	Mem106[r7_21 + 12<i32>:byte] = SLICE(r0_100, byte, 0)
l00003747:
	branch Mem111[Mem111[sp + 8<i32>:ptr32]:byte] == 0x61<8> l0000376B
l0000374E:
	branch r0_31 == 0<i32> l0000376B
l00003752:
	Mem122[sp - 276<i32>:int32] = 2<i32>
	Mem125[sp - 280<i32>:int32] = 0<i32>
	Mem129[sp - 284<i32>:word32] = r0_74
	sp_132 = sp - 528<i32>
	branch fn00003898() >= 0<i32> l0000376B
l00003765:
	r0_155 = 0<i32>
l00003767:
	Mem163[sp_132:word32] = r7_21
	sp_164 = sp_132 + 4<i32>
	Mem168[sp_164:word32] = r6
	Mem175[sp_164 + 4<i32>:word32] = r5
	Mem180[sp_164 + 8<i32>:word32] = r4
	fp_184 = Mem180[sp - 4<i32>:word32]
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7_21
	fpOut = fp_184
	return r0_155
l0000376B:
	Mem138[r7_21 + 4<i32>:int32] = 0<i32>
	Mem140[r7_21 + 8<i32>:int32] = 0<i32>
	r0_141 = CONVERT(Mem140[r7_21 + 13<i32>:byte], byte, int32)
	Mem144[Mem140[sp - 3<i32>:ptr32] + r0_141 * 4<32>:word32] = Mem140[r7_21 - 6136<i32>:word32]
	r0_155 = SEQ(SLICE(r0_141, word16, 16), SLICE(r0_141, word16, 0) - Mem144[Mem144[sb + 23<i32>:ptr32] + 56<i32>:word16])
	goto l00003767
fn00003694_exit:


word32 fn00003784(word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003650
// MayUse:  fp:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00003650 r0:[0..31]-fn00003650 r7:[0..31]-fn00003650
// Trashed: SSS fp r0 r7
// Preserved: sp SP0
fn00003784_entry:
l00003784:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_12 = 0x1204C<32>
	branch (CONVERT(Mem11[0x12058<32>:byte], byte, int32) & 0x83<32>) == 0<i32> l000037BA
l0000379B:
	branch r7_12 < Mem11[0x0001218C<p32>:word32] l000037A9
l000037A3:
	r0_27 = 0<i32>
l000037A5:
	Mem33[sp - 8<i32>:word32] = r7_12
	fp_38 = Mem33[sp - 4<i32>:word32]
	r7Out = r7_12
	fpOut = fp_38
	return r0_27
l000037A9:
	r7_12 = r7_12 + 16<i32>
	branch (CONVERT(Mem11[r7_12 + 12<i32>:byte], byte, int32) & 0x83<32>) == 0<i32> l0000379B
l000037BA:
	r0_27 = r7_12
	goto l000037A5
fn00003784_exit:


word32 fn000037C0(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000012C r6:[0..31]-fn0000012C r7:[0..31]-fn0000012C sp:[0..31]-fn0000012C
// Trashed: SSSSS fp r0 r1 r6 r7 sp
// Preserved: SP0
fn000037C0_entry:
l000037C0:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r0_16 = fn00003878()
	Mem21[sp - 16<i32>:word32] = Mem14[sp + 4<i32>:word32]
	sp_113 = sp - 268<i32>
	r7_33 = r7_26 + fn0000554C(r0_16, r7_15, sp - 4<i32>, sp - 16<i32>, out r6_25, out r7_26, out fp_22)
	goto l00003805
l000037DE:
	Mem44[sp_113:ptr32] = 0x0000000A<p32>
	sp_45 = sp_113 - 4<i32>
	Mem47[sp_45:word32] = r6_25
	Mem55[r7_33:byte] = SLICE(fn0000557C(sp_45), byte, 0) + 0x30<8>
	Mem57[sp_45 - 248<i32>:ptr32] = 0x0000000A<p32>
	Mem59[sp_45 - 252<i32>:word32] = r6_25
	sp_113 = sp_45 - 500<i32>
	r6_25 = fn0000556C(sp_45 - 252<i32>)
l00003805:
	r7_33 = r7_33 + -1<i32>
	branch Mem39[r7_33:byte] == 0x58<8> l000037DE
l0000380F:
	branch Mem39[r7_33 + 1<i32>:byte] == 0<8> l00003821
l0000381B:
	Mem83[r7_33 + 1<i32>:byte] = 0x61<8>
	goto l0000384F
l00003821:
	sp_70 = sp_113 - 4<i32>
	Mem72[sp_70:int32] = 0<i32>
	Mem76[sp_70 - 4<i32>:word32] = Mem72[fp_22 + 8<i32>:word32]
	sp_113 = sp_70 - 252<i32>
	branch fn00003864() == 0<i32> l00003848
l00003833:
	goto l00003844
l00003835:
	Mem99[r7_33 + 1<i32>:byte] = Mem91[r7_33 + 1<i32>:byte] + 1<i8>
	branch Mem99[r7_33 + 1<i32>:byte] <= 0x7A<8> l0000384F
l00003844:
	Mem107[Mem106[fp_22 + 8<i32>:ptr32]:int8] = 0<i8>
l00003848:
	Mem115[sp_113:word32] = r7_33 + 1<i32>
	Mem120[sp_113 + 4<i32>:word32] = r6_25
	fp_122 = Mem120[fp_22:word32]
	r7Out = r7_33 + 1<i32>
	fpOut = fp_122
	spOut = fp_22 + 4<i32>
	return r6_25
l0000384F:
	sp_85 = sp_113 - 4<i32>
	Mem87[sp_85:int32] = 0<i32>
	Mem91[sp_85 - 4<i32>:word32] = Mem87[fp_22 + 8<i32>:word32]
	sp_113 = sp_85 - 252<i32>
	branch fn00003864() == 0<i32> l00003835
l00003861:
	goto l00003848
fn000037C0_exit:


word32 fn00003864()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013F9
//      fn000037C0
// MayUse: 
// LiveOut: r0:[0..31]-fn000013F9
// Trashed: r0 r1
// Preserved: SP0
fn00003864_entry:
l00003864:
	__syscall()
	branch !F l00003873
l0000386D:
	goto l000055B8_in_fn00003864
l00003873:
	return 0x00000021<p32>
l000055B8_in_fn00003864:
	Mem7[0x00012200<p32>:word32] = 0x00000021<p32>
	return -1<i32>
fn00003864_exit:


word32 fn00003878()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000037C0
// MayUse: 
// LiveOut: r0:[0..31]-fn000037C0
// Trashed: r0 r1
// Preserved: SP0
fn00003878_entry:
l00003878:
	__syscall()
	return 0x00000014<p32>
fn00003878_exit:


void fn00003884()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn00000B29
// MayUse: 
// LiveOut:
// Trashed: r0 r1
// Preserved: SP0
fn00003884_entry:
l00003884:
	__syscall()
	branch !F l00003893
l0000388D:
	goto l000055B8_in_fn00003884
l00003893:
	return
l000055B8_in_fn00003884:
	Mem8[0x00012200<p32>:word32] = 0x0000001C<p32>
	return
fn00003884_exit:


word32 fn00003898()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
//      fn00001C95
//      fn0000236C
//      fn0000263C
//      fn00003694
// MayUse: 
// LiveOut: r0:[0..31]-fn00003694
// Trashed: r0 r1
// Preserved: SP0
fn00003898_entry:
l00003898:
	__syscall()
	branch !F l000038A7
l000038A1:
	goto l000055B8_in_fn00003898
l000038A7:
	return 0x00000013<p32>
l000055B8_in_fn00003898:
	Mem7[0x00012200<p32>:word32] = 0x00000013<p32>
	return -1<i32>
fn00003898_exit:


word32 fn000038AC()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000012C
//      fn00000B29
//      fn00003694
// MayUse: 
// LiveOut: r0:[0..31]-fn0000012C
// Trashed: r0 r1
// Preserved: SP0
fn000038AC_entry:
l000038AC:
	__syscall()
	branch !F l000038BB
l000038B5:
	goto l000055B8_in_fn000038AC
l000038BB:
	return 0x00000005<p32>
l000055B8_in_fn000038AC:
	Mem7[0x00012200<p32>:word32] = 0x00000005<p32>
	return -1<i32>
fn000038AC_exit:


word32 fn000038C0()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
//      fn000017CF
//      fn00001A4F
//      fn00001C95
//      fn000030D0
// MayUse: 
// LiveOut: r0:[0..31]-fn00001A4F
// Trashed: r0 r1
// Preserved: SP0
fn000038C0_entry:
l000038C0:
	__syscall()
	branch !F l000038CF
l000038C9:
	goto l000055B8_in_fn000038C0
l000038CF:
	return 0x00000003<p32>
l000055B8_in_fn000038C0:
	Mem7[0x00012200<p32>:word32] = 0x00000003<p32>
	return -1<i32>
fn000038C0_exit:


word32 fn000038D4(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn0000079D r2:[0..31]-fn0000079D r5:[0..31]-fn0000079D r6:[0..31]-fn0000079D r7:[0..31]-fn0000079D
// Trashed: SSSSS fp r0 r1 r2 r5 r6 r7
// Preserved: sp SP0
fn000038D4_entry:
l000038D4:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r5
	Mem14[sp - 12<i32>:word32] = r6
	Mem17[sp - 16<i32>:word32] = r7
	r7_18 = Mem17[sp + 4<i32>:word32]
	r6_19 = Mem17[sp + 8<i32>:word32]
	r7_21 = r7_18
l000038DF:
	r7_21 = r7_70 + 1<i32>
	r7_70 = r7_21
	branch Mem17[r7_70:byte] == 0<8> l000038DF
l000038EB:
	r7_29 = r7_21 + -1<i32>
l000038ED:
	Mem40[r7_29:byte] = Mem38[r6_19:byte]
	r6_19 = r6_19 + 1<i32>
	r7_29 = r7_29 + 1<i32>
	r2_41 = CONVERT(Mem40[r7_29:byte], byte, int32)
	branch r2_41 == 0<i32> l000038ED
l00003901:
	Mem49[sp - 16<i32>:word32] = r7_29
	Mem51[sp - 12<i32>:word32] = r6_19
	Mem53[sp - 8<i32>:word32] = r7_18
	fp_57 = Mem53[sp - 4<i32>:word32]
	r5Out = r7_18
	r6Out = r6_19
	r7Out = r7_29
	fpOut = fp_57
	return r2_41
fn000038D4_exit:


word32 fn00003908(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00000B29 r5:[0..31]-fn00000B29 r6:[0..31]-fn00000B29 r7:[0..31]-fn00000B29
// Trashed: SSSSS fp r0 r1 r2 r5 r6 r7
// Preserved: sp SP0
fn00003908_entry:
l00003908:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r5
	Mem14[sp - 12<i32>:word32] = r6
	Mem17[sp - 16<i32>:word32] = r7
	r7_18 = Mem17[sp + 4<i32>:word32]
	r6_19 = Mem17[sp + 8<i32>:word32]
	r7_24 = r7_18
l00003913:
	Mem30[r7_54:byte] = Mem28[r6_19:byte]
	r6_19 = r6_19 + 1<i32>
	r7_24 = r7_54 + 1<i32>
	r7_54 = r7_24
	branch Mem30[r7_54:byte] == 0<8> l00003913
l00003927:
	Mem37[sp - 16<i32>:word32] = r7_24
	Mem39[sp - 12<i32>:word32] = r6_19
	Mem41[sp - 8<i32>:word32] = r7_18
	fp_44 = Mem41[sp - 4<i32>:word32]
	r6Out = r6_19
	r7Out = r7_24
	fpOut = fp_44
	return r7_18
fn00003908_exit:


word32 fn00003930(word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000026FC
//      fn00002C89
// MayUse:  fp:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026FC r0:[0..31]-fn000026FC r7:[0..31]-fn000026FC
// Trashed: SSSSS fp r0 r1 r7
// Preserved: sp SP0
fn00003930_entry:
l00003930:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_12 = Mem11[sp + 8<i32>:word32]
	branch Mem11[sp + 4<i32>:word32] == -1<i32> l00003972
l0000393B:
	branch !__bit<word32,word32>(CONVERT(Mem11[r7_12 + 12<i32>:byte], byte, int32), 0<32>) l0000394D
l00003947:
	branch Mem11[r7_12 + 4<i32>:word32] > Mem11[r7_12 + 8<i32>:word32] l0000395B
l0000394D:
	branch Mem11[r7_12 + 4<i32>:word32] == Mem11[r7_12 + 8<i32>:word32] l00003972
l00003953:
	branch Mem11[r7_12:word32] == 0<i32> l00003972
l00003958:
	Mem27[r7_12 + 4<i32>:word32] = Mem11[r7_12 + 4<i32>:word32] + 1<i32>
l0000395B:
	r0_32 = CONVERT(Mem31[sp + 4<i32>:byte], byte, word32)
	Mem35[r7_12 + 4<i32>:word32] = Mem31[r7_12 + 4<i32>:word32] + -1<i32>
	Mem38[Mem35[r7_12 + 4<i32>:word32]:byte] = SLICE(r0_32, byte, 0)
	Mem40[r7_12:word32] = Mem38[r7_12:word32] + 1<i32>
	r0_25 = Mem40[sp + 4<i32>:word32]
l0000396E:
	Mem49[sp - 8<i32>:word32] = r7_12
	fp_53 = Mem49[sp - 4<i32>:word32]
	r7Out = r7_12
	fpOut = fp_53
	return r0_25
l00003972:
	r0_25 = -1<i32>
	goto l0000396E
fn00003930_exit:


void fn00003978()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
//      fn00001772
// MayUse: 
// LiveOut:
// Trashed: r0 r1
// Preserved: SP0
fn00003978_entry:
l00003978:
	__syscall()
	branch !F l00003987
l00003981:
	goto l000055B8_in_fn00003978
l00003987:
	return
l000055B8_in_fn00003978:
	Mem8[0x00012200<p32>:word32] = 0x0000000A<p32>
	return
fn00003978_exit:


word32 fn0000398C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
// MayUse: 
// LiveOut: r0:[0..31]-fn00000FF5
// Trashed: r0 r1
// Preserved: SP0
fn0000398C_entry:
l0000398C:
	__syscall()
	branch !F l0000399B
l00003995:
	goto l000055B8_in_fn0000398C
l0000399B:
	return 0x0000001E<p32>
l000055B8_in_fn0000398C:
	Mem7[0x00012200<p32>:word32] = 0x0000001E<p32>
	return -1<i32>
fn0000398C_exit:


word32 fn000039E8(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003A45
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00003A45 r4:[0..31]-fn00003A45 r5:[0..31]-fn00003A45 r6:[0..31]-fn00003A45 r7:[0..31]-fn00003A45 sp:[0..31]-fn00003A45
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn000039E8_entry:
l000039E8:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r4
	Mem14[sp - 12<i32>:word32] = r5
	Mem17[sp - 16<i32>:word32] = r6
	Mem20[sp - 20<i32>:word32] = r7
	r7_21 = Mem20[sp + 4<i32>:word32]
	r6_22 = Mem20[sp + 8<i32>:word32]
	r5_23 = Mem20[sp + 12<i32>:word32]
	r4_24 = Mem20[sp + 16<i32>:word32]
	branch Mem20[r5_23 + 13<i32>:byte] == 0x14<8> l00003A2E
l000039FD:
	Mem52[r5_23:word32] = Mem20[r5_23:word32] - (Mem20[r4_24:word32] - Mem20[r5_23 + 4<i32>:word32])
	Mem55[r5_23 + 4<i32>:word32] = Mem52[r4_24:word32]
	Mem57[sp - 24<i32>:word32] = r5_23
	r6_61 = fn000050AA(r6_22, r7_21, sp - 4<i32>, sp - 24<i32>, out r7_62, out fp_58)
	Mem70[sp - 280<i32>:word32] = r5_23
	Mem72[sp - 284<i32>:word32] = r6_61
	Mem75[sp - 288<i32>:int32] = 1<i32>
	Mem77[sp - 292<i32>:word32] = r7_62
	r4_104 = fn00004B2C(r4_24, r5_23, r6_61, r7_62, fp_58, sp - 292<i32>, out r5_101, out r6_38, out r7_39, out fp_106, out sp_85)
	Mem93[r4_104:word32] = Mem77[r5_101 + 4<i32>:word32]
	sp_45 = sp_85 - 240<i32>
l00003A2A:
	Mem96[sp_45:word32] = r7_39
	sp_97 = sp_45 + 4<i32>
	Mem99[sp_97:word32] = r6_38
	Mem102[sp_97 + 4<i32>:word32] = r5_101
	Mem105[sp_97 + 8<i32>:word32] = r4_104
	fp_108 = Mem105[fp_106:word32]
	r5Out = r5_101
	r6Out = r6_38
	r7Out = r7_39
	fpOut = fp_108
	spOut = fp_106 + 4<i32>
	return r4_104
l00003A2E:
	Mem28[sp - 24<i32>:word32] = r6_22
	Mem30[sp - 28<i32>:word32] = r7_21
	Mem33[sp - 32<i32>:word32] = Mem30[r4_24:word32]
	Mem48[r4_104:word32] = fn000054D4(r4_24, r5_23, r6_22, r7_21, sp - 4<i32>, sp - 32<i32>, out r4_104, out r5_101, out r6_38, out r7_39, out fp_106) + r6_38
	sp_45 = sp - 276<i32>
	goto l00003A2A
fn000039E8_exit:


word32 fn00003A45(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00002580
//      fn000025E4
//      fn000031E0
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000025E4 r0:[0..31]-fn000025E4 r4:[0..31]-fn000025E4 r5:[0..31]-fn000025E4 r6:[0..31]-fn000025E4 sp:[0..31]-fn000025E4
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00003A45_entry:
l00003A45:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x1EC<32>:word32] = r4
	Mem14[sp - 0x1F0<32>:word32] = r5
	Mem17[sp - 0x1F4<32>:word32] = r6
	Mem20[sp - 0x1F8<32>:word32] = r7
	r7_117 = Mem20[sp + 4<i32>:word32]
	r6_116 = Mem20[sp + 12<i32>:word32]
	Mem24[sp - 16<i32>:int32] = 0<i32>
	Mem26[sp - 480<i32>:int32] = CONVERT(Mem24[r6_116 + 13<i32>:byte], byte, int32)
	Mem28[sp - 8<i32>:word32] = Mem26[r6_116 + 4<i32>:word32]
	fp_112 = sp - 4<i32>
	sp_100 = sp - 0x1F8<32>
	branch Mem28[sp - 480<i32>:word32] == 0x14<32> l00003A89
l00003A66:
	Mem36[sp - 12<i32>:word32] = Mem28[sp - 8<i32>:word32] | 0x7FFFFFFF<32>
	goto l00003A95
l00003A89:
	Mem33[sp - 12<i32>:word32] = Mem28[Mem28[0x00012190<p32>:ptr32] + Mem28[sp - 480<i32>:word32] * 4<32>:word32]
l00003A95:
	r4_114 = CONVERT(Mem38[r7_117:byte], byte, int32)
	branch r4_114 == 0<i32> l00003B0D
l00003AA0:
	branch r4_114 == 0x25<32> l00003B0D
l00003AA9:
	r7_46 = r7_117
l00003AAB:
	r7_46 = r7_46 + 1<i32>
	r4_50 = CONVERT(Mem38[r7_46:byte], byte, int32)
	branch r4_50 == 0<i32> l00003ABF
l00003AB7:
	branch r4_50 == 0x25<32> l00003AAB
l00003ABF:
	Mem64[fp_112 - 476<i32>:word32] = r7_46 - r7_117
	Mem66[fp_112 - 12<i32>:word32] = Mem64[fp_112 - 12<i32>:word32] + Mem64[fp_112 - 476<i32>:word32]
	Mem70[fp_112 - 480<i32>:word32] = Mem66[fp_112 - 4<i32>:word32] + Mem66[fp_112 - 476<i32>:word32]
	branch Mem70[fp_112 - 480<i32>:word32] <= Mem70[fp_112 - 8<i32>:word32] l00003AF6
l00003AE0:
	Mem104[sp_100:word32] = fp_112 - 4<i32>
	sp_105 = sp_100 - 4<i32>
	Mem106[sp_105:word32] = r6_116
	Mem109[sp_105 - 4<i32>:word32] = Mem106[fp_112 - 476<i32>:word32]
	Mem111[sp_105 - 8<i32>:word32] = r7_117
	r4_114 = fn000039E8(r4_50, r7_117, r6_116, r7_46, fp_112, sp_105 - 8<i32>, out r5, out r6_116, out r7_117, out fp_112, out sp_118)
	sp_100 = sp_118 - 240<i32>
	goto l00003B0D
l00003AF6:
	sp_77 = sp_100 - 4<i32>
	Mem79[sp_77:word32] = Mem70[fp_112 - 476<i32>:word32]
	Mem81[sp_77 - 4<i32>:word32] = r7_117
	Mem84[sp_77 - 8<i32>:word32] = Mem81[fp_112 - 4<i32>:word32]
	fn000054D4(r4_50, r7_117, r6_116, r7_46, fp_112, sp_77 - 8<i32>, out r4_114, out r5, out r6_116, out r7_117, out fp_112)
	Mem102[fp_112 - 4<i32>:word32] = Mem84[fp_112 - 480<i32>:word32]
	sp_100 = sp_77 - 252<i32>
l00003B0D:
	branch r4_114 == 0<i32> l00003B98
l00003B12:
	Mem170[fp_112 - 480<i32>:word32] = Mem167[fp_112 - 4<i32>:word32] - Mem167[r6_116 + 4<i32>:word32]
	Mem172[r6_116:word32] = Mem170[r6_116:word32] - Mem170[fp_112 - 480<i32>:word32]
	Mem174[r6_116 + 4<i32>:word32] = Mem172[fp_112 - 4<i32>:word32]
	branch Mem174[fp_112 - 4<i32>:word32] + Mem174[r6_116:word32] <= Mem174[fp_112 - 8<i32>:word32] l00003B41
l00003B30:
	branch Mem174[r6_116 + 13<i32>:byte] == 0x14<8> l00003B41
l00003B36:
	sp_182 = sp_100 - 4<i32>
	Mem183[sp_182:word32] = r6_116
	r6_116 = fn000050AA(r6_116, r7_117, fp_112, sp_182, out r7_117, out fp_112)
	sp_100 = sp_182 - 252<i32>
l00003B41:
	branch (CONVERT(Mem196[r6_116 + 12<i32>:byte], byte, int32) & 0x44<32>) == 0<i32> l00003B81
l00003B4F:
	branch __bit<word32,word32>(CONVERT(Mem196[r6_116 + 12<i32>:byte], byte, int32), 2<32>) l00003B76
l00003B5B:
	sp_204 = sp_100 - 4<i32>
	Mem207[sp_204:word32] = Mem196[fp_112 - 12<i32>:word32]
	Mem209[sp_204:ptr32] = 0x0000000A<p32>
	Mem214[sp_204 - 4<i32>:word32] = Mem209[fp_112 - 4<i32>:word32] - Mem209[fp_112 - 12<i32>:word32]
	sp_100 = sp_204 - 248<i32>
	branch fn000054A8(r5, r6_116, r7_117, fp_112, sp_204 - 4<i32>, out r5, out r6_116, out r7_117, out fp_112) == 0<i32> l00003B81
l00003B76:
	sp_231 = sp_100 - 4<i32>
	Mem233[sp_231:word32] = r6_116
	fn00004ED8(r5, r6_116, r7_117, fp_112, sp_231, out r5, out r6_116, out r7_117, out fp_112)
	sp_100 = sp_231 - 252<i32>
l00003B81:
	branch !__bit<word32,word32>(CONVERT(Mem250[r6_116 + 12<i32>:byte], byte, int32), 5<32>) l00003B93
l00003B8D:
	r0_254 = -1<i32>
l00003B8F:
	Mem260[sp_100:word32] = r7_117
	sp_261 = sp_100 + 4<i32>
	Mem263[sp_261:word32] = r6_116
	Mem267[sp_261 + 4<i32>:word32] = r5
	Mem273[sp_261 + 8<i32>:word32] = r4_114
	fp_276 = Mem273[fp_112:word32]
	r4Out = r4_114
	r5Out = r5
	r6Out = r6_116
	fpOut = fp_276
	spOut = fp_112 + 4<i32>
	return r0_254
l00003B93:
	r0_254 = Mem250[fp_112 - 12<i32>:word32]
	goto l00003B8F
l00003B98:
	Mem131[fp_112 - 36<i32>:int32] = 0<i32>
	Mem133[fp_112 - 436<i32>:int32] = 0<i32>
	Mem135[fp_112 - 428<i32>:int32] = 0<i32>
	Mem137[fp_112 - 20<i32>:int32] = 0<i32>
	r7_139 = r7_117 + 1<i32>
	goto l00004852
l00004325:
	r0_146 = r4_141 - Mem137[r4_141 + 4<32>:word32]
	branch r4_141 >=u Mem137[r4_141:word32] && r4_141 <u Mem137[r4_141 + 4<32>:word32] l000044E2
l0000432F:
	call 0x0000432F<p32> + CONVERT(Mem137[Mem137[0x00004336<p32>:ptr32] + r0_146 * 4<32>:word32], word32, int32) (retsize: 0;)
		uses: fp:fp_130,Mem:Mem137,r1:r1_165,r4:r4_141,r5:r5_150,r6:r6_152,r7:r7_139 + 1<i32>,sp:sp_149
		defs: fp:fp_159,r0:r0_164,r1:r1_165,r4:r4_160,r5:r5_161,r6:r6_162,sp:sp_158
	r4Out = r4_160
	r5Out = r5_161
	r6Out = r6_162
	fpOut = fp_159
	spOut = sp_158
	return r0_164
l000044E2:
	r7_117 = r7_139
	goto l00003A95
l00004852:
	r4_141 = CONVERT(Mem137[r7_139:byte], byte, int32)
	goto l00004325
fn00003A45_exit:


word32 fn00004B2C(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000039E8
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000039E8 r4:[0..31]-fn000039E8 r5:[0..31]-fn000039E8 r6:[0..31]-fn000039E8 r7:[0..31]-fn000039E8 sp:[0..31]-fn000039E8
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7 sp
// Preserved: SP0
fn00004B2C_entry:
l00004B2C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x10<32>:word32] = r4
	Mem14[sp - 0x14<32>:word32] = r5
	Mem17[sp - 0x18<32>:word32] = r6
	Mem20[sp - 0x1C<32>:word32] = r7
	fp_140 = sp - 4<i32>
	sp_104 = sp - 0x1C<32>
	r7_145 = Mem20[sp + 16<i32>:word32]
	branch Mem20[sp + 8<i32>:word32] <= 0<i32> l00004B78
l00004B38:
	branch Mem20[sp + 12<i32>:word32] <= 0<i32> l00004B78
l00004B3D:
	branch (CONVERT(Mem20[r7_145 + 12<i32>:byte], byte, int32) & 0x12<32>) == 2<i32> l00004B69
l00004B4B:
	branch Mem20[r7_145 + 8<i32>:word32] == 0<i32> l00004B69
l00004B50:
	branch Mem20[r7_145 + 4<i32>:word32] == Mem20[r7_145 + 8<i32>:word32] l00004B7E
l00004B56:
	branch Mem20[r7_145:word32] == 0<i32> l00004B7E
l00004B5B:
	branch (CONVERT(Mem20[r7_145 + 12<i32>:byte], byte, int32) & 0x44<32>) == 0<i32> l00004B7E
l00004B69:
	Mem43[sp - 0x20<32>:word32] = r7_145
	sp_104 = sp_53 - 252<i32>
	branch fn00004F65(r4, r5, r6, r7_145, sp - 4<i32>, sp - 0x20<32>, out r6, out r7_145, out fp_140, out sp_53) == 0<i32> l00004B7E
l00004B78:
l00004B7A:
	Mem291[sp_104:word32] = r7_145
	sp_292 = sp_104 + 4<i32>
	Mem297[sp_292:word32] = r6
	Mem302[sp_292 + 4<i32>:word32] = r5
	Mem313[sp_292 + 8<i32>:word32] = r4
	fp_317 = Mem313[fp_140:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7_145
	fpOut = fp_317
	spOut = fp_140 + 4<i32>
	return r4
l00004B7E:
	Mem67[fp_140 - 4<i32>:word32] = Mem63[Mem63[0x00012190<p32>:ptr32] + CONVERT(Mem63[r7_145 + 13<i32>:byte], byte, int32) * 4<32>:word32]
	r0_69 = Mem67[fp_140 + 16<i32>:word32] * Mem67[fp_140 + 12<i32>:word32]
	r6 = r0_69
	branch Mem67[r7_145 + 8<i32>:word32] < Mem67[r7_145 + 4<i32>:word32] l00004C11
l00004B9A:
	branch __bit<word32,word32>(CONVERT(Mem67[r7_145 + 12<i32>:byte], byte, int32), 2<32>) l00004BAF
l00004BA6:
	branch r0_69 <u 0x400<32> l00004C11
l00004BAF:
	sp_252 = sp_104 - 4<i32>
	Mem254[sp_252:word32] = r0_69
	Mem258[sp_252 - 4<i32>:word32] = Mem254[fp_140 + 8<i32>:word32]
	Mem262[sp_252 - 8<i32>:int32] = CONVERT(Mem258[r7_145 + 13<i32>:byte], byte, int32)
	r0_263 = fn000055A4()
	sp_104 = sp_252 - 252<i32>
	r5 = r0_263
	branch r0_263 == r0_69 l00004BD8
l00004BC9:
	Mem271[r7_145 + 12<i32>:byte] = __set_bit<byte,byte>(Mem262[r7_145 + 12<i32>:byte], 5<8>)
	branch r0_263 < 0<i32> l00004BD6
l00004BD2:
	r5 = r0_263
	goto l00004BD8
l00004BD6:
	r5 = 0<i32>
l00004BD8:
	goto l00004B7A
l00004BE1:
	sp_90 = sp_104 - 4<i32>
	Mem91[sp_90:word32] = r7_390
	sp_104 = sp_90 - 252<i32>
	r7_390 = r7_145
	fp_391 = fp_140
	r6_392 = r6
	branch fn00004ED8(r1_83, r6_392, r7_390, fp_391, sp_90, out r5, out r6, out r7_145, out fp_140) == -1<i32> l00004C11
l00004BF0:
	Mem109[sp_90 - 256<i32>:word32] = Mem91[fp_140 + 12<i32>:word32]
	Mem115[sp_90 - 260<i32>:word32] = r6 + Mem109[fp_140 + 12<i32>:word32] + -1<i32>
	Mem119[fp_140 - 8<i32>:word32] = fn0000556C(sp_90 - 260<i32>)
	sp_104 = sp_90 - 508<i32>
	goto l00004B7A
l00004C11:
	r4 = Mem78[r7_390 + 4<i32>:word32]
	r1_83 = Mem78[fp_391 - 4<i32>:word32] - r4
	branch r1_83 <= 0<i32> l00004BE1
l00004C23:
	branch r6_392 >=u r1_83 l00004C2B
l00004C27:
	r5_125 = r6_392
	goto l00004C2D
l00004C2B:
	r5_125 = r1_83
l00004C2D:
	sp_128 = sp_104 - 4<i32>
	Mem130[sp_128:word32] = r5_125
	Mem134[sp_128 - 4<i32>:word32] = Mem130[fp_391 + 8<i32>:word32]
	Mem137[sp_128 - 8<i32>:word32] = r4
	fn000054D4(r4, r5_125, r6_392, r7_390, fp_391, sp_128 - 8<i32>, out r4, out r5, out r6_144, out r7_145, out fp_140)
	Mem153[r7_145:word32] = Mem137[r7_145:word32] - r5
	Mem155[r7_145 + 4<i32>:word32] = Mem153[r7_145 + 4<i32>:word32] + r5
	sp_104 = sp_128 - 252<i32>
	r1_158 = Mem155[Mem155[0x00012190<p32>:ptr32] + CONVERT(Mem155[r7_145 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem155[r7_145 + 4<i32>:word32]
	branch Mem155[r7_145:word32] >= 0<i32> l00004C5A
l00004C56:
	r0_162 = 0<i32>
	goto l00004C5D
l00004C5A:
	r0_162 = Mem155[r7_145:word32]
l00004C5D:
	branch r1_158 >= r0_162 l00004C6C
l00004C61:
	Mem171[sp_128 - 256<i32>:word32] = r7_145
	r6_144 = fn000050AA(r6_144, r7_145, fp_140, sp_128 - 256<i32>, out r7_145, out fp_140)
	sp_104 = sp_128 - 508<i32>
l00004C6C:
	r6 = r6_144 - r5
	branch r6 == 0<i32> l00004CBA
l00004C73:
	branch (CONVERT(Mem193[r7_145 + 12<i32>:byte], byte, int32) & 0x44<32>) == 0<i32> l00004CB4
l00004C81:
	branch __bit<word32,word32>(CONVERT(Mem193[r7_145 + 12<i32>:byte], byte, int32), 2<32>) l00004CA9
l00004C8D:
	sp_208 = sp_104 - 4<i32>
	Mem209[sp_208:word32] = Mem193[fp_140 + 16<i32>:word32] * Mem193[fp_140 + 12<i32>:word32]
	Mem211[sp_208:ptr32] = 0x0000000A<p32>
	Mem214[sp_208 - 4<i32>:word32] = Mem211[r7_145 + 8<i32>:word32]
	sp_104 = sp_208 - 248<i32>
	branch fn000054A8(r5, r6, r7_145, fp_140, sp_208 - 4<i32>, out r5, out r6, out r7_145, out fp_140) == 0<i32> l00004CB4
l00004CA9:
	sp_229 = sp_104 - 4<i32>
	Mem231[sp_229:word32] = r7_145
	fn00004ED8(r5, r6, r7_145, fp_140, sp_229, out r5, out r6, out r7_145, out fp_140)
	sp_104 = sp_229 - 252<i32>
l00004CB4:
	goto l00004B7A
l00004CBA:
	Mem196[fp_140 + 8<i32>:word32] = Mem193[fp_140 + 8<i32>:word32] + r5
	goto l00004C11
fn00004B2C_exit:


void fn00004CC0(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000055C4
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut:
// Trashed: SSS fp r0 r1 r5 r6 r7 sp
// Preserved: S SP0
fn00004CC0_entry:
l00004CC0:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	fp_19 = sp - 4<i32>
	sp_15 = sp - 8<i32>
	r7_12 = 0x1204C<32>
	branch Mem11[0x0001218C<p32>:word32] <= 0x1204C<32> l00004CE7
l00004CD1:
	sp_16 = sp_15 - 4<i32>
	Mem18[sp_16:word32] = r7_12
	r5 = fn00004CEB(r5, r6, r7_12, fp_19, sp_16, out r6, out r7_25, out fp_19, out sp_26)
	sp_15 = sp_26 - 252<i32>
	r7_12 = r7_25 + 16<i32>
	branch r7_25 + 16<i32> < Mem18[0x0001218C<p32>:word32] l00004CD1
l00004CE7:
	Mem39[sp_15:word32] = r7_12
	return
fn00004CC0_exit:


word32 fn00004CEB(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000366E
//      fn00004CC0
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004CC0 r5:[0..31]-fn00004CC0 r6:[0..31]-fn00004CC0 r7:[0..31]-fn00004CC0 sp:[0..31]-fn00004CC0
// Trashed: SSSS fp r0 r1 r5 r6 r7 sp
// Preserved: S SP0
fn00004CEB_entry:
l00004CEB:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	fp_28 = sp - 4<i32>
	sp_12 = sp - 12<i32>
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = -1<i32>
	branch r7_15 == 0<i32> l00004D61
l00004CF8:
	branch (CONVERT(Mem14[r7_15 + 12<i32>:byte], byte, int32) & 0x83<32>) == 0<i32> l00004D3C
l00004D06:
	branch !__bit<word32,word32>(CONVERT(Mem14[r7_15 + 12<i32>:byte], byte, int32), 2<32>) l00004D16
l00004D12:
	r6_16 = 0<i32>
	goto l00004D23
l00004D16:
	Mem26[sp - 16<i32>:word32] = r7_15
	sp_12 = sp_34 - 252<i32>
	r6_16 = fn00004D67(r5, -1<i32>, r7_15, sp - 4<i32>, sp - 16<i32>, out r5, out r6_140, out r7_15, out fp_28, out sp_34)
l00004D23:
	sp_43 = sp_12 - 4<i32>
	Mem47[sp_43:int32] = CONVERT(Mem45[r7_15 + 13<i32>:byte], byte, int32)
	sp_12 = sp_43 - 252<i32>
	branch fn000050E0() >= 0<i32> l00004D3C
l00004D34:
	Mem55[0x00012200<p32>:int32] = 2<i32>
	r6_16 = -1<i32>
l00004D3C:
	branch !__bit<word32,word32>(CONVERT(Mem57[r7_15 + 12<i32>:byte], byte, int32), 3<32>) l00004D57
l00004D48:
	sp_61 = sp_12 - 4<i32>
	Mem63[sp_61:word32] = Mem57[r7_15 + 8<i32>:word32]
	r6_16 = fn000053C5(r6_16, r7_15, fp_28, sp_61, out r7_15, out fp_28)
	Mem79[r7_15 + 8<i32>:int32] = 0<i32>
	sp_12 = sp_61 - 252<i32>
l00004D57:
	Mem82[r7_15 + 12<i32>:int8] = 0<i8>
	Mem84[r7_15:int32] = 0<i32>
	Mem86[r7_15 + 4<i32>:word32] = Mem84[r7_15 + 8<i32>:word32]
l00004D61:
	Mem93[sp_12:word32] = r7_15
	Mem95[sp_12 + 4<i32>:word32] = r6_16
	fp_99 = Mem95[fp_28:word32]
	r6Out = r6_16
	r7Out = r7_15
	fpOut = fp_99
	spOut = fp_28 + 4<i32>
	return r5
fn00004CEB_exit:


word32 fn00004D67(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn0000079D
//      fn0000236C
//      fn0000263C
//      fn000030D0
//      fn00004CEB
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004CEB r0:[0..31]-fn00004CEB r5:[0..31]-fn00004CEB r6:[0..31]-fn000030D0 r7:[0..31]-fn00004CEB sp:[0..31]-fn00004CEB
// Trashed: SSSS fp r0 r1 r5 r6 r7 sp
// Preserved: S SP0
fn00004D67_entry:
l00004D67:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_12 = Mem11[sp + 4<i32>:word32]
	fp_28 = sp - 4<i32>
	sp_25 = sp - 8<i32>
	branch __bit<word32,word32>(CONVERT(Mem11[r7_12 + 12<i32>:byte], byte, int32), 1<32>) l00004D8A
l00004D79:
	Mem49[r7_12:int32] = 0<i32>
	goto l00004DBF
l00004D7F:
	sp_26 = sp_25 - 4<i32>
	Mem27[sp_26:word32] = r7_12
	fn00004ED8(r5, r6, r7_12, fp_28, sp_26, out r5, out r6, out r7_12, out fp_28)
	sp_25 = sp_26 - 252<i32>
l00004D8A:
	branch __bit<word32,word32>(CONVERT(Mem16[r7_12 + 12<i32>:byte], byte, int32), 2<32>) l00004DAD
l00004D96:
	branch !__bit<word32,word32>(CONVERT(Mem16[r7_12 + 12<i32>:byte], byte, int32), 1<32>) l00004DAD
l00004DA2:
	branch Mem16[r7_12 + 8<i32>:word32] == 0<i32> l00004DAD
l00004DA7:
	branch Mem16[r7_12 + 4<i32>:word32] > Mem16[r7_12 + 8<i32>:word32] l00004D7F
l00004DAD:
	branch !__bit<word32,word32>(CONVERT(Mem16[r7_12 + 12<i32>:byte], byte, int32), 5<32>) l00004DBF
l00004DB9:
	r0_47 = -1<i32>
l00004DBB:
	Mem56[sp_25:word32] = r7_12
	fp_61 = Mem56[fp_28:word32]
	r5Out = r5
	r6Out = r6
	r7Out = r7_12
	fpOut = fp_61
	spOut = fp_28 + 4<i32>
	return r0_47
l00004DBF:
	r0_47 = 0<i32>
	goto l00004DBB
fn00004D67_exit:


word32 fn00004ED8(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003A45
//      fn00004B2C
//      fn00004D67
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004B2C r0:[0..31]-fn00004B2C r5:[0..31]-fn00004B2C r6:[0..31]-fn00004B2C r7:[0..31]-fn00004B2C
// Trashed: SSSSS fp r0 r1 r5 r6 r7
// Preserved: sp SP0
fn00004ED8_entry:
l00004ED8:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0xC<32>:word32] = r5
	Mem14[sp - 0x10<32>:word32] = r6
	Mem17[sp - 0x14<32>:word32] = r7
	r7_18 = Mem17[sp + 4<i32>:word32]
	r6_19 = Mem17[r7_18 + 8<i32>:word32]
	r1_22 = Mem17[r7_18 + 4<i32>:word32] - r6_19
	Mem25[r7_18 + 4<i32>:word32] = r6_19
	fp_60 = sp - 4<i32>
	sp_100 = sp - 0x14<32>
	branch (CONVERT(Mem25[r7_18 + 12<i32>:byte], byte, int32) & 0x44<32>) == 0<i32> l00004F00
l00004EFB:
	Mem36[r7_18:int32] = 0<i32>
	goto l00004F11
l00004F00:
	Mem34[r7_18:word32] = Mem25[Mem25[0x00012190<p32>:ptr32] + CONVERT(Mem25[r7_18 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem25[r7_18 + 8<i32>:word32]
l00004F11:
	r1_41 = Mem38[Mem38[0x00012190<p32>:ptr32] + CONVERT(Mem38[r7_18 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem38[r7_18 + 4<i32>:word32]
	branch Mem38[r7_18:word32] >= 0<i32> l00004F28
l00004F24:
	r0_45 = 0<i32>
	goto l00004F2B
l00004F28:
	r0_45 = Mem38[r7_18:word32]
l00004F2B:
	branch r1_41 >= r0_45 l00004F3A
l00004F2F:
	Mem55[sp - 0x18<32>:word32] = r7_18
	r6_19 = fn000050AA(r6_19, r7_18, sp - 4<i32>, sp - 0x18<32>, out r7_18, out fp_60)
	sp_100 = sp - 0x114<32>
l00004F3A:
	branch r1_22 <= 0<i32> l00004F61
l00004F3E:
	sp_77 = sp_100 - 4<i32>
	Mem78[sp_77:word32] = r1_22
	Mem81[sp_77 - 4<i32>:word32] = r6_19
	Mem85[sp_77 - 8<i32>:int32] = CONVERT(Mem81[r7_18 + 13<i32>:byte], byte, int32)
	r0_86 = fn000055A4()
	Mem90[fp_60 - 4<i32>:word32] = r0_86
	sp_100 = sp_77 - 252<i32>
	branch r1_22 == r0_86 l00004F61
l00004F56:
	Mem95[r7_18 + 12<i32>:byte] = __set_bit<byte,byte>(Mem90[r7_18 + 12<i32>:byte], 5<8>)
	r0_134 = -1<i32>
l00004F5D:
	Mem102[sp_100:word32] = r7_18
	sp_103 = sp_100 + 4<i32>
	Mem106[sp_103:word32] = r6_19
	Mem110[sp_103 + 4<i32>:word32] = r1_22
	fp_114 = Mem110[fp_60:word32]
	r5Out = r1_22
	r6Out = r6_19
	r7Out = r7_18
	fpOut = fp_114
	return r0_134
l00004F61:
	r0_134 = 0<i32>
	goto l00004F5D
fn00004ED8_exit:


word32 fn00004F65(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004B2C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004B2C r0:[0..31]-fn00004B2C r6:[0..31]-fn00004B2C r7:[0..31]-fn00004B2C sp:[0..31]-fn00004B2C
// Trashed: SSSSS fp r0 r1 r6 r7 sp
// Preserved: SP0
fn00004F65_entry:
l00004F65:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r7
	r7_101 = Mem11[sp + 4<i32>:word32]
	fp_106 = sp - 4<i32>
	sp_103 = sp - 8<i32>
	branch (CONVERT(Mem11[r7_101 + 12<i32>:byte], byte, int32) & 0x12<32>) == 2<i32> l00004FA5
l00004F79:
	branch (CONVERT(Mem11[r7_101 + 12<i32>:byte], byte, int32) & 0x82<32>) == 0<i32> l00004F8D
l00004F87:
	r0_100 = -1<i32>
l00004F89:
	Mem105[sp_103:word32] = r7_101
	fp_109 = Mem105[fp_106:word32]
	r6Out = r6
	r7Out = r7_101
	fpOut = fp_109
	spOut = fp_106 + 4<i32>
	return r0_100
l00004F8D:
	Mem28[r7_101 + 12<i32>:byte] = SLICE(__set_bit<word32,word32>(__clear_bit<word32,word32>(CONVERT(Mem11[r7_101 + 12<i32>:byte], byte, int32), 4<32>), 1<32>), byte, 0)
l00004FA5:
	branch Mem30[r7_101 + 8<i32>:word32] == 0<i32> l00004FB5
l00004FAA:
	Mem35[sp - 12<i32>:word32] = r7_101
	r6 = fn00005009(r4, r5, r6, r7_101, sp - 4<i32>, sp - 12<i32>, out r7_101, out fp_106, out sp_48)
	sp_103 = sp_48 - 252<i32>
l00004FB5:
	branch Mem56[r7_101 + 4<i32>:word32] == Mem56[r7_101 + 8<i32>:word32] l00005004
l00004FBC:
	branch (CONVERT(Mem56[r7_101 + 12<i32>:byte], byte, int32) & 0x44<32>) == 0<i32> l00005004
l00004FCA:
	Mem66[r7_101:word32] = Mem56[Mem56[0x00012190<p32>:ptr32] + CONVERT(Mem56[r7_101 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem56[r7_101 + 8<i32>:word32]
	r1_69 = Mem66[Mem66[0x00012190<p32>:ptr32] + CONVERT(Mem66[r7_101 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem66[r7_101 + 4<i32>:word32]
	branch Mem66[r7_101:word32] >= 0<i32> l00004FF2
l00004FEE:
	r0_73 = 0<i32>
	goto l00004FF5
l00004FF2:
	r0_73 = Mem66[r7_101:word32]
l00004FF5:
	branch r1_69 >= r0_73 l00005004
l00004FF9:
	sp_81 = sp_103 - 4<i32>
	Mem83[sp_81:word32] = r7_101
	r6 = fn000050AA(r6, r7_101, fp_106, sp_81, out r7_101, out fp_106)
	sp_103 = sp_81 - 252<i32>
l00005004:
	r0_100 = 0<i32>
	goto l00004F89
fn00004F65_exit:


word32 fn00005009(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut, word32 & spOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000030D0
//      fn00004F65
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004F65 r6:[0..31]-fn00004F65 r7:[0..31]-fn00004F65 sp:[0..31]-fn00004F65
// Trashed: SSSSS fp r0 r1 r6 r7 sp
// Preserved: r4 r5 SP0
fn00005009_entry:
l00005009:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r6_16 = CONVERT(Mem14[r7_15 + 13<i32>:byte], byte, int32)
	fp_25 = sp - 4<i32>
	sp_12 = sp - 12<i32>
	branch __bit<word32,word32>(CONVERT(Mem14[r7_15 + 12<i32>:byte], byte, int32), 2<32>) l00005087
l00005020:
	branch r6_16 >= 2<i32> l0000502E
l00005024:
	Mem57[r7_15 + 8<i32>:word32] = Mem14[Mem14[0x00012044<p32>:ptr32] + r6_16 * 4<32>:word32]
	goto l0000504B
l0000502E:
	Mem22[sp - 12<i32>:ptr32] = 0x00000408<p32>
	Mem38[r7_15 + 8<i32>:word32] = fn00005130(r4, r5, r6_16, r7_15, sp - 4<i32>, sp - 12<i32>, out r4_137, out r5_138, out r6_16, out r7_15, out fp_25)
	sp_12 = sp - 264<i32>
	branch Mem38[r7_15 + 8<i32>:word32] == 0<i32> l00005087
l00005046:
	Mem54[r7_15 + 12<i32>:byte] = __set_bit<byte,byte>(Mem38[r7_15 + 12<i32>:byte], 3<8>)
l0000504B:
	Mem63[Mem59[0x00012190<p32>:ptr32] + CONVERT(Mem59[r7_15 + 13<i32>:byte], byte, int32) * 4<32>:word32] = Mem59[r7_15 + 8<i32>:word32] + 1024<i32>
l0000505D:
	Mem67[r7_15 + 4<i32>:word32] = Mem65[r7_15 + 8<i32>:word32]
	sp_71 = sp_12 - 4<i32>
	Mem74[sp_71:word32] = r6_16
	branch fn000050F4(fp_25, sp_71, out fp_78) == 0<i32> l00005083
l00005070:
	branch (CONVERT(Mem74[r7_15 + 12<i32>:byte], byte, int32) & 4<32>) == 0<i32> l00005083
l0000507E:
	Mem92[r7_15 + 12<i32>:byte] = __set_bit<byte,byte>(Mem74[r7_15 + 12<i32>:byte], 6<8>)
l00005083:
	Mem96[sp_71 - 252<i32>:word32] = r7_15
	Mem99[sp_71 - 248<i32>:word32] = r6_16
	fp_102 = Mem99[fp_78:word32]
	r7Out = r7_15
	fpOut = fp_102
	spOut = fp_78 + 4<i32>
	return r6_16
l00005087:
	Mem48[r7_15 + 8<i32>:word32] = (r6_16 << 3<8>) + 0x14CCC<32>
	Mem52[Mem48[0x00012190<p32>:ptr32] + CONVERT(Mem48[r7_15 + 13<i32>:byte], byte, int32) * 4<32>:word32] = Mem48[r7_15 + 8<i32>:word32] + 8<i32>
	goto l0000505D
fn00005009_exit:


word32 fn000050AA(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000022B4
//      fn000039E8
//      fn00003A45
//      fn00004B2C
//      fn00004ED8
//      fn00004F65
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000039E8 r6:[0..31]-fn000039E8 r7:[0..31]-fn000039E8
// Trashed: SSSSS fp r0 r1 r6 r7
// Preserved: sp SP0
fn000050AA_entry:
l000050AA:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r1_18 = Mem14[Mem14[0x00012190<p32>:ptr32] + CONVERT(Mem14[r7_15 + 13<i32>:byte], byte, int32) * 4<32>:word32] - Mem14[r7_15 + 4<i32>:word32]
	branch r1_18 >= 0<i32> l000050D6
l000050C6:
	Mem29[r7_15 + 4<i32>:word32] = Mem14[Mem14[0x00012190<p32>:ptr32] + CONVERT(Mem14[r7_15 + 13<i32>:byte], byte, int32) * 4<32>:word32]
l000050D2:
	Mem32[sp - 12<i32>:word32] = r7_15
	Mem35[sp - 8<i32>:word32] = r1_18
	fp_38 = Mem35[sp - 4<i32>:word32]
	r7Out = r7_15
	fpOut = fp_38
	return r1_18
l000050D6:
	branch r1_18 >= Mem14[r7_15:word32] l000050D2
l000050DB:
	Mem26[r7_15:word32] = r1_18
	goto l000050D2
fn000050AA_exit:


word32 fn000050E0()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
//      fn00000FF5
//      fn000017CF
//      fn00004CEB
// MayUse: 
// LiveOut: r0:[0..31]-fn00004CEB
// Trashed: r0 r1
// Preserved: SP0
fn000050E0_entry:
l000050E0:
	__syscall()
	branch !F l000050EF
l000050E9:
	goto l000055B8_in_fn000050E0
l000050EF:
	return 0<i32>
l000055B8_in_fn000050E0:
	Mem8[0x00012200<p32>:word32] = 0x00000006<p32>
	return -1<i32>
fn000050E0_exit:


word32 fn000050F4(word32 fp, word32 sp, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00005009
// MayUse:  fp:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00005009 r0:[0..31]-fn00005009
// Trashed: SSS fp r0 r1
// Preserved: sp SP0
fn000050F4_entry:
l000050F4:
	Mem6[sp - 4<i32>:word32] = fp
	Mem10[sp - 0x18<32>:word32] = sp - 22<i32>
	Mem13[sp - 0x1C<32>:int32] = 21505<i32>
	Mem16[sp - 0x20<32>:word32] = Mem13[sp + 4<i32>:word32]
	branch fn0000511C() >= 0<i32> l00005115
l0000510F:
	r0_22 = 0<i32>
l00005111:
	fpOut = Mem16[sp - 4<i32>:word32]
	return r0_22
l00005115:
	r0_22 = 1<i32>
	goto l00005111
fn000050F4_exit:


word32 fn0000511C()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000050F4
// MayUse: 
// LiveOut: r0:[0..31]-fn000050F4
// Trashed: r0 r1
// Preserved: SP0
fn0000511C_entry:
l0000511C:
	__syscall()
	branch !F l0000512B
l00005125:
	goto l000055B8
l0000512B:
	return 0x00000036<p32>
l000055B8:
	Mem7[0x00012200<p32>:word32] = 0x00000036<p32>
	return -1<i32>
fn0000511C_exit:


word32 fn00005130(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000B29
//      fn00005009
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00005009 r0:[0..31]-fn00005009 r4:[0..31]-fn00000B29 r5:[0..31]-fn00000B29 r6:[0..31]-fn00005009 r7:[0..31]-fn00005009
// Trashed: SSSSS fp r0 r1 r4 r5 r6 r7
// Preserved: sp SP0
fn00005130_entry:
l00005130:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 0x14<32>:word32] = r4
	Mem14[sp - 0x18<32>:word32] = r5
	Mem17[sp - 0x1C<32>:word32] = r6
	Mem20[sp - 0x20<32>:word32] = r7
	Mem22[sp - 8<i32>:int32] = 0<i32>
	branch Mem22[0x000121E4<p32>:word32] == 0<i32> l00005183
l0000513F:
	Mem27[0x000121E4<p32>:word32] = __set_bit<word32,word32>(0x121E8<32>, 0<32>)
	Mem31[0x000121E8<p32>:word32] = __set_bit<word32,word32>(0x121E4<32>, 0<32>)
	Mem33[0x000121F0<p32>:word32] = 0x121E8<32>
	Mem35[0x000121EC<p32>:word32] = 0x121E4<32>
	Mem37[0x000121F8<p32>:word32] = Mem35[0x000121F0<p32>:word32]
l00005183:
	Mem41[sp - 0x24<32>:int32] = 4<i32>
	Mem47[sp - 0x28<32>:word32] = Mem41[sp + 4<i32>:word32] + 7<i32>
	r0_48 = fn0000556C(sp - 0x28<32>)
	sp_136 = sp - 0x120<32>
	r7_118 = Mem47[0x000121EC<p32>:word32]
	goto l00005200
l000051A0:
	Mem254[0x000121F8<p32>:word32] = r6_113
	Mem256[Mem254[0x000121F0<p32>:word32]:word32] = r6_113
	Mem262[r6_113:word32] = r6_113 + Mem256[sp - 12<i32>:word32] - Mem256[sp - 8<i32>:word32] + -4<i32>
	branch r6_113 == Mem262[0x000121F0<p32>:word32] + 4<i32> l000051E1
l000051C8:
	Mem273[Mem262[0x000121F0<p32>:word32]:word32] = __set_bit<word32,word32>(Mem262[Mem262[0x000121F0<p32>:word32]:word32], 0<32>)
l000051E1:
	Mem277[0x000121F0<p32>:word32] = Mem275[r6_113:word32]
	Mem282[Mem277[0x000121F0<p32>:word32]:word32] = __set_bit<word32,word32>(0x121E4<32>, 0<32>)
l00005200:
	r4_126 = 0<i32>
	goto l000053B9
l00005205:
	branch r7_118 == Mem114[0x000121F0<p32>:word32] l00005309
l0000520E:
	branch r0_116 == 0x121E4<32> l00005309
l00005217:
	r4_126 = r4_126 + 1<i32>
	branch r4_126 <=u 1<i32> l000053B9
l00005220:
	r7_118 = Mem114[0x000121F8<p32>:word32]
	sp_138 = sp_136 - 4<i32>
	Mem140[sp_138:int32] = 0<i32>
	r0_141 = fn000054F8(sp_138)
	r6_113 = r0_141
	branch r0_141 == Mem140[0x000121F0<p32>:word32] + 4<i32> l0000528B
l00005240:
	Mem182[sp_138 - 256<i32>:int32] = 4<i32>
	Mem184[sp_138 - 260<i32>:word32] = r0_141
	r0_175 = (r0_48 + 255<i32>) / 0x100<32>
	r4_126 = r0_175 << 0xA<8>
	sp_136 = sp_138 - 508<i32>
	branch fn0000557C(sp_138 - 260<i32>) == 0<i32> l000052BF
l00005267:
	Mem192[sp_138 - 512<i32>:int32] = 4<i32>
	Mem194[sp_138 - 516<i32>:word32] = r0_141
	Mem202[sp - 16<i32>:word32] = fn0000557C(sp_138 - 516<i32>)
	Mem205[sp - 8<i32>:word32] = 4<i32> - Mem202[sp - 16<i32>:word32]
	sp_136 = sp_138 - 764<i32>
	r6_113 = r0_141 + Mem205[sp - 8<i32>:word32]
	r4_126 = (r0_175 << 0xA<8>) + Mem205[sp - 8<i32>:word32]
	goto l000052BF
l0000528B:
	r1_160 = r0_48 - (Mem140[0x000121F0<p32>:word32] - Mem140[0x000121F8<p32>:word32]) / 4<32>
	Mem164[sp_138 - 252<i32>:ptr32] = 0x00000100<p32>
	Mem166[sp_138 - 252<i32>:word32] = r1_160 + 256<i32>
	sp_136 = sp_138 - 500<i32>
	r4_126 = fn0000556C(sp_138 - 252<i32>) << 0xA<8>
l000052BF:
	branch r6_113 + r4_126 <u r6_113 l00005309
l000052CA:
	Mem220[sp - 12<i32>:word32] = r4_126
	branch r4_126 <u 0x7FFFFC00<32> l000052EE
l000052D5:
	sp_224 = sp_136 - 4<i32>
	Mem226[sp_224:word32] = 0x7FFFFC00<32>
	sp_136 = sp_224 - 252<i32>
	branch fn000054F8(sp_224) == -1<i32> l00005309
l000052E8:
	r4_126 = r4_126 - 0x7FFFFC00<32>
l000052EE:
	sp_240 = sp_136 - 4<i32>
	Mem242[sp_240:word32] = r4_126
	sp_136 = sp_240 - 252<i32>
	branch fn000054F8(sp_240) == -1<i32> l000051A0
l000052FE:
	Mem288[sp_240 - 256<i32>:word32] = r6_113
	fn0000552F(sp_240 - 256<i32>)
	sp_136 = sp_240 - 508<i32>
l00005309:
	r0_110 = 0<i32>
l0000530B:
	Mem299[sp_136:word32] = r7_118
	sp_300 = sp_136 + 4<i32>
	Mem305[sp_300:word32] = r6_113
	Mem313[sp_300 + 4<i32>:word32] = r0_48
	Mem319[sp_300 + 8<i32>:word32] = r4_126
	fp_325 = Mem319[sp - 4<i32>:word32]
	r4Out = r4_126
	r5Out = r0_48
	r6Out = r6_113
	r7Out = r7_118
	fpOut = fp_325
	return r0_110
l0000530F:
	r1_87 = r7_118 + (r0_48 << 2<8>)
	Mem89[0x000121EC<p32>:word32] = r1_87
	branch r6_113 <= r1_87 l0000533A
l00005323:
	Mem94[0x000121F4<p32>:word32] = Mem89[Mem89[0x000121EC<p32>:word32]:word32]
	Mem97[Mem94[0x000121EC<p32>:word32]:word32] = Mem94[r7_118:word32]
l0000533A:
	Mem103[r7_118:word32] = __set_bit<word32,word32>(Mem98[0x000121EC<p32>:word32], 0<32>)
	branch Mem103[0x000121F8<p32>:word32] == r7_118 l0000535C
l00005352:
	Mem107[0x000121F8<p32>:word32] = Mem103[0x000121EC<p32>:word32]
l0000535C:
	r0_110 = r7_118 + 4<i32>
	goto l0000530B
l00005363:
	Mem62[0x000121EC<p32>:word32] = r7_118
	Mem64[r7_118:word32] = Mem62[r6_113:word32]
	branch Mem64[0x000121F8<p32>:word32] == r6_113 l0000537B
l00005375:
	Mem67[0x000121F8<p32>:word32] = r7_118
l0000537B:
	r6_113 = Mem58[r7_118:word32]
	branch !__bit<word32,word32>(Mem58[r6_113:word32], 0<32>) l00005363
l00005389:
	branch r6_113 < r7_118 + (r0_48 << 2<8>) l000053A6
l00005397:
	branch r7_118 + (r0_48 << 2<8>) >= r7_118 l0000530F
l000053A6:
	r0_116 = __clear_bit<word32,word32>(Mem114[r7_118:word32], 0<32>)
	r6_113 = r7_118
	r7_118 = r0_116
	branch r0_116 <= r7_118 l00005205
l000053B9:
	branch __bit<word32,word32>(Mem55[r7_118:word32], 0<32>) l000053A6
l000053C2:
	goto l0000537B
fn00005130_exit:


word32 fn000053C5(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00004CEB
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004CEB r6:[0..31]-fn00004CEB r7:[0..31]-fn00004CEB
// Trashed: SSSSS fp r0 r6 r7
// Preserved: sp SP0
fn000053C5_entry:
l000053C5:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	Mem19[0x000121EC<p32>:word32] = r7_15 + -4<i32>
	r0_21 = __clear_bit<word32,word32>(Mem19[r7_15 + -4<i32>:word32], 0<32>)
	Mem23[r7_15 + -4<i32>:word32] = r0_21
	branch r0_21 == Mem23[0x000121F0<p32>:word32] l000053F0
l000053EA:
	Mem26[0x000121F8<p32>:word32] = r7_15 + -4<i32>
l000053F0:
	Mem29[sp - 12<i32>:word32] = r7_15
	Mem32[sp - 8<i32>:word32] = r7_15 + -4<i32>
	fp_35 = Mem32[sp - 4<i32>:word32]
	r7Out = r7_15
	fpOut = fp_35
	return r7_15 + -4<i32>
fn000053C5_exit:


word32 fn000054A8(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00003A45
//      fn00004B2C
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004B2C r0:[0..31]-fn00004B2C r5:[0..31]-fn00004B2C r6:[0..31]-fn00004B2C r7:[0..31]-fn00004B2C
// Trashed: SSSSS fp r0 r5 r6 r7
// Preserved: sp SP0
fn000054A8_entry:
l000054A8:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r5
	Mem14[sp - 12<i32>:word32] = r6
	Mem17[sp - 16<i32>:word32] = r7
	r7_18 = Mem17[sp + 4<i32>:word32]
	r6_19 = CONVERT(Mem17[sp + 8<i32>:byte], byte, int32)
	r5_20 = Mem17[sp + 12<i32>:word32]
	goto l000054C8
l000054B7:
	r7_18 = r7_74 + 1<i32>
	r7_74 = r7_18
	branch Mem17[r7_74:byte] == SLICE(r6_19, byte, 0) l000054C8
l000054C0:
	r0_37 = r7_18 + -1<i32>
l000054C4:
	Mem42[sp - 16<i32>:word32] = r7_74
	Mem45[sp - 12<i32>:word32] = r6_19
	Mem48[sp - 8<i32>:word32] = r5_20
	fp_52 = Mem48[sp - 4<i32>:word32]
	r5Out = r5_20
	r6Out = r6_19
	r7Out = r7_74
	fpOut = fp_52
	return r0_37
l000054C8:
	r5_20 = r5_20 + -1<i32>
	branch r5_20 >= 0<i32> l000054B7
l000054CE:
	r0_37 = 0<i32>
	goto l000054C4
fn000054A8_exit:


word32 fn000054D4(word32 r4, word32 r5, word32 r6, word32 r7, word32 fp, word32 sp, word32 & r4Out, word32 & r5Out, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000022B4
//      fn000039E8
//      fn00003A45
//      fn00004B2C
// MayUse:  fp:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn00004B2C r0:[0..31]-fn000039E8 r4:[0..31]-fn00004B2C r5:[0..31]-fn00004B2C r6:[0..31]-fn00004B2C r7:[0..31]-fn00004B2C
// Trashed: SSSSS fp r0 r4 r5 r6 r7
// Preserved: sp SP0
fn000054D4_entry:
l000054D4:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r4
	Mem14[sp - 12<i32>:word32] = r5
	Mem17[sp - 16<i32>:word32] = r6
	Mem20[sp - 20<i32>:word32] = r7
	r7_21 = Mem20[sp + 4<i32>:word32]
	r6_22 = Mem20[sp + 8<i32>:word32]
	r5_23 = Mem20[sp + 12<i32>:word32]
	r7_33 = r7_21
	goto l000054EC
l000054E4:
	Mem34[r7_33:byte] = Mem31[r6_22:byte]
	r6_22 = r6_22 + 1<i32>
	r7_33 = r7_33 + 1<i32>
l000054EC:
	r5_23 = r5_23 + -1<i32>
	branch r5_23 >= 0<i32> l000054E4
l000054F2:
	Mem41[sp - 20<i32>:word32] = r7_33
	Mem43[sp - 16<i32>:word32] = r6_22
	Mem45[sp - 12<i32>:word32] = r5_23
	Mem47[sp - 8<i32>:word32] = r7_21
	fp_50 = Mem47[sp - 4<i32>:word32]
	r4Out = r7_21
	r5Out = r5_23
	r6Out = r6_22
	r7Out = r7_33
	fpOut = fp_50
	return r7_21
fn000054D4_exit:


word32 fn000054F8(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00005130
// MayUse:  sp:[0..31]
// LiveOut: r0:[0..31]-fn00005130
// Trashed: SSSSS r0 r1
// Preserved: SP0
fn000054F8_entry:
l000054F8:
	branch Mem0[0x000121FC<p32>:word32] == 0<i32> l0000550A
l00005500:
	Mem7[0x000121FC<p32>:ptr32] = 0x00015584<p32>
l0000550A:
	v8_11 = Mem10[sp + 4<i32>:word32] + Mem10[0x000121FC<p32>:word32]
	Mem12[sp + 4<i32>:word32] = v8_11
	__syscall()
	branch !(cond(v8_11) & 0x20<32>) l00005520
l0000551A:
	goto l000055B8_in_fn000054F8
l00005520:
	r0_17 = Mem12[0x000121FC<p32>:word32]
	Mem19[0x000121FC<p32>:word32] = Mem12[sp + 4<i32>:word32]
	return r0_17
l000055B8_in_fn000054F8:
	Mem20[0x00012200<p32>:word32] = 0x00000011<p32>
	return -1<i32>
fn000054F8_exit:


void fn0000552F(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00005130
// MayUse:  sp:[0..31]
// LiveOut:
// Trashed: r0 r1
// Preserved: SP0
fn0000552F_entry:
l0000552F:
	__syscall()
	branch !F l0000553E
l00005538:
	goto l000055B8_in_fn0000552F
l0000553E:
	Mem9[0x000121FC<p32>:word32] = Mem0[sp + 4<i32>:word32]
	return
l000055B8_in_fn0000552F:
	Mem11[0x00012200<p32>:word32] = 0x00000011<p32>
	return
fn0000552F_exit:


word32 fn0000554C(word32 r6, word32 r7, word32 fp, word32 sp, word32 & r6Out, word32 & r7Out, word32 & fpOut)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000026BD
//      fn000037C0
// MayUse:  fp:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut: fp:[0..31]-fn000026BD r0:[0..31]-fn000026BD r6:[0..31]-fn000026BD r7:[0..31]-fn000026BD
// Trashed: SSSSS fp r0 r1 r6 r7
// Preserved: sp SP0
fn0000554C_entry:
l0000554C:
	Mem6[sp - 4<i32>:word32] = fp
	Mem11[sp - 8<i32>:word32] = r6
	Mem14[sp - 12<i32>:word32] = r7
	r7_15 = Mem14[sp + 4<i32>:word32]
	r7_20 = r7_15
l00005558:
	r7_20 = r7_48 + 1<i32>
	r7_48 = r7_20
	branch Mem14[r7_48:byte] == 0<8> l00005558
l00005564:
	Mem33[sp - 12<i32>:word32] = r7_20
	Mem35[sp - 8<i32>:word32] = r7_15 + 1<i32>
	fp_38 = Mem35[sp - 4<i32>:word32]
	r6Out = r7_15 + 1<i32>
	r7Out = r7_20
	fpOut = fp_38
	return r7_20 - (r7_15 + 1<i32>)
fn0000554C_exit:


word32 fn0000556C(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000022B4
//      fn000037C0
//      fn00004B2C
//      fn00005130
// MayUse:  sp:[0..31]
// LiveOut: r0:[0..31]-fn00005130
// Trashed: r0 r1
// Preserved: SP0
fn0000556C_entry:
l0000556C:
	return CONVERT(Mem0[sp + 4<i32>:word32], uint32, uint64) %u Mem0[sp + 8<i32>:word32]
fn0000556C_exit:


word32 fn0000557C(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000037C0
//      fn00005130
// MayUse:  sp:[0..31]
// LiveOut: r0:[0..31]-fn00005130
// Trashed: r0 r1
// Preserved: SP0
fn0000557C_entry:
l0000557C:
	return CONVERT(Mem0[sp + 4<i32>:word32], uint32, uint64) /u Mem0[sp + 8<i32>:word32]
fn0000557C_exit:


word32 fn00005588(word32 sp)
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn000013F9
//      fn000017CF
//      fn00003404
// MayUse:  sp:[0..31]
// LiveOut: r0:[0..31]-fn000013F9
// Trashed: SSS r0 r1
// Preserved: SP0
fn00005588_entry:
l00005588:
	__syscall()
	branch !F l00005597
l00005591:
	goto l000055B8_in_fn00005588
l00005597:
	branch Mem0[sp + 4<i32>:word32] == 0<i32> l000055A0
l0000559C:
	Mem10[Mem0[sp + 4<i32>:ptr32]:word32] = sp + 4<i32>
l000055A0:
	return 0x00000007<p32>
l000055B8_in_fn00005588:
	Mem11[0x00012200<p32>:word32] = 0x00000007<p32>
	return -1<i32>
fn00005588_exit:


word32 fn000055A4()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      fn00000FF5
//      fn00001BA2
//      fn00001D28
//      fn00004B2C
//      fn00004ED8
// MayUse: 
// LiveOut: r0:[0..31]-fn00004B2C
// Trashed: r0 r1
// Preserved: SP0
fn000055A4_entry:
l000055A4:
	__syscall()
	branch !F l000055B3
l000055AD:
	goto l000055B8_in_fn000055A4
l000055B3:
	return 0x00000004<p32>
l000055B8_in_fn000055A4:
	Mem7[0x00012200<p32>:word32] = 0x00000004<p32>
	return -1<i32>
fn000055A4_exit:


void fn000055C4(word32 r5, word32 r6, word32 r7, word32 fp, word32 sp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// Called from:
//      _entry
//      fn00001772
//      fn000017CF
//      fn000019F1
// MayUse:  fp:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] sp:[0..31]
// LiveOut:
// Trashed:
// Preserved: SP0
// Terminates process
fn000055C4_entry:
l000055C4:
	fn00004CC0(r5, r6, r7, fp, sp)
	__syscall()
	__breakpoint_trap()
	__breakpoint_trap()
	__breakpoint_trap()
	__breakpoint_trap()
fn000055C4_exit:


